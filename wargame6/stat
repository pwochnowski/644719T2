


Gadgets
=======


0x080adb38: aaa; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080adc48: aaa; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x0806d960: aaa; add byte ptr [eax], al; ret; 
0x080a09d5: aaa; jecxz 0x589d4; jmp dword ptr [esi - 0x70]; 
0x0806c9a8: aaa; mov eax, 0x127; mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08093408: aaa; mov eax, 0x127; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x08057faf: aaa; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080a0ec5: aaa; mov edx, 0xc483fffb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080579ca: aaa; or byte ptr es:[eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x080a8e19: aaa; push 1; push 1; call eax; 
0x0804e59f: aaa; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080a8861: aaa; push ecx; push 1; call eax; 
0x080c9179: aaa; stc; jmp dword ptr [ecx]; 
0x080bcb09: aaa; sti; jmp dword ptr [eax + 0x37]; 
0x080bcb5d: aaa; sti; jmp dword ptr [eax + 0x3b]; 
0x080bcb39: aaa; sti; jmp dword ptr [eax]; 
0x080bcb01: aaa; sti; lcall [eax]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb19: aaa; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcb15: aaa; sti; ljmp [eax + 0x18fffb37]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080ab727: aad 0x11; sti; inc edi; ret 0; 
0x0807659a: aad 0x2d; ret 0; 
0x08075e77: aad 0x39; std; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x080717a3: aad 0x55; std; call dword ptr [eax - 0x18]; 
0x080c2118: aad 0x56; jnp 0x7a132; mov dl, 0x9f; sub edi, esi; int 0x6b; ret; 
0x080a6bd9: aad 0x89; ret 0xe283; 
0x0808d29e: aad 0xc7; ret 0xb314; 
0x0805e5e4: aad 0xf8; dec dword ptr [ebp - 0x72fcf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080a8a1c: aad 0xf; xchg eax, ebp; ret 0xd789; 
0x080c4479: aad 0xfc; push dword ptr [eax - 0x3f000332]; into; cld; jmp eax; 
0x080c1fe6: aad 8; stosd dword ptr es:[edi], eax; ret; 
0x0809ecf1: aam 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x080c8fbc: aam 0x31; stc; jmp dword ptr [edx]; 
0x0809f666: aam 0x39; ret 0x840f; 
0x080c84ec: aam 0x3b; add byte ptr [eax], al; mov al, 0xf9; clc; call dword ptr [eax]; 
0x0809009a: aam 0x50; push esi; push ecx; call edi; 
0x08092c8b: aam 0x5b; ret; 
0x08049fec: aam 0x83; in al, dx; or al, 0x8d; add esp, 0x23; std; call dword ptr [eax - 0x18]; 
0x080a2ae5: aam 0x83; in al, dx; or byte ptr [ebp - 0x1632f7d], cl; call dword ptr [eax + 0x6a]; 
0x0809f42c: aam 0x85; ror byte ptr [edi], 0x85; ret; 
0x08072c1c: aam 0x89; inc ebp; fadd qword ptr [ebx - 0x7c72f33c]; and byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x08079278: aam 0x89; or al, 0x24; call esi; 
0x080941c8: aam 0x89; ret 0xc083; 
0x080a2aa2: aam 0x8d; xor dword ptr [ebp - 0x65], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x080d3140: aam 0xb3; cld; call dword ptr [edi]; 
0x080a275a: aam 0xc7; ret 0xbee8; 
0x080a29ec: aam 0xc7; ret 0xbf28; 
0x080c77bc: aam 0xe2; clc; jmp dword ptr [edi]; 
0x080c71d5: aam 0xf8; call dword ptr [eax]; 
0x080d43ec: aam 0xfa; add byte ptr [eax], al; rcl al, 1; cld; jmp dword ptr [edi]; 
0x080c4485: aam 0xfc; call dword ptr [eax - 0x24]; 
0x080c4419: aam 0xfc; call dword ptr [eax - 0x2b]; 
0x0806c35a: aam 0xfd; dec dword ptr [ebp - 0x2bb477d]; call dword ptr [eax - 0x73]; 
0x080d4aec: aam 1; add dword ptr [eax], eax; nop; out dx, eax; cld; jmp dword ptr [esi]; 
0x080c09a4: aas; adc ebp, dword ptr [ebx]; fstp dword ptr [ebx + 0x4a315a58]; ret 0x1b49; 
0x08095619: aas; add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [esp + esi], -2; call dword ptr [eax - 0x18]; 
0x08091632: aas; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080c49a9: aas; clc; jmp dword ptr [esi + 2]; 
0x0807e21c: aas; idiv edi; jmp dword ptr [eax]; 
0x080ac55d: aas; idiv edi; out 0x3f, al; idiv edi; ret 0xf73f; 
0x080ac561: aas; idiv edi; ret 0xf73f; 
0x080915d2: aas; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080bf7e8: aas; mov ch, 0x31; mov ah, bl; push esi; ret; 
0x0806cd40: aas; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0805390d: aas; nop; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x08067f35: aas; std; jmp dword ptr [esi + 0xf]; 
0x0804da75: adc ah, byte ptr [esi + 0xf]; mov esi, 0x26e007b4; std; jmp dword ptr [esi + 0x39]; 
0x080623d2: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x080494bb: adc al, 0; add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0807c1e1: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a1751: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0806bc9a: adc al, 0; add byte ptr [eax], al; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806c8f9: adc al, 0; add byte ptr [eax], al; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806ccf0: adc al, 0; add byte ptr [eax], al; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0806d83d: adc al, 0; add byte ptr [eax], al; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x0807c157: adc al, 0; add byte ptr [eax], al; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0809e640: adc al, 0; add byte ptr [eax], al; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d5: adc al, 0; add byte ptr [eax], al; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e875: adc al, 0; add byte ptr [eax], al; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0809e975: adc al, 0; add byte ptr [eax], al; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea59: adc al, 0; add byte ptr [eax], al; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a130f: adc al, 0; add byte ptr [eax], al; jne 0x59319; add esp, 0x2c; ret; 
0x080a1406: adc al, 0; add byte ptr [eax], al; jne 0x59414; add esp, 0x2c; ret; 
0x080a475e: adc al, 0; add byte ptr [eax], al; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64bd: adc al, 0; add byte ptr [eax], al; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x08050430: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x0808b2da: adc al, 0; add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x080500e7: adc al, 0x24; ret; 
0x080ae5e8: adc al, 0x27; stc; call eax; 
0x0808f49e: adc al, 0x29; ret; 
0x08050b34: adc al, 0x29; std; call dword ptr [eax - 0x18]; 
0x0805ba78: adc al, 0x31; add dword ptr [eax], eax; add esp, 4; pop ebx; pop esi; ret; 
0x08096056: adc al, 0x31; ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08095177: adc al, 0x39; ret 0x8d89; 
0x0809b36e: adc al, 0x39; ret; 
0x080c832c: adc al, 0x3a; add byte ptr [eax], al; adc dh, dh; clc; jmp dword ptr [ecx]; 
0x080a6d33: adc al, 0x3c; xor byte ptr [ebp + 0x30], dh; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x080c7b18: adc al, 0x41; push cs; adc byte ptr [edx], al; arpl word ptr [edx], cx; ret; 
0x080c49ce: adc al, 0x41; ret; 
0x080c4e30: adc al, 0x43; ret; 
0x080c951d: adc al, 0x44; ret; 
0x080c6e98: adc al, 0x45; ret; 
0x080c6407: adc al, 0x46; ret; 
0x0808e0e6: adc al, 0x50; push esi; call dword ptr [ebx + 0x48]; 
0x08051661: adc al, 0x52; push dword ptr [esi + 8]; push ecx; push eax; push edi; call dword ptr [edi + 0xc]; 
0x0808ead0: adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x08052666: adc al, 0x57; call dword ptr [ebx + 0x3c]; 
0x08055980: adc al, 0x5b; pop esi; pop edi; jmp eax; 
0x08057e1b: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08052a7c: adc al, 0x5b; pop esi; ret; 
0x080487aa: adc al, 0x68; sub byte ptr [edi - 0x2f00f7f3], 0x83; les edx, ptr [eax]; leave; ret; 
0x080a2a1d: adc al, 0x6a; add al, ch; wait; ret; 
0x0806ee5c: adc al, 0x7c; and dword ptr [esi + 0x1a], edi; pop ebx; ret; 
0x080cbd72: adc al, 0x83; add eax, 0x1880e4e; add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x080c5b96: adc al, 0x83; add eax, 0x2200e4e; test eax, 0x41140e0a; ret; 
0x080cf2de: adc al, 0x83; add eax, 0x2240e4d; test eax, 0x41140e0a; ret; 
0x080cf28a: adc al, 0x83; add eax, 0x2280e4d; mov ecx, 0x41140e0a; ret; 
0x080d4a5e: adc al, 0x83; add eax, 0x2300e49; or cl, byte ptr [0x4314]; ret; 
0x080c63c2: adc al, 0x83; add eax, 0x2300e4e; mov esp, 0x41140e0a; ret; 
0x080d2012: adc al, 0x83; add eax, 0x2400e4d; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3e86: adc al, 0x83; add eax, 0x2400e4e; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3f42: adc al, 0x83; add eax, 0x2400e4e; xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8ebe: adc al, 0x83; add eax, 0x2400e50; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080caba2: adc al, 0x83; add eax, 0x2500e43; cmpsd dword ptr [esi], dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8a7e: adc al, 0x83; add eax, 0x2500e4e; mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x080cfb8a: adc al, 0x83; add eax, 0x2500e4e; pushfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4c12: adc al, 0x83; add eax, 0x2500e4e; ret; 
0x080d3d52: adc al, 0x83; add eax, 0x2600e43; jl 0x8bd65; push cs; adc al, 0x46; ret; 
0x080d6122: adc al, 0x83; add eax, 0x2600e4e; or byte ptr [edx], 0xe; adc al, 0x43; ret; 
0x080cdaea: adc al, 0x83; add eax, 0x2600e4e; xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080d57fa: adc al, 0x83; add eax, 0x2d00e53; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d5bde: adc al, 0x83; add eax, 0x2e00e4b; add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x080d2956: adc al, 0x83; add eax, 0x3380e48; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x080c77d6: adc al, 0x83; add eax, 0x4e200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf3da: adc al, 0x83; add eax, 0x57300e4e; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c803a: adc al, 0x83; add eax, 0x59300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2a06: adc al, 0x83; add eax, 0x5b300e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfcae: adc al, 0x83; add eax, 0x71300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbb4a: adc al, 0x83; add eax, 0x74200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c93a2: adc al, 0x83; add eax, 0x75200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7ea6: adc al, 0x83; add eax, 0x75300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfda2: adc al, 0x83; add eax, 0x79200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c94fe: adc al, 0x83; add eax, 0x79300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c78fa: adc al, 0x83; add eax, 0x7a200e4d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08054988: adc al, 0x83; in al, dx; or al, 0xc7; ret; 
0x080a4a46: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x080576a1: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0808ddc4: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08096063: adc al, 0x83; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0807416c: adc al, 0x83; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x0804f349: adc al, 0x85; fisttp dword ptr [edi]; test ebp, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76d7dbb4], cl; ret 0xdaf7; 
0x08097b95: adc al, 0x89; dec eax; or al, 0x83; ret; 
0x0806d909: adc al, 0x89; lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x08053e0e: adc al, 0x89; pop esp; and al, 0x18; push ebp; call dword ptr [esi + 0x40]; 
0x0804e29e: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0807c97a: adc al, 0x89; push eax; add al, 0xe9; ret; 
0x0806ba5b: adc al, 0x89; ret 0x4c89; 
0x08048953: adc al, 0x89; ret 0x4d89; 
0x080aaab4: adc al, 0x89; ret 0x895b; 
0x0808618d: adc al, 0x89; ret; 
0x08086189: adc al, 0x8b; je 0x3e1b1; adc al, 0x89; ret; 
0x0806ead2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080935e5: adc al, 0x8b; pop esp; and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0805d39b: adc al, 0x8d; and byte ptr [eax + 0x38], 0xfd; call dword ptr [eax - 0x77]; 
0x08054acd: adc al, 0x8d; or eax, 0x29; std; call dword ptr [eax - 0x73]; 
0x0805ac76: adc al, 0x8d; pop esp; ret 0x8b38; 
0x0806ddb0: adc al, 0x8d; push ebx; add al, 0x83; ret; 
0x08071f0c: adc al, 0x8d; push edi; add dword ptr [ebp + 0x6bf475c0], eax; ret 0x833c; 
0x0805d40b: adc al, 0x8d; xchg dword ptr [eax + 0x38], esp; std; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x0809390d: adc al, 0x9a; add eax, dword ptr [edx + ecx]; pop ebx; pop esi; ret; 
0x080cf72c: adc al, 0xae; add byte ptr [eax], al; mov al, 0xe2; sti; call dword ptr [esi]; 
0x08082c75: adc al, 0xb3; or eax, 0x24448908; or al, 0x29; ret 0xc889; 
0x08053ade: adc al, 0xb3; or eax, 0x24748b08; add al, 0x89; ret; 
0x080536ce: adc al, 0xb3; or eax, 0x29cb8908; ret 0xc329; 
0x0806c628: adc al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0804837d: adc al, 0xb8; ret 0; 
0x080c67ec: adc al, 0xbd; clc; jmp dword ptr [eax]; 
0x08083715: adc al, 0xc6; add byte ptr [0xfffe8ae9], ch; jmp dword ptr [esi - 0x70]; 
0x08098a85: adc al, 0xc7; ret 0; 
0x0809e5c1: adc al, 0xc7; ret 0xb8c0; 
0x0804f002: adc al, 0xc7; ret; 
0x08086328: adc al, 0xe8; ret 0xfe50; 
0x0806ca48: adc al, 0xf6; ret 0x7540; 
0x0805da4c: adc al, 0xf6; ret; 
0x0805e6aa: adc al, 0xf9; dec dword ptr [ebp - 0x7592f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805b7af: adc al, 0xf; inc ebp; ret 0x548b; 
0x0805315a: adc al, 0xf; test byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x44c7; 
0x0807b6af: adc al, 0xfa; dec dword ptr [ebx - 0x1ab43]; call dword ptr [eax - 0x73]; 
0x080add31: adc al, 0xfb; call dword ptr [ecx]; 
0x080adcf1: adc al, 0xfb; call dword ptr [esi]; 
0x080addad: adc al, 0xfb; call edi; 
0x080added: adc al, 0xfb; call edx; 
0x080ada5d: adc al, 0xfb; dec dword ptr [ebx - 0x340004ec]; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080ada61: adc al, 0xfb; dec ebx; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080adaa5: adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080addb1: adc al, 0xfb; inc dword ptr [edi]; adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x080addf1: adc al, 0xfb; inc dword ptr [edx]; adc eax, 0x1532fffb; sti; jmp dword ptr [edx + 0x15]; 
0x080ada9d: adc al, 0xfb; inc dword ptr [esi - 0x390004ec]; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080ada65: adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080adaa1: adc al, 0xfb; inc esi; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080add2d: adc al, 0xfb; jmp ecx; 
0x080adced: adc al, 0xfb; jmp esi; 
0x080add29: adc al, 0xfb; push dword ptr [ecx - 0x1e0004ec]; adc al, 0xfb; call dword ptr [ecx]; 
0x080adce9: adc al, 0xfb; push dword ptr [esi - 0x190004ec]; adc al, 0xfb; call dword ptr [esi]; 
0x080d0d55: adc al, 0xfc; jmp dword ptr [edi]; 
0x08052662: adc al, 0xff; je 0xa68a; adc al, 0x57; call dword ptr [ebx + 0x3c]; 
0x08092512: adc al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xff85; 
0x080ca68c: adc al, 2; cli; call dword ptr [eax + 1]; 
0x080d502c: adc al, 7; add dword ptr [eax], eax; push eax; stc; cld; jmp dword ptr [esi]; 
0x08058cfd: adc al, bh; sbb byte ptr [eax + 0x18], 0; add byte ptr [eax], al; ret; 
0x08080d28: adc al, byte ptr [eax]; add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x080c5b79: adc al, byte ptr [eax]; add byte ptr [ebx + edx*4 - 8], al; jmp dword ptr [edx]; 
0x080c5b59: adc al, byte ptr [eax]; add byte ptr [ebx + edx*4], dh; clc; jmp dword ptr [ecx]; 
0x0805b8cd: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [eax + 0x39], bl; std; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0805d405: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [eax + 0x38], esp; std; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x0805d395: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdbac], cl; and byte ptr [eax + 0x38], 0xfd; call dword ptr [eax - 0x77]; 
0x080c5be9: adc al, byte ptr [eax]; add byte ptr [esp + edx*4], al; clc; jmp dword ptr [ebx]; 
0x080bc918: adc al, byte ptr [eax]; or eax, 0xfb357000; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080490a8: adc al, byte ptr [ebp - 0x1b7af02e]; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x0809d535: adc al, byte ptr [ebp - 2]; jmp dword ptr [ebp - 1]; 
0x0806bb56: adc al, byte ptr [ebx + 0x147401fa]; cmp edx, 2; je 0x23b68; xor eax, eax; ret; 
0x080ab529: adc al, byte ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x08088732: adc al, byte ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x0806696a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066aca: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806635a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664ba: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x0806698a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066aea: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806637a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664da: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669aa: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b0a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806639a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664fa: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066839: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b2a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066249: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806651a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0805d951: adc al, byte ptr [ecx]; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x08065e52: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080645e2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065e92: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08064622: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065eb2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08064642: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08065c02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x08065e42: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x080643b2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080645d2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08066ac2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x080664b2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066ae2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x080664d2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08066b02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x080664f2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066b22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066512: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065ed2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064662: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064682: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f12: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080c8997: adc al, byte ptr [esi + ecx - 0x10]; adc cl, byte ptr [eax + 0xe]; rcl byte ptr [edx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08098a76: adc al, ch; add al, 0xfd; cli; inc dword ptr [ecx + 0x41584c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x08067df5: adc al, dh; ret; 
0x080887f8: adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0806be18: adc bh, al; ret 0; 
0x080a4500: adc bh, al; ret 0x9da4; 
0x08098fd3: adc bh, al; ret 0xa9f0; 
0x08055b62: adc bh, al; ret 0xafc0; 
0x08097363: adc bh, al; shr byte ptr [eax - 0x41], 0xd; or byte ptr [ecx - 0x16cbdbbc], cl; ret 0; 
0x0808eacc: adc bh, bh; je 0x46af4; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x0808ed74: adc bh, bh; je 0x46d9c; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x080adac5: adc bh, bl; call dword ptr [ecx]; 
0x080ada85: adc bh, bl; call dword ptr [esi]; 
0x080adac1: adc bh, bl; call ecx; 
0x080adac1: adc bh, bl; call ecx; adc bh, bl; call dword ptr [ecx]; 
0x080ada81: adc bh, bl; call esi; 
0x080ada81: adc bh, bl; call esi; adc bh, bl; call dword ptr [esi]; 
0x080adb39: adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080adb79: adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080adb35: adc bh, bl; push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080adb75: adc bh, bl; push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x0805b27d: adc bh, byte ptr [ecx]; ret 0x5489; 
0x080932fa: adc bh, byte ptr [edx - 0x6f990003]; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0805dbda: adc bh, cl; dec dword ptr [ebp - 0x7717f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080489b5: adc bh, dh; ret; 
0x080ab8ac: adc bl, bh; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x080c899f: adc bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080ac0c8: adc bl, ch; mov al, byte ptr [0xc708478b]; ret 0xaa28; 
0x080a00b6: adc bl, ch; mov dword ptr [0xfcec52e8], eax; jmp dword ptr [esi - 0x70]; 
0x0807b3eb: adc bl, ch; ret 0x9066; 
0x080cc620: adc bl, dh; std; jmp dword ptr [esi]; 
0x0806ca61: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x080487f6: adc byte ptr [eax + 0x68], dl; sub byte ptr [edi - 0x2d00f7f3], 0x83; les edx, ptr [eax]; leave; ret; 
0x08090682: adc byte ptr [eax + 0x76], 0xfb; dec dword ptr [ebp - 0x48fdf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0806ead6: adc byte ptr [eax + 0xa3], bh; call dword ptr gs:[0x10]; 
0x080cb041: adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c6293: adc byte ptr [eax + 0xa], bl; push cs; or al, 0x41; ret; 
0x080c7b72: adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7659: adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cdc41: adc byte ptr [eax + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d489c: adc byte ptr [eax + 0xa], dl; ret; 
0x0808f5f5: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x08055fb7: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x080ca528: adc byte ptr [eax + eax], bl; hlt; salc; stc; call dword ptr [ebx]; 
0x080d00eb: adc byte ptr [eax + eax], ch; add byte ptr [eax], al; fdiv dword ptr [edi - 0x5b40000]; sti; call dword ptr [ebp]; 
0x080a95e7: adc byte ptr [eax + esi], bh; jne 0x61620; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080aa3c7: adc byte ptr [eax + esi], bh; jne 0x62400; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080a20e2: adc byte ptr [eax - 0x73], dl; add eax, -0x7d; cld; call dword ptr [eax - 0x73]; 
0x0806b49e: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x08055fe2: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x080a9251: adc byte ptr [eax - 1], dl; je 0x6127a; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0805db93: adc byte ptr [eax], 0x13; stc; dec dword ptr [ebp - 0x7ab6f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x08067e25: adc byte ptr [eax], ah; ret; 
0x0809f105: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [esi + ebp*4 - 0x77], dh; fmul dword ptr [ecx - 0x76080836]; ret; 
0x080c8378: adc byte ptr [eax], al; add byte ptr [eax], al; cmp al, byte ptr fs:[eax]; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x0806c931: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c961: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0806cb55: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc25: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806cead: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d701: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x08093371: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080a1735: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x0806c8a8: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x080c8e88: adc byte ptr [eax], al; add byte ptr [eax], al; je 0x80ed3; add byte ptr [eax], al; xor byte ptr [ecx + edi*8], ch; call dword ptr [edx]; 
0x080c83b4: adc byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xa400003a]; idiv al; call dword ptr [edi]; 
0x080cbc9c: adc byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ebx], dh; add byte ptr [edx + esi - 6], bl; jmp dword ptr [eax]; 
0x0807c1dc: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0806c388: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x0807c1e8: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0806d952: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0807c1f6: adc byte ptr [eax], al; add byte ptr [eax], al; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080ccb1c: adc byte ptr [eax], al; add byte ptr [eax], al; or byte ptr [edx + 0x6b8c0000], al; cli; call dword ptr [edx]; 
0x0806d985: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x08092cbd: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x08091ecb: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0806ebad: adc byte ptr [eax], al; add byte ptr [eax], al; pop edx; pop ecx; pop ebx; ret; 
0x080c757c: adc byte ptr [eax], al; add byte ptr [eax], al; push 0x4c00002c; fdivp st(0); call dword ptr [edx]; 
0x080c8364: adc byte ptr [eax], al; add byte ptr [eax], al; push eax; cmp al, byte ptr [eax]; add byte ptr [esi + esi*8 - 8], dl; call dword ptr [edi]; 
0x08093328: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0809d52c: adc byte ptr [eax], al; add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc al, byte ptr [ebp - 2]; jmp dword ptr [ebp - 1]; 
0x0809d672: adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08088c55: adc byte ptr [eax], al; add byte ptr [ebx - 0x8a343], al; call dword ptr [ebx + 0xf]; 
0x080bc915: adc byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [0xfb357000], cl; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x0804a865: adc byte ptr [eax], bh; ret 0x850f; 
0x08067e15: adc byte ptr [eax], dl; ret; 
0x080a6d45: adc byte ptr [ebp + 0x20], dh; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a95fd: adc byte ptr [ebp + 0x24], dh; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080aafc5: adc byte ptr [ebp + 0x31], dh; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0804db83: adc byte ptr [ebp + 0x39fe0644], cl; ret; 
0x080ab66c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x080ab8fe: adc byte ptr [ebp + 0x5be375ff], al; pop esi; pop edi; ret; 
0x080993c8: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0806fa06: adc byte ptr [ebp + 0x6cc7c7c0], al; mov edi, 0x440f080d; ret 0xc931; 
0x0809d72f: adc byte ptr [ebp + 0x750789c0], al; mov eax, 0x80dbf2c; mov esi, 1; call dword ptr [eax]; 
0x080cc608: adc byte ptr [ebp + 0xa], al; ret; 
0x080d15ad: adc byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080d631d: adc byte ptr [ebp + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7799: adc byte ptr [ebp + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7456: adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080a3b12: adc byte ptr [ebp - 0x161f17d], cl; call dword ptr [eax + 0x6a]; 
0x080a216a: adc byte ptr [ebp - 0x164337d], cl; call dword ptr [eax + 0x6a]; 
0x080a10be: adc byte ptr [ebp - 0x165e67d], cl; call dword ptr [eax - 1]; 
0x0809d90e: adc byte ptr [ebp - 0x1ba937d], cl; call dword ptr [eax + 0x6a]; 
0x0809d532: adc byte ptr [ebp - 0x1baed62], cl; jmp dword ptr [ebp - 1]; 
0x0809d4f0: adc byte ptr [ebp - 0x1bb777d], cl; call dword ptr [eax - 0x73]; 
0x0804824f: adc byte ptr [ebp - 0x1bcbb7d], cl; call dword ptr [eax + 0x6a]; 
0x08097051: adc byte ptr [ebp - 0x1ceea80], cl; call dword ptr [eax - 0x77]; 
0x08097169: adc byte ptr [ebp - 0x1cef080], cl; call dword ptr [eax - 0x77]; 
0x080aba8e: adc byte ptr [ebp - 0x2e5bf7d], cl; call dword ptr [eax - 1]; 
0x0809d7ce: adc byte ptr [ebp - 0x38d28a40], al; ret 0xa9e0; 
0x08093957: adc byte ptr [ebp - 0x4f7bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x0806ddac: adc byte ptr [ebp - 0x72eb8b40], al; push ebx; add al, 0x83; ret; 
0x08094917: adc byte ptr [ebp - 0x747bf040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x1d00c7d], cl; push dword ptr [ecx]; dec dword ptr [ecx - 0x937b]; jmp dword ptr [esi - 0x70]; 
0x08091bfd: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x0806dd10: adc byte ptr [ebp - 0x763d7640], al; ret; 
0x080a5db2: adc byte ptr [ebp - 0x76dc8b40], al; test byte ptr [ebp + 0x27bc], 0; add byte ptr [ecx], al; ret 0xb70f; 
0x080aa06b: adc byte ptr [ebp - 0x7c2f8740], al; inc esp; and al, 0x18; add al, 0x83; ret; 
0x08073620: adc byte ptr [ebp - 0x7cd48b40], al; mov byte ptr [ecx], 0x83; dec byte ptr [esi*2 + 0x8838ddb]; pop esp; std; call dword ptr [eax - 0x73]; 
0x080abdba: adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x0807b396: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x08099006: adc byte ptr [ebp - 0x7cf98740], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08098f48: adc byte ptr [ebp - 0x7cf98a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080cb628: adc byte ptr [ebp], ch; add byte ptr [ebx - 6], dh; jmp dword ptr [esi]; 
0x0808a6d2: adc byte ptr [ebx + 0x31e91458], cl; loope 0x426d9; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x080a338f: adc byte ptr [ebx + 0x39013069], al; ret 0xdc75; 
0x0805e39e: adc byte ptr [ebx + 0x39182444], cl; ret; 
0x080c96e4: adc byte ptr [ebx + 0x43028603], al; or cl, byte ptr [esi]; or al, 0x46; ret; 
0x08052349: adc byte ptr [ebx + 0x4589fff8], al; ror byte ptr [edi], 0x85; ret; 
0x08067c62: adc byte ptr [ebx + 0x58ebf0e2], al; nop; lea esi, [esi]; xor eax, eax; ret; 
0x080515d1: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0804d754: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x08057b04: adc byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x08054cac: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x08053068: adc byte ptr [ebx + 0x5e5b1046], cl; pop edi; jmp eax; 
0x08053f87: adc byte ptr [ebx + 0x5e5b1047], cl; pop edi; jmp eax; 
0x0805597d: adc byte ptr [ebx + 0x5e5b1447], cl; pop edi; jmp eax; 
0x0805c9ac: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x08051a1e: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080a3f3e: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0805306b: adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0805dd26: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08054b83: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0809ea51: adc byte ptr [ebx + 0x651c244c], cl; xor ecx, dword ptr [0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a13fe: adc byte ptr [ebx + 0x651c244c], cl; xor ecx, dword ptr [0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a4756: adc byte ptr [ebx + 0x651c244c], cl; xor ecx, dword ptr [0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x08085a64: adc byte ptr [ebx + 0x6ae914c7], al; out 0xff, al; dec dword ptr [ebx + 0x3be88c5d]; mov ah, bh; call dword ptr [edx - 0x77]; 
0x080a90b5: adc byte ptr [ebx + 0x758bf45d], cl; clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080d11de: adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080d4dd9: adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76b5: adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d01a1: adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd19: adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080c8889: adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa75: adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b9: adc byte ptr [ebx + 0xa780204], al; ret; 
0x080c8fed: adc byte ptr [ebx + 0xa7e0204], al; ret; 
0x080c76f1: adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e09: adc byte ptr [ebx + 0xa970204], al; ret; 
0x080c573e: adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080d2dcc: adc byte ptr [ebx + 0xa], al; ret; 
0x080c7de5: adc byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x080c4f0b: adc byte ptr [ebx + 0xa], cl; ret; 
0x080cff4d: adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e39: adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e19: adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c8531: adc byte ptr [ebx + 0xac00204], al; ret; 
0x08079a57: adc byte ptr [ebx + 0xb7403f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x080cba75: adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080cac49: adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x0806e77d: adc byte ptr [ebx - 0x137c33bb], cl; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d845], cl; fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x0809bce3: adc byte ptr [ebx - 0x23f73], cl; inc dword ptr [ebx - 0x7bf00006]; pop ds; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x08056397: adc byte ptr [ebx - 0x368a0008], al; add esp, 4; pop ebx; pop esi; ret; 
0x08048db5: adc byte ptr [ebx - 0x38f3dbbc], cl; ret; 
0x080515ce: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0809b5e7: adc byte ptr [ebx - 0x3e092fa3], cl; and byte ptr [edi], cl; xchg eax, ebp; ret 0x940f; 
0x0807b393: adc byte ptr [ebx - 0x3f7aefba], cl; je 0x333a4; sub esp, 0xc; push esi; call eax; 
0x080a4984: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d974: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080557b6: adc byte ptr [ebx - 0x75], bl; inc esi; or al, 0x5e; pop edi; jmp eax; 
0x08079cde: adc byte ptr [ebx - 0x76e7dbbc], cl; cmp dword ptr [eax + 0x19], 0; add byte ptr [ebp - 0x605bf7d], cl; call dword ptr [eax - 1]; 
0x0809bee2: adc byte ptr [ebx - 0x7769f3c], al; pop ebx; pop esi; pop edi; ret; 
0x080a2084: adc byte ptr [ebx - 0x7bf00003], al; ret 0; 
0x08055e33: adc byte ptr [ebx - 0x7bf00008], al; ret; 
0x08053157: adc byte ptr [ebx - 0x7bf0ebaa], cl; sgdt [eax]; add byte ptr [ecx], bh; ret 0x44c7; 
0x0806ce79: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0806cb11: adc byte ptr [ebx - 0x7cf7dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x080933e5: adc byte ptr [ebx - 0x9d7dbac], cl; ret 0x7540; 
0x0806c985: adc byte ptr [ebx - 0x9dbdbac], cl; ret 0x7540; 
0x080d0428: adc byte ptr [ebx - 0xcc0000], bh; sti; call ecx; 
0x08090952: adc byte ptr [ebx], ch; xchg eax, esp; and al, 0x60; add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x080d5c28: adc byte ptr [ebx], dl; add dword ptr [eax], eax; xchg eax, esp; xor ebp, edi; jmp dword ptr [esi]; 
0x0805db94: adc byte ptr [ebx], dl; stc; dec dword ptr [ebp - 0x7ab6f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080935e9: adc byte ptr [ecx + 0x127b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08082e38: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x08057c08: adc byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x0805c44e: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0806f49c: adc byte ptr [ecx + 0x5f5e5bd8], cl; jmp eax; 
0x0809d6c7: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x080d00d1: adc byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x080c6a62: adc byte ptr [ecx + 0xa], ah; ret; 
0x080c72eb: adc byte ptr [ecx + 0xa], al; ret; 
0x080d00a4: adc byte ptr [ecx + 0xa], cl; ret; 
0x080c9339: adc byte ptr [ecx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7b89: adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x080a44f1: adc byte ptr [ecx + eax + 0xf030000], 0x85; cmp eax, 0x8bfffffd; jl 0x5c524; adc bh, al; ret 0x9da4; 
0x0808a7d5: adc byte ptr [ecx - 0x45b4b], cl; dec dword ptr [ecx - 0x4677b]; jmp dword ptr [ebp - 0x5f]; 
0x080801d5: adc byte ptr [ecx - 0x46b4b], cl; dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x080556dc: adc byte ptr [ecx - 0x7c3fceed], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0805da78: adc byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x0807984f: adc byte ptr [ecx - 0x7cf3dbac], cl; ret 0x8501; 
0x0809fc45: adc byte ptr [ecx - 0x7cffe2bc], cl; ret; 
0x08082e11: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x080aee44: adc byte ptr [ecx - 7], bl; push eax; pop eax; stc; call eax; 
0x08093909: adc byte ptr [ecx], ah; ret; 
0x08067016: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0807c81e: adc byte ptr [ecx], al; ret 0x5489; 
0x08050613: adc byte ptr [ecx], al; ret 0x572b; 
0x0809f629: adc byte ptr [ecx], al; ret 0xc601; 
0x0809b8a8: adc byte ptr [ecx], bh; fidiv dword ptr [esp + ecx*2 - 0x77]; ret 0xde89; 
0x080a336f: adc byte ptr [ecx], bh; ret 0x2474; 
0x0807e0c0: adc byte ptr [ecx], bh; ret 0x820f; 
0x0809495a: adc byte ptr [ecx], bh; ret 0x840f; 
0x0807e123: adc byte ptr [ecx], bh; ret 0x850f; 
0x0807e133: adc byte ptr [ecx], bh; ret 0x8f0f; 
0x0809d5ed: adc byte ptr [ecx], bh; ret 0xd72; 
0x0805e0c5: adc byte ptr [ecx], bh; ret; 
0x0808fb77: adc byte ptr [ecx], bh; retf 0xf475; add eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x08089137: adc byte ptr [ecx], bh; ror dword ptr [edi], 0x85; ret; 
0x080563d7: adc byte ptr [ecx], bh; sal dword ptr [ebp - 0xc], 1; mov eax, dword ptr [esp + 8]; add eax, ebx; pop ebx; ret; 
0x0806d3d2: adc byte ptr [ecx], cl; ret 0x448b; 
0x0808fc9b: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0805c482: adc byte ptr [ecx], dh; rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x080d25ca: adc byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080cad41: adc byte ptr [edi + 0xa], al; ret; 
0x080cbf0d: adc byte ptr [edi + 0xa], cl; push cs; or al, 0x41; ret; 
0x080d29b3: adc byte ptr [edi + 0xa], cl; ret; 
0x080d1521: adc byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cdc58: adc byte ptr [edi + 0xa], dl; push cs; or al, 0x41; ret; 
0x080c7685: adc byte ptr [edi + 0xe], ah; sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], bl; or al, 0x41; ret; 
0x080d347a: adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080c4cd5: adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0806ee7d: adc byte ptr [edi - 0x1f], dh; mov dword ptr [eax + 0x18], ebx; mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x0805e669: adc byte ptr [edi - 8], cl; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x08091ccd: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0805b770: adc byte ptr [edi], cl; inc edx; ret 0xc189; 
0x080a7c3e: adc byte ptr [edi], cl; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x080a7f07: adc byte ptr [edi], cl; mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x080678c2: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x080674bd: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08084800: adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x8d8b; 
0x080919ce: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x08091c52: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x08091b32: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x08066c6b: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x080a8899: adc byte ptr [edi], cl; xchg eax, esp; ret; 
0x080ceb28: adc byte ptr [edx + 0x42340000], ah; sti; call dword ptr [eax]; 
0x080cfc71: adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x080cff77: adc byte ptr [edx + 0xa], cl; ret; 
0x080cfee9: adc byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c5f52: adc byte ptr [edx + 0xa], dl; ret; 
0x080500d2: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7fe0; add esp, 0x1c; ret; 
0x080c7c0d: adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080c7856: adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x0807b6ae: adc byte ptr [edx + edi*8], dl; dec dword ptr [ebx - 0x1ab43]; call dword ptr [eax - 0x73]; 
0x0806e563: adc byte ptr [edx - 3], cl; call dword ptr [eax - 0x73]; 
0x0805b8cc: adc byte ptr [edx], 0; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [eax + 0x39], bl; std; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0805dbd9: adc byte ptr [edx], 0xf9; dec dword ptr [ebp - 0x7717f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080c7b1b: adc byte ptr [edx], al; arpl word ptr [edx], cx; ret; 
0x080cace9: adc byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c8e69: adc byte ptr [edx], al; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080cf933: adc byte ptr [edx], al; ja 0x87941; ret; 
0x080ced4d: adc byte ptr [edx], al; js 0x86d5b; push cs; or al, 0x43; ret; 
0x080c690b: adc byte ptr [edx], al; les ecx, ptr [edx]; ret; 
0x080c8d3d: adc byte ptr [edx], al; or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080ce6d9: adc byte ptr [edx], al; pushal; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080c60c3: adc byte ptr [edx], al; ret; 
0x080ad998: adc byte ptr [edx], bh; clc; jmp dword ptr [eax]; 
0x080c5b91: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2200e4e], -0x57; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf2d9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e4d], -0x57; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf285: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e4d], -0x47; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d4a59: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e49], 0x67; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c63bd: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e4e], -0x44; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5459: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e53], -0x3a; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d57f5: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2d00e53], 2; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5bd9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2e00e4b], 2; mov bh, 0xa; push cs; adc al, 0x43; ret; 
0x080cf8e7: adc byte ptr [esi + 0xa], al; ret; 
0x080c6869: adc byte ptr [esi + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cc9af: adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb7a: adc byte ptr [esi + 0xa], dl; ret; 
0x080d0863: adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08d2: adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08c1: adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0927: adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x080d089f: adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d0b31: adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d08b0: adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d088e: adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080c6831: adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080d3668: adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080623e7: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x080670ea: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08067102: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0806785d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x080c712c: adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x08071777: adc byte ptr [esi - 3], dl; call dword ptr [eax - 0x73]; 
0x080cf932: adc byte ptr cs:[edx], al; ja 0x87941; ret; 
0x080c690a: adc byte ptr cs:[edx], al; les ecx, ptr [edx]; ret; 
0x080c60c2: adc byte ptr cs:[edx], al; ret; 
0x080d5565: adc ch, bh; call dword ptr [ecx]; 
0x080d54e1: adc ch, bh; call dword ptr [esi]; 
0x080d54cd: adc ch, bh; jmp dword ptr [ecx]; 
0x080c2655: adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x08088606: adc cl, al; cli; add bh, byte ptr [ecx]; ret 0x850f; 
0x080d2228: adc cl, bl; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; cld; call edi; 
0x080c899b: adc cl, byte ptr [eax + 0xe]; rcl byte ptr [edx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080aadf1: adc cl, byte ptr [ebp + 0x1c8083]; add byte ptr [ebx - 0x17aff314], al; call dword ptr [ecx - 0xb]; 
0x0809adee: adc cl, byte ptr [ebp - 0x1c51278]; call dword ptr [edi - 0x7b]; 
0x0805db91: adc cl, byte ptr [ebp - 0x6ecef7e]; dec dword ptr [ebp - 0x7ab6f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e621: adc cl, byte ptr [ebp - 0x6f39f7e]; dec dword ptr [ebp - 0x793bf6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e6e1: adc cl, byte ptr [ebp - 0x721bf7e]; dec dword ptr [ebp - 0x7213f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x08059f45: adc cl, byte ptr [ecx + 0x21d8f7f8]; ret 0xd539; 
0x08065d76: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ed6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064506: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x08064666: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064686: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f16: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080960db: adc cl, ch; mov edi, 0x89fffffd; ret 0x8d90; 
0x0807b356: adc cl, ch; mov esi, 0xffffffd; mov bh, 0x44; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x0809a188: adc cl, ch; ret 0xfffe; 
0x080799d8: adc cl, ch; sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x080487b4: adc cl, cl; ret; 
0x0804883c: adc dh, al; add eax, 0x80db320; add ecx, ecx; ret; 
0x080c8330: adc dh, dh; clc; jmp dword ptr [ecx]; 
0x08056266: adc dh, dh; push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080c4408: adc dl, 0xfc; jmp eax; 
0x0809be3c: adc dl, bl; cli; dec dword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax + 0x6a]; 
0x0805dc10: adc dl, byte ptr [eax]; pop ebx; cmovne eax, ecx; ret; 
0x08098497: adc dword ptr [eax + 0x39], -2; call dword ptr [eax - 0x73]; 
0x08070183: adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; 
0x08070183: adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x080719c8: adc dword ptr [eax + 0x78], -7; call dword ptr [eax - 0x77]; 
0x080a37ef: adc dword ptr [eax - 0x62], -2; call dword ptr [eax - 0x18]; 
0x080a4cc3: adc dword ptr [eax], -0x56; cld; call dword ptr [eax + 0x56]; 
0x080a4bf7: adc dword ptr [eax], -0x56; cld; call dword ptr [eax - 0x73]; 
0x0807b6ad: adc dword ptr [eax], 0x14; cli; dec dword ptr [ebx - 0x1ab43]; call dword ptr [eax - 0x73]; 
0x0806e562: adc dword ptr [eax], 0x4a; std; call dword ptr [eax - 0x73]; 
0x08071776: adc dword ptr [eax], 0x56; std; call dword ptr [eax - 0x73]; 
0x080aada5: adc dword ptr [eax], 4; std; call dword ptr [eax - 0x18]; 
0x08052587: adc dword ptr [eax], eax; add bh, al; ret 0xb080; 
0x08080d20: adc dword ptr [eax], eax; add byte ptr [ebp - 0x527af02e], al; adc al, byte ptr [eax]; add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x0809ba04: adc dword ptr [ebp + 0x41], -2; ljmp [eax - 0x36]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x41], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08093e6a: adc dword ptr [ebp - 0x1d0d77d], ecx; call dword ptr [eax + 0x6a]; 
0x080935fe: adc dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0809cf3e: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0806d91e: adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x080add28: adc dword ptr [ebx + edi*8], 0xfb14b1ff; jmp ecx; 
0x08048cd6: adc dword ptr [ebx - 0x38f3dbb4], ecx; ret 0xb900; 
0x0806237e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a389; neg eax; ret; 
0x08050b33: adc dword ptr [ecx + ebp], -3; call dword ptr [eax - 0x18]; 
0x0809c75d: adc dword ptr [ecx - 0x24b7b], ecx; dec dword ptr [ecx + 0x1a7c83]; add byte ptr [ebx + 0x1a7883], cl; add byte ptr [ecx], bh; ret 0x273; 
0x0808537b: adc dword ptr [ecx - 0x876b], ecx; call dword ptr [eax + 0x51]; 
0x0806d05e: adc dword ptr [ecx - 3], ecx; call dword ptr [eax + 0x6a]; 
0x080adaa8: adc dword ptr [ecx], 0x11b1fffb; sti; jmp ecx; 
0x08095de0: adc dword ptr [ecx], edi; ret 0x430f; 
0x080a3123: adc dword ptr [ecx], edi; ret 0xd875; 
0x080a3a4c: adc dword ptr [edi + ebx*4], -2; call dword ptr [eax + 0x6a]; 
0x080a786e: adc dword ptr [esi - 0x7f], esp; js 0x5f878; int 0x80; 
0x0806c930: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c960: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0806cb54: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc24: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806ceac: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d700: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x08093370: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080a1734: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x0806c8a7: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0807c1db: adc eax, 0x10; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0806c387: adc eax, 0x10; mov eax, 1; int 0x80; 
0x0807c1e7: adc eax, 0x10; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0806d951: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0807c1f5: adc eax, 0x10; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0806d984: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x08092cbc: adc eax, 0x10; pop ebx; ret; 
0x0806ebac: adc eax, 0x10; pop edx; pop ecx; pop ebx; ret; 
0x08093327: adc eax, 0x10; ret; 
0x0806c8f8: adc eax, 0x14; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806d83c: adc eax, 0x14; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x080addf5: adc eax, 0x1532fffb; sti; jmp dword ptr [edx + 0x15]; 
0x080addb5: adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x080add3d: adc eax, 0x15a1fffb; sti; call ecx; 
0x080adcfd: adc eax, 0x15a6fffb; sti; call esi; 
0x080add41: adc eax, 0x15d1fffb; sti; call dword ptr [ecx]; 
0x080add01: adc eax, 0x15d6fffb; sti; call dword ptr [esi]; 
0x0806763a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x080d5e2d: adc eax, 0x34f00001; std; call dword ptr [eax + 1]; 
0x080d5e85: adc eax, 0x35e80001; std; call dword ptr [eax]; 
0x080bf58a: adc eax, 0x42d35a1d; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x0804e213: adc eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0804eff7: adc eax, 0x5ffff99; add eax, 0x830008b0; in al, dx; adc al, 0xc7; ret; 
0x0809c267: adc eax, 0x81fffac5; ret; 
0x08090867: adc eax, 0x81fffb7f; ret; 
0x0807a767: adc eax, 0x81fffce0; ret; 
0x0805ea67: adc eax, 0x81fffe9d; ret; 
0x08093c37: adc eax, 0x83000001; ret 0x8320; 
0x0807b3c8: adc eax, 0xc483fffe; adc al, 0x5b; pop esi; ret; 
0x08088c77: adc eax, 0xec830000; or byte ptr [ebx - 0x89363], cl; call dword ptr [eax + 0x52]; 
0x080980b5: adc eax, 0xffffe37; inc ebp; ret 0x3980; 
0x0808b2d2: adc eax, dword ptr [eax]; add byte ptr [ebp - 0xc7af001], al; adc al, 0; add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x08090937: adc eax, dword ptr [ebp + 0x24b48bf6]; pushal; add al, 0; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080716e6: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x08079199: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x080937de: adc eax, dword ptr [ebx + 0x5e5b34c4]; ret; 
0x080718fe: adc eax, dword ptr [ebx - 0x17a8f314]; push 0x89ffffe9; xor al, 0x24; call edi; 
0x0808870c: adc eax, dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x080ca610: adc eax, dword ptr [ecx]; ret; 
0x0806696f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066acf: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0806635f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x080664bf: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x0806698f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066aef: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0806637f: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x080664df: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x080669af: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b0f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0806639f: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x080664ff: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0806683e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b2f: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x0806624e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0806651f: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x08065c06: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x08065e46: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x08065d19: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08065e59: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080644a9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x080645e9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065d59: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e99: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x080644e9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x08064629: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065c49: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08065eb9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x080643f9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x08064649: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x080643b6: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x080645d6: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x08065d3a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08065e7a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080644ca: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806460a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08065d7b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065edb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806450b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806466b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065d9b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065efb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806452b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806468b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065dbb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f1b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806454b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x080646ab: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08066966: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ac6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x08066356: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664b6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066986: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066ae6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x08066376: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664d6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x08066396: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664f6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066835: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066245: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x08066516: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x080717a2: adc ebp, 0x55; std; call dword ptr [eax - 0x18]; 
0x08082b39: adc ebp, dword ptr [ebp - 4]; dec dword ptr [ebp - 0x1d9077d]; call dword ptr [eax + 0x68]; 
0x080c09a5: adc ebp, dword ptr [ebx]; fstp dword ptr [ebx + 0x4a315a58]; ret 0x1b49; 
0x080adab1: adc ebx, edi; call dword ptr [ecx]; 
0x080ada71: adc ebx, edi; call dword ptr [esi]; 
0x080adb2d: adc ebx, edi; call edi; 
0x080adb6d: adc ebx, edi; call edx; 
0x080ab76f: adc ebx, edi; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x080adb31: adc ebx, edi; inc dword ptr [edi]; adc bh, bl; push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080adb71: adc ebx, edi; inc dword ptr [edx]; adc bh, bl; push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080ab728: adc ebx, edi; inc edi; ret 0; 
0x080adaad: adc ebx, edi; jmp ecx; 
0x080ada6d: adc ebx, edi; jmp esi; 
0x080adaa9: adc ebx, edi; push dword ptr [ecx - 0x1e0004ef]; adc ebx, edi; call dword ptr [ecx]; 
0x080ada69: adc ebx, edi; push dword ptr [esi - 0x190004ef]; adc ebx, edi; call dword ptr [esi]; 
0x0807020c: adc ecx, dword ptr [ecx - 0x2536d]; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08065d7f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065edf: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0806450f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0806466f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x08065d9f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065eff: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0806452f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0806468f: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x08065dbf: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f1f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0806454f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x080646af: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0806c3da: adc edi, 0x44; std; call dword ptr [eax - 0x18]; 
0x08075e39: adc edi, dword ptr [edx]; std; dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax + 0x68]; 
0x080adc61: adc edi, ebx; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080adc59: adc edi, ebx; call dword ptr [ebx + edx - 5]; push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080adc69: adc edi, ebx; call dword ptr [ecx + 0x13]; 
0x080adc49: adc edi, ebx; call dword ptr [edi + 0x13]; 
0x080adc41: adc edi, ebx; lcall [edx + 0x37fffb13]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x080adc5d: adc edi, ebx; push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080adc65: adc edi, ebx; push dword ptr [ecx]; adc edi, ebx; call dword ptr [ecx + 0x13]; 
0x080adc45: adc edi, ebx; push dword ptr [edi]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x0805db95: adc edi, ecx; dec dword ptr [ebp - 0x7ab6f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080a0612: adc esi, dword ptr [ebp - 0x15]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080c1eba: adc esi, dword ptr [ebp - 0x60001a67]; mov dh, 0xc7; ret 0xe71f; 
0x080a8b67: adc esi, dword ptr [ebx + ebx]; add byte ptr [esi*2 - 0x7cff74e3], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0807b245: adc esi, eax; popal; std; dec dword ptr [ebx - 0x976b]; call dword ptr [edx - 1]; 
0x08050205: adc esi, esi; ret 0x7520; 
0x080d163b: add ah, ah; and ah, bh; call edi; 
0x080cb73b: add ah, ah; and al, 0xfa; call dword ptr [edx + 1]; 
0x080d54db: add ah, al; or eax, dword ptr [ecx]; add byte ptr [eax], ah; adc ch, bh; call dword ptr [esi]; 
0x080cfa3b: add ah, al; out dx, eax; sti; jmp dword ptr [edx]; 
0x080ca16b: add ah, al; ret; 
0x080d05a9: add ah, bh; jmp dword ptr [edi]; 
0x080cc743: add ah, bh; pop esp; cli; call dword ptr [edi]; 
0x080c7ff3: add ah, bl; add byte ptr ss:[eax], al; sbb al, dh; clc; call dword ptr [edi]; 
0x080cbef3: add ah, bl; jne 0x83ef7; add al, bl; inc edx; cli; jmp dword ptr [ebp]; 
0x080d04f3: add ah, bl; mov ebx, 0xff980000; sti; call dword ptr [ecx + 1]; 
0x080d3c33: add ah, bl; ret; 
0x080d28a3: add ah, bl; xchg eax, edi; cld; call edx; 
0x080c7af3: add ah, bl; xor dword ptr [eax], eax; add byte ptr [eax - 0x1a], bl; clc; jmp dword ptr [edx]; 
0x080887fa: add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x080ccd0b: add ah, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080ce6da: add ah, byte ptr [eax + 0xa]; push cs; or al, 0x43; ret; 
0x080cb0c5: add ah, byte ptr [eax + 0xa]; ret; 
0x080c7b1c: add ah, byte ptr [ebx + 0xa]; ret; 
0x080c6d5c: add ah, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d0175: add ah, byte ptr [ecx + 0xa]; ret; 
0x080caba8: add ah, byte ptr [edi + 0x41140e0a]; ret; 
0x080d4a64: add ah, byte ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4793: add ah, byte ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5186: add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080d58ca: add ah, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8d3e: add ah, byte ptr [esi + 0xa]; push cs; or al, 0x45; ret; 
0x080c6014: add ah, byte ptr [esi + 0xa]; ret; 
0x08066967: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ac7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x08066357: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664b7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066987: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066ae7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x08066377: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664d7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x08066397: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664f7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066836: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066246: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x08066517: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065d7c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065edc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0806450c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0806466c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x08065d9c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065efc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0806452c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0806468c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x08065dbc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f1c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0806454c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x080646ac: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0806aff0: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0806b059: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x08065e23: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x080645b3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x080d63e3: add ah, ch; inc edi; std; jmp dword ptr [edx]; 
0x080c5443: add ah, ch; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080ca853: add ah, ch; pop es; cli; jmp dword ptr [edx]; 
0x080d6003: add ah, ch; push ss; add dword ptr [eax], eax; mov byte ptr [eax], bh; std; call dword ptr [esi]; 
0x080d4453: add ah, ch; sar ah, 1; jmp dword ptr [ebx]; 
0x080d10c3: add ah, ch; sbb edi, esp; call dword ptr [ebx]; 
0x080d0d53: add ah, cl; adc al, 0xfc; jmp dword ptr [edi]; 
0x080c8873: add ah, cl; add edi, ecx; call dword ptr [esi]; 
0x080c43a0: add ah, cl; cld; call dword ptr [eax - 0x34]; 
0x080c82f3: add ah, cl; cmc; clc; call dword ptr [edx]; 
0x080c86e3: add ah, cl; cmp eax, 0xfe980000; clc; call dword ptr [edi + 1]; 
0x080d2ee3: add ah, cl; in eax, 0; add byte ptr [eax - 0x56], cl; cld; call esp; 
0x080cbee3: add ah, cl; inc edx; cli; call dword ptr [ecx]; 
0x080cfb03: add ah, cl; int1; sti; call dword ptr [eax + 1]; 
0x080cc5e3: add ah, cl; jl 0x845e7; add al, bl; std; jmp dword ptr [ebx]; 
0x080ce9d3: add ah, cl; out dx, eax; cli; call edi; 
0x080c831b: add ah, dh; cmc; clc; jmp dword ptr [ecx]; 
0x080c4ceb: add ah, dh; dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x080cb60b: add ah, dh; insb byte ptr es:[edi], dx; add byte ptr [eax], al; pushal; and edi, edx; jmp dword ptr [esi]; 
0x08048761: add ah, dh; mov ebx, dword ptr [esp]; ret; 
0x080cc69b: add ah, dh; push ecx; cli; call dword ptr [ecx]; 
0x080ce16b: add ah, dh; retf; cli; call dword ptr [edx]; 
0x080ca52b: add ah, dh; salc; stc; call dword ptr [ebx]; 
0x080d43eb: add ah, dl; cli; add byte ptr [eax], al; rcl al, 1; cld; jmp dword ptr [edi]; 
0x080d313f: add ah, dl; mov bl, 0xfc; call dword ptr [edi]; 
0x080c8fbb: add ah, dl; xor ecx, edi; jmp dword ptr [edx]; 
0x080ccb1a: add al, 0; adc byte ptr [eax], al; add byte ptr [eax], al; or byte ptr [edx + 0x6b8c0000], al; cli; call dword ptr [edx]; 
0x0804875f: add al, 0; add ah, dh; mov ebx, dword ptr [esp]; ret; 
0x08057a30: add al, 0; add bl, dh; ret; 
0x0807d904: add al, 0; add byte ptr [eax - 0x18], dl; ret; 
0x0809561a: add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [esp + esi], -2; call dword ptr [eax - 0x18]; 
0x0806cb8c: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cc12: add al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a95b8: add al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x08091dee: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x08092c01: add al, 0; add byte ptr [eax], al; ret; 
0x080cbc99: add al, 0; add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax + 0x5c000073], cl; xor bh, dl; jmp dword ptr [eax]; 
0x08059fe1: add al, 0; add byte ptr [ebp + 0x4e80d], cl; add byte ptr [ecx], al; ret 0x48b; 
0x0804da02: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806fcaf: add al, 0; add byte ptr [ebx + 0x9886], cl; add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x0809a7c6: add al, 0; add byte ptr [ebx - 0x7bfc63bb], cl; mov eax, 0xfffe3ff4; jmp eax; 
0x08057901: add al, 0; add byte ptr [ecx], al; add byte ptr [eax], al; add bl, dh; ret; 
0x08090a27: add al, 0; add byte ptr [ecx], al; fsubr dword ptr [ecx]; fidivr word ptr [ecx]; ret 0x830f; 
0x08059fe7: add al, 0; add byte ptr [ecx], al; ret 0x48b; 
0x08090957: add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x0805de6d: add al, 0; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x08090a79: add al, 0; add byte ptr [ecx], ch; fmul dword ptr [ecx + 0xfd839de]; inc edx; ret; 
0x08059f39: add al, 0; add byte ptr [edi], cl; lea eax, [esi + edi*8 + 0x548dffff]; das; adc cl, byte ptr [ecx + 0x21d8f7f8]; ret 0xd539; 
0x0809093e: add al, 0; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080510bd: add al, 0; add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x0805342b: add al, 0; add byte ptr [edx], ch; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x08085fbf: add al, 0; add dh, dh; ret 0xf50; 
0x0806ac9b: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0805e8c9: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x08062325: add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x080c7696: add al, 0; cmp byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [0xe0d00000], ch; clc; jmp dword ptr [ebp]; 
0x08093813: add al, 0; int 0x80; 
0x080d5e26: add al, 0; push esp; add byte ptr [eax], al; add byte ptr [edx + 0x34f00001], dl; std; call dword ptr [eax + 1]; 
0x080c8fce: add al, 0; sub al, 0; add byte ptr [eax], al; mov esp, 0x28000046; xor bh, cl; call dword ptr [edi]; 
0x080d54cc: add al, 0x10; std; jmp dword ptr [ecx]; 
0x080491ab: add al, 0x23; std; call dword ptr [eax - 0x18]; 
0x080a00f4: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x080aad33: add al, 0x24; call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809d86c: add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d825: add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x08048911: add al, 0x24; ret; 
0x0807e10d: add al, 0x29; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0809dd95: add al, 0x29; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x08093f95: add al, 0x29; ret 0x4503; 
0x0805288c: add al, 0x29; ret 0x5052; 
0x080573d8: add al, 0x29; ret 0x6a52; 
0x080885ed: add al, 0x29; rol cl, 1; clc; add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08048dca: add al, 0x2a; mov esi, dword ptr [ebx]; jne 0x105e; call dword ptr [esi]; 
0x080a98d5: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x08049aa5: add al, 0x2b; inc esi; add al, 0x5b; pop esi; pop edi; ret; 
0x080c60c1: add al, 0x2e; adc byte ptr [edx], al; ret; 
0x08088569: add al, 0x30; sub esp, 4; push ebx; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x0805739b: add al, 0x31; ljmp [ecx]; ret 0x6a52; 
0x0809fbe0: add al, 0x39; ret 0xf375; 
0x0805de0c: add al, 0x39; ret 0xf775; 
0x08074524: add al, 0x39; ret; 
0x08057039: add al, 0x39; retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x080a6d43: add al, 0x3c; adc byte ptr [ebp + 0x20], dh; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a95fb: add al, 0x3c; adc byte ptr [ebp + 0x24], dh; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080aafc3: add al, 0x3c; adc byte ptr [ebp + 0x31], dh; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080c9517: add al, 0x41; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x44; ret; 
0x080cfd6e: add al, 0x41; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x46; ret; 
0x080d103f: add al, 0x41; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d30a1: add al, 0x41; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080d2705: add al, 0x41; or eax, dword ptr [ebx]; xlatb; add ecx, dword ptr [edx]; ret; 
0x080d1046: add al, 0x41; or eax, dword ptr [esi + 0xa]; ret; 
0x080d5bf9: add al, 0x41; or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x080c8440: add al, 0x41; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080cf2a4: add al, 0x41; or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080cf2f8: add al, 0x41; or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080cb04d: add al, 0x41; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080cc339: add al, 0x41; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080c5b93: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2200e4e; test eax, 0x41140e0a; ret; 
0x080cf2db: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2240e4d; test eax, 0x41140e0a; ret; 
0x080cf287: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2280e4d; mov ecx, 0x41140e0a; ret; 
0x080d4a5b: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2300e49; or cl, byte ptr [0x4314]; ret; 
0x080c63bf: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2300e4e; mov esp, 0x41140e0a; ret; 
0x080c4c0f: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2500e4e; ret; 
0x080d57f7: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2d00e53; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d5bdb: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2e00e4b; add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x080a179a: add al, 0x42; add dword ptr [ebx + 0x5e], ebx; ret; 
0x080cfe23: add al, 0x42; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8ed8: add al, 0x42; or eax, dword ptr [ebx]; xor eax, 0x140e0a01; inc ebx; ret; 
0x080d152d: add al, 0x42; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d98: add al, 0x42; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080c5f5f: add al, 0x42; or ebx, dword ptr [edi + 0xa]; ret; 
0x080cf940: add al, 0x42; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d5a65: add al, 0x42; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d6241: add al, 0x42; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080ca6c0: add al, 0x42; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080d620c: add al, 0x42; std; call dword ptr [ebx + 5]; 
0x080cb7a3: add al, 0x43; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x45; ret; 
0x080d1097: add al, 0x43; or eax, dword ptr [ebx + 0xa]; ret; 
0x080cf6ed: add al, 0x43; or eax, dword ptr [edx]; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3074: add al, 0x43; or eax, dword ptr [edx]; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x080d423b: add al, 0x43; or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x080d5541: add al, 0x43; or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d65f7: add al, 0x43; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3dec: add al, 0x43; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080cb1d1: add al, 0x43; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d5a7b: add al, 0x43; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080d308b: add al, 0x44; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d16d8: add al, 0x44; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c6918: add al, 0x44; or eax, dword ptr [edi + 0xa]; ret; 
0x080d4790: add al, 0x44; or eax, dword ptr [edx]; bound ecx, qword ptr [edx]; push cs; adc al, 0x43; ret; 
0x080d2095: add al, 0x44; or eax, dword ptr [edx]; inc esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8ddb: add al, 0x44; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4482: add al, 0x44; or ebx, dword ptr [esi + 0xa]; ret; 
0x080d2d45: add al, 0x44; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5ed8: add al, 0x44; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d4a78: add al, 0x44; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080d15b9: add al, 0x44; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d6c: add al, 0x44; or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d5910: add al, 0x44; or edx, dword ptr [ecx + 0xa]; ret; 
0x080d3d82: add al, 0x44; or esi, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080cbe5d: add al, 0x44; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c77ef: add al, 0x44; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d2eb3: add al, 0x44; ret; 
0x080cc4cb: add al, 0x45; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080cb09c: add al, 0x45; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d109e: add al, 0x45; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d2ad1: add al, 0x45; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c5ccf: add al, 0x45; or eax, dword ptr [ebx]; retf 0xa01; push cs; adc al, 0x41; ret; 
0x080d5514: add al, 0x45; or eax, dword ptr [edx]; jno 0x8d524; push cs; adc al, 0x41; ret; 
0x080c8e29: add al, 0x45; or ecx, dword ptr [ebp + 0xa]; ret; 
0x080d57bd: add al, 0x45; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d568c: add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6ea8: add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080c93bb: add al, 0x45; or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x080c952d: add al, 0x46; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5ae5: add al, 0x46; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c5d75: add al, 0x46; or eax, dword ptr [ebx]; mov word ptr [ecx], es; push cs; adc al, 0x41; ret; 
0x080cbd29: add al, 0x46; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d613c: add al, 0x46; or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080ce118: add al, 0x46; or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080c6926: add al, 0x46; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c91ba: add al, 0x46; or ebp, dword ptr [esi + 0xa]; push cs; or al, 0x43; ret; 
0x080d422d: add al, 0x46; or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d2589: add al, 0x46; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d3e35: add al, 0x46; or edi, dword ptr [eax + 0xa]; ret; 
0x080cd8f1: add al, 0x46; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080c7df1: add al, 0x46; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d3e44: add al, 0x46; or esp, dword ptr [eax + 0xa]; ret; 
0x080d1210: add al, 0x46; push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080c81b5: add al, 0x47; or eax, dword ptr [ebx]; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x080cffd5: add al, 0x47; or eax, dword ptr [ecx + 0xa]; ret; 
0x080cbf19: add al, 0x47; or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x080cff5d: add al, 0x47; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d561c: add al, 0x47; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c6507: add al, 0x47; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x080cf240: add al, 0x47; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080d429d: add al, 0x47; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080c8e76: add al, 0x47; or esp, dword ptr [edx + 0xa]; push cs; or al, 0x43; ret; 
0x080d1d7f: add al, 0x48; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d5605: add al, 0x48; or eax, dword ptr [edx]; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e40: add al, 0x48; or eax, dword ptr [edx]; push ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080ceba5: add al, 0x48; or ebx, dword ptr [ecx + 0xa]; ret; 
0x080d0623: add al, 0x48; or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080c70f9: add al, 0x48; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d48a9: add al, 0x48; or ecx, dword ptr [edx + 0xa]; ret; 
0x080c8dc5: add al, 0x48; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x080d1d7b: add al, 0x48; push cs; rol byte ptr [eax + ecx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1d25: add al, 0x48; push cs; rol byte ptr [ebx + ebx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c629f: add al, 0x49; or eax, dword ptr [ebx + 0xe]; or al, 0x46; ret; 
0x080c60bc: add al, 0x49; or eax, dword ptr [ebx]; xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x080c78bf: add al, 0x49; or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8e38: add al, 0x49; or ecx, dword ptr [esi + 0xa]; ret; 
0x080ce648: add al, 0x49; or edx, dword ptr [eax + 0xe]; or al, 0x46; ret; 
0x080cdceb: add al, 0x49; or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080d0145: add al, 0x49; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080d11db: add al, 0x49; push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080c8a42: add al, 0x4a; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cb5dc: add al, 0x4a; or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080d1497: add al, 0x4a; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d3cf2: add al, 0x4a; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d0490: add al, 0x4a; or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080c90b8: add al, 0x4a; or ecx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x080c6401: add al, 0x4a; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080c813c: add al, 0x4b; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d2e33: add al, 0x4b; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d552b: add al, 0x4b; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d608a: add al, 0x4b; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080ce1cd: add al, 0x4b; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x080c96e1: add al, 0x4b; push cs; adc byte ptr [ebx + 0x43028603], al; or cl, byte ptr [esi]; or al, 0x46; ret; 
0x080d41b3: add al, 0x4c; add byte ptr [eax], al; add byte ptr [eax + 0x640000f8], ah; iretd; cld; jmp dword ptr [esi]; 
0x080c7755: add al, 0x4c; or ebp, dword ptr [eax + 0xa]; ret; 
0x080ca6d6: add al, 0x4c; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8d4a: add al, 0x4c; or edx, dword ptr [eax + 0xe]; or al, 0x43; ret; 
0x080c7701: add al, 0x4c; or esp, dword ptr [ebp + 0xa]; ret; 
0x080d4495: add al, 0x4f; or eax, dword ptr [ecx + 0xa]; ret; 
0x080a9202: add al, 0x50; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08050fdf: add al, 0x50; push edx; push ebp; call ecx; 
0x08053490: add al, 0x50; push edx; push esi; call ecx; 
0x0806da29: add al, 0x51; push 3; push ebx; call edx; 
0x0805c7f2: add al, 0x51; push edx; push ebx; call eax; 
0x0808e28c: add al, 0x53; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0807e08d: add al, 0x53; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x0808856d: add al, 0x53; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x0808eb3a: add al, 0x53; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x080d564f: add al, 0x54; add byte ptr [eax], al; add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x080aa065: add al, 0x55; call edi; 
0x080ab462: add al, 0x55; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08082c8f: add al, 0x55; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x080504aa: add al, 0x55; push ecx; push edi; call dword ptr [edi + 0xc]; 
0x08050330: add al, 0x56; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x0808b8be: add al, 0x56; push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x0807e3e6: add al, 0x56; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08089e33: add al, 0x56; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0806d9e4: add al, 0x57; push 0; push ebx; call esi; 
0x0806d9f8: add al, 0x57; push 1; push ebx; call esi; 
0x0806da0b: add al, 0x57; push 2; push ebx; call esi; 
0x080848fe: add al, 0x57; push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x08053be9: add al, 0x57; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebx + 0x38]; 
0x0807d9ee: add al, 0x57; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a59d2: add al, 0x57; push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x08090651: add al, 0x5b; cmovne eax, ecx; ret; 
0x080d1d29: add al, 0x5b; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0805b67d: add al, 0x5b; pop edi; ret; 
0x080515d4: add al, 0x5b; pop esi; jmp eax; 
0x080a023d: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08049aa8: add al, 0x5b; pop esi; pop edi; ret; 
0x080496d6: add al, 0x5b; pop esi; ret; 
0x08055665: add al, 0x5b; ret; 
0x08075de2: add al, 0x5e; std; call dword ptr [eax - 0x73]; 
0x08065cdc: add al, 0x5f; ret; 
0x0809e522: add al, 0x65; sub eax, dword ptr [0]; ret; 
0x08065ce7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x08065e27: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x08064487: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x080645b7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08066909: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08066a69: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080662f9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x08066459: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0808eaca: add al, 0x6a; adc bh, bh; je 0x46af4; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x0808ed72: add al, 0x6a; adc bh, bh; je 0x46d9c; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x080567f0: add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x2c]; 
0x0809c9be: add al, 0x6a; and byte ptr [eax - 0x73], dl; inc edx; sbb byte ptr [ecx - 0x2576b], cl; call dword ptr [eax - 0x18]; 
0x08097c73: add al, 0x6b; ret 0x291d; 
0x080a2c48: add al, 0x6c; cli; dec dword ptr [ebp - 0x1606f7d]; call dword ptr [eax - 0x73]; 
0x08098edf: add al, 0x74; push ds; sub esp, 0xc; mov eax, 0x80daa24; push ebx; call dword ptr [eax]; 
0x08085a62: add al, 0x76; adc byte ptr [ebx + 0x6ae914c7], al; out 0xff, al; dec dword ptr [ebx + 0x3be88c5d]; mov ah, bh; call dword ptr [edx - 0x77]; 
0x08057390: add al, 0x77; lea ecx, [ebx + 0x1042454]; rol dword ptr [ebx - 0xcefb14], 0x29; ret 0x6a52; 
0x080cc61c: add al, 0x7d; add byte ptr [eax], al; adc bl, dh; std; jmp dword ptr [esi]; 
0x080cfae1: add al, 0x83; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf92d: add al, 0x83; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c600d: add al, 0x83; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce231: add al, 0x83; add eax, 0xa010803; ret; 
0x080d197d: add al, 0x83; add eax, 0xa010f03; ret; 
0x080cc421: add al, 0x83; add eax, 0xa011003; ret; 
0x080d2735: add al, 0x83; add eax, 0xa011903; ret; 
0x080d30d5: add al, 0x83; add eax, 0xa016603; ret; 
0x080d190d: add al, 0x83; add eax, 0xa016803; ret; 
0x080cb949: add al, 0x83; add eax, 0xa016d03; ret; 
0x080cacb9: add al, 0x83; add eax, 0xa017303; ret; 
0x080d1cbd: add al, 0x83; add eax, 0xa018103; ret; 
0x080cea81: add al, 0x83; add eax, 0xa018203; ret; 
0x080c66d1: add al, 0x83; add eax, 0xa018503; ret; 
0x080ce5f1: add al, 0x83; add eax, 0xa018803; ret; 
0x080cf591: add al, 0x83; add eax, 0xa01a403; ret; 
0x080c4f85: add al, 0x83; add eax, 0xa01eb03; ret; 
0x080c5429: add al, 0x83; add eax, 0xa01ec03; ret; 
0x080d193d: add al, 0x83; add eax, 0xa01ef03; ret; 
0x080c5a59: add al, 0x83; add eax, 0xa01f303; ret; 
0x080d2921: add al, 0x83; add eax, 0xa028f03; ret; 
0x080ccab1: add al, 0x83; add eax, 0xa02b103; ret; 
0x080d26f5: add al, 0x83; add eax, 0xa030e03; ret; 
0x080d26c5: add al, 0x83; add eax, 0xa031703; ret; 
0x080c4fb5: add al, 0x83; add eax, 0xa03a503; ret; 
0x080d4a29: add al, 0x83; add eax, 0xa04aa03; ret; 
0x080cece5: add al, 0x83; add eax, 0xa04fe03; ret; 
0x080d50c5: add al, 0x83; add eax, 0xa065403; ret; 
0x080cc729: add al, 0x83; add eax, 0xa07ab03; ret; 
0x080cf561: add al, 0x83; add eax, 0xa080503; ret; 
0x080cea51: add al, 0x83; add eax, 0xa0a1503; ret; 
0x0809f737: add al, 0x83; cli; add dword ptr [ecx - 0x7cbb81f9], ecx; ret; 
0x08079ab9: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08079dff: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a9612: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x080a6a08: add al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080a0fa2: add al, 0x83; les esp, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x080920cc: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x080920cf: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0804cbf6: add al, 0x83; ret 0x3908; 
0x08079c38: add al, 0x83; ret 0x5201; 
0x08074444: add al, 0x83; ret 0x8301; 
0x0806af02: add al, 0x83; ret 0x8304; 
0x0806f8d2: add al, 0x83; ret 0x8308; 
0x08052bca: add al, 0x83; ret 0x83ff; 
0x0805a7ff: add al, 0x83; ret 0x8501; 
0x0806af11: add al, 0x83; ret 0x8b04; 
0x0806f7c2: add al, 0x83; ret 0x8b08; 
0x0806f77a: add al, 0x83; ret 0xc608; 
0x080a4312: add al, 0x83; ret 0xf610; 
0x0806ddb3: add al, 0x83; ret; 
0x08073ba4: add al, 0x83; rol dword ptr [ecx], 0x83; ret 0x3904; 
0x0809fe8b: add al, 0x83; rol dword ptr [ecx], 0x89; dec esp; add byte ptr [ebx + eax*4], 0xc0; add dword ptr [ebp + 0x390475c9], eax; ret; 
0x0809fa83: add al, 0x83; rol dword ptr [ecx], 0x89; dec esp; xchg eax, ebx; add al, 0x83; ret 0x8501; 
0x0809ce83: add al, 0x85; leave; jne 0x54e60; pop ebx; ret; 
0x080a49d9: add al, 0x85; sal byte ptr [ebp + edx - 0x7d], cl; ret; 
0x08064476: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x08065cd6: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x08048be6: add al, 0x89; add al, bh; ret 0x9da8; 
0x08064479: add al, 0x89; clc; pop edi; ret; 
0x080a2b0c: add al, 0x89; dec ebp; in al, 0x8d; and byte ptr [eax - 0x64], 0xfe; call dword ptr [eax - 0x18]; 
0x0808ec15: add al, 0x89; fdivr st(7); jne 0x46bff; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0805e36a: add al, 0x89; fimul dword ptr [ecx + 0x2918245c]; ret 0x6a52; 
0x0807a6ba: add al, 0x89; fisttp word ptr [edi]; xchg eax, esp; ret; 
0x0808ad9c: add al, 0x89; inc cl; clc; add dl, byte ptr [eax + 0x57]; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x08052e04: add al, 0x89; inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x080661f7: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x08066436: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x08066496: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x08066a36: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x0805255a: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0808072b: add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x57]; 
0x080808eb: add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08082365: add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x08081e22: add al, 0x89; lea ebp, [ebx + edi*8 - 1]; dec dword ptr [ecx - 0x4976b]; call dword ptr [ecx + 0x6a]; 
0x0808c522: add al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x0808f7a2: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x0807e174: add al, 0x89; or byte ptr [ebx - 0x7ce976ee], cl; ret; 
0x08085b87: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0809b035: add al, 0x89; ret 0x458b; 
0x080755dc: add al, 0x89; ret 0x840f; 
0x0806e0d2: add al, 0x89; ret 0xe083; 
0x080758a8: add al, 0x89; ret 0xe183; 
0x0806e19d: add al, 0x89; ret 0xe283; 
0x0805cf79: add al, 0x89; ret 0xeac1; 
0x08049d76: add al, 0x89; ret; 
0x0807eb7d: add al, 0x89; xchg eax, ebp; dec esp; idiv edi; call dword ptr [edx + 0x56]; 
0x0807f494: add al, 0x89; xchg eax, ebp; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x08066439: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x080662d9: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0808f3c5: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0808f09b: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080a133b: add al, 0x8b; dec esi; or byte ptr [ebp - 0x1b82668], cl; inc dword ptr [ecx + 0xc9]; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x080a8ba3: add al, 0x8b; inc eax; dec eax; ret; 
0x080a8c13: add al, 0x8b; inc eax; dec esp; ret; 
0x08057da2: add al, 0x8b; inc eax; or al, 0x83; ret; 
0x080a8cb3: add al, 0x8b; inc eax; pop eax; ret; 
0x080a8c63: add al, 0x8b; inc eax; pop esp; ret; 
0x080a8c53: add al, 0x8b; inc eax; push eax; ret; 
0x080a8cc3: add al, 0x8b; inc eax; push esp; ret; 
0x0806e0cf: add al, 0x8b; inc ecx; add al, 0x89; ret 0xe083; 
0x08066499: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x08066339: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x08066a89: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08066479: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806e1e0: add al, 0x8b; inc edx; add al, 0x89; ret 0xe283; 
0x080a54a2: add al, 0x8b; inc esi; or byte ptr [ecx - 0x4016f7bf], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x08098fcf: add al, 0x8b; je 0x50ff7; adc bh, al; ret 0xa9f0; 
0x0809d170: add al, 0x8b; je 0x55198; and al, 0xc7; ret 0xbce0; 
0x0809ee32: add al, 0x8b; js 0x56e3e; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0806a2c7: add al, 0x8b; mov word ptr [ebx - 0x28ca0], cs; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x08089165: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x6a]; 
0x08088bf3: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x08089975: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88f73]; call dword ptr [ecx + 0x6a]; 
0x0808a0bd: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x89773]; call dword ptr [ecx + 0x6a]; 
0x0808991c: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8a373]; call dword ptr [edx + 0x6a]; 
0x080a8c43: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056c53: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b413: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x08094eda: add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x08090680: add al, 0x8d; adc byte ptr [eax + 0x76], 0xfb; dec dword ptr [ebp - 0x48fdf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080a2ace: add al, 0x8d; and byte ptr [eax - 0x64], 0xfe; call dword ptr [eax - 0x18]; 
0x08072dab: add al, 0x8d; and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x08065cd9: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x080667ea: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x08066a39: add al, 0x8d; inc edx; pop es; ret; 
0x0807038a: add al, 0x8d; outsb dx, byte ptr [esi]; add dword ptr [ebx - 0x2288e808], eax; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x080876a6: add al, 0x8d; sbb dword ptr [eax + 0x28], -2; call dword ptr [eax - 0x73]; 
0x0806ee07: add al, 0x8d; xchg eax, ecx; mov al, 0x4d; stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080488d1: add al, 0x90; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x08082e13: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080929f6: add al, 0x93; test eax, eax; jne 0x4a9c0; mov eax, edx; pop ebx; ret; 
0x080c5bec: add al, 0x94; clc; jmp dword ptr [ebx]; 
0x08093910: add al, 0xa; pop ebx; pop esi; ret; 
0x080cecea: add al, 0xa; ret; 
0x0807e089: add al, 0xb0; sub esp, 4; push ebx; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x0806ccca: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806eb05: add al, 0xb8; je 0x26b09; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08093305: add al, 0xb8; jp 0x4b309; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0805daea: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x080a00f1: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x0808d2bf: add al, 0xc1; std; add dl, byte ptr [ebp + 0x50]; push esi; call dword ptr [ecx + 0x1c]; 
0x0806bb4e: add al, 0xc7; ret 0xb900; 
0x08083c88: add al, 0xc7; ret 0xfff0; 
0x0809eb5f: add al, 0xc7; ret 0xfffc; 
0x08053b69: add al, 0xc7; ret; 
0x080ce21c: add al, 0xce; cli; call dword ptr [esi + 3]; 
0x080a61d0: add al, 0xe8; cli; sbb edi, edi; dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x0809309e: add al, 0xe8; in al, dx; mov edx, 0xc483fffd; adc al, 0x5b; pop esi; ret; 
0x0809e59a: add al, 0xe8; mov al, byte ptr [0x5a00005b]; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0807c3d3: add al, 0xe8; or eax, 0x81fffd3d; ret 0xdc27; 
0x0809e8f9: add al, 0xe8; rcl dword ptr [edi + edi*8 + 0x84389ff], 1; add esp, 0x28; pop ebx; ret; 
0x08092f98: add al, 0xe8; ret 0xfdbb; 
0x0807c97d: add al, 0xe9; ret; 
0x0806fcbe: add al, 0xf6; ret 0x8902; 
0x0804d672: add al, 0xf6; ret 0xfbf; 
0x08059761: add al, 0xf7; fsub dword ptr [ecx]; ret 0x5489; 
0x080920d2: add al, 0xf7; ret 0; 
0x08055b96: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x080559b3: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x08056361: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x080874c3: add al, 0xf; mov esi, 0xc75f2444; ret 0xfff0; 
0x08060a87: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x08058e78: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5189; 
0x08074162: add al, 0xf; test bh, ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x08099d3a: add al, 0xf; test byte ptr [edi + 0xd], dl; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x08091b6b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x080bdf29: add al, 0xfc; call dword ptr [eax + 4]; 
0x080d06dd: add al, 0xfc; jmp esi; 
0x080bdf45: add al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080bdea5: add al, 0xfc; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080bdf35: add al, 0xfc; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call eax; 
0x080bdf41: add al, 0xfc; ljmp [eax + 4]; cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080aada7: add al, 0xfd; call dword ptr [eax - 0x18]; 
0x08098a78: add al, 0xfd; cli; inc dword ptr [ecx + 0x41584c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x080a8e17: add al, 0xff; aaa; push 1; push 1; call eax; 
0x080a885f: add al, 0xff; aaa; push ecx; push 1; call eax; 
0x0805cbd2: add al, 0xff; je 0x14bfa; xor byte ptr [esi + 0x53], dl; call eax; 
0x080a5862: add al, 0xff; je 0x5d88a; xor al, 0x57; push esi; call dword ptr [ebx]; 
0x0804e6e2: add al, 0xff; je 0x670a; sbb al, 0x55; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e791: add al, 0xff; je 0x67b9; sbb al, 0x57; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e7fd: add al, 0xff; je 0x6825; sbb al, 0x57; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0805265e: add al, 0xff; je 0xa686; adc al, 0xff; je 0xa68a; adc al, 0x57; call dword ptr [ebx + 0x3c]; 
0x08053af4: add al, 0xff; je 0xbb1c; cmp al, 0x57; push ebp; call dword ptr [eax + 0x20]; 
0x0808ec3b: add al, 0xff; jne 0x46c23; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x080896b7: add al, 0xff; mov ch, 0x3c; idiv edi; call dword ptr [esi - 1]; 
0x080aa060: add al, 0xff; push dword ptr ss:[ebx + 4]; push ebp; call edi; 
0x080a924b: add al, 0xff; xor cl, byte ptr [ecx + 0x50102454]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x080a8916: add al, 0xff; xor ebp, dword ptr [edx + 0xa]; push 1; call eax; 
0x080d4dc1: add al, 1; add byte ptr [edi + esi*8 - 4], bl; call dword ptr [esi]; 
0x080a3368: add al, 1; ret 0x7eb; 
0x080922f8: add al, 1; ret 0xff85; 
0x08057396: add al, 1; rol dword ptr [ebx - 0xcefb14], 0x29; ret 0x6a52; 
0x080ca557: add al, 2; inc eax; ret; 
0x080cb91b: add al, 2; inc ebp; ret; 
0x080c76f3: add al, 2; jg 0x7f701; ret; 
0x080c7747: add al, 2; jg 0x7f755; ret; 
0x080c8fef: add al, 2; jle 0x80ffd; ret; 
0x080d17bb: add al, 2; js 0x897c9; ret; 
0x080c8e1b: add al, 2; mov dl, 0xa; ret; 
0x080ce38f: add al, 2; pop edx; ret; 
0x080d0d13: add al, 2; push eax; ret; 
0x080c8fa3: add al, 2; push edi; ret; 
0x080c9be7: add al, 2; stosb byte ptr es:[edi], al; ret; 
0x080c60bb: add al, 4; dec ecx; or eax, dword ptr [ebx]; xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x080d2704: add al, 4; inc ecx; or eax, dword ptr [ebx]; xlatb; add ecx, dword ptr [edx]; ret; 
0x080cf93f: add al, 4; inc edx; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6925: add al, 4; inc esi; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c6917: add al, 4; inc esp; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed7: add al, 4; inc esp; or ecx, dword ptr [edi + 0xa]; ret; 
0x0805c2de: add al, 5; add byte ptr [eax], al; lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x080ca75c: add al, 5; cli; call ebx; 
0x0804875a: add al, 8; push eax; call 0xb90; hlt; mov ebx, dword ptr [esp]; ret; 
0x080c7dcf: add al, ah; in eax, dx; clc; jmp dword ptr [eax]; 
0x080d0cf7: add al, ah; ret; 
0x080cb0d7: add al, al; add byte ptr [bx + si], al; xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x080d06d7: add al, al; mov ebp, 0x4a40000; cld; jmp esi; 
0x080bbe7f: add al, al; pop es; add byte ptr [eax], al; ret 7; 
0x080bbc7f: add al, al; push es; add byte ptr [eax], al; ret 6; 
0x080ce5d7: add al, al; pushfd; add byte ptr [eax], al; mov ah, 0xe3; cli; call dword ptr [ebx + 3]; 
0x080b8087: add al, al; sldt word ptr [eax]; ret; 
0x08048be8: add al, bh; ret 0x9da8; 
0x080c71cb: add al, bl; add byte ptr [eax], al; add byte ptr [eax + 0x2c000028], bh; aam 0xf8; call dword ptr [eax]; 
0x080c82ef: add al, bl; cmp dword ptr [eax], eax; add ah, cl; cmc; clc; call dword ptr [edx]; 
0x080cbef7: add al, bl; inc edx; cli; jmp dword ptr [ebp]; 
0x080d00ef: add al, bl; mov bh, 0; add byte ptr [edx + edi*8 - 5], cl; call dword ptr [ebp]; 
0x080d56ef: add al, bl; or eax, 0x167c0001; std; jmp dword ptr [edx + 8]; 
0x080d13ef: add al, bl; retf 0; or al, 0x1f; cld; jmp dword ptr [eax]; 
0x080d62ef: add al, bl; sbb dword ptr [ecx], eax; add byte ptr [edi + eax*2 - 3], bl; jmp dword ptr [edi]; 
0x080cc5e7: add al, bl; std; jmp dword ptr [ebx]; 
0x080d6128: add al, byte ptr [eax + 0x43140e0a]; ret; 
0x080d1c30: add al, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080d4ddc: add al, byte ptr [eax + 0xa]; ret; 
0x0808d6b8: add al, byte ptr [eax - 0x72fef3b2]; inc edx; add ecx, ebp; ret 0xfffe; 
0x08096783: add al, byte ptr [eax]; add bh, al; ret 0x9da8; 
0x08075647: add al, byte ptr [eax]; add bh, dh; ret 0xf800; 
0x08066ccf: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x08066cbe: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x08066c67: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x08066c78: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08066c89: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x080a573c: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax - 0x5f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080747ef: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [ebp + 0x5c], -3; call dword ptr [eax - 0x18]; 
0x08092eb1: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080ca761: add al, byte ptr [eax]; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x08092a0c: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x080a03bf: add al, byte ptr [eax]; add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x08092be1: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x0807c21e: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080a2699: add al, byte ptr [eax]; add byte ptr [ebp + 0x15c97], cl; add byte ptr [ecx], bh; ret 0x5589; 
0x0807563f: add al, byte ptr [eax]; add byte ptr [ebp - 0x1477f02e], al; add al, byte ptr [eax]; add bh, dh; ret 0xf800; 
0x080a21f9: add al, byte ptr [eax]; add byte ptr [ebp - 0x164f67d], cl; call dword ptr [eax - 0x73]; 
0x080742ee: add al, byte ptr [eax]; add byte ptr [ebp - 0x2a3dd7d], cl; call dword ptr [eax - 0x73]; 
0x0806fdbc: add al, byte ptr [eax]; add byte ptr [ebp - 0x2ae5a7d], cl; inc dword ptr [ebx - 0x4c72f314]; fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x08052ac3: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08094dc3: add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x0807ba9e: add al, byte ptr [eax]; add byte ptr [ebx - 0x1db73], cl; jmp dword ptr [ebx]; 
0x0807a153: add al, byte ptr [eax]; add byte ptr [ebx - 0x7bf0f901], al; ret; 
0x080a126c: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x08067643: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x080c2a65: add al, byte ptr [eax]; add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x08058ef7: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x0808d50a: add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x1d63c]; add ecx, ebx; jmp ecx; 
0x0804dc60: add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0xd2; mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x080512e1: add al, byte ptr [eax]; add byte ptr [edx + 1], ch; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x080984cb: add al, byte ptr [eax]; add dh, dh; ret 0x7508; 
0x0805ca50: add al, byte ptr [eax]; add dh, dh; ret; 
0x08070299: add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0807025a: add al, byte ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x080ac235: add al, byte ptr [eax]; add esp, 8; pop ebx; ret; 
0x080d596d: add al, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080c76b8: add al, byte ptr [ebp + 0xa]; ret; 
0x080c5421: add al, byte ptr [ebp + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa01ec03; ret; 
0x080c7129: add al, byte ptr [ebp + 0xe]; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x08056c2f: add al, byte ptr [ebp - 0xc0b8a40]; ret; 
0x0809d4e5: add al, byte ptr [ebp - 2]; call dword ptr [eax - 0x18]; 
0x0809d4e5: add al, byte ptr [ebp - 2]; call dword ptr [eax - 0x18]; popal; ret; 
0x080ccc3c: add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x0808fb8e: add al, byte ptr [ebx + 0x5e5b01e8]; ret; 
0x080a11d4: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x080c96e8: add al, byte ptr [ebx + 0xa]; push cs; or al, 0x46; ret; 
0x080d5c60: add al, byte ptr [ebx - 0x3c39383b]; ret 0xcc0; 
0x080c49c8: add al, byte ptr [ebx]; mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce498: add al, byte ptr [ebx]; pop es; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080ce425: add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x080cbfb8: add al, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d35d4: add al, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d1705: add al, byte ptr [ecx + 0xe]; or al, 0x83; add eax, dword ptr [edx]; inc ecx; ret; 
0x080d0cd5: add al, byte ptr [ecx + 0xe]; or al, 0x83; add eax, dword ptr [edx]; jle 0x88ce8; ret; 
0x080d1489: add al, byte ptr [ecx + 0xe]; or al, 0x83; add ebp, dword ptr [ebx + 0xa]; ret; 
0x080cecad: add al, byte ptr [ecx + 0xe]; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x080d0101: add al, byte ptr [ecx + 0xe]; or al, 0x83; add edi, dword ptr [edi + 0xa]; ret; 
0x080c8005: add al, byte ptr [ecx + 0xe]; or al, 0x83; add esi, dword ptr [eax + 0xa]; ret; 
0x080d36b5: add al, byte ptr [ecx + 0xe]; or al, 0x83; add esi, dword ptr [ebx + 0xa]; ret; 
0x080c8881: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa6d: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b1: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080d4dd1: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76ad: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d0199: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd11: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e1d: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76e9: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e01: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff45: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e31: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e11: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c8529: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba6d: add al, byte ptr [ecx + 0xe]; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0804cfe3: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x08079643: add al, byte ptr [ecx]; ret 0x953b; 
0x080cdaf0: add al, byte ptr [edi + 0x41140e0a]; ret; 
0x080c6aad: add al, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080ceb5c: add al, byte ptr [edi + 0xa]; ret; 
0x080c6c07: add al, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x080cfad9: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf925: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c6005: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce229: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa010803; ret; 
0x080d1975: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa010f03; ret; 
0x080cc419: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa011003; ret; 
0x080d272d: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa011903; ret; 
0x080d1905: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa016803; ret; 
0x080cb941: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa016d03; ret; 
0x080cacb1: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa017303; ret; 
0x080d1cb5: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa018103; ret; 
0x080cea79: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa018203; ret; 
0x080c66c9: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa018503; ret; 
0x080ce5e9: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa018803; ret; 
0x080cf589: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa01a403; ret; 
0x080d1935: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa01ef03; ret; 
0x080c5a51: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa01f303; ret; 
0x080d2919: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa028f03; ret; 
0x080c4fad: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa03a503; ret; 
0x080d4a21: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa04aa03; ret; 
0x080d50bd: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa065403; ret; 
0x080cc721: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa07ab03; ret; 
0x080cf559: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa080503; ret; 
0x080cea49: add al, byte ptr [edx + 0xd]; add eax, 0x86038743; add al, 0x83; add eax, 0xa0a1503; ret; 
0x080d26ed: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa030e03; ret; 
0x08092b74: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0x4aba0; ret; 
0x080d5800: add al, byte ptr [edx]; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7fc1: add al, byte ptr [edx]; inc ebx; ret; 
0x080ce405: add al, byte ptr [edx]; inc ecx; ret; 
0x080d5be4: add al, byte ptr [edx]; mov bh, 0xa; push cs; adc al, 0x43; ret; 
0x080d58c9: add al, byte ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8fc9: add al, byte ptr [edx]; pushal; ret; 
0x080ce458: add al, byte ptr [edx]; ror dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080ce5a3: add al, byte ptr [edx]; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ca6ac: add al, byte ptr [esi + 0x43140e0a]; ret; 
0x080d2098: add al, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x080cacea: add al, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x080c91ae: add al, byte ptr [esi + 0xa]; push cs; or al, 0x43; ret; 
0x08066cce: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0804eff5: add al, ch; adc eax, 0x5ffff99; add eax, 0x830008b0; in al, dx; adc al, 0xc7; ret; 
0x0805ea65: add al, ch; adc eax, 0x81fffe9d; ret; 
0x0809ce2f: add al, ch; fstp xword ptr [edx - 0x34fa0006]; rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x08070131: add al, ch; inc ebp; ret 0xffff; 
0x0805c75b: add al, ch; jmp dword ptr [ebx]; 
0x080a2afd: add al, ch; jns 0x5aa99; cld; call dword ptr [eax - 0x75]; 
0x08087afd: add al, ch; lea esi, [eax - 2]; inc dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x0805c1ea: add al, ch; mov al, byte ptr [0x5b000129]; ret; 
0x0805e9d8: add al, ch; mov byte ptr [0x81fffe9d], al; ret; 
0x080cfaff: add al, ch; mov cl, 0; add ah, cl; int1; sti; call dword ptr [eax + 1]; 
0x0806bb3f: add al, ch; mov eax, dword ptr [0x81fffe45]; ret 0xe4bb; 
0x0805e9bf: add al, ch; mov ebx, 0x81fffe9d; ret; 
0x0805e8bf: add al, ch; mov ebx, 0x81fffe9e; ret; 
0x08085b7f: add al, ch; or edx, dword ptr [eax - 0x3b7c0002]; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0805646c: add al, ch; out dx, al; xchg byte ptr [ecx], al; add byte ptr [ecx + 0x186093], cl; add bh, al; ret 0xa078; 
0x080792af: add al, ch; pop ebx; idiv ah; inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080701af: add al, ch; pop ebx; xchg ebp, edi; inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x080caaf7: add al, ch; push cs; cli; call dword ptr [ebx + 1]; 
0x0808e1d7: add al, ch; ret; 
0x080abce9: add al, ch; sar ebp, 0xff; inc edi; ret 0; 
0x080ca517: add al, ch; sar ecx, cl; call dword ptr [ebx]; 
0x0806ca8f: add al, ch; sub eax, dword ptr [esi]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x080a2a1f: add al, ch; wait; ret; 
0x0805ba57: add al, ch; xchg eax, ebx; fdivr st(7); jmp dword ptr [ebp - 0x7d]; 
0x080ced37: add al, cl; insd dword ptr es:[edi], dx; sti; call esp; 
0x080cbedf: add al, cl; jne 0x83ee3; add ah, cl; inc edx; cli; call dword ptr [ecx]; 
0x080ce459: add al, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d38df: add al, cl; out dx, eax; add byte ptr [eax], al; or al, 0xbf; cld; jmp dword ptr [esi + 3]; 
0x080d63df: add al, cl; sbb al, byte ptr [ecx]; add ah, ch; inc edi; std; jmp dword ptr [edx]; 
0x080c6f07: add al, dh; and eax, 0xd0940000; clc; call dword ptr [esi]; 
0x080d4207: add al, dh; clc; add byte ptr [eax], al; test bh, cl; cld; call dword ptr [ecx]; 
0x08058f92: add al, dh; dec dword ptr [ebp + 0x50030076]; or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x08058418: add al, dh; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x080c5464: add al, dh; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d50df: add al, dh; push es; std; jmp dword ptr [edi]; 
0x080d6207: add al, dh; sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x080d5e2f: add al, dh; xor al, 0xfd; call dword ptr [eax + 1]; 
0x080c5be7: add al, dl; adc al, byte ptr [eax]; add byte ptr [esp + edx*4], al; clc; jmp dword ptr [ebx]; 
0x080c4ce7: add al, dl; add eax, dword ptr [eax]; add ah, dh; dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x080c67e7: add al, dl; push ds; add byte ptr [eax], al; adc al, 0xbd; clc; jmp dword ptr [eax]; 
0x080d43ef: add al, dl; sar ah, 1; jmp dword ptr [edi]; 
0x080c70af: add al, dl; sar al, cl; jmp dword ptr [edi]; 
0x080560d7: add bh, al; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add bl, dh; ret; 
0x0804b535: add bh, al; inc ebp; sub byte ptr [eax], al; add byte ptr [eax], al; add bh, al; ret 0; 
0x080ca661: add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x0809dc98: add bh, al; inc esi; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0805575a: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0809b82f: add bh, al; inc esp; ret; 
0x080562eb: add bh, al; mov eax, 0xc7080daf; ret 0xb314; 
0x080c8484: add bh, al; push cs; adc al, 0x41; ret; 
0x0807106f: add bh, al; rcl byte ptr [edi + ebp*4], 0xd; or bh, al; ret 0xa9e4; 
0x0804b53c: add bh, al; ret 0; 
0x08096785: add bh, al; ret 0x9da8; 
0x0809ce99: add bh, al; ret 0xa068; 
0x08056477: add bh, al; ret 0xa078; 
0x080488eb: add bh, al; ret 0xa498; 
0x0804fc6f: add bh, al; ret 0xafc0; 
0x08052589: add bh, al; ret 0xb080; 
0x08087e9c: add bh, al; ret 0xb314; 
0x08048bd5: add bh, al; ret 0xb8c0; 
0x080a2bf7: add bh, al; ret 0xbcc8; 
0x0809cfcc: add bh, al; ret 0xbee0; 
0x0809ce39: add bh, al; ret 0xbee4; 
0x080a2b68: add bh, al; ret 0xbeec; 
0x0804ea97: add bh, al; ret 0xffe0; 
0x080a277f: add bh, al; ret; 
0x080536c5: add bh, al; rol al, 0xaf; or eax, 0x14c2c708; mov bl, 0xd; or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x0806fe26: add bh, al; rol byte ptr [eax - 0x41], 0xd; or byte ptr [edi], cl; xchg eax, ebp; ret 0x1089; 
0x08056ff3: add bh, al; sbb byte ptr [eax + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1860], 0; ret; 
0x080a1969: add bh, al; shl byte ptr [edi + edi*4 + 0xd], 8; mov eax, dword ptr [eax]; ret; 
0x0806ea5e: add bh, al; shl byte ptr [edi + edi*4 + 0xd], 8; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x0806fe49: add bh, al; shr byte ptr [eax - 0x41], 0xd; or byte ptr [edi], cl; xchg eax, esp; ret 0x1089; 
0x0807db49: add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x0804c75f: add bh, al; xbegin 0x8a004766; ret 0xbd89; 
0x0806ac52: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x0806aaae: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x08075659: add bh, bh; dec dword ptr [edi]; test byte ptr [eax - 0x8fffffd], al; ret 0; 
0x08073996: add bh, bh; je 0x2b9be; dec eax; push dword ptr [esp + 0x48]; call esi; 
0x08073e86: add bh, bh; je 0x2beae; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08074236: add bh, bh; je 0x2c25e; dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x08074746: add bh, bh; je 0x2c76e; pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x08074b24: add bh, bh; je 0x2cb4c; push eax; push dword ptr [esp + 0x50]; call edi; 
0x080750fa: add bh, bh; je 0x2d122; push esp; push dword ptr [esp + 0x54]; call edi; 
0x080759cb: add bh, bh; je 0x2d9f3; push esp; push dword ptr [esp + 0x54]; call edi; 
0x080766c9: add bh, bh; je 0x2e6f1; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x080772f6: add bh, bh; je 0x2f31e; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08077a2a: add bh, bh; je 0x2fa52; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08078226: add bh, bh; je 0x3024e; push esp; push dword ptr [esp + 0x54]; call edi; 
0x0807891b: add bh, bh; je 0x30943; pushal; push dword ptr [esp + 0x60]; call edi; 
0x080a5826: add bh, bh; je 0x5d84e; xor al, 0x56; push ebx; call eax; 
0x08090097: add bh, bh; jne 0x4806f; push eax; push esi; push ecx; call edi; 
0x08098135: add bh, bh; xor byte ptr [ebp - 0x1c88b79], cl; call dword ptr [eax - 0x18]; 
0x080d5584: add bh, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1652: add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080ced4e: add bh, byte ptr [eax + 0xa]; push cs; or al, 0x43; ret; 
0x080d17bc: add bh, byte ptr [eax + 0xa]; ret; 
0x080710d5: add bh, byte ptr [eax - 1]; ret; 
0x080cb5c8: add bh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x080cf290: add bh, byte ptr [ecx + 0x41140e0a]; ret; 
0x08088609: add bh, byte ptr [ecx]; ret 0x850f; 
0x080977d6: add bh, byte ptr [ecx]; ret 0x860f; 
0x08084b37: add bh, byte ptr [ecx]; ret 0x8c0f; 
0x080c76f4: add bh, byte ptr [edi + 0xa]; ret; 
0x080c748c: add bh, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d3d58: add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080d19c8: add bh, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8ff0: add bh, byte ptr [esi + 0xa]; ret; 
0x080c9eb7: add bh, byte ptr [esi + ecx + 4]; ret; 
0x0809ea6e: add bh, ch; jmp dword ptr [esi - 0x70]; 
0x080d3dd8: add bh, ch; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c5d61: add bh, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080710ca: add bh, dh; fadd st(7); ret 0xffe0; 
0x08075655: add bh, dh; ret 0; 
0x08067d15: add bh, dh; ret 0x3f; 
0x08075649: add bh, dh; ret 0xf800; 
0x0805e978: add bh, dh; ret 0xf; 
0x080ca68d: add bh, dl; call dword ptr [eax + 1]; 
0x080d071a: add bh, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0809333b: add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x0809332b: add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0809334b: add bl, al; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x080a27d0: add bl, bh; push esi; call dword ptr [ebx]; 
0x080cf63e: add bl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080cb285: add bl, byte ptr [eax + 0xa]; ret; 
0x080cfae8: add bl, byte ptr [ebp + 0xa]; ret; 
0x0808f7a6: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x08057040: add bl, byte ptr [ebx + 0x5e]; ret; 
0x080a87ed: add bl, byte ptr [ebx - 0x77]; inc esi; dec esp; pop esi; pop edi; ret; 
0x080d2018: add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d6076: add bl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080a969e: add bl, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x080c612f: add bl, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x080cadc6: add bl, byte ptr [esi + 0x41140e0a]; ret; 
0x0808f8f2: add bl, byte ptr [esi + 0x5f]; ret; 
0x080cc325: add bl, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080caa78: add bl, byte ptr [esi + 0xa]; ret; 
0x08075359: add bl, ch; fisttp dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x08088ec6: add bl, ch; jg 0x40e90; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0808a76f: add bl, ch; mov al, byte ptr [0xfe4599e8]; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x080c9570: add bl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08065c7f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f2f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806442f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080646bf: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x080487bf: add bl, dh; ret; 
0x080915ef: add byte ptr [0x1ff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080bc919: add byte ptr [0xfb357000], cl; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x0809150a: add byte ptr [0xff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091541: add byte ptr [0xfff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08083717: add byte ptr [0xfffe8ae9], ch; jmp dword ptr [esi - 0x70]; 
0x0809157a: add byte ptr [0xffff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0806c934: add byte ptr [0xfffff000], bh; ja 0x24940; pop ebx; ret; 
0x0806c964: add byte ptr [0xfffff000], bh; ja 0x24970; pop ebx; ret; 
0x0806ca72: add byte ptr [0xfffff000], bh; ja 0x24a90; add esp, 4; pop ebx; pop esi; ret; 
0x0806cac6: add byte ptr [0xfffff000], bh; ja 0x24b20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cb58: add byte ptr [0xfffff000], bh; ja 0x24b68; pop ebx; ret; 
0x0806cb96: add byte ptr [0xfffff000], bh; ja 0x24bf0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cc28: add byte ptr [0xfffff000], bh; ja 0x24c38; pop ebx; ret; 
0x0806cd50: add byte ptr [0xfffff000], bh; ja 0x24d78; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cdf0: add byte ptr [0xfffff000], bh; ja 0x24e10; add esp, 8; pop ebx; ret; 
0x0806ce3e: add byte ptr [0xfffff000], bh; ja 0x24e88; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806ceb0: add byte ptr [0xfffff000], bh; ja 0x24ec0; pop ebx; ret; 
0x0806d704: add byte ptr [0xfffff000], bh; ja 0x25710; pop ebx; ret; 
0x08093374: add byte ptr [0xfffff000], bh; ja 0x4b380; pop ebx; ret; 
0x080934d1: add byte ptr [0xfffff000], bh; ja 0x4b4f0; add esp, 4; pop ebx; pop esi; ret; 
0x080935f7: add byte ptr [0xfffff000], bh; ja 0x4b610; add esp, 4; pop ebx; pop esi; ret; 
0x080a1738: add byte ptr [0xfffff000], bh; ja 0x59748; pop ebx; ret; 
0x0806c8ab: add byte ptr [0xfffff001], bh; jae 0x290c0; ret; 
0x080cb061: add byte ptr [bx + si], al; cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x080cb0d9: add byte ptr [bx + si], al; xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x080d0423: add byte ptr [eax + 0x10000000], al; mov ebx, 0xff340000; sti; call ecx; 
0x080ceb23: add byte ptr [eax + 0x10000000], dl; mov byte ptr [0x42340000], al; sti; call dword ptr [eax]; 
0x0807c202: add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x080c5b77: add byte ptr [eax + 0x12], ah; add byte ptr [eax], al; inc esp; xchg eax, ebx; clc; jmp dword ptr [edx]; 
0x080c5b57: add byte ptr [eax + 0x12], al; add byte ptr [eax], al; xor al, 0x93; clc; jmp dword ptr [ecx]; 
0x0807c1df: add byte ptr [eax + 0x14], bh; call dword ptr gs:[0x10]; 
0x080d5657: add byte ptr [eax + 0x15], ch; std; call dword ptr [eax + 1]; 
0x080c8c6f: add byte ptr [eax + 0x19], dh; stc; jmp dword ptr [eax + 0xf]; 
0x080cf1af: add byte ptr [eax + 0x1c0000a8], bl; int 0xfd; jmp dword ptr [ebp]; 
0x080d6567: add byte ptr [eax + 0x1c], dl; add dword ptr [eax], eax; xchg eax, esp; dec edx; std; call dword ptr [eax + 1]; 
0x080d667f: add byte ptr [eax + 0x1d], ch; add dword ptr [eax], eax; pop esp; dec ebp; std; jmp dword ptr [ecx + 1]; 
0x080c6a77: add byte ptr [eax + 0x21], ah; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x080cb477: add byte ptr [eax + 0x22], bh; cli; jmp dword ptr [esi]; 
0x080cb60f: add byte ptr [eax + 0x23], ah; cli; jmp dword ptr [esi]; 
0x080c71cf: add byte ptr [eax + 0x2c000028], bh; aam 0xf8; call dword ptr [eax]; 
0x080cae9f: add byte ptr [eax + 0x2c000065], cl; push ss; cli; call eax; 
0x080c757f: add byte ptr [eax + 0x2c], ch; add byte ptr [eax], al; dec esp; fdivp st(0); call dword ptr [edx]; 
0x080cbcb7: add byte ptr [eax + 0x32], ch; cli; jmp dword ptr [esi]; 
0x080c7c5f: add byte ptr [eax + 0x33], cl; add byte ptr [eax], al; mov edi, fs; clc; jmp dword ptr [edi + 2]; 
0x080bc91b: add byte ptr [eax + 0x35], dh; sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080c7f5f: add byte ptr [eax + 0x36], cl; add byte ptr [eax], al; pushfd; out dx, eax; clc; call dword ptr [ebx]; 
0x080c934f: add byte ptr [eax + 0x3a], ah; stc; call dword ptr [eax]; 
0x080c8367: add byte ptr [eax + 0x3a], dl; add byte ptr [eax], al; push esp; idiv al; call dword ptr [edi]; 
0x080c845f: add byte ptr [eax + 0x3b], cl; add byte ptr [eax], al; lodsb al, byte ptr [esi]; clc; clc; call dword ptr [ecx]; 
0x080c79cf: add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x080c49a7: add byte ptr [eax + 0x3f], bh; clc; jmp dword ptr [esi + 2]; 
0x080d54c7: add byte ptr [eax + 0x400010b], dh; adc ch, bh; jmp dword ptr [ecx]; 
0x080c8a5f: add byte ptr [eax + 0x41], cl; add byte ptr [eax], al; mov word ptr [eax], cs; stc; call dword ptr [ecx + 0xa]; 
0x080a1349: add byte ptr [eax + 0x440fd285], al; rol edi, cl; ret; 
0x0806b62f: add byte ptr [eax + 0x450ff0e5], al; ret 0x67e9; 
0x080d20df: add byte ptr [eax + 0x52], al; cld; jmp dword ptr [esi + 0xa]; 
0x0805114e: add byte ptr [eax + 0x56], dl; call dword ptr [esi + 0x18]; 
0x080514ed: add byte ptr [eax + 0x56], dl; call dword ptr [esi + 4]; 
0x080aee1f: add byte ptr [eax + 0x59], dh; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x08056113: add byte ptr [eax + 0x5a], bl; pop ebx; ret; 
0x080cbc9f: add byte ptr [eax + 0x5c000073], cl; xor bh, dl; jmp dword ptr [eax]; 
0x080d4dbf: add byte ptr [eax + 0x5c000104], ch; idiv esp; call dword ptr [esi]; 
0x080ca587: add byte ptr [eax + 0x5c], dh; add byte ptr [eax], al; xor al, 0xd9; stc; call edx; 
0x080ca687: add byte ptr [eax + 0x5d], dh; add byte ptr [eax], al; adc al, 2; cli; call dword ptr [eax + 1]; 
0x080ca757: add byte ptr [eax + 0x5e], al; add byte ptr [eax], al; add al, 5; cli; call ebx; 
0x080c4fcf: add byte ptr [eax + 0x5e], al; clc; call edx; 
0x080d41b7: add byte ptr [eax + 0x640000f8], ah; iretd; cld; jmp dword ptr [esi]; 
0x080cb05f: add byte ptr [eax + 0x67], cl; add byte ptr [eax], al; cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x080a8b7f: add byte ptr [eax + 0x6c117c], al; je 0x60b65; add esp, 8; pop ebx; ret; 
0x080cba87: add byte ptr [eax + 0x71], dh; add byte ptr [eax], al; je 0x83abe; cli; jmp dword ptr [eax]; 
0x08066cd1: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x08066cc0: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x08066caf: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0805223f: add byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x08091e95: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08091e28: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08091e8b: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08098697: add byte ptr [eax + 0xf0], bh; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eba4: add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0806c38b: add byte ptr [eax + 1], bh; int 0x80; 
0x080608ef: add byte ptr [eax + 1], bh; ja 0x188f9; neg eax; ret; 
0x08060aaf: add byte ptr [eax + 1], bh; ja 0x18ab9; neg eax; ret; 
0x08092bcf: add byte ptr [eax + 1], bh; ret; 
0x080d0b63: add byte ptr [eax + 1], bl; add byte ptr [eax], al; push eax; ret 0; 
0x08092bdf: add byte ptr [eax + 2], bh; ret; 
0x08092bef: add byte ptr [eax + 3], bh; ret; 
0x08091dec: add byte ptr [eax + 4], bh; pop edi; ret; 
0x08092bff: add byte ptr [eax + 4], bh; ret; 
0x08092c0f: add byte ptr [eax + 5], bh; ret; 
0x08092c1f: add byte ptr [eax + 6], bh; ret; 
0x08092c2f: add byte ptr [eax + 7], bh; ret; 
0x080ca7e7: add byte ptr [eax + 7], ch; cli; jmp dword ptr [ebp]; 
0x08091e45: add byte ptr [eax + 8], bh; pop edi; ret; 
0x080c6a73: add byte ptr [eax + eax + 0x21600000], ch; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x080c49a3: add byte ptr [eax + eax + 0x3f780000], cl; clc; jmp dword ptr [esi + 2]; 
0x080c533f: add byte ptr [eax + eax + 0xa2c0000], bl; add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080d0ab3: add byte ptr [eax + eax - 0x3e600000], ch; add byte ptr [eax], al; xchg eax, esp; or edi, esp; jmp esi; 
0x080a95af: add byte ptr [eax + eax*8 - 0x3b7ce98b], al; or byte ptr [eax + 4], bh; pop ebx; ret; 
0x080d06d3: add byte ptr [eax + eax], ah; add al, al; mov ebp, 0x4a40000; cld; jmp esi; 
0x080c7c5b: add byte ptr [eax + eax], ah; add byte ptr [eax + 0x33], cl; add byte ptr [eax], al; mov edi, fs; clc; jmp dword ptr [edi + 2]; 
0x080d289b: add byte ptr [eax + eax], ah; add byte ptr [eax - 0x23ffff21], cl; xchg eax, edi; cld; call edx; 
0x080ce9cb: add byte ptr [eax + eax], ah; add byte ptr [eax - 0x33ffff60], bh; out dx, eax; cli; call edi; 
0x080cbf2b: add byte ptr [eax + eax], ah; add byte ptr [eax], al; sbb byte ptr [esi], dh; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080c6f03: add byte ptr [eax + eax], al; add al, dh; and eax, 0xd0940000; clc; call dword ptr [esi]; 
0x080d6203: add byte ptr [eax + eax], bh; add al, dh; sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x080cfdcb: add byte ptr [eax + eax], ch; add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x080d56eb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; fmul dword ptr [0x167c0001]; std; jmp dword ptr [edx + 8]; 
0x080c8fcf: add byte ptr [eax + eax], ch; add byte ptr [eax], al; mov esp, 0x28000046; xor bh, cl; call dword ptr [edi]; 
0x080d073b: add byte ptr [eax + eax], ch; add byte ptr [eax], ch; mov esi, 0x72c0000; cld; jmp edx; 
0x080c79cb: add byte ptr [eax + eax], dl; add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x080d5e27: add byte ptr [eax + eax], dl; add byte ptr [edx + 0x34f00001], dl; std; call dword ptr [eax + 1]; 
0x080d31bb: add byte ptr [eax + ebp*8 - 0x4c3b0000], ah; cld; jmp dword ptr [eax]; 
0x080d313b: add byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; aam 0xb3; cld; call dword ptr [edi]; 
0x080d3173: add byte ptr [eax + ebp*8], bl; add ch, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x0805c756: add byte ptr [eax + ecx - 0x73], dh; dec ebp; add al, ch; jmp dword ptr [ebx]; 
0x080c9173: add byte ptr [eax + ecx*2], bl; add byte ptr [eax], bl; aaa; stc; jmp dword ptr [ecx]; 
0x080cf373: add byte ptr [eax + ecx*4], cl; sti; call dword ptr [esi]; 
0x080d01cb: add byte ptr [eax + edi*4 - 0x4c00000], dh; sti; jmp dword ptr [esi]; 
0x080d54cb: add byte ptr [eax + edx], al; std; jmp dword ptr [ecx]; 
0x080cba8b: add byte ptr [eax + esi - 6], dh; jmp dword ptr [eax]; 
0x080c801f: add byte ptr [eax - 0x10], dl; clc; call dword ptr [eax + 1]; 
0x080d377f: add byte ptr [eax - 0x12], ch; add byte ptr [eax], al; sbb al, 0xbb; cld; call dword ptr [edi]; 
0x080d10bf: add byte ptr [eax - 0x13ffff39], ch; sbb edi, esp; call dword ptr [ebx]; 
0x0808db2f: add byte ptr [eax - 0x14bff3b2], al; ret 0x768d; 
0x08066c69: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x08098fb1: add byte ptr [eax - 0x18], dl; pushal; cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0807d906: add byte ptr [eax - 0x18], dl; ret; 
0x080c7af7: add byte ptr [eax - 0x1a], bl; clc; jmp dword ptr [edx]; 
0x080d2a5f: add byte ptr [eax - 0x1f], cl; add byte ptr [eax], al; sub al, 0xa4; cld; jmp dword ptr [edi]; 
0x0805e6e3: add byte ptr [eax - 0x22], 0xf8; dec dword ptr [ebp - 0x7213f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080d289f: add byte ptr [eax - 0x23ffff21], cl; xchg eax, edi; cld; call edx; 
0x08066c7a: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x080c72af: add byte ptr [eax - 0x28], ah; clc; jmp dword ptr [edi]; 
0x080c8fb7: add byte ptr [eax - 0x2bffffba], ah; xor ecx, edi; jmp dword ptr [edx]; 
0x080ce9cf: add byte ptr [eax - 0x33ffff60], bh; out dx, eax; cli; call edi; 
0x080d2edf: add byte ptr [eax - 0x34000000], al; in eax, 0; add byte ptr [eax - 0x56], cl; cld; call esp; 
0x080c86df: add byte ptr [eax - 0x34000000], cl; cmp eax, 0xfe980000; clc; call dword ptr [edi + 1]; 
0x080d3197: add byte ptr [eax - 0x36ffff18], al; mov bl, 0xfc; jmp dword ptr [eax]; 
0x08066c8b: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x080d3d37: add byte ptr [eax - 0x3b], bh; cld; call dword ptr [edi]; 
0x080d54d7: add byte ptr [eax - 0x3c000000], al; or eax, dword ptr [ecx]; add byte ptr [eax], ah; adc ch, bh; call dword ptr [esi]; 
0x0809116e: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x080c82af: add byte ptr [eax - 0x43ffffc7], bl; cmc; clc; call dword ptr [edi]; 
0x08080d2a: add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x08081cff: add byte ptr [eax - 0x4ab43], al; jmp dword ptr [eax]; 
0x080d344f: add byte ptr [eax - 0x4b], al; cld; call dword ptr [ebp]; 
0x080cf36f: add byte ptr [eax - 0x56], bl; add byte ptr [eax], al; or al, 0x88; sti; call dword ptr [esi]; 
0x080d2ee7: add byte ptr [eax - 0x56], cl; cld; call esp; 
0x080d5a97: add byte ptr [eax - 0x5bfffeef], al; xor ch, bh; call dword ptr [ecx]; 
0x080c83b7: add byte ptr [eax - 0x5bffffc6], ah; idiv al; call dword ptr [edi]; 
0x080cfdcf: add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x080cb6bf: add byte ptr [eax - 0x63ffff93], ch; and edi, edx; call dword ptr [edi]; 
0x080cafaf: add byte ptr [eax - 0x63ffff9a], bl; sbb edx, edi; jmp dword ptr [esi]; 
0x080c7faf: add byte ptr [eax - 0x63ffffca], bl; out dx, eax; clc; call dword ptr [eax]; 
0x080d0ab7: add byte ptr [eax - 0x6bffff3f], ah; or edi, esp; jmp esi; 
0x08070180: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; 
0x08070180: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x080a37ec: add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x62], -2; call dword ptr [eax - 0x18]; 
0x08050b30: add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + ebp], -3; call dword ptr [eax - 0x18]; 
0x08098a57: add byte ptr [eax - 0x73], dl; add dword ptr [ecx + edi], -2; call dword ptr [eax - 0x18]; 
0x080753b7: add byte ptr [eax - 0x73], dl; add eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x0806c34f: add byte ptr [eax - 0x73], dl; add esp, 0x43; std; call dword ptr [eax - 0x18]; 
0x08079ad1: add byte ptr [eax - 0x73], dl; and dword ptr [eax + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08071948: add byte ptr [eax - 0x73], dl; and dword ptr [ebx], 0x56; std; call dword ptr [eax - 0x18]; 
0x0809ba0d: add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x41], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807b00b: add byte ptr [eax - 0x73], dl; and dword ptr [ecx], 0x63; std; call dword ptr [eax - 0x18]; 
0x08073156: add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x56], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080a28da: add byte ptr [eax - 0x73], dl; and dword ptr [edx - 0x65], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807bf7a: add byte ptr [eax - 0x73], dl; and edi, 0x69; std; call dword ptr [eax - 0x18]; 
0x08057331: add byte ptr [eax - 0x73], dl; and esp, 0x29; std; call dword ptr [eax - 0x18]; 
0x0807bf5b: add byte ptr [eax - 0x73], dl; cmp esp, 0x69; std; call dword ptr [eax - 0x18]; 
0x080a573e: add byte ptr [eax - 0x73], dl; or dword ptr [eax - 0x5f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08073a2f: add byte ptr [eax - 0x73], dl; or dword ptr [edx + 0x5c], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08093e8d: add byte ptr [eax - 0x73], dl; or dword ptr [esi + 0x2f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0806c36e: add byte ptr [eax - 0x73], dl; or edi, 0x43; std; call dword ptr [eax - 0x18]; 
0x0806c216: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x08075319: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x5d; std; call dword ptr [eax - 0x18]; 
0x0809561c: add byte ptr [eax - 0x73], dl; sbb dword ptr [esp + esi], -2; call dword ptr [eax - 0x18]; 
0x0807bf3c: add byte ptr [eax - 0x73], dl; sbb ecx, 0x69; std; call dword ptr [eax - 0x18]; 
0x080747f1: add byte ptr [eax - 0x73], dl; sub dword ptr [ebp + 0x5c], -3; call dword ptr [eax - 0x18]; 
0x08073132: add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x56], -3; call dword ptr [eax - 0x18]; 
0x0806b734: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x40], edi; std; call dword ptr [eax - 0x18]; 
0x080a397a: add byte ptr [eax - 0x73], dl; xor dword ptr [ebp - 0x63], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08074b50: add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x5c; std; call dword ptr [eax - 0x18]; 
0x08075371: add byte ptr [eax - 0x73], dl; xor eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x080719d9: add byte ptr [eax - 0x77], dl; inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x080cae9b: add byte ptr [eax - 0x78000000], ch; add byte ptr gs:[eax], al; sub al, 0x16; cli; call eax; 
0x0807eacf: add byte ptr [eax - 0x89343], al; call dword ptr [ebx + 0xf]; 
0x080c837f: add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x080cc697: add byte ptr [eax - 0xbffff83], al; push ecx; cli; call dword ptr [ecx]; 
0x08083cb6: add byte ptr [eax - 0xf743], al; jmp dword ptr [esi + 0xf]; 
0x080562af: add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x08055b3f: add byte ptr [eax - 1], bh; ret; 
0x08071721: add byte ptr [eax - 1], dl; jbe 0x2972a; call edi; 
0x08074d14: add byte ptr [eax - 1], dl; je 0x2cd3d; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08077636: add byte ptr [eax - 1], dl; je 0x2f65f; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08078556: add byte ptr [eax - 1], dl; je 0x3057f; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x08079008: add byte ptr [eax - 1], dl; je 0x31031; dec esp; push dword ptr [esp + 0x4c]; call edi; 
0x080d01cf: add byte ptr [eax - 5], al; sti; jmp dword ptr [esi]; 
0x080d502f: add byte ptr [eax - 7], dl; cld; jmp dword ptr [esi]; 
0x080d54d8: add byte ptr [eax], 0; add ah, al; or eax, dword ptr [ecx]; add byte ptr [eax], ah; adc ch, bh; call dword ptr [esi]; 
0x080d2ee0: add byte ptr [eax], 0; add ah, cl; in eax, 0; add byte ptr [eax - 0x56], cl; cld; call esp; 
0x0805ea62: add byte ptr [eax], 0; add al, ch; adc eax, 0x81fffe9d; ret; 
0x080d1030: add byte ptr [eax], 0; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080c6f4c: add byte ptr [eax], 0; add byte ptr [eax], bh; add byte ptr es:[eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x080d0424: add byte ptr [eax], 0; add byte ptr [eax], dl; mov ebx, 0xff340000; sti; call ecx; 
0x0808847a: add byte ptr [eax], 0; add byte ptr [ebx - 0x6274f314], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x08089042: add byte ptr [eax], 0; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x0805032a: add byte ptr [eax], 0; add byte ptr [ebx - 0xa9fb14], al; jne 0x833d; push ecx; call dword ptr [ebx + 0x1c]; 
0x0806eb6d: add byte ptr [eax], 0; add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080ccb21: add byte ptr [eax], 0; mov word ptr [ebx - 6], gs; call dword ptr [edx]; 
0x080d54df: add byte ptr [eax], ah; adc ch, bh; call dword ptr [esi]; 
0x080d31b7: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax + ebp*8 - 0x4c3b0000], ah; cld; jmp dword ptr [eax]; 
0x080d316f: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax + ebp*8], bl; add ch, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080d3193: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax - 0x36ffff18], al; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080cb26f: add byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [ecx + ebp*2], bl; add byte ptr [eax], ch; sbb al, 0xfa; jmp dword ptr [esi]; 
0x080c958f: add byte ptr [eax], ah; inc ecx; stc; jmp edi; 
0x080d1637: add byte ptr [eax], ah; int 0; add ah, ah; and ah, bh; call edi; 
0x080cfa37: add byte ptr [eax], ah; mov cl, 0; add ah, al; out dx, eax; sti; jmp dword ptr [edx]; 
0x080cb737: add byte ptr [eax], ah; outsb dx, byte ptr [esi]; add byte ptr [eax], al; in al, 0x24; cli; call dword ptr [edx + 1]; 
0x080cb837: add byte ptr [eax], ah; outsd dx, dword ptr [esi]; add byte ptr [eax], al; xor al, 0x2b; cli; jmp dword ptr [edx]; 
0x080c8fba: add byte ptr [eax], al; aam 0x31; stc; jmp dword ptr [edx]; 
0x080c84ea: add byte ptr [eax], al; aam 0x3b; add byte ptr [eax], al; mov al, 0xf9; clc; call dword ptr [eax]; 
0x080d313e: add byte ptr [eax], al; aam 0xb3; cld; call dword ptr [edi]; 
0x080c77ba: add byte ptr [eax], al; aam 0xe2; clc; jmp dword ptr [edi]; 
0x080d43ea: add byte ptr [eax], al; aam 0xfa; add byte ptr [eax], al; rcl al, 1; cld; jmp dword ptr [edi]; 
0x080c832a: add byte ptr [eax], al; adc al, 0x3a; add byte ptr [eax], al; adc dh, dh; clc; jmp dword ptr [ecx]; 
0x080cf72a: add byte ptr [eax], al; adc al, 0xae; add byte ptr [eax], al; mov al, 0xe2; sti; call dword ptr [esi]; 
0x080c67ea: add byte ptr [eax], al; adc al, 0xbd; clc; jmp dword ptr [eax]; 
0x080ca68a: add byte ptr [eax], al; adc al, 2; cli; call dword ptr [eax + 1]; 
0x080bc916: add byte ptr [eax], al; adc al, byte ptr [eax]; or eax, 0xfb357000; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080cc61e: add byte ptr [eax], al; adc bl, dh; std; jmp dword ptr [esi]; 
0x080c83b2: add byte ptr [eax], al; adc byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xa400003a]; idiv al; call dword ptr [edi]; 
0x080cbc9a: add byte ptr [eax], al; adc byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ebx], dh; add byte ptr [edx + esi - 6], bl; jmp dword ptr [eax]; 
0x080cb626: add byte ptr [eax], al; adc byte ptr [ebp], ch; add byte ptr [ebx - 6], dh; jmp dword ptr [esi]; 
0x080d0426: add byte ptr [eax], al; adc byte ptr [ebx - 0xcc0000], bh; sti; call ecx; 
0x080d5c26: add byte ptr [eax], al; adc byte ptr [ebx], dl; add dword ptr [eax], eax; xchg eax, esp; xor ebp, edi; jmp dword ptr [esi]; 
0x080ceb26: add byte ptr [eax], al; adc byte ptr [edx + 0x42340000], ah; sti; call dword ptr [eax]; 
0x080c832e: add byte ptr [eax], al; adc dh, dh; clc; jmp dword ptr [ecx]; 
0x080d54d9: add byte ptr [eax], al; add ah, al; or eax, dword ptr [ecx]; add byte ptr [eax], ah; adc ch, bh; call dword ptr [esi]; 
0x080c7ff1: add byte ptr [eax], al; add ah, bl; add byte ptr ss:[eax], al; sbb al, dh; clc; call dword ptr [edi]; 
0x080d04f1: add byte ptr [eax], al; add ah, bl; mov ebx, 0xff980000; sti; call dword ptr [ecx + 1]; 
0x080c7af1: add byte ptr [eax], al; add ah, bl; xor dword ptr [eax], eax; add byte ptr [eax - 0x1a], bl; clc; jmp dword ptr [edx]; 
0x080c86e1: add byte ptr [eax], al; add ah, cl; cmp eax, 0xfe980000; clc; call dword ptr [edi + 1]; 
0x080d2ee1: add byte ptr [eax], al; add ah, cl; in eax, 0; add byte ptr [eax - 0x56], cl; cld; call esp; 
0x080cc5e1: add byte ptr [eax], al; add ah, cl; jl 0x845e7; add al, bl; std; jmp dword ptr [ebx]; 
0x080cc61a: add byte ptr [eax], al; add al, 0x7d; add byte ptr [eax], al; adc bl, dh; std; jmp dword ptr [esi]; 
0x080c5bea: add byte ptr [eax], al; add al, 0x94; clc; jmp dword ptr [ebx]; 
0x080ce21a: add byte ptr [eax], al; add al, 0xce; cli; call dword ptr [esi + 3]; 
0x080ca75a: add byte ptr [eax], al; add al, 5; cli; call ebx; 
0x080d0cf5: add byte ptr [eax], al; add al, ah; ret; 
0x080cb0d5: add byte ptr [eax], al; add al, al; add byte ptr [bx + si], al; xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x080d06d5: add byte ptr [eax], al; add al, al; mov ebp, 0x4a40000; cld; jmp esi; 
0x080c71c9: add byte ptr [eax], al; add al, bl; add byte ptr [eax], al; add byte ptr [eax + 0x2c000028], bh; aam 0xf8; call dword ptr [eax]; 
0x080d00ed: add byte ptr [eax], al; add al, bl; mov bh, 0; add byte ptr [edx + edi*8 - 5], cl; call dword ptr [ebp]; 
0x080d56ed: add byte ptr [eax], al; add al, bl; or eax, 0x167c0001; std; jmp dword ptr [edx + 8]; 
0x080d13ed: add byte ptr [eax], al; add al, bl; retf 0; or al, 0x1f; cld; jmp dword ptr [eax]; 
0x080c2a62: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x0805ea63: add byte ptr [eax], al; add al, ch; adc eax, 0x81fffe9d; ret; 
0x0807012f: add byte ptr [eax], al; add al, ch; inc ebp; ret 0xffff; 
0x080a2afb: add byte ptr [eax], al; add al, ch; jns 0x5aa99; cld; call dword ptr [eax - 0x75]; 
0x0805e9d6: add byte ptr [eax], al; add al, ch; mov byte ptr [0x81fffe9d], al; ret; 
0x0806bb3d: add byte ptr [eax], al; add al, ch; mov eax, dword ptr [0x81fffe45]; ret 0xe4bb; 
0x0805e9bd: add byte ptr [eax], al; add al, ch; mov ebx, 0x81fffe9d; ret; 
0x0805e8bd: add byte ptr [eax], al; add al, ch; mov ebx, 0x81fffe9e; ret; 
0x080abce7: add byte ptr [eax], al; add al, ch; sar ebp, 0xff; inc edi; ret 0; 
0x0806ca8d: add byte ptr [eax], al; add al, ch; sub eax, dword ptr [esi]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0805ba55: add byte ptr [eax], al; add al, ch; xchg eax, ebx; fdivr st(7); jmp dword ptr [ebp - 0x7d]; 
0x080c6f05: add byte ptr [eax], al; add al, dh; and eax, 0xd0940000; clc; call dword ptr [esi]; 
0x080d6205: add byte ptr [eax], al; add al, dh; sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x080c5be5: add byte ptr [eax], al; add al, dl; adc al, byte ptr [eax]; add byte ptr [esp + edx*4], al; clc; jmp dword ptr [ebx]; 
0x080562e9: add byte ptr [eax], al; add bh, al; mov eax, 0xc7080daf; ret 0xb314; 
0x0807106d: add byte ptr [eax], al; add bh, al; rcl byte ptr [edi + ebp*4], 0xd; or bh, al; ret 0xa9e4; 
0x0804b53a: add byte ptr [eax], al; add bh, al; ret 0; 
0x0804fc6d: add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x08048bd3: add byte ptr [eax], al; add bh, al; ret 0xb8c0; 
0x080a2bf5: add byte ptr [eax], al; add bh, al; ret 0xbcc8; 
0x0809cfca: add byte ptr [eax], al; add bh, al; ret 0xbee0; 
0x080a2b66: add byte ptr [eax], al; add bh, al; ret 0xbeec; 
0x080a277d: add byte ptr [eax], al; add bh, al; ret; 
0x0807db47: add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08098133: add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c88b79], cl; call dword ptr [eax - 0x18]; 
0x08067d13: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x08093339: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x08093329: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x08093349: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x08088ec4: add byte ptr [eax], al; add bl, ch; jg 0x40e90; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x08065f2d: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x080646bd: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x080487bd: add byte ptr [eax], al; add bl, dh; ret; 
0x08091508: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809153f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091578: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0806c932: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x24940; pop ebx; ret; 
0x0806c962: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x24970; pop ebx; ret; 
0x0806cb56: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x24b68; pop ebx; ret; 
0x0806cc26: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x24c38; pop ebx; ret; 
0x0806cdee: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x24e10; add esp, 8; pop ebx; ret; 
0x0806ceae: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x24ec0; pop ebx; ret; 
0x0806d702: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x25710; pop ebx; ret; 
0x08093372: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x4b380; pop ebx; ret; 
0x080a1736: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x59748; pop ebx; ret; 
0x0806c8a9: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x290c0; ret; 
0x080c5b55: add byte ptr [eax], al; add byte ptr [eax + 0x12], al; add byte ptr [eax], al; xor al, 0x93; clc; jmp dword ptr [ecx]; 
0x0807c1dd: add byte ptr [eax], al; add byte ptr [eax + 0x14], bh; call dword ptr gs:[0x10]; 
0x080cf1ad: add byte ptr [eax], al; add byte ptr [eax + 0x1c0000a8], bl; int 0xfd; jmp dword ptr [ebp]; 
0x080c6a75: add byte ptr [eax], al; add byte ptr [eax + 0x21], ah; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x080c71cd: add byte ptr [eax], al; add byte ptr [eax + 0x2c000028], bh; aam 0xf8; call dword ptr [eax]; 
0x080cae9d: add byte ptr [eax], al; add byte ptr [eax + 0x2c000065], cl; push ss; cli; call eax; 
0x080c757d: add byte ptr [eax], al; add byte ptr [eax + 0x2c], ch; add byte ptr [eax], al; dec esp; fdivp st(0); call dword ptr [edx]; 
0x080c7c5d: add byte ptr [eax], al; add byte ptr [eax + 0x33], cl; add byte ptr [eax], al; mov edi, fs; clc; jmp dword ptr [edi + 2]; 
0x080c8365: add byte ptr [eax], al; add byte ptr [eax + 0x3a], dl; add byte ptr [eax], al; push esp; idiv al; call dword ptr [edi]; 
0x080c79cd: add byte ptr [eax], al; add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x080c49a5: add byte ptr [eax], al; add byte ptr [eax + 0x3f], bh; clc; jmp dword ptr [esi + 2]; 
0x080d54c5: add byte ptr [eax], al; add byte ptr [eax + 0x400010b], dh; adc ch, bh; jmp dword ptr [ecx]; 
0x080a1347: add byte ptr [eax], al; add byte ptr [eax + 0x440fd285], al; rol edi, cl; ret; 
0x0806b62d: add byte ptr [eax], al; add byte ptr [eax + 0x450ff0e5], al; ret 0x67e9; 
0x0805114c: add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 0x18]; 
0x080514eb: add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 4]; 
0x080aee1d: add byte ptr [eax], al; add byte ptr [eax + 0x59], dh; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x08056111: add byte ptr [eax], al; add byte ptr [eax + 0x5a], bl; pop ebx; ret; 
0x080cbc9d: add byte ptr [eax], al; add byte ptr [eax + 0x5c000073], cl; xor bh, dl; jmp dword ptr [eax]; 
0x080d4dbd: add byte ptr [eax], al; add byte ptr [eax + 0x5c000104], ch; idiv esp; call dword ptr [esi]; 
0x080ca585: add byte ptr [eax], al; add byte ptr [eax + 0x5c], dh; add byte ptr [eax], al; xor al, 0xd9; stc; call edx; 
0x080ca685: add byte ptr [eax], al; add byte ptr [eax + 0x5d], dh; add byte ptr [eax], al; adc al, 2; cli; call dword ptr [eax + 1]; 
0x080d41b5: add byte ptr [eax], al; add byte ptr [eax + 0x640000f8], ah; iretd; cld; jmp dword ptr [esi]; 
0x080cb05d: add byte ptr [eax], al; add byte ptr [eax + 0x67], cl; add byte ptr [eax], al; cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x080a8b7d: add byte ptr [eax], al; add byte ptr [eax + 0x6c117c], al; je 0x60b65; add esp, 8; pop ebx; ret; 
0x080cba85: add byte ptr [eax], al; add byte ptr [eax + 0x71], dh; add byte ptr [eax], al; je 0x83abe; cli; jmp dword ptr [eax]; 
0x08066cad: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x08091e93: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08091e26: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08091e89: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08098695: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eba2: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0806c389: add byte ptr [eax], al; add byte ptr [eax + 1], bh; int 0x80; 
0x080608ed: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x188f9; neg eax; ret; 
0x08060aad: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x18ab9; neg eax; ret; 
0x08092bcd: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x08092bdd: add byte ptr [eax], al; add byte ptr [eax + 2], bh; ret; 
0x08092bed: add byte ptr [eax], al; add byte ptr [eax + 3], bh; ret; 
0x08091dea: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x08092bfd: add byte ptr [eax], al; add byte ptr [eax + 4], bh; ret; 
0x08092c0d: add byte ptr [eax], al; add byte ptr [eax + 5], bh; ret; 
0x08092c1d: add byte ptr [eax], al; add byte ptr [eax + 6], bh; ret; 
0x08092c2d: add byte ptr [eax], al; add byte ptr [eax + 7], bh; ret; 
0x08091e43: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x080c49a1: add byte ptr [eax], al; add byte ptr [eax + eax + 0x3f780000], cl; clc; jmp dword ptr [esi + 2]; 
0x080d0ab1: add byte ptr [eax], al; add byte ptr [eax + eax - 0x3e600000], ch; add byte ptr [eax], al; xchg eax, esp; or edi, esp; jmp esi; 
0x080ce9c9: add byte ptr [eax], al; add byte ptr [eax + eax], ah; add byte ptr [eax - 0x33ffff60], bh; out dx, eax; cli; call edi; 
0x080d56e9: add byte ptr [eax], al; add byte ptr [eax + eax], ch; add byte ptr [eax], al; fmul dword ptr [0x167c0001]; std; jmp dword ptr [edx + 8]; 
0x080d31b9: add byte ptr [eax], al; add byte ptr [eax + ebp*8 - 0x4c3b0000], ah; cld; jmp dword ptr [eax]; 
0x080d3139: add byte ptr [eax], al; add byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; aam 0xb3; cld; call dword ptr [edi]; 
0x080d3171: add byte ptr [eax], al; add byte ptr [eax + ebp*8], bl; add ch, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080d377d: add byte ptr [eax], al; add byte ptr [eax - 0x12], ch; add byte ptr [eax], al; sbb al, 0xbb; cld; call dword ptr [edi]; 
0x080d10bd: add byte ptr [eax], al; add byte ptr [eax - 0x13ffff39], ch; sbb edi, esp; call dword ptr [ebx]; 
0x0808db2d: add byte ptr [eax], al; add byte ptr [eax - 0x14bff3b2], al; ret 0x768d; 
0x080d2a5d: add byte ptr [eax], al; add byte ptr [eax - 0x1f], cl; add byte ptr [eax], al; sub al, 0xa4; cld; jmp dword ptr [edi]; 
0x080d289d: add byte ptr [eax], al; add byte ptr [eax - 0x23ffff21], cl; xchg eax, edi; cld; call edx; 
0x080c8fb5: add byte ptr [eax], al; add byte ptr [eax - 0x2bffffba], ah; xor ecx, edi; jmp dword ptr [edx]; 
0x080ce9cd: add byte ptr [eax], al; add byte ptr [eax - 0x33ffff60], bh; out dx, eax; cli; call edi; 
0x080d3195: add byte ptr [eax], al; add byte ptr [eax - 0x36ffff18], al; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080c82ad: add byte ptr [eax], al; add byte ptr [eax - 0x43ffffc7], bl; cmc; clc; call dword ptr [edi]; 
0x080d5a95: add byte ptr [eax], al; add byte ptr [eax - 0x5bfffeef], al; xor ch, bh; call dword ptr [ecx]; 
0x080c83b5: add byte ptr [eax], al; add byte ptr [eax - 0x5bffffc6], ah; idiv al; call dword ptr [edi]; 
0x080cfdcd: add byte ptr [eax], al; add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x080cb6bd: add byte ptr [eax], al; add byte ptr [eax - 0x63ffff93], ch; and edi, edx; call dword ptr [edi]; 
0x080cafad: add byte ptr [eax], al; add byte ptr [eax - 0x63ffff9a], bl; sbb edx, edi; jmp dword ptr [esi]; 
0x080d0ab5: add byte ptr [eax], al; add byte ptr [eax - 0x6bffff3f], ah; or edi, esp; jmp esi; 
0x0807017e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; 
0x0807017e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x080a37ea: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x62], -2; call dword ptr [eax - 0x18]; 
0x0806c34d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add esp, 0x43; std; call dword ptr [eax - 0x18]; 
0x08079acf: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [eax + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08071946: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ebx], 0x56; std; call dword ptr [eax - 0x18]; 
0x0809ba0b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x41], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807b009: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx], 0x63; std; call dword ptr [eax - 0x18]; 
0x080a28d8: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [edx - 0x65], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0805732f: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and esp, 0x29; std; call dword ptr [eax - 0x18]; 
0x0806c36c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or edi, 0x43; std; call dword ptr [eax - 0x18]; 
0x0806c214: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x080a3978: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [ebp - 0x63], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080cc695: add byte ptr [eax], al; add byte ptr [eax - 0xbffff83], al; push ecx; cli; call dword ptr [ecx]; 
0x080562ad: add byte ptr [eax], al; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x08055b3d: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x08079006: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x31031; dec esp; push dword ptr [esp + 0x4c]; call edi; 
0x080d1635: add byte ptr [eax], al; add byte ptr [eax], ah; int 0; add ah, ah; and ah, bh; call edi; 
0x080c2a60: add byte ptr [eax], al; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x080abaa5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x08056ff8: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1860], 0; ret; 
0x080b8eb2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x080b93a2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x33; 
0x08057002: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0805c286: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0806eb96: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0809808b: add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x08092bac: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 3; ret; 
0x0809e502: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0805575e: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x080abaa7: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0805da84: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0806787c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x08067dfc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x0806788c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0806789c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0806786c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08067e0c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08067e1c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x080592dc: add byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x080baedc: add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x080ba08c: add byte ptr [eax], al; add byte ptr [eax], al; call esp; 
0x080cb615: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca575: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6302], al; ret; 
0x080ce171: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d1089: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1031: add byte ptr [eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x0808176c: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x08062095: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a2c0; pop ebx; ret; 
0x08062152: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a2e0; pop ebx; ret; 
0x080626d3: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1ae50; pop ebx; ret; 
0x0806250c: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1ae66; pop ebx; ret; 
0x08066ebc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ecc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066edc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066eec: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066efc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066e3c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x08066e4c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08066e5c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08066e6c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08066e7c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08066e8c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08066e9c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x08066eac: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x0809141c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xa]; pop edi; ret; 
0x0809140c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xb]; pop edi; ret; 
0x080913fc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913ec: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xe]; pop edi; ret; 
0x0809148c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 1]; pop edi; ret; 
0x0809147c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 2]; pop edi; ret; 
0x0809146c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 3]; pop edi; ret; 
0x0809145c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 5]; pop edi; ret; 
0x0809144c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 6]; pop edi; ret; 
0x0809143c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 7]; pop edi; ret; 
0x0809142c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 9]; pop edi; ret; 
0x08066e2c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi]; pop edi; ret; 
0x08067bcc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 0xa]; ret; 
0x08067bdc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 0xc]; ret; 
0x08067bec: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 0xd]; ret; 
0x08067bfc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 0xe]; ret; 
0x08067b5c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08067b6c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 2]; ret; 
0x08067b7c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 4]; ret; 
0x08067b8c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 5]; ret; 
0x08067b9c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 6]; ret; 
0x08067bac: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 8]; ret; 
0x08067bbc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 9]; ret; 
0x08092ba6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; add eax, 3; ret; 
0x08066e36: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edi + 1]; pop edi; ret; 
0x08066e26: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edi]; pop edi; ret; 
0x08067bc6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xa]; ret; 
0x08067bd6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xc]; ret; 
0x08067be6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xd]; ret; 
0x08067bf6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xe]; ret; 
0x08067b55: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 1]; ret; 
0x08067b66: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 2]; ret; 
0x08067b76: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 4]; ret; 
0x08067b86: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 5]; ret; 
0x08067b96: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 6]; ret; 
0x08067ba6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 8]; ret; 
0x08067bb6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 9]; ret; 
0x080562a6: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08056ed5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, 0xffffffff; ret; 
0x08092bc5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, 1; ret; 
0x0809e516: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x08056f25: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ca5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a1d06: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; ret 4; 
0x080561f5: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; xor eax, eax; ret; 
0x08056c3c: add byte ptr [eax], al; add byte ptr [eax], al; lea edx, [eax + 0x30]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x08065dcc: add byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0806455c: add byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x08065ddc: add byte ptr [eax], al; add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806456c: add byte ptr [eax], al; add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x08056ffa: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1860], 0; ret; 
0x0808054d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp - 0x4d0], ecx; jmp eax; 
0x080562ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08055b3c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x080608ec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ja 0x188f9; neg eax; ret; 
0x08060aac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ja 0x18ab9; neg eax; ret; 
0x08092bcc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x08092bdc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; ret; 
0x08092bec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x08092bfc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 4; ret; 
0x08092c0c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 5; ret; 
0x08092c1c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 6; ret; 
0x08092c2c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 7; ret; 
0x0809e51c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0809a7b4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x08099d44: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0808ac7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x080a6d5c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080a960c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; add esp, 8; pop ebx; ret; 
0x08091d8c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0808fd4c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x08056f2c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8c0c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8cbc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8cac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c5c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080a8c3c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056f3c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x080674cc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x08050d54: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [ebp + 0x54]; sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x08048907: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0806eb97: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080998c4: add byte ptr [eax], al; add byte ptr [eax], al; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edi]; call eax; 
0x08065f2c: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x080646bc: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x08080669: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x0806084c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x080ae09c: add byte ptr [eax], al; add byte ptr [eax], al; nop; push ss; stc; jmp dword ptr [eax + 0x16]; 
0x08056110: add byte ptr [eax], al; add byte ptr [eax], al; pop eax; pop edx; pop ebx; ret; 
0x080561ce: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0806238c: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x080a880c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0806ce9c: add byte ptr [eax], al; add byte ptr [eax], al; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080b9eac: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d4; 
0x080ba644: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d5; 
0x080b8eb4: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x080b93a4: add byte ptr [eax], al; add byte ptr [eax], al; ret 0x33; 
0x080a1d0c: add byte ptr [eax], al; add byte ptr [eax], al; ret 4; 
0x08057004: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080b8eac: add byte ptr [eax], al; add byte ptr [eax], al; shl dword ptr [eax + eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x080a915c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x0805c99c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x0805d09c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x34]; push ebp; call eax; 
0x0809ee8c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x08066f0c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080561fc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x080c6f4d: add byte ptr [eax], al; add byte ptr [eax], bh; add byte ptr es:[eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x080d0d4d: add byte ptr [eax], al; add byte ptr [eax], bh; les eax, ptr [eax]; add ah, cl; adc al, 0xfc; jmp dword ptr [edi]; 
0x0806f05d: add byte ptr [eax], al; add byte ptr [eax], bh; ret; 
0x080c8fb1: add byte ptr [eax], al; add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax - 0x2bffffba], ah; xor ecx, edi; jmp dword ptr [edx]; 
0x080cbf2d: add byte ptr [eax], al; add byte ptr [eax], bl; jbe 0x83f33; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080c833d: add byte ptr [eax], al; add byte ptr [eax], ch; cmp al, byte ptr [eax]; add byte ptr [esi + esi*8], ch; clc; call dword ptr [edi]; 
0x080cfd3d: add byte ptr [eax], al; add byte ptr [eax], ch; mov ah, 0; add byte ptr [esi + esi*8], bh; sti; jmp dword ptr [edi]; 
0x080d073d: add byte ptr [eax], al; add byte ptr [eax], ch; mov esi, 0x72c0000; cld; jmp edx; 
0x080c543d: add byte ptr [eax], al; add byte ptr [eax], ch; or eax, dword ptr [eax]; add ah, ch; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080ccb1d: add byte ptr [eax], al; add byte ptr [eax], cl; add byte ptr [eax], 0; mov word ptr [ebx - 6], gs; call dword ptr [edx]; 
0x080c83b1: add byte ptr [eax], al; add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax - 0x5bffffc6], ah; idiv al; call dword ptr [edi]; 
0x080c839d: add byte ptr [eax], al; add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edx + edi - 0x9680000], cl; clc; call dword ptr [edi]; 
0x080ceb25: add byte ptr [eax], al; add byte ptr [eax], dl; mov byte ptr [0x42340000], al; sti; call dword ptr [eax]; 
0x080d0425: add byte ptr [eax], al; add byte ptr [eax], dl; mov ebx, 0xff340000; sti; call ecx; 
0x0806c8fa: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x080a475f: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x2c; ret; 
0x08062e3a: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x080937da: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x08056c3d: add byte ptr [eax], al; add byte ptr [ebp + 0x18b3050], cl; mov dword ptr [edx], eax; ret; 
0x0806ccf1: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x18; pop ebx; ret; 
0x0806bc9b: add byte ptr [eax], al; add byte ptr [ebp + 0x24], dh; add esp, 0x18; pop ebx; ret; 
0x08067b56: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08056ed6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08092bc6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x08056f26: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ca6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080561f6: add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0809ecea: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0xd4; pop ebx; pop esi; ret; 
0x080622b0: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0809e641: add byte ptr [eax], al; add byte ptr [ebp + 0x32], dh; add esp, 0x28; pop ebx; ret; 
0x080a311d: add byte ptr [eax], al; add byte ptr [ebp + 0x391174c0], al; ret 0xd875; 
0x0808ebf1: add byte ptr [eax], al; add byte ptr [ebp + 0x45450fd2], al; in al, 0xc7; ret 0xafc0; 
0x08062e06: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x08053ddc: add byte ptr [eax], al; add byte ptr [ebp + 0xb880fdb], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x94b5], cl; add bh, al; ret 0xafc0; 
0x080608e7: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [eax + 1], bh; ja 0x188f9; neg eax; ret; 
0x080562a7: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x0809e517: add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x2b650440], cl; add eax, 0; ret; 
0x080a0943: add byte ptr [eax], al; add byte ptr [ebp + 0xc], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0809e7c3: add byte ptr [eax], al; add byte ptr [ebp + 0xc], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0809ea5a: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x2c; ret; 
0x0806ec83: add byte ptr [eax], al; add byte ptr [ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080a1310: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0806d83e: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0809e876: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x0805882e: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a1407: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x2c; ret; 
0x08093709: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x0809e6d6: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x2c; ret; 
0x080c8e89: add byte ptr [eax], al; add byte ptr [ebp + eax*2], dh; add byte ptr [eax], dh; sub al, 0xf9; call dword ptr [edx]; 
0x080c7699: add byte ptr [eax], al; add byte ptr [ebp + ebp - 0x1f300000], al; clc; jmp dword ptr [ebp]; 
0x080a579d: add byte ptr [eax], al; add byte ptr [ebp - 0x160377d], cl; call dword ptr [eax - 0x73]; 
0x08049781: add byte ptr [eax], al; add byte ptr [ebp - 0x165e97d], cl; call dword ptr [esi - 1]; 
0x0809491d: add byte ptr [eax], al; add byte ptr [ebp - 0x1d00c7d], cl; push dword ptr [ecx]; dec dword ptr [ecx - 0x937b]; jmp dword ptr [esi - 0x70]; 
0x080c7631: add byte ptr [eax], al; add byte ptr [ebp - 0x1fc80000], bl; clc; call dword ptr [edi]; 
0x0806b9b7: add byte ptr [eax], al; add byte ptr [ebp - 0x2bf9f7d], cl; call dword ptr [eax - 0x73]; 
0x080a1348: add byte ptr [eax], al; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x0806fce1: add byte ptr [eax], al; add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x0809f72f: add byte ptr [eax], al; add byte ptr [ebp - 0x397cd1c4], cl; add al, 0x83; cli; add dword ptr [ecx - 0x7cbb81f9], ecx; ret; 
0x0806cd3a: add byte ptr [eax], al; add byte ptr [ebp - 0x47c08a40], al; fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806cb84: add byte ptr [eax], al; add byte ptr [ebp - 0x47e28a40], al; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cab4: add byte ptr [eax], al; add byte ptr [ebp - 0x47e28a40], al; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806c620: add byte ptr [eax], al; add byte ptr [ebp - 0x65], dh; lea ecx, [esp + 0x14]; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0806fcb5: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x08048be0: add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x08079bdd: add byte ptr [eax], al; add byte ptr [ebp - 0x7aef8b2e], al; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x0806a96d: add byte ptr [eax], al; add byte ptr [ebp - 0x7c8b8a25], al; ret 0x6610; 
0x0806c8a2: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806c382: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x08093322: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x08095027: add byte ptr [eax], al; add byte ptr [ebx + 0x107030f], cl; rol edi, 1; ret 0xa9f0; 
0x0805dae5: add byte ptr [eax], al; add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0806756d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08091d6d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0809e51d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b650440], cl; add eax, 0; ret; 
0x0806755d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08091d5d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0806dd9d: add byte ptr [eax], al; add byte ptr [ebx + 0x33ff08ec], al; mov ebp, ebx; push edi; call esi; 
0x0806754d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08091d4d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x08057d9d: add byte ptr [eax], al; add byte ptr [ebx + 0x408b0450], cl; or al, 0x83; ret; 
0x08095a70: add byte ptr [eax], al; add byte ptr [ebx + 0x420f02f8], al; ret; 
0x08095dd8: add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x0805db1a: add byte ptr [eax], al; add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x0808e0dd: add byte ptr [eax], al; add byte ptr [ebx + 0x448d08ec], al; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x080998c5: add byte ptr [eax], al; add byte ptr [ebx + 0x468b087d], cl; or byte ptr [ebx], al; pop es; call eax; 
0x0806753d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x08091d3d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0806752d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x08091d2d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0809d7dc: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b010a], al; pop edi; ret; 
0x0807191e: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0805575f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0804b1f8: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08055fba: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0809182d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x0805daed: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x08091d8d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x08092cb3: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; pop ebx; ret; 
0x0806751d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x08091d1d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0805cbcd: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x30; push esi; push ebx; call eax; 
0x0805c99d: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push ebx; call eax; 
0x0805d09d: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x34; push ebp; call eax; 
0x080a8e52: add byte ptr [eax], al; add byte ptr [ebx + 0x758bf45d], cl; clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0808ec36: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; in al, 0xff; jne 0x46c4e; push esi; call dword ptr [eax + 0x2c]; 
0x080a915d: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff08ec], al; or al, 0x53; call dword ptr [ebp + 8]; 
0x0808e0bd: add byte ptr [eax], al; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x0807c451: add byte ptr [eax], al; add byte ptr [ebx + 0xa0249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806757d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08091d7d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x080a7c38: add byte ptr [eax], al; add byte ptr [ebx + 0xf10247c], cl; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x0805b7a9: add byte ptr [eax], al; add byte ptr [ebx + 0xf14244c], cl; inc ebp; ret 0x548b; 
0x0807c21a: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080cb471: add byte ptr [eax], al; add byte ptr [ebx + ebp*2], bl; add byte ptr [eax + 0x22], bh; cli; jmp dword ptr [esi]; 
0x080d3449: add byte ptr [eax], al; add byte ptr [ebx + ebp*8], dh; add byte ptr [eax], al; inc eax; mov ch, 0xfc; call dword ptr [ebp]; 
0x080d1451: add byte ptr [eax], al; add byte ptr [ebx + ecx*8], bh; add byte ptr [eax], al; or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x080cbcb1: add byte ptr [eax], al; add byte ptr [ebx + esi*2 + 0x32680000], bl; cli; jmp dword ptr [esi]; 
0x080cbc39: add byte ptr [eax], al; add byte ptr [ebx + esi*2], ah; add byte ptr [eax], al; add byte ptr [edx], dh; cli; jmp dword ptr [ecx]; 
0x08051c42: add byte ptr [eax], al; add byte ptr [ebx - 0x137cab92], cl; or al, 0x55; call dword ptr [ebp + 0x10]; 
0x08050d55: add byte ptr [eax], al; add byte ptr [ebx - 0x137caba3], cl; or al, 0x53; call dword ptr [ebx + 0x10]; 
0x08093555: add byte ptr [eax], al; add byte ptr [ebx - 0x14d3db8c], cl; ret 0x9066; 
0x080a1745: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; jb 0x59745; cld; jmp dword ptr [esi - 0x70]; 
0x08090332: add byte ptr [eax], al; add byte ptr [ebx - 0x17aaf314], al; ret 0xfcc5; 
0x0808f5bd: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov edx, 0x81fffb91; ret; 
0x08048cb6: add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xb900; 
0x080490ae: add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x0809bd2e: add byte ptr [eax], al; add byte ptr [ebx - 0x3e7c0f1d], al; add al, 0x83; ret; 
0x0804a8ae: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7cf33c], al; add dword ptr [esi - 0x77], esp; push eax; call dword ptr [edi - 1]; 
0x08092eb2: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0805b5d2: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0808c03d: add byte ptr [eax], al; add byte ptr [ebx - 0x4737b], cl; jmp dword ptr [ebp - 0x39]; 
0x0808b7f3: add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x080942c5: add byte ptr [eax], al; add byte ptr [ebx - 0x4c7243bb], cl; imul ebp, dword ptr [edi], -2; jmp dword ptr [ebp - 0x75]; 
0x08080b46: add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x08088c9f: add byte ptr [eax], al; add byte ptr [ebx - 0x6274f314], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x0808847b: add byte ptr [eax], al; add byte ptr [ebx - 0x6274f314], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x080a7c5d: add byte ptr [eax], al; add byte ptr [ebx - 0x70f0c003], al; ret 0; 
0x08055e3a: add byte ptr [eax], al; add byte ptr [ebx - 0x74007afa], cl; dec esi; sbb al, 0x89; ret 0x6074; 
0x080930ca: add byte ptr [eax], al; add byte ptr [ebx - 0x74c7dbac], cl; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0806c923: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0806d6f3: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0806cb43: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080867aa: add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbac], cl; push edx; or byte ptr [ecx - 0x7cd3dbac], cl; ret 0x3917; 
0x080a8c0d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x080a8cad: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x080a8c5d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x080a8cbd: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push esp; ret; 
0x080a8c3d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0807819d: add byte ptr [eax], al; add byte ptr [ebx - 0x76f7db8c], cl; ret 0x44c7; 
0x0806437d: add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x0809bfeb: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0808dba2: add byte ptr [eax], al; add byte ptr [ebx - 0x79f0f608], al; ret 0; 
0x08091e30: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x080723bd: add byte ptr [eax], al; add byte ptr [ebx - 0x7cacf314], al; ret; 
0x080786ed: add byte ptr [eax], al; add byte ptr [ebx - 0x7cc3dbbc], cl; ret 0xc704; 
0x08074166: add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x080aa16d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7db8c], cl; inc esp; and al, 0x18; add al, 0x83; ret; 
0x0804d45d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cff7abc], cl; mov dword ptr [ecx], 0x83ff4788; ret 0x3901; 
0x0809869a: add byte ptr [eax], al; add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x08089043: add byte ptr [eax], al; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x0807b135: add byte ptr [eax], al; add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0805032b: add byte ptr [eax], al; add byte ptr [ebx - 0xa9fb14], al; jne 0x833d; push ecx; call dword ptr [ebx + 0x1c]; 
0x080d5651: add byte ptr [eax], al; add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x0807c1f7: add byte ptr [eax], al; add byte ptr [ecx + 0x24948bc1], cl; xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080ab3f5: add byte ptr [eax], al; add byte ptr [ecx + 0x314c245c], cl; fcmovnb st(0), st(7); ret; 
0x08082de7: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x08050089: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x080a62b5: add byte ptr [eax], al; add byte ptr [ecx + 0x6c8b8bcb], cl; add dword ptr [eax], eax; add byte ptr [ebp - 0x7e0b8a37], al; ret; 
0x0806eb98: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0804873d: add byte ptr [eax], al; add byte ptr [ecx + 0x918c0c3], al; add byte ptr [ebp - 0x9096f7d], cl; call dword ptr [eax - 0x73]; 
0x0807c1e9: add byte ptr [eax], al; add byte ptr [ecx + 0xe0b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080cb1fa: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x100e4302], al; or cl, byte ptr [0x4108]; ret; 
0x080ce41a: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x200e4e02], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x080cb616: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca762: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x080ca576: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6302], al; ret; 
0x080ce172: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d108a: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1032: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x0805ad4f: add byte ptr [eax], al; add byte ptr [ecx + 0xf40244c], cl; inc edi; ret 0x7489; 
0x080a2b5c: add byte ptr [eax], al; add byte ptr [ecx + 0xfc984e9], cl; test edi, eax; add byte ptr [eax], al; add bh, al; ret 0xbeec; 
0x080c549d: add byte ptr [eax], al; add byte ptr [ecx + eax + 0xb8c0000], dl; add byte ptr [eax], al; cmp byte ptr [ecx - 8], bh; jmp edi; 
0x080c72a9: add byte ptr [eax], al; add byte ptr [ecx + ebp - 0x27a00000], dl; clc; jmp dword ptr [edi]; 
0x080cb271: add byte ptr [eax], al; add byte ptr [ecx + ebp*2], bl; add byte ptr [eax], ch; sbb al, 0xfa; jmp dword ptr [esi]; 
0x080ce216: add byte ptr [eax], al; add byte ptr [ecx - 0x31fc0000], bl; cli; call dword ptr [esi + 3]; 
0x0809f4b8: add byte ptr [eax], al; add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x0808ebe9: add byte ptr [eax], al; add byte ptr [ecx - 0x6b7174f2], cl; add byte ptr [eax], al; add byte ptr [ebp + 0x45450fd2], al; in al, 0xc7; ret 0xafc0; 
0x080721f4: add byte ptr [eax], al; add byte ptr [ecx - 0x7c7227bb], cl; push eax; js 0x2a1f8; call dword ptr [eax - 0x77]; 
0x0809605d: add byte ptr [eax], al; add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0804a6a1: add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x75]; 
0x08088d00: add byte ptr [eax], al; add byte ptr [ecx - 0x88f6b], cl; call dword ptr [eax - 0x73]; 
0x0808814b: add byte ptr [eax], al; add byte ptr [ecx - 0x8a343], cl; call dword ptr [eax + 1]; 
0x0806b329: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0806b3f6: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x08066f71: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x080859c2: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x458b; 
0x080a5dbd: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xb70f; 
0x08051dd9: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xc301; 
0x0806ebe7: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1275; 
0x08091fb5: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x0806eb6e: add byte ptr [eax], al; add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08081aef: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x23e9; 
0x0805a32d: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x48d; 
0x08085263: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xdf29; 
0x08084ced: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x080c6a21: add byte ptr [eax], al; add byte ptr [ecx], cl; add byte ptr [eax], al; mov bl, al; clc; call dword ptr [eax]; 
0x0809b409: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0808afc3: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0806b59d: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0807c21f: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080c9c06: add byte ptr [eax], al; add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x0806a382: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x0806a702: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x080608f2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x080c7831: add byte ptr [eax], al; add byte ptr [edi + ebp], bl; add byte ptr [eax], al; sbb bl, ah; clc; call dword ptr [edi]; 
0x080cc619: add byte ptr [eax], al; add byte ptr [edi*2 - 0xcf00000], al; std; jmp dword ptr [esi]; 
0x08079be8: add byte ptr [eax], al; add byte ptr [edi], cl; dec eax; ret 0xc083; 
0x0808951f: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x9589; 
0x080743ea: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x08094dd2: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8789; 
0x08078429: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret; 
0x0807c2fb: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; sar byte ptr [eax + 0xae], 1; call dword ptr gs:[0x10]; 
0x0805a834: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret; 
0x080926e7: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x08099f77: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4d89; 
0x0809bd3e: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xec83; 
0x08092514: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xff85; 
0x0806b564: add byte ptr [eax], al; add byte ptr [edi], cl; lahf; ret 0xea81; 
0x0806ba4e: add byte ptr [eax], al; add byte ptr [edi], cl; mov byte ptr [0x8247c83], al; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x0804894c: add byte ptr [eax], al; add byte ptr [edi], cl; mov byte ptr [0x89145589], al; ret 0x4d89; 
0x08080f87: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808061d: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x080887fc: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0808b5e1: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x84; add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1080], al; jmp eax; 
0x08091744: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08080fd5: add byte ptr [eax], al; add byte ptr [edi], cl; mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cd5: add byte ptr [eax], al; add byte ptr [edi], cl; mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08081070: add byte ptr [eax], al; add byte ptr [edi], cl; mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x0806787d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x080494bd: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x08062c0d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806250d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x08062cb8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x08062ad8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x080625a8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x08062902: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x080626d4: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x08048b41: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx - 0x74000002], ecx; push ebp; sbb al, 0xf7; ret 0; 
0x080627dc: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x08062751: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x08059d0d: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, ebp; ret 0x72e9; 
0x080780ce: add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esi; ret; 
0x080d5e29: add byte ptr [eax], al; add byte ptr [edx + 0x34f00001], dl; std; call dword ptr [eax + 1]; 
0x0806ebae: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; pop ebx; ret; 
0x0806239d: add byte ptr [eax], al; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x080986a2: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0806eb9d: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080c9349: add byte ptr [eax], al; add byte ptr [edx + ecx*2], dh; add byte ptr [eax], al; pushal; cmp bh, cl; call dword ptr [eax]; 
0x080c5341: add byte ptr [eax], al; add byte ptr [edx + ecx], ch; add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080c83c9: add byte ptr [eax], al; add byte ptr [edx + edi - 0x9500000], dh; clc; call dword ptr [edx]; 
0x080c83a1: add byte ptr [eax], al; add byte ptr [edx + edi - 0x9680000], cl; clc; call dword ptr [edi]; 
0x080c8379: add byte ptr [eax], al; add byte ptr [edx + edi], ah; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x080c8351: add byte ptr [eax], al; add byte ptr [edx + edi], bh; add byte ptr [eax], al; cmp dh, dh; clc; jmp dword ptr [ecx]; 
0x080c8329: add byte ptr [eax], al; add byte ptr [edx + edi], dl; add byte ptr [eax], al; adc dh, dh; clc; jmp dword ptr [ecx]; 
0x080cbba9: add byte ptr [eax], al; add byte ptr [edx + esi*2 + 0x31800000], dl; cli; jmp dword ptr [esi]; 
0x0806625d: add byte ptr [eax], al; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x08048867: add byte ptr [eax], al; add byte ptr [edx - 0x7f], bl; ret 0x1796; 
0x080cc6ae: add byte ptr [eax], al; add byte ptr [edx - 6], dl; call dword ptr [ecx]; 
0x080cbc3e: add byte ptr [eax], al; add byte ptr [edx], dh; cli; jmp dword ptr [ecx]; 
0x08096254: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x08072a23: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0805e96d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0806778f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0807c44c: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x080c8fd1: add byte ptr [eax], al; add byte ptr [esi + eax*2 + 0x32280000], bh; stc; call dword ptr [edi]; 
0x0809f107: add byte ptr [eax], al; add byte ptr [esi + ebp*4 - 0x77], dh; fmul dword ptr [ecx - 0x76080836]; ret; 
0x080cf729: add byte ptr [eax], al; add byte ptr [esi + ebp*4], dl; add byte ptr [eax], al; mov al, 0xe2; sti; call dword ptr [esi]; 
0x080c9766: add byte ptr [eax], al; add byte ptr [esi + ecx + 8], cl; add dword ptr [edx], 0x57; ret; 
0x080c7fba: add byte ptr [eax], al; add byte ptr [esi + ecx + 8], cl; add dword ptr [edx], 2; inc ebx; ret; 
0x080c9589: add byte ptr [eax], al; add byte ptr [esp + ecx*2], dh; add byte ptr [eax], ah; inc ecx; stc; jmp edi; 
0x080d05a1: add byte ptr [eax], al; add byte ptr [esp + edi*4 + 0x880000], cl; cld; jmp dword ptr [edi]; 
0x080c7dc9: add byte ptr [eax], al; add byte ptr [esp + esi - 0x12200000], dh; clc; jmp dword ptr [eax]; 
0x080d3d31: add byte ptr [eax], al; add byte ptr [esp + esi*8], bl; add byte ptr [eax], al; js 0x8bcff; cld; call dword ptr [edi]; 
0x080d06d2: add byte ptr [eax], al; add byte ptr fs:[eax], al; add al, al; mov ebp, 0x4a40000; cld; jmp esi; 
0x080ce9ca: add byte ptr [eax], al; add byte ptr fs:[eax], al; add byte ptr [eax - 0x33ffff60], bh; out dx, eax; cli; call edi; 
0x0804f040: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x080a6124: add byte ptr [eax], al; add cl, ch; mov esp, 0x8dfffffd; cmp dword ptr [ebx], -2; call dword ptr [eax - 0x73]; 
0x0804f4a5: add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x0809808d: add byte ptr [eax], al; add cl, ch; ret; 
0x080a05ac: add byte ptr [eax], al; add cl, ch; sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x08080533: add byte ptr [eax], al; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08088eb3: add byte ptr [eax], al; add dh, al; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x08061d5b: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x08091b10: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x08091c2c: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x08091b2d: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x08091c56: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x08091c5f: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x08057baa: add byte ptr [eax], al; add dh, dh; ret; 
0x080c2a66: add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x080579a4: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08057954: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4c4], edx; ret; 
0x08057924: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4d8], edx; ret; 
0x0805c1e0: add byte ptr [eax], al; add dword ptr [ebx + ecx - 0x73], esi; and dword ptr [eax + ebx - 0x5f180000], 0x29; add dword ptr [eax], eax; pop ebx; ret; 
0x08056f95: add byte ptr [eax], al; add dword ptr [edx + 0x185c], 1; pop ebx; ret; 
0x08091b70: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x08091b99: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x08091b23: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x08092bae: add byte ptr [eax], al; add eax, 3; ret; 
0x08091b49: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x08066f72: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x0809869b: add byte ptr [eax], al; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x080a44f4: add byte ptr [eax], al; add ecx, dword ptr [edi]; test dword ptr [0x8bfffffd], edi; jl 0x5c524; adc bh, al; ret 0x9da4; 
0x0804d750: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0809e504: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08054b7f: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08055760: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0804f912: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0809a7ad: add byte ptr [eax], al; add esp, 0x20; lea esi, [esi]; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x0804f0fb: add byte ptr [eax], al; add esp, 0x28; pop ebx; ret; 
0x080498a8: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x080a00f9: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x0805dae6: add byte ptr [eax], al; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x080515de: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x080488cd: add byte ptr [eax], al; add esp, 4; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0806ca93: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0805b5d3: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0805da86: add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x08057ec4: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08092eb3: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a1796: add byte ptr [eax], al; add word ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080cbc3a: add byte ptr [eax], al; and al, 0x73; add byte ptr [eax], al; add byte ptr [edx], dh; cli; jmp dword ptr [ecx]; 
0x080d313a: add byte ptr [eax], al; and al, 0xe8; add byte ptr [eax], al; aam 0xb3; cld; call dword ptr [edi]; 
0x080cb26e: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; pop esp; imul eax, dword ptr [eax], 0xfa1c2800; jmp dword ptr [esi]; 
0x080cfa36: add byte ptr [eax], al; and byte ptr [ecx - 0x103c0000], dh; sti; jmp dword ptr [edx]; 
0x080c958e: add byte ptr [eax], al; and byte ptr [ecx - 7], al; jmp edi; 
0x080cb836: add byte ptr [eax], al; and byte ptr [edi], ch; add byte ptr [ebx + ebp], dh; cli; jmp dword ptr [edx]; 
0x080cb736: add byte ptr [eax], al; and byte ptr [esi], ch; add ah, ah; and al, 0xfa; call dword ptr [edx + 1]; 
0x080d1636: add byte ptr [eax], al; and ch, cl; add byte ptr [eax], al; in al, 0x20; cld; call edi; 
0x080914d8: add byte ptr [eax], al; and eax, 0xf; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091509: add byte ptr [eax], al; and eax, 0xff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091540: add byte ptr [eax], al; and eax, 0xfff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091579: add byte ptr [eax], al; and eax, 0xffff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809158e: add byte ptr [eax], al; and eax, 1; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0806787e: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x08067dfe: add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x0806788e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0806789e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0806786e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08067e0e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08067e1e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x080916c3: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x08079cf4: add byte ptr [eax], al; call 0x26370; add esp, 0x18; pop ebx; ret; 
0x08087afc: add byte ptr [eax], al; call 0x26b90; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0805c1e9: add byte ptr [eax], al; call 0x26b90; pop ebx; ret; 
0x0806ca8e: add byte ptr [eax], al; call 0x290c0; add esp, 4; pop ebx; pop esi; ret; 
0x080a45c0: add byte ptr [eax], al; call 0x5c580; jmp eax; 
0x0805f0c6: add byte ptr [eax], al; call 0x780; add ebx, 0x4ebdb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ef2e: add byte ptr [eax], al; call 0x780; add ebx, 0x4ecf3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ea64: add byte ptr [eax], al; call 0x780; add ebx, 0x4efbd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805e8be: add byte ptr [eax], al; call 0x780; add ebx, 0x4f0e3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0807c05e: add byte ptr [eax], al; call 0x910; add eax, 0x5df9b; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807c03e: add byte ptr [eax], al; call 0x910; add eax, 0x5dfbb; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x08056efe: add byte ptr [eax], al; call 0x910; add eax, 0x830fb; mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x080cfafe: add byte ptr [eax], al; call 0xcc087bb6; int1; sti; call dword ptr [eax + 1]; 
0x0809d73f: add byte ptr [eax], al; call dword ptr [eax]; 
0x08048dd2: add byte ptr [eax], al; call dword ptr [esi]; 
0x08052243: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806c8a3: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806c383: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x0806d94d: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806d980: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806eba8: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop edx; pop ecx; pop ebx; ret; 
0x08093323: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0804ed16: add byte ptr [eax], al; call eax; 
0x080baede: add byte ptr [eax], al; call edi; 
0x080ba08e: add byte ptr [eax], al; call esp; 
0x080ce217: add byte ptr [eax], al; cdq; add byte ptr [eax], al; add al, 0xce; cli; call dword ptr [esi + 3]; 
0x080cc742: add byte ptr [eax], al; cld; pop esp; cli; call dword ptr [edi]; 
0x0807c2fc: add byte ptr [eax], al; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x080cb062: add byte ptr [eax], al; cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x080c8352: add byte ptr [eax], al; cmp al, 0x3a; add byte ptr [eax], al; cmp dh, dh; clc; jmp dword ptr [ecx]; 
0x080d1452: add byte ptr [eax], al; cmp al, 0xcb; add byte ptr [eax], al; or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x080c6cb2: add byte ptr [eax], al; cmp al, 0xcc; clc; jmp dword ptr [esi]; 
0x080c79d2: add byte ptr [eax], al; cmp al, 0xe5; clc; call dword ptr [edi]; 
0x080cfd42: add byte ptr [eax], al; cmp al, 0xf6; sti; jmp dword ptr [edi]; 
0x080c7636: add byte ptr [eax], al; cmp al, ah; clc; call dword ptr [edi]; 
0x080c8317: add byte ptr [eax], al; cmp al, byte ptr [eax]; add ah, dh; cmc; clc; jmp dword ptr [ecx]; 
0x080c837a: add byte ptr [eax], al; cmp al, byte ptr fs:[eax]; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x080d444e: add byte ptr [eax], al; cmp bl, bh; add byte ptr [eax], al; in al, dx; sar ah, 1; jmp dword ptr [ebx]; 
0x080cc696: add byte ptr [eax], al; cmp byte ptr [ebp], 0; hlt; push ecx; cli; call dword ptr [ecx]; 
0x080c5346: add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080a8b7e: add byte ptr [eax], al; cmp byte ptr [ecx + edx + 0x6c], 0; je 0x60b65; add esp, 8; pop ebx; ret; 
0x080c54a6: add byte ptr [eax], al; cmp byte ptr [ecx - 8], bh; jmp edi; 
0x08091e8a: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x49f12; mov eax, 0xc; pop edi; ret; 
0x080c6f4e: add byte ptr [eax], al; cmp byte ptr [esi], ah; add byte ptr [eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x08062208: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x080625a2: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x080c8356: add byte ptr [eax], al; cmp dh, dh; clc; jmp dword ptr [ecx]; 
0x0805db1b: add byte ptr [eax], al; cmp eax, -1; cmove eax, edx; add esp, 0x18; pop ebx; ret; 
0x0806c933: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c963: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0806cb57: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc27: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806cdef: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24e10; add esp, 8; pop ebx; ret; 
0x0806ceaf: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d703: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x08093373: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080a1737: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x0806c8aa: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806eb6f: add byte ptr [eax], al; cmp eax, edx; jne 0x26b81; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0809a3f6: add byte ptr [eax], al; cmp edi, 0x2a; ja 0x52c1e; mov edx, dword ptr [ebp - 0x64]; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x080cafae: add byte ptr [eax], al; cwde; add byte ptr [eax], al; pushfd; sbb edx, edi; jmp dword ptr [esi]; 
0x080c6cae: add byte ptr [eax], al; cwde; and eax, dword ptr [eax]; add byte ptr [esp + ecx*8], bh; clc; jmp dword ptr [esi]; 
0x080c83a6: add byte ptr [eax], al; cwde; idiv al; call dword ptr [edi]; 
0x080bdb3e: add byte ptr [eax], al; das; or al, 0xfc; call dword ptr [eax - 8]; 
0x080bdb3e: add byte ptr [eax], al; das; or al, 0xfc; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080cb05e: add byte ptr [eax], al; dec eax; add byte ptr [bx + si], al; cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x080d2a5e: add byte ptr [eax], al; dec eax; loope 0x8aa63; add byte ptr [esp], ch; cld; jmp dword ptr [edi]; 
0x080d2ee6: add byte ptr [eax], al; dec eax; stosb byte ptr es:[edi], al; cld; call esp; 
0x080d00f2: add byte ptr [eax], al; dec esp; cli; sti; call dword ptr [ebp]; 
0x080c7582: add byte ptr [eax], al; dec esp; fdivp st(0); call dword ptr [edx]; 
0x080d45eb: add byte ptr [eax], al; dec esp; push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x71; ret; 
0x080c71ca: add byte ptr [eax], al; fadd dword ptr [eax]; add byte ptr [eax], al; mov eax, 0x2c000028; aam 0xf8; call dword ptr [eax]; 
0x080cbef6: add byte ptr [eax], al; fadd dword ptr [edx - 6]; jmp dword ptr [ebp]; 
0x080d00ee: add byte ptr [eax], al; fdiv dword ptr [edi - 0x5b40000]; sti; call dword ptr [ebp]; 
0x080cbef2: add byte ptr [eax], al; fdiv qword ptr [ebp]; add al, bl; inc edx; cli; jmp dword ptr [ebp]; 
0x080c7af2: add byte ptr [eax], al; fdiv qword ptr [ecx]; add byte ptr [eax], al; pop eax; out 0xf8, al; jmp dword ptr [edx]; 
0x080c7ff2: add byte ptr [eax], al; fdiv qword ptr [esi]; add byte ptr [eax], al; sbb al, dh; clc; call dword ptr [edi]; 
0x080cc5e6: add byte ptr [eax], al; fdiv st(2); std; jmp dword ptr [ebx]; 
0x080d04f2: add byte ptr [eax], al; fdivr qword ptr [ebx - 0x680000]; sti; call dword ptr [ecx + 1]; 
0x080d56ee: add byte ptr [eax], al; fmul dword ptr [0x167c0001]; std; jmp dword ptr [edx + 8]; 
0x080d13ee: add byte ptr [eax], al; fmul st(2); add byte ptr [eax], al; or al, 0x1f; cld; jmp dword ptr [eax]; 
0x080caaf2: add byte ptr [eax], al; fsub qword ptr [ecx]; add al, ch; push cs; cli; call dword ptr [ebx + 1]; 
0x080c831a: add byte ptr [eax], al; hlt; cmc; clc; jmp dword ptr [ecx]; 
0x080c4cea: add byte ptr [eax], al; hlt; dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x08048760: add byte ptr [eax], al; hlt; mov ebx, dword ptr [esp]; ret; 
0x080cc69a: add byte ptr [eax], al; hlt; push ecx; cli; call dword ptr [ecx]; 
0x080ce16a: add byte ptr [eax], al; hlt; retf; cli; call dword ptr [edx]; 
0x080ca52a: add byte ptr [eax], al; hlt; salc; stc; call dword ptr [ebx]; 
0x080d163a: add byte ptr [eax], al; in al, 0x20; cld; call edi; 
0x080cb73a: add byte ptr [eax], al; in al, 0x24; cli; call dword ptr [edx + 1]; 
0x080cfefa: add byte ptr [eax], al; in al, 0xb5; add byte ptr [eax], al; xor bh, 0xfb; jmp dword ptr [ebp]; 
0x080c5442: add byte ptr [eax], al; in al, dx; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080ca852: add byte ptr [eax], al; in al, dx; pop es; cli; jmp dword ptr [edx]; 
0x080d4452: add byte ptr [eax], al; in al, dx; sar ah, 1; jmp dword ptr [ebx]; 
0x080d10c2: add byte ptr [eax], al; in al, dx; sbb edi, esp; call dword ptr [ebx]; 
0x0806aaad: add byte ptr [eax], al; inc dword ptr [eax]; je 0x22ab4; inc eax; pop edi; ret; 
0x080c5b56: add byte ptr [eax], al; inc eax; adc al, byte ptr [eax]; add byte ptr [ebx + edx*4], dh; clc; jmp dword ptr [ecx]; 
0x080c2a61: add byte ptr [eax], al; inc eax; add byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x080d344e: add byte ptr [eax], al; inc eax; mov ch, 0xfc; call dword ptr [ebp]; 
0x080c4fce: add byte ptr [eax], al; inc eax; pop esi; clc; call edx; 
0x080d20de: add byte ptr [eax], al; inc eax; push edx; cld; jmp dword ptr [esi + 0xa]; 
0x080d01ce: add byte ptr [eax], al; inc eax; sti; sti; jmp dword ptr [esi]; 
0x080cb1fb: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x100e4302], al; or cl, byte ptr [0x4108]; ret; 
0x080ce41b: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x200e4e02], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x080cb617: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca763: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x080ca577: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e6302], al; ret; 
0x080ce173: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d108b: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1033: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080c5b7a: add byte ptr [eax], al; inc esp; xchg eax, ebx; clc; jmp dword ptr [edx]; 
0x080d5e82: add byte ptr [eax], al; insb byte ptr es:[edi], dx; adc eax, 0x35e80001; std; call dword ptr [eax]; 
0x080cfdca: add byte ptr [eax], al; insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x08049531: add byte ptr [eax], al; int 0x80; 
0x080d3176: add byte ptr [eax], al; int 0xb3; cld; jmp dword ptr [eax]; 
0x080d41ba: add byte ptr [eax], al; iretd; cld; jmp dword ptr [esi]; 
0x080608f3: add byte ptr [eax], al; ja 0x188f9; neg eax; ret; 
0x08060ab3: add byte ptr [eax], al; ja 0x18ab9; neg eax; ret; 
0x08060c6b: add byte ptr [eax], al; ja 0x18c71; neg eax; ret; 
0x080622e4: add byte ptr [eax], al; ja 0x1a2ea; neg eax; ret; 
0x08062383: add byte ptr [eax], al; ja 0x1a389; neg eax; ret; 
0x08062e6a: add byte ptr [eax], al; ja 0x1ae70; neg eax; ret; 
0x0806a383: add byte ptr [eax], al; ja 0x22389; neg eax; add esp, 4; pop ebx; ret; 
0x0806a703: add byte ptr [eax], al; ja 0x22709; neg eax; pop edi; pop ebx; ret; 
0x0806c5c4: add byte ptr [eax], al; ja 0x24860; mov eax, dword ptr [ebx + esi*4 - 0x2bacc]; add eax, ebx; jmp eax; 
0x0809381d: add byte ptr [eax], al; ja 0x4b828; xor eax, eax; pop ebx; ret; 
0x0806239e: add byte ptr [eax], al; jb 0x1a3b0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0806cf77: add byte ptr [eax], al; je 0x24f22; mov dword ptr [esp], esi; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x080c8e8a: add byte ptr [eax], al; je 0x80ed3; add byte ptr [eax], al; xor byte ptr [ecx + edi*8], ch; call dword ptr [edx]; 
0x080c958a: add byte ptr [eax], al; je 0x815da; add byte ptr [eax], al; and byte ptr [ecx - 7], al; jmp edi; 
0x080caf8a: add byte ptr [eax], al; je 0x82ff4; add byte ptr [eax], al; nop; sbb edx, edi; jmp dword ptr [esi]; 
0x080cb62a: add byte ptr [eax], al; je 0x83651; cli; jmp dword ptr [esi]; 
0x080cba8a: add byte ptr [eax], al; je 0x83abe; cli; jmp dword ptr [eax]; 
0x0808176e: add byte ptr [eax], al; jmp eax; 
0x0805882f: add byte ptr [eax], al; jne 0x10839; add esp, 0x14; pop ebx; pop esi; ret; 
0x08062097: add byte ptr [eax], al; jne 0x1a2c0; pop ebx; ret; 
0x08062154: add byte ptr [eax], al; jne 0x1a2e0; pop ebx; ret; 
0x080626d5: add byte ptr [eax], al; jne 0x1ae50; pop ebx; ret; 
0x0806250e: add byte ptr [eax], al; jne 0x1ae66; pop ebx; ret; 
0x0806bc9c: add byte ptr [eax], al; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806c621: add byte ptr [eax], al; jne 0x245c0; lea ecx, [esp + 0x14]; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0806c8fb: add byte ptr [eax], al; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806ccf2: add byte ptr [eax], al; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0806d83f: add byte ptr [eax], al; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x0806d86f: add byte ptr [eax], al; jne 0x25890; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0807c159: add byte ptr [eax], al; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0809150e: add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809370a: add byte ptr [eax], al; jne 0x4b716; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x080937db: add byte ptr [eax], al; jne 0x4b7f2; add esp, 0x34; pop ebx; pop esi; ret; 
0x0809e642: add byte ptr [eax], al; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d7: add byte ptr [eax], al; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e7c4: add byte ptr [eax], al; jne 0x567d4; add esp, 0x34; pop ebx; pop esi; ret; 
0x0809e877: add byte ptr [eax], al; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0809e977: add byte ptr [eax], al; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea5b: add byte ptr [eax], al; jne 0x56a6c; add esp, 0x2c; ret; 
0x0809eceb: add byte ptr [eax], al; jne 0x56d17; add esp, 0xd4; pop ebx; pop esi; ret; 
0x080a0944: add byte ptr [eax], al; jne 0x58954; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a09c4: add byte ptr [eax], al; jne 0x589d4; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a1311: add byte ptr [eax], al; jne 0x59319; add esp, 0x2c; ret; 
0x080a1408: add byte ptr [eax], al; jne 0x59414; add esp, 0x2c; ret; 
0x080a4760: add byte ptr [eax], al; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64bf: add byte ptr [eax], al; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x080ab7df: add byte ptr [eax], al; jne 0x637c8; add esp, 4; pop ebx; pop esi; ret; 
0x080aee1e: add byte ptr [eax], al; jo 0x66e7b; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x080c8c6e: add byte ptr [eax], al; jo 0x80c8b; stc; jmp dword ptr [eax + 0xf]; 
0x080ca586: add byte ptr [eax], al; jo 0x825e6; add byte ptr [eax], al; xor al, 0xd9; stc; call edx; 
0x080ca686: add byte ptr [eax], al; jo 0x826e7; add byte ptr [eax], al; adc al, 2; cli; call dword ptr [eax + 1]; 
0x080cba86: add byte ptr [eax], al; jo 0x83afb; add byte ptr [eax], al; je 0x83abe; cli; jmp dword ptr [eax]; 
0x080c49a6: add byte ptr [eax], al; js 0x7c9e9; clc; jmp dword ptr [esi + 2]; 
0x080cb476: add byte ptr [eax], al; js 0x8349c; cli; jmp dword ptr [esi]; 
0x080d3d36: add byte ptr [eax], al; js 0x8bcff; cld; call dword ptr [edi]; 
0x08091ca9: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x08091cd2: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x08091ce7: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x08091cf7: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x08091c3f: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x08091d07: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x08091c72: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x080a00ee: add byte ptr [eax], al; lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x08066ebe: add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066d84: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ede: add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066eee: add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066efe: add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066d3e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08066e3e: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x08066e4e: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08066ce1: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08066e6e: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08066e7e: add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08066e8e: add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08066c9b: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08066e9e: add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x08066eae: add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x08091361: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0809141e: add byte ptr [eax], al; lea eax, [edi - 0xa]; pop edi; ret; 
0x0809140e: add byte ptr [eax], al; lea eax, [edi - 0xb]; pop edi; ret; 
0x08091386: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x080913fe: add byte ptr [eax], al; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913ee: add byte ptr [eax], al; lea eax, [edi - 0xe]; pop edi; ret; 
0x0809148e: add byte ptr [eax], al; lea eax, [edi - 1]; pop edi; ret; 
0x0809147e: add byte ptr [eax], al; lea eax, [edi - 2]; pop edi; ret; 
0x0809146e: add byte ptr [eax], al; lea eax, [edi - 3]; pop edi; ret; 
0x080913d9: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x0809145e: add byte ptr [eax], al; lea eax, [edi - 5]; pop edi; ret; 
0x0809144e: add byte ptr [eax], al; lea eax, [edi - 6]; pop edi; ret; 
0x0809143e: add byte ptr [eax], al; lea eax, [edi - 7]; pop edi; ret; 
0x080913b0: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x0809142e: add byte ptr [eax], al; lea eax, [edi - 9]; pop edi; ret; 
0x08066e2e: add byte ptr [eax], al; lea eax, [edi]; pop edi; ret; 
0x08067bce: add byte ptr [eax], al; lea eax, [edx + 0xa]; ret; 
0x08067b20: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x08067bde: add byte ptr [eax], al; lea eax, [edx + 0xc]; ret; 
0x08067bee: add byte ptr [eax], al; lea eax, [edx + 0xd]; ret; 
0x08067bfe: add byte ptr [eax], al; lea eax, [edx + 0xe]; ret; 
0x08067b49: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x08067b5e: add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08067b6e: add byte ptr [eax], al; lea eax, [edx + 2]; ret; 
0x08067ad3: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x08067b7e: add byte ptr [eax], al; lea eax, [edx + 4]; ret; 
0x08067b8e: add byte ptr [eax], al; lea eax, [edx + 5]; ret; 
0x08067b9e: add byte ptr [eax], al; lea eax, [edx + 6]; ret; 
0x08067af6: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x08067bae: add byte ptr [eax], al; lea eax, [edx + 8]; ret; 
0x08067bbe: add byte ptr [eax], al; lea eax, [edx + 9]; ret; 
0x0809d52d: add byte ptr [eax], al; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x08092ba8: add byte ptr [eax], al; lea edi, [edi]; add eax, 3; ret; 
0x08066e38: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edi + 1]; pop edi; ret; 
0x08066e28: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edi]; pop edi; ret; 
0x08067bc8: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xa]; ret; 
0x08067bd8: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xc]; ret; 
0x08067be8: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xd]; ret; 
0x08067bf8: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 0xe]; ret; 
0x08067b57: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 1]; ret; 
0x08067b68: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 2]; ret; 
0x08067b78: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 4]; ret; 
0x08067b88: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 5]; ret; 
0x08067b98: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 6]; ret; 
0x08067ba8: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 8]; ret; 
0x08067bb8: add byte ptr [eax], al; lea edi, [edi]; lea eax, [edx + 9]; ret; 
0x080562a8: add byte ptr [eax], al; lea edi, [edi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08056ed7: add byte ptr [eax], al; lea edi, [edi]; mov eax, 0xffffffff; ret; 
0x080608e8: add byte ptr [eax], al; lea edi, [edi]; mov eax, 1; ja 0x188f9; neg eax; ret; 
0x08092bc7: add byte ptr [eax], al; lea edi, [edi]; mov eax, 1; ret; 
0x0809e518: add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x08056f27: add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ca7: add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c38: add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x080a1d08: add byte ptr [eax], al; lea edi, [edi]; ret 4; 
0x080561f7: add byte ptr [eax], al; lea edi, [edi]; xor eax, eax; ret; 
0x08056c3e: add byte ptr [eax], al; lea edx, [eax + 0x30]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x0805c2d4: add byte ptr [eax], al; lea edx, [eax - 0x7e140]; mov dword ptr [eax + 0x504], edx; lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x0805c2e0: add byte ptr [eax], al; lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x08099d3f: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x080d319a: add byte ptr [eax], al; leave; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080d54da: add byte ptr [eax], al; les ecx, ptr [ebx]; add dword ptr [eax], eax; and byte ptr [eax], dl; std; call dword ptr [esi]; 
0x08058f91: add byte ptr [eax], al; lock dec dword ptr [ebp + 0x50030076]; or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x08058417: add byte ptr [eax], al; lock dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x080d6206: add byte ptr [eax], al; lock sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x080d0ab2: add byte ptr [eax], al; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x6bffff3f], ah; or edi, esp; jmp esi; 
0x080c8462: add byte ptr [eax], al; lodsb al, byte ptr [esi]; clc; clc; call dword ptr [ecx]; 
0x080ced22: add byte ptr [eax], al; lodsb al, byte ptr [esi]; insd dword ptr es:[edi], dx; sti; jmp dword ptr [ebx]; 
0x080d0cc2: add byte ptr [eax], al; lodsb al, byte ptr [esi]; ret; 
0x080c6f52: add byte ptr [eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x080cbb0a: add byte ptr [eax], al; mov ah, 0x30; cli; jmp dword ptr [ebx]; 
0x080c83ca: add byte ptr [eax], al; mov ah, 0x3a; add byte ptr [eax], al; mov al, 0xf6; clc; call dword ptr [edx]; 
0x080ce5da: add byte ptr [eax], al; mov ah, 0xe3; cli; call dword ptr [ebx + 3]; 
0x080c4f6e: add byte ptr [eax], al; mov al, 0x4b; clc; call dword ptr [ebx]; 
0x080d54c6: add byte ptr [eax], al; mov al, 0xb; add dword ptr [eax], eax; add al, 0x10; std; jmp dword ptr [ecx]; 
0x080cf72e: add byte ptr [eax], al; mov al, 0xe2; sti; call dword ptr [esi]; 
0x080c83ce: add byte ptr [eax], al; mov al, 0xf6; clc; call dword ptr [edx]; 
0x080c84ee: add byte ptr [eax], al; mov al, 0xf9; clc; call dword ptr [eax]; 
0x080d41b6: add byte ptr [eax], al; mov al, byte ptr [0x640000f8]; iretd; cld; jmp dword ptr [esi]; 
0x080d0ab6: add byte ptr [eax], al; mov al, byte ptr [0x940000c1]; or edi, esp; jmp esi; 
0x080c83b6: add byte ptr [eax], al; mov al, byte ptr [0xa400003a]; idiv al; call dword ptr [edi]; 
0x080c8fb6: add byte ptr [eax], al; mov al, byte ptr [0xd4000046]; xor ecx, edi; jmp dword ptr [edx]; 
0x0806684e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x08065dce: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0806625e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0806455e: add byte ptr [eax], al; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x08065c9e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x08065dde: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0806444e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0806456e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x080c6a26: add byte ptr [eax], al; mov bl, al; clc; call dword ptr [eax]; 
0x080d05a6: add byte ptr [eax], al; mov byte ptr [eax], al; cld; jmp dword ptr [edi]; 
0x080cae9e: add byte ptr [eax], al; mov byte ptr [ebp], ah; add byte ptr [esi + edx], ch; cli; call eax; 
0x080cbc9e: add byte ptr [eax], al; mov byte ptr [ebx], dh; add byte ptr [edx + esi - 6], bl; jmp dword ptr [eax]; 
0x08056ff2: add byte ptr [eax], al; mov dword ptr [eax + 0x185c], 0; mov dword ptr [eax + 0x1860], 0; ret; 
0x08056ffc: add byte ptr [eax], al; mov dword ptr [eax + 0x1860], 0; ret; 
0x080579a8: add byte ptr [eax], al; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08057958: add byte ptr [eax], al; mov dword ptr [eax + 0x4c4], edx; ret; 
0x08057928: add byte ptr [eax], al; mov dword ptr [eax + 0x4d8], edx; ret; 
0x0809e9db: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080a10da: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x0808ac2f: add byte ptr [eax], al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808b554: add byte ptr [eax], al; mov dword ptr [ebp - 0x4a0], 0x20; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808054f: add byte ptr [eax], al; mov dword ptr [ebp - 0x4d0], ecx; jmp eax; 
0x080a0c4a: add byte ptr [eax], al; mov dword ptr [ebx + 0x1aa8], eax; add esp, 8; pop ebx; ret; 
0x0809e5e3: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080a48c2: add byte ptr [eax], al; mov dword ptr [esi + 0x10], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x08055759: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805421c: add byte ptr [eax], al; mov dword ptr [esi + 0x38], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a47df: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a1371: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x0809dc97: add byte ptr [eax], al; mov dword ptr [esi + 8], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x08050432: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x0806ccbf: add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; xor eax, eax; lea edx, [esp + 4]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0807c0c6: add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0807c201: add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0807c1de: add byte ptr [eax], al; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080c71ce: add byte ptr [eax], al; mov eax, 0x2c000028; aam 0xf8; call dword ptr [eax]; 
0x080c79ce: add byte ptr [eax], al; mov eax, 0x3c000030; in eax, 0xf8; call dword ptr [edi]; 
0x0806ea5d: add byte ptr [eax], al; mov eax, 0x80dbf64; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x080cfdce: add byte ptr [eax], al; mov eax, 0x9c0000b4; idiv bl; jmp esi; 
0x08091e94: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x080ce9ce: add byte ptr [eax], al; mov eax, 0xcc0000a0; out dx, eax; cli; call edi; 
0x08098696: add byte ptr [eax], al; mov eax, 0xf0; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eba3: add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080562ae: add byte ptr [eax], al; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08055b3e: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0806c38a: add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x080608ee: add byte ptr [eax], al; mov eax, 1; ja 0x188f9; neg eax; ret; 
0x08060aae: add byte ptr [eax], al; mov eax, 1; ja 0x18ab9; neg eax; ret; 
0x08092bce: add byte ptr [eax], al; mov eax, 1; ret; 
0x08092bde: add byte ptr [eax], al; mov eax, 2; ret; 
0x08092bee: add byte ptr [eax], al; mov eax, 3; ret; 
0x08091deb: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x08092bfe: add byte ptr [eax], al; mov eax, 4; ret; 
0x08092c0e: add byte ptr [eax], al; mov eax, 5; ret; 
0x08092c1e: add byte ptr [eax], al; mov eax, 6; ret; 
0x08092c2e: add byte ptr [eax], al; mov eax, 7; ret; 
0x08091e44: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x0809e51e: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x0809bf32: add byte ptr [eax], al; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x080a3890: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0809a7c7: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08099d57: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x08099eb7: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x0809976d: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x0809a7b6: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x08099d46: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0808b174: add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808b007: add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0808ac39: add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808af7f: add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x0806c5ca: add byte ptr [eax], al; mov eax, dword ptr [ebx + esi*4 - 0x2bacc]; add eax, ebx; jmp eax; 
0x08065bce: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x0806437e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0806b58d: add byte ptr [eax], al; mov eax, dword ptr [edi + esi*4 - 0x2bf60]; add eax, edi; jmp eax; 
0x080a6d5e: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080a960e: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; add esp, 8; pop ebx; ret; 
0x080a11af: add byte ptr [eax], al; mov eax, dword ptr [esi + 8]; mov ecx, dword ptr [ebx + eax*4 - 0x165c0]; add ecx, ebx; jmp ecx; 
0x08091d8e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0808fd4e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x08056f2e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8c0e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8cbe: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8cae: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c5e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080a8c3e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056c4e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x08056f3e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x0805008a: add byte ptr [eax], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080674ce: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x08082de8: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080b8082: add byte ptr [eax], al; mov ebp, 0xc000000f; sldt word ptr [eax]; ret; 
0x0806ec84: add byte ptr [eax], al; mov ebp, 0xf0; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x08051c43: add byte ptr [eax], al; mov ebp, dword ptr [esi + 0x54]; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x0806ca65: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806c9ac: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806c62c: add byte ptr [eax], al; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0807c21b: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08050d56: add byte ptr [eax], al; mov ebx, dword ptr [ebp + 0x54]; sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x0809bb2a: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x248]; mov edx, edi; call dword ptr gs:[0x10]; 
0x080a8e53: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08048909: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0806cde4: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806cd44: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0809340c: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x08093741: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x0807c452: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x08093804: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0806cea4: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092cb4: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0806cf81: add byte ptr [eax], al; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x0807c1ea: add byte ptr [eax], al; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0806d954: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806eb99: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080b7dd2: add byte ptr [eax], al; mov ecx, 0xbc00000d; or eax, 0xdbf0000; add byte ptr [eax], al; ret 0xd; 
0x0806b32a: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0809a55a: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x64]; mov edx, dword ptr [ecx + edi*4 - 0x1c0b8]; add edx, ecx; jmp edx; 
0x0809b075: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x9c]; add esp, 0x20; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x6c]; call eax; 
0x0809b139: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x9c]; add esp, 0x20; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x70]; call eax; 
0x0805d8fb: add byte ptr [eax], al; mov ecx, dword ptr [ebx + eax*4 - 0x2c680]; add ecx, ebx; jmp ecx; 
0x0804d956: add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x2db80]; add ecx, edi; jmp ecx; 
0x0806c924: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c9ec: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x20]; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806cd9a: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806d6f4: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806cb44: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806cae3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbb3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0807c1f8: add byte ptr [eax], al; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0807c227: add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080998c6: add byte ptr [eax], al; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edi]; call eax; 
0x080a6df0: add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x38]; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x0809937e: add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x64]; mov edx, dword ptr [edi + esi*4 - 0x1c4c0]; add edx, edi; jmp edx; 
0x080a7c39: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x10]; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x080c7c62: add byte ptr [eax], al; mov edi, fs; clc; jmp dword ptr [edi + 2]; 
0x080986a3: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eb9e: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08049033: add byte ptr [eax], al; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0807a453: add byte ptr [eax], al; mov edx, dword ptr [ebp + ebx - 0x180]; test edx, edx; je 0x32462; call edx; 
0x0809a3ff: add byte ptr [eax], al; mov edx, dword ptr [ebp - 0x64]; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x0806cc57: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x24]; mov ecx, dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x080930cb: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08093456: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0807c1cc: add byte ptr [eax], al; mov edx, ebp; mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x080bbc7a: add byte ptr [eax], al; mov esi, 0xc0000006; push es; add byte ptr [eax], al; ret 6; 
0x080bbe7a: add byte ptr [eax], al; mov esi, 0xc0000007; pop es; add byte ptr [eax], al; ret 7; 
0x0807c2f7: add byte ptr [eax], al; mov esi, 8; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0807c44d: add byte ptr [eax], al; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0806ce53: add byte ptr [eax], al; mov esi, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x080c8fd2: add byte ptr [eax], al; mov esp, 0x28000046; xor bh, cl; call dword ptr [edi]; 
0x080bba76: add byte ptr [eax], al; mov esp, 0xbe000005; add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x080c8a62: add byte ptr [eax], al; mov word ptr [eax], cs; stc; call dword ptr [ecx + 0xa]; 
0x080c49a2: add byte ptr [eax], al; mov word ptr [eax], es; add byte ptr [eax], al; js 0x7c9e9; clc; jmp dword ptr [esi + 2]; 
0x080ccb22: add byte ptr [eax], al; mov word ptr [ebx - 6], gs; call dword ptr [edx]; 
0x080c54a2: add byte ptr [eax], al; mov word ptr [ebx], cs; add byte ptr [eax], al; cmp byte ptr [ecx - 8], bh; jmp edi; 
0x08065f2e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x080646be: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x08065bfe: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x080643ae: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080d06da: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; add al, 0xfc; jmp esi; 
0x080d31ba: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; call 0xb3cdb1c2; cld; jmp dword ptr [eax]; 
0x080c83ba: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; idiv al; call dword ptr [edi]; 
0x080c5eaa: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; lahf; clc; jmp dword ptr [ebx]; 
0x080d222a: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; cld; call edi; 
0x080c6a7a: add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x08080fd6: add byte ptr [eax], al; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cd6: add byte ptr [eax], al; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08081071: add byte ptr [eax], al; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x0808d50b: add byte ptr [eax], al; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d63c]; add ecx, ebx; jmp ecx; 
0x08080f88: add byte ptr [eax], al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808061e: add byte ptr [eax], al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x0808b5e2: add byte ptr [eax], al; movzx eax, byte ptr [ebx + eax - 0x1d760]; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0806084e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x080a6be6: add byte ptr [eax], al; movzx edx, dl; mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x0804dc61: add byte ptr [eax], al; movzx edx, dl; mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x080c975e: add byte ptr [eax], al; nop; inc esp; stc; jmp dword ptr [edi]; 
0x080ae09e: add byte ptr [eax], al; nop; push ss; stc; jmp dword ptr [eax + 0x16]; 
0x080caf8e: add byte ptr [eax], al; nop; sbb edx, edi; jmp dword ptr [esi]; 
0x080c849e: add byte ptr [eax], al; nop; stc; clc; jmp dword ptr [ebp]; 
0x080d13f2: add byte ptr [eax], al; or al, 0x1f; cld; jmp dword ptr [eax]; 
0x080c6a22: add byte ptr [eax], al; or al, 0x21; add byte ptr [eax], al; mov bl, al; clc; call dword ptr [eax]; 
0x080cbf32: add byte ptr [eax], al; or al, 0x43; cli; jmp dword ptr [ecx]; 
0x080cf372: add byte ptr [eax], al; or al, 0x88; sti; call dword ptr [esi]; 
0x080d38e2: add byte ptr [eax], al; or al, 0xbf; cld; jmp dword ptr [esi + 3]; 
0x080c7606: add byte ptr [eax], al; or al, ah; clc; jmp dword ptr [esi]; 
0x080ca21e: add byte ptr [eax], al; or byte ptr [ecx], bl; add byte ptr [ecx + ecx*8], bl; stc; call esp; 
0x080d1456: add byte ptr [eax], al; or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x080ccb1e: add byte ptr [eax], al; or byte ptr [edx + 0x6b8c0000], al; cli; call dword ptr [edx]; 
0x080c931e: add byte ptr [eax], al; or byte ptr [edx], cl; add byte ptr [edx + edi], ch; stc; call dword ptr [edi]; 
0x0809d7dd: add byte ptr [eax], al; or dword ptr [edx], 1; pop ebx; pop esi; pop edi; ret; 
0x080677b6: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x080c7af6: add byte ptr [eax], al; pop eax; out 0xf8, al; jmp dword ptr [edx]; 
0x08056112: add byte ptr [eax], al; pop eax; pop edx; pop ebx; ret; 
0x0806d987: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0808e3b6: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x080622de: add byte ptr [eax], al; pop ebx; mov eax, 1; ja 0x1a2ea; neg eax; ret; 
0x08072a1e: add byte ptr [eax], al; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0809bfec: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x08048aea: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08055fbb: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0809182e: add byte ptr [eax], al; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x0805daee: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0805da8e: add byte ptr [eax], al; pop ebx; ret; 
0x0805b9d3: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0806238e: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x08091df0: add byte ptr [eax], al; pop edi; ret; 
0x0809d81e: add byte ptr [eax], al; pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0809e53e: add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0806ebaf: add byte ptr [eax], al; pop edx; pop ecx; pop ebx; ret; 
0x08096255: add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x08072a24: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0806ad10: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x080d3172: add byte ptr [eax], al; pop esp; call 0xb3d5b17a; cld; jmp dword ptr [eax]; 
0x080cb472: add byte ptr [eax], al; pop esp; imul eax, dword ptr [eax], 0; js 0x8349c; cli; jmp dword ptr [esi]; 
0x080cb272: add byte ptr [eax], al; pop esp; imul eax, dword ptr [eax], 0xfa1c2800; jmp dword ptr [esi]; 
0x080d1a52: add byte ptr [eax], al; pop esp; inc ecx; cld; call dword ptr [ebx + 1]; 
0x080cbca2: add byte ptr [eax], al; pop esp; xor bh, dl; jmp dword ptr [eax]; 
0x080536de: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x0805342c: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x08050eed: add byte ptr [eax], al; push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x40]; 
0x08050f85: add byte ptr [eax], al; push 0; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x080c757e: add byte ptr [eax], al; push 0x4c00002c; fdivp st(0); call dword ptr [edx]; 
0x080d667e: add byte ptr [eax], al; push 0x5c00011d; dec ebp; std; jmp dword ptr [ecx + 1]; 
0x080512e2: add byte ptr [eax], al; push 1; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x0805371e: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ecx + 0x40]; 
0x080510be: add byte ptr [eax], al; push 2; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x0805351a: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [edx + 0x40]; 
0x080a3110: add byte ptr [eax], al; push dword ptr [ebx + edx - 0x7d]; ret; 
0x08050cb7: add byte ptr [eax], al; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push ebp; call dword ptr [ebx + 0x40]; 
0x0804edc7: add byte ptr [eax], al; push dword ptr [esp + 0x38]; push dword ptr [ecx]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08050cb0: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push ebp; call dword ptr [ebx + 0x40]; 
0x0805320d: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x08053214: add byte ptr [eax], al; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x080c8366: add byte ptr [eax], al; push eax; cmp al, byte ptr [eax]; add byte ptr [esi + esi*8 - 8], dl; call dword ptr [edi]; 
0x08079007: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call edi; 
0x08074d13: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08077635: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08078555: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0805114d: add byte ptr [eax], al; push eax; push esi; call dword ptr [esi + 0x18]; 
0x080514ec: add byte ptr [eax], al; push eax; push esi; call dword ptr [esi + 4]; 
0x080d0b66: add byte ptr [eax], al; push eax; ret 0; 
0x0808f58c: add byte ptr [eax], al; push ebx; call dword ptr [eax + 0x34]; 
0x0806ce9e: add byte ptr [eax], al; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080c9c07: add byte ptr [eax], al; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080cc6af: add byte ptr [eax], al; push edx; cli; call dword ptr [ecx]; 
0x080c79ca: add byte ptr [eax], al; push esp; add byte ptr [eax], al; add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x080c836a: add byte ptr [eax], al; push esp; idiv al; call dword ptr [edi]; 
0x080c5b76: add byte ptr [eax], al; pushal; adc al, byte ptr [eax]; add byte ptr [ebx + edx*4 - 8], al; jmp dword ptr [edx]; 
0x080cb60e: add byte ptr [eax], al; pushal; and edi, edx; jmp dword ptr [esi]; 
0x080c934e: add byte ptr [eax], al; pushal; cmp bh, cl; call dword ptr [eax]; 
0x080c72ae: add byte ptr [eax], al; pushal; fdivr st(0); jmp dword ptr [edi]; 
0x080c837e: add byte ptr [eax], al; pushal; idiv al; call dword ptr [edi]; 
0x080cb6c2: add byte ptr [eax], al; pushfd; and edi, edx; call dword ptr [edi]; 
0x080cfdd2: add byte ptr [eax], al; pushfd; idiv bl; jmp esi; 
0x080cbcb2: add byte ptr [eax], al; pushfd; jae 0x83cb7; add byte ptr [eax + 0x32], ch; cli; jmp dword ptr [esi]; 
0x080c7fb2: add byte ptr [eax], al; pushfd; out dx, eax; clc; call dword ptr [eax]; 
0x080c7f62: add byte ptr [eax], al; pushfd; out dx, eax; clc; call dword ptr [ebx]; 
0x080cafb2: add byte ptr [eax], al; pushfd; sbb edx, edi; jmp dword ptr [esi]; 
0x080d43ee: add byte ptr [eax], al; rcl al, 1; cld; jmp dword ptr [edi]; 
0x080c5be6: add byte ptr [eax], al; rcl byte ptr [edx], 1; add byte ptr [eax], al; add al, 0x94; clc; jmp dword ptr [ebx]; 
0x080c70ae: add byte ptr [eax], al; rcl dl, 1; clc; jmp dword ptr [edi]; 
0x080c67e6: add byte ptr [eax], al; rcr byte ptr [esi], 1; add byte ptr [eax], al; adc al, 0xbd; clc; jmp dword ptr [eax]; 
0x080b1266: add byte ptr [eax], al; ret 0; 
0x080b81de: add byte ptr [eax], al; ret 0x10; 
0x080b9eae: add byte ptr [eax], al; ret 0x1d4; 
0x080ba646: add byte ptr [eax], al; ret 0x1d5; 
0x080b8eb6: add byte ptr [eax], al; ret 0x24; 
0x080b93a6: add byte ptr [eax], al; ret 0x33; 
0x080b79de: add byte ptr [eax], al; ret 0xa; 
0x080b7dde: add byte ptr [eax], al; ret 0xd; 
0x080bb282: add byte ptr [eax], al; ret 1; 
0x080bb482: add byte ptr [eax], al; ret 2; 
0x080bb682: add byte ptr [eax], al; ret 3; 
0x080a1d0e: add byte ptr [eax], al; ret 4; 
0x080bba82: add byte ptr [eax], al; ret 5; 
0x080b7586: add byte ptr [eax], al; ret 6; 
0x080bbe82: add byte ptr [eax], al; ret 7; 
0x080bc082: add byte ptr [eax], al; ret 8; 
0x080bc282: add byte ptr [eax], al; ret 9; 
0x08057006: add byte ptr [eax], al; ret; 
0x080bb87e: add byte ptr [eax], al; rol byte ptr [eax + eax], 0; ret 4; 
0x080b7c86: add byte ptr [eax], al; ror byte ptr [eax + eax], 0; ret; 
0x080d06d6: add byte ptr [eax], al; sar byte ptr [ebp + 0x4a40000], 0xfc; jmp esi; 
0x080c7632: add byte ptr [eax], al; sbb al, 0x2d; add byte ptr [eax], al; cmp al, ah; clc; call dword ptr [edi]; 
0x080c7832: add byte ptr [eax], al; sbb al, 0x2f; add byte ptr [eax], al; sbb bl, ah; clc; call dword ptr [edi]; 
0x080d3782: add byte ptr [eax], al; sbb al, 0xbb; cld; call dword ptr [edi]; 
0x080ca222: add byte ptr [eax], al; sbb al, 0xc9; stc; call esp; 
0x080cf1b2: add byte ptr [eax], al; sbb al, 0xcd; std; jmp dword ptr [ebp]; 
0x080d3d32: add byte ptr [eax], al; sbb al, 0xf4; add byte ptr [eax], al; js 0x8bcff; cld; call dword ptr [edi]; 
0x080c7ff6: add byte ptr [eax], al; sbb al, dh; clc; call dword ptr [edi]; 
0x080c7836: add byte ptr [eax], al; sbb bl, ah; clc; call dword ptr [edi]; 
0x080c8fb2: add byte ptr [eax], al; sbb byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xd4000046]; xor ecx, edi; jmp dword ptr [edx]; 
0x080c9176: add byte ptr [eax], al; sbb byte ptr [edi], dh; stc; jmp dword ptr [ecx]; 
0x080cbf2e: add byte ptr [eax], al; sbb byte ptr [esi], dh; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080d3db6: add byte ptr [eax], al; sbb dh, al; cld; jmp esp; 
0x080c769e: add byte ptr [eax], al; shl al, 1; clc; jmp dword ptr [ebp]; 
0x080cb0d6: add byte ptr [eax], al; shl byte ptr [edi], 0; xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x080b8eae: add byte ptr [eax], al; shl dword ptr [eax + eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x080a27cf: add byte ptr [eax], al; sti; push esi; call dword ptr [ebx]; 
0x080d56ea: add byte ptr [eax], al; sub al, 0; add byte ptr [eax], al; fmul dword ptr [0x167c0001]; std; jmp dword ptr [edx + 8]; 
0x080d3196: add byte ptr [eax], al; sub al, 0; add cl, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080caea2: add byte ptr [eax], al; sub al, 0x16; cli; call eax; 
0x080c9322: add byte ptr [eax], al; sub al, 0x3a; stc; call dword ptr [edi]; 
0x080d2a62: add byte ptr [eax], al; sub al, 0xa4; cld; jmp dword ptr [edi]; 
0x080c5342: add byte ptr [eax], al; sub al, 0xa; add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080c71d2: add byte ptr [eax], al; sub al, 0xd4; clc; call dword ptr [eax]; 
0x080c8342: add byte ptr [eax], al; sub al, 0xf6; clc; call dword ptr [edi]; 
0x080d0742: add byte ptr [eax], al; sub al, 7; cld; jmp edx; 
0x080cfd3e: add byte ptr [eax], al; sub byte ptr [eax + eax - 0x409c400], dh; jmp dword ptr [edi]; 
0x080c543e: add byte ptr [eax], al; sub byte ptr [ebx], cl; add byte ptr [eax], al; in al, dx; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080cb276: add byte ptr [eax], al; sub byte ptr [edx + edi*8], bl; jmp dword ptr [esi]; 
0x080c833e: add byte ptr [eax], al; sub byte ptr [edx], bh; add byte ptr [eax], al; sub al, 0xf6; clc; call dword ptr [edi]; 
0x080c8fd6: add byte ptr [eax], al; sub byte ptr [edx], dh; stc; call dword ptr [edi]; 
0x080d073e: add byte ptr [eax], al; sub byte ptr [esi + 0x72c0000], bh; cld; jmp edx; 
0x080cc73e: add byte ptr [eax], al; sub byte ptr [esi], bh; add ah, bh; pop esp; cli; call dword ptr [edi]; 
0x0806b3e9: add byte ptr [eax], al; sub eax, edx; ret; 
0x08091cc9: add byte ptr [eax], al; sub edi, 0x10; jb 0x49d90; lea eax, [eax + 0xf]; pop edi; ret; 
0x08091d3e: add byte ptr [eax], al; sub edi, 0xa; jb 0x49d90; lea eax, [eax + 9]; pop edi; ret; 
0x08091d4e: add byte ptr [eax], al; sub edi, 0xb; jb 0x49d90; lea eax, [eax + 0xa]; pop edi; ret; 
0x08091d5e: add byte ptr [eax], al; sub edi, 0xd; jb 0x49d90; lea eax, [eax + 0xc]; pop edi; ret; 
0x08091d6e: add byte ptr [eax], al; sub edi, 0xe; jb 0x49d90; lea eax, [eax + 0xd]; pop edi; ret; 
0x08091d7e: add byte ptr [eax], al; sub edi, 0xf; jb 0x49d90; lea eax, [eax + 0xe]; pop edi; ret; 
0x08091cde: add byte ptr [eax], al; sub edi, 2; jb 0x49d90; lea eax, [eax + 1]; pop edi; ret; 
0x08091c36: add byte ptr [eax], al; sub edi, 4; jb 0x49d90; lea eax, [eax + 3]; pop edi; ret; 
0x08091d1e: add byte ptr [eax], al; sub edi, 7; jb 0x49d90; lea eax, [eax + 6]; pop edi; ret; 
0x08091c69: add byte ptr [eax], al; sub edi, 8; jb 0x49d90; lea eax, [eax + 7]; pop edi; ret; 
0x08091d2e: add byte ptr [eax], al; sub edi, 9; jb 0x49d90; lea eax, [eax + 8]; pop edi; ret; 
0x080674b9: add byte ptr [eax], al; sub edx, 0x10; jb 0x1f590; lea eax, [edi + 0xf]; pop edi; ret; 
0x0806753e: add byte ptr [eax], al; sub edx, 0xa; jb 0x1f590; lea eax, [edi + 9]; pop edi; ret; 
0x0806754e: add byte ptr [eax], al; sub edx, 0xb; jb 0x1f590; lea eax, [edi + 0xa]; pop edi; ret; 
0x08067490: add byte ptr [eax], al; sub edx, 0xc; jb 0x1f590; lea eax, [edi + 0xb]; pop edi; ret; 
0x0806755e: add byte ptr [eax], al; sub edx, 0xd; jb 0x1f590; lea eax, [edi + 0xc]; pop edi; ret; 
0x0806756e: add byte ptr [eax], al; sub edx, 0xe; jb 0x1f590; lea eax, [edi + 0xd]; pop edi; ret; 
0x0806757e: add byte ptr [eax], al; sub edx, 0xf; jb 0x1f590; lea eax, [edi + 0xe]; pop edi; ret; 
0x080674de: add byte ptr [eax], al; sub edx, 2; jb 0x1f590; lea eax, [edi + 1]; pop edi; ret; 
0x08067425: add byte ptr [eax], al; sub edx, 4; jb 0x1f590; lea eax, [edi + 3]; pop edi; ret; 
0x0806751e: add byte ptr [eax], al; sub edx, 7; jb 0x1f590; lea eax, [edi + 6]; pop edi; ret; 
0x08067456: add byte ptr [eax], al; sub edx, 8; jb 0x1f590; lea eax, [edi + 7]; pop edi; ret; 
0x0806752e: add byte ptr [eax], al; sub edx, 9; jb 0x1f590; lea eax, [edi + 8]; pop edi; ret; 
0x08055e28: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x080544c8: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x080567ec: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push esi; call dword ptr [eax + 0x2c]; 
0x0808ec37: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x080aa05c: add byte ptr [eax], al; sub esp, 4; push dword ptr [esi]; push dword ptr [ebx + 4]; push ebp; call edi; 
0x0805cbce: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x30]; push esi; push ebx; call eax; 
0x08082c8b: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x08053be5: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebx + 0x38]; 
0x0805032c: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x0807e3e2: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08089e2f: add byte ptr [eax], al; sub esp, 4; push esi; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808e0de: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08052e61: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08052ac4: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x34]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08050c75: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x3c]; push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x080531d4: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0804fc88: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x080a915e: add byte ptr [eax], al; sub esp, 8; push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x0806dd9e: add byte ptr [eax], al; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push edi; call esi; 
0x0805c99e: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x0805d09e: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x34]; push ebp; call eax; 
0x080913d0: add byte ptr [eax], al; test ah, 0x20; jne 0x49470; lea eax, [edi - 4]; pop edi; ret; 
0x08066e14: add byte ptr [eax], al; test ah, 0x40; jne 0x1ef00; lea eax, [edi + 0xf]; pop edi; ret; 
0x080672b0: add byte ptr [eax], al; test ah, 0x40; jne 0x1f3f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08067b40: add byte ptr [eax], al; test ah, 0x40; jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x080913a7: add byte ptr [eax], al; test ah, 2; jne 0x49440; lea eax, [edi - 8]; pop edi; ret; 
0x08067287: add byte ptr [eax], al; test ah, 4; jne 0x1f3c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x08067b17: add byte ptr [eax], al; test ah, 4; jne 0x1fbd0; lea eax, [edx + 0xb]; ret; 
0x0809137e: add byte ptr [eax], al; test al, 0x20; jne 0x49410; lea eax, [edi - 0xc]; pop edi; ret; 
0x08066dc2: add byte ptr [eax], al; test al, 0x40; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x0806725e: add byte ptr [eax], al; test al, 0x40; jne 0x1f390; lea eax, [edi + 7]; pop edi; ret; 
0x08067aee: add byte ptr [eax], al; test al, 0x40; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x080cc506: add byte ptr [eax], al; test al, 0x52; cli; jmp dword ptr [ecx]; 
0x080cb6be: add byte ptr [eax], al; test al, 0x6d; add byte ptr [eax], al; pushfd; and edi, edx; call dword ptr [edi]; 
0x080d10be: add byte ptr [eax], al; test al, 0xc7; add byte ptr [eax], al; in al, dx; sbb edi, esp; call dword ptr [ebx]; 
0x080d46b6: add byte ptr [eax], al; test al, 0xd2; cld; call dword ptr [ebx]; 
0x08091359: add byte ptr [eax], al; test al, 2; jne 0x493e0; lea eax, [edi - 0x10]; pop edi; ret; 
0x080d4dbe: add byte ptr [eax], al; test al, 4; add dword ptr [eax], eax; pop esp; idiv esp; call dword ptr [esi]; 
0x0806723b: add byte ptr [eax], al; test al, 4; jne 0x1f360; lea eax, [edi + 3]; pop edi; ret; 
0x08067acb: add byte ptr [eax], al; test al, 4; jne 0x1fb70; lea eax, [edx + 3]; ret; 
0x080d420a: add byte ptr [eax], al; test bh, cl; cld; call dword ptr [ecx]; 
0x080c769a: add byte ptr [eax], al; test byte ptr [0xe0d00000], ch; clc; jmp dword ptr [ebp]; 
0x08091b67: add byte ptr [eax], al; test dh, 4; jne 0x49f0d; add eax, 0xb; pop edi; ret; 
0x08066c92: add byte ptr [eax], al; test dl, 0x40; jne 0x1ef10; lea eax, [edi + 7]; pop edi; ret; 
0x08091b40: add byte ptr [eax], al; test dl, 0x40; jne 0x49ef9; add eax, 7; pop edi; ret; 
0x08066cd8: add byte ptr [eax], al; test dl, 4; jne 0x1ef10; lea eax, [edi + 3]; pop edi; ret; 
0x08091b1a: add byte ptr [eax], al; test dl, 4; jne 0x49ee5; add eax, 3; pop edi; ret; 
0x080ae532: add byte ptr [eax], al; test dword ptr [esi], esp; stc; call dword ptr [esi + 0x28]; 
0x0806cab5: add byte ptr [eax], al; test eax, eax; jne 0x24ad8; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb85: add byte ptr [eax], al; test eax, eax; jne 0x24ba8; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806cd3b: add byte ptr [eax], al; test eax, eax; jne 0x24d80; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806ce2d: add byte ptr [eax], al; test eax, eax; jne 0x24e50; mov eax, 6; call dword ptr gs:[0x10]; 
0x08058cf8: add byte ptr [eax], al; test edx, edx; je 0x10d10; mov dword ptr [eax + 0x1898], 0; ret; 
0x080d271f: add byte ptr [eax], al; xchg eax, ebx; cld; call dword ptr [ebx + 4]; 
0x080c549e: add byte ptr [eax], al; xchg eax, esp; add dword ptr [eax], eax; add byte ptr [ebx + ecx + 0x79380000], cl; clc; jmp edi; 
0x080d0aba: add byte ptr [eax], al; xchg eax, esp; or edi, esp; jmp esi; 
0x080c6f0a: add byte ptr [eax], al; xchg eax, esp; sar al, 1; call dword ptr [esi]; 
0x080cb0da: add byte ptr [eax], al; xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x080c72aa: add byte ptr [eax], al; xchg eax, esp; sub dword ptr [eax], eax; add byte ptr [eax - 0x28], ah; clc; jmp dword ptr [edi]; 
0x080cb83a: add byte ptr [eax], al; xor al, 0x2b; cli; jmp dword ptr [edx]; 
0x080ceb2a: add byte ptr [eax], al; xor al, 0x42; sti; call dword ptr [eax]; 
0x080c934a: add byte ptr [eax], al; xor al, 0x4a; add byte ptr [eax], al; pushal; cmp bh, cl; call dword ptr [eax]; 
0x080c5b5a: add byte ptr [eax], al; xor al, 0x93; clc; jmp dword ptr [ecx]; 
0x080ca58a: add byte ptr [eax], al; xor al, 0xd9; stc; call edx; 
0x080d344a: add byte ptr [eax], al; xor al, 0xeb; add byte ptr [eax], al; inc eax; mov ch, 0xfc; call dword ptr [ebp]; 
0x080d042a: add byte ptr [eax], al; xor al, 0xff; sti; call ecx; 
0x080cfefe: add byte ptr [eax], al; xor bh, 0xfb; jmp dword ptr [ebp]; 
0x080cbc3f: add byte ptr [eax], al; xor bh, dl; jmp dword ptr [ecx]; 
0x080d5146: add byte ptr [eax], al; xor byte ptr [eax], cl; add dword ptr [eax], eax; mov ah, 7; std; call dword ptr [edx + 1]; 
0x080c8e8e: add byte ptr [eax], al; xor byte ptr [ecx + edi*8], ch; call dword ptr [edx]; 
0x080cbbae: add byte ptr [eax], al; xor byte ptr [ecx], 0xfa; jmp dword ptr [esi]; 
0x0806b59e: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0809ee8e: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x08066f0e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080561fe: add byte ptr [eax], al; xor eax, eax; ret; 
0x08049038: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0809b40a: add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0808afc4: add byte ptr [eax], al; xor ecx, ecx; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0807c220: add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0806ec89: add byte ptr [eax], al; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080c7697: add byte ptr [eax], bh; add byte ptr [eax], al; add byte ptr [ebp + ebp - 0x1f300000], al; clc; jmp dword ptr [ebp]; 
0x080c6f4f: add byte ptr [eax], bh; add byte ptr es:[eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x080c5347: add byte ptr [eax], bh; arpl si, di; call dword ptr [edx]; 
0x080c8357: add byte ptr [eax], bh; idiv al; jmp dword ptr [ecx]; 
0x080c54a7: add byte ptr [eax], bh; jns 0x7d4a3; jmp edi; 
0x080d0d4f: add byte ptr [eax], bh; les eax, ptr [eax]; add ah, cl; adc al, 0xfc; jmp dword ptr [edi]; 
0x0806f05f: add byte ptr [eax], bh; ret; 
0x080d1a4f: add byte ptr [eax], bh; rol dword ptr [eax], 1; add byte ptr [ecx + eax*2 - 4], bl; call dword ptr [ebx + 1]; 
0x08062209: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x080625a3: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x080d444f: add byte ptr [eax], bh; sti; add byte ptr [eax], al; in al, dx; sar ah, 1; jmp dword ptr [ebx]; 
0x080c9177: add byte ptr [eax], bl; aaa; stc; jmp dword ptr [ecx]; 
0x080c8fb3: add byte ptr [eax], bl; add byte ptr [eax], al; add byte ptr [eax - 0x2bffffba], ah; xor ecx, edi; jmp dword ptr [edx]; 
0x080cbf2f: add byte ptr [eax], bl; jbe 0x83f33; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080c7837: add byte ptr [eax], bl; jecxz 0x7f833; call dword ptr [edi]; 
0x080c833f: add byte ptr [eax], ch; cmp al, byte ptr [eax]; add byte ptr [esi + esi*8], ch; clc; call dword ptr [edi]; 
0x080cc73f: add byte ptr [eax], ch; jle 0x84743; add ah, bh; pop esp; cli; call dword ptr [edi]; 
0x080cfd3f: add byte ptr [eax], ch; mov ah, 0; add byte ptr [esi + esi*8], bh; sti; jmp dword ptr [edi]; 
0x080d073f: add byte ptr [eax], ch; mov esi, 0x72c0000; cld; jmp edx; 
0x080c543f: add byte ptr [eax], ch; or eax, dword ptr [eax]; add ah, ch; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080cb277: add byte ptr [eax], ch; sbb al, 0xfa; jmp dword ptr [esi]; 
0x080c8fd7: add byte ptr [eax], ch; xor bh, cl; call dword ptr [edi]; 
0x080ccb1f: add byte ptr [eax], cl; add byte ptr [eax], 0; mov word ptr [ebx - 6], gs; call dword ptr [edx]; 
0x0806e786: add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d845], cl; fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x080c931f: add byte ptr [eax], cl; dec edx; add byte ptr [eax], al; sub al, 0x3a; stc; call dword ptr [edi]; 
0x080d1457: add byte ptr [eax], cl; pop ds; cld; jmp dword ptr [esi]; 
0x080ca21f: add byte ptr [eax], cl; pop ecx; add byte ptr [eax], al; sbb al, 0xc9; stc; call esp; 
0x080c8e8f: add byte ptr [eax], dh; sub al, 0xf9; call dword ptr [edx]; 
0x080cbc9b: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax + 0x5c000073], cl; xor bh, dl; jmp dword ptr [eax]; 
0x080c82ab: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax - 0x43ffffc7], bl; cmc; clc; call dword ptr [edi]; 
0x080c83b3: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax - 0x5bffffc6], ah; idiv al; call dword ptr [edi]; 
0x080ccb1b: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [eax], cl; add byte ptr [eax], 0; mov word ptr [ebx - 6], gs; call dword ptr [edx]; 
0x080c8e87: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [ebp + eax*2], dh; add byte ptr [eax], dh; sub al, 0xf9; call dword ptr [edx]; 
0x080c839f: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edx + edi - 0x9680000], cl; clc; call dword ptr [edi]; 
0x080c8377: add byte ptr [eax], dl; add byte ptr [eax], al; add byte ptr [edx + edi], ah; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x0805a206: add byte ptr [eax], dl; add byte ptr [ecx + 0x100000fa], al; add byte ptr [edi], cl; inc edi; ret 0xc539; 
0x08058420: add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x0805a20c: add byte ptr [eax], dl; add byte ptr [edi], cl; inc edi; ret 0xc539; 
0x080c832f: add byte ptr [eax], dl; idiv al; jmp dword ptr [ecx]; 
0x080cb627: add byte ptr [eax], dl; insd dword ptr es:[edi], dx; add byte ptr [eax], al; je 0x83651; cli; jmp dword ptr [esi]; 
0x080ceb27: add byte ptr [eax], dl; mov byte ptr [0x42340000], al; sti; call dword ptr [eax]; 
0x080d0427: add byte ptr [eax], dl; mov ebx, 0xff340000; sti; call ecx; 
0x080cc61f: add byte ptr [eax], dl; std; jmp dword ptr [esi]; 
0x0806c8fc: add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x080a4761: add byte ptr [ebp + 0x10], dh; add esp, 0x2c; ret; 
0x08062e3c: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x080937dc: add byte ptr [ebp + 0x13], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a269b: add byte ptr [ebp + 0x15c97], cl; add byte ptr [ecx], bh; ret 0x5589; 
0x0809b111: add byte ptr [ebp + 0x17840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0806cc8d: add byte ptr [ebp + 0x17], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08056c3f: add byte ptr [ebp + 0x18b3050], cl; mov dword ptr [edx], eax; ret; 
0x0806ccf3: add byte ptr [ebp + 0x19], dh; add esp, 0x18; pop ebx; ret; 
0x0806d870: add byte ptr [ebp + 0x1d], dh; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0809250c: add byte ptr [ebp + 0x2444c7c0], al; adc al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xff85; 
0x0806bc9d: add byte ptr [ebp + 0x24], dh; add esp, 0x18; pop ebx; ret; 
0x08099d40: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x08067e08: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08081768: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; jmp eax; 
0x08066eb8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ec8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ed8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066ee8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066ef8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066e48: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08066e58: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08066e68: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08066e78: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08066e88: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08066e98: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x08066ea8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x08091418: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xa]; pop edi; ret; 
0x08091408: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xb]; pop edi; ret; 
0x080913f8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913e8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xe]; pop edi; ret; 
0x08091488: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 1]; pop edi; ret; 
0x08091478: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 2]; pop edi; ret; 
0x08091468: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 3]; pop edi; ret; 
0x08091458: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 5]; pop edi; ret; 
0x08091448: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 6]; pop edi; ret; 
0x08091438: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 7]; pop edi; ret; 
0x08091428: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 9]; pop edi; ret; 
0x08067b58: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08056eb8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08092bc8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x08092bd8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 2; ret; 
0x08092be8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 3; ret; 
0x08092bf8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 4; ret; 
0x08092c08: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 5; ret; 
0x08092c18: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 6; ret; 
0x08092c28: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 7; ret; 
0x08056f28: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ca8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x08066f08: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080561f8: add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0809ecec: add byte ptr [ebp + 0x28], dh; add esp, 0xd4; pop ebx; pop esi; ret; 
0x080622b2: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x08092e32: add byte ptr [ebp + 0x2f], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0809e643: add byte ptr [ebp + 0x32], dh; add esp, 0x28; pop ebx; ret; 
0x080a311f: add byte ptr [ebp + 0x391174c0], al; ret 0xd875; 
0x080932bc: add byte ptr [ebp + 0x3a], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0807c476: add byte ptr [ebp + 0x3e], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0808ebf3: add byte ptr [ebp + 0x45450fd2], al; in al, 0xc7; ret 0xafc0; 
0x08062e08: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x08059fe3: add byte ptr [ebp + 0x4e80d], cl; add byte ptr [ecx], al; ret 0x48b; 
0x0809257e: add byte ptr [ebp + 0x50342444], cl; push dword ptr [ebp + 8]; call esi; 
0x080a0065: add byte ptr [ebp + 0x51], dh; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x08049094: add byte ptr [ebp + 0x5880fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db8c], cl; ret 0xbf88; 
0x08049d19: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x080a18e5: add byte ptr [ebp + 0x67], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x08053dde: add byte ptr [ebp + 0xb880fdb], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x94b5], cl; add bh, al; ret 0xafc0; 
0x0809ce42: add byte ptr [ebp + 0xb], dh; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x080608e9: add byte ptr [ebp + 0xbf], cl; add byte ptr [eax + 1], bh; ja 0x188f9; neg eax; ret; 
0x080562a9: add byte ptr [ebp + 0xbf], cl; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x0809e519: add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x2b650440], cl; add eax, 0; ret; 
0x080a8c39: add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x080a0945: add byte ptr [ebp + 0xc], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0809e7c5: add byte ptr [ebp + 0xc], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0809ea5c: add byte ptr [ebp + 0xd], dh; add esp, 0x2c; ret; 
0x0806ec85: add byte ptr [ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0809babe: add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x080a1312: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0806d840: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0809e878: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x08058830: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0809ed70: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a1409: add byte ptr [ebp + 8], dh; add esp, 0x2c; ret; 
0x0809370b: add byte ptr [ebp + 8], dh; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x0809e6d8: add byte ptr [ebp + 9], dh; add esp, 0x2c; ret; 
0x080c8e8b: add byte ptr [ebp + eax*2], dh; add byte ptr [eax], dh; sub al, 0xf9; call dword ptr [edx]; 
0x080c769b: add byte ptr [ebp + ebp - 0x1f300000], al; clc; jmp dword ptr [ebp]; 
0x080b7dd7: add byte ptr [ebp + ecx + 0xdbf0000], bh; add byte ptr [eax], al; ret 0xd; 
0x080d6683: add byte ptr [ebp + ecx*2 - 3], bl; jmp dword ptr [ecx + 1]; 
0x080cc6ab: add byte ptr [ebp + edi*2 + 0x52000000], dl; cli; call dword ptr [ecx]; 
0x080d46b3: add byte ptr [ebp + edi*8 - 0x2d580000], bl; cld; call dword ptr [ebx]; 
0x0807bc18: add byte ptr [ebp - 0x14343], cl; dec dword ptr [ecx + 0x19a0b3]; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x08075641: add byte ptr [ebp - 0x1477f02e], al; add al, byte ptr [eax]; add bh, dh; ret 0xf800; 
0x080a5d37: add byte ptr [ebp - 0x15cb37d], cl; call dword ptr [eax - 0x73]; 
0x080a579f: add byte ptr [ebp - 0x160377d], cl; call dword ptr [eax - 0x73]; 
0x080a21ef: add byte ptr [ebp - 0x162e77d], cl; call dword ptr [eax + 0x68]; 
0x080a21fb: add byte ptr [ebp - 0x164f67d], cl; call dword ptr [eax - 0x73]; 
0x08049783: add byte ptr [ebp - 0x165e97d], cl; call dword ptr [esi - 1]; 
0x080ab7e0: add byte ptr [ebp - 0x1b], dh; add esp, 4; pop ebx; pop esi; ret; 
0x08096f25: add byte ptr [ebp - 0x1c9bb7d], cl; call dword ptr [eax - 0x73]; 
0x08093e7b: add byte ptr [ebp - 0x1c9cf7d], cl; call dword ptr [eax - 0x73]; 
0x08096aa8: add byte ptr [ebp - 0x1cee27d], cl; call dword ptr [eax + 0x6a]; 
0x0809491f: add byte ptr [ebp - 0x1d00c7d], cl; push dword ptr [ecx]; dec dword ptr [ecx - 0x937b]; jmp dword ptr [esi - 0x70]; 
0x0807eea2: add byte ptr [ebp - 0x1da017d], cl; call dword ptr [eax - 0x73]; 
0x080c7633: add byte ptr [ebp - 0x1fc80000], bl; clc; call dword ptr [edi]; 
0x0807b844: add byte ptr [ebp - 0x2959b7d], cl; call dword ptr [eax - 0x18]; 
0x08075915: add byte ptr [ebp - 0x2a03f7d], cl; call dword ptr [eax - 0x73]; 
0x08073a51: add byte ptr [ebp - 0x2a3dd7d], cl; call dword ptr [eax - 0x73]; 
0x0806fdbe: add byte ptr [ebp - 0x2ae5a7d], cl; inc dword ptr [ebx - 0x4c72f314]; fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x0806c33d: add byte ptr [ebp - 0x2bb477d], cl; call dword ptr [eax - 0x73]; 
0x0806b9b9: add byte ptr [ebp - 0x2bf9f7d], cl; call dword ptr [eax - 0x73]; 
0x080a134a: add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x080488b6: add byte ptr [ebp - 0x2ddb77d], cl; call dword ptr [eax - 0x18]; 
0x080a0fcf: add byte ptr [ebp - 0x38728a0a], al; ret 0; 
0x080493b7: add byte ptr [ebp - 0x389b8b40], al; ret 0xbf78; 
0x0806fce3: add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x08058cf9: add byte ptr [ebp - 0x38ed8b2e], al; sbb byte ptr [eax + 0x18], 0; add byte ptr [eax], al; ret; 
0x0809f731: add byte ptr [ebp - 0x397cd1c4], cl; add al, 0x83; cli; add dword ptr [ecx - 0x7cbb81f9], ecx; ret; 
0x0806ea66: add byte ptr [ebp - 0x3dbbf040], al; ret; 
0x080b8083: add byte ptr [ebp - 0x3ffffff1], bh; sldt word ptr [eax]; ret; 
0x0806cd3c: add byte ptr [ebp - 0x47c08a40], al; fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806c9a4: add byte ptr [ebp - 0x47c88a40], al; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806cb86: add byte ptr [ebp - 0x47e28a40], al; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cab6: add byte ptr [ebp - 0x47e28a40], al; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08080d22: add byte ptr [ebp - 0x527af02e], al; adc al, byte ptr [eax]; add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x0805c63b: add byte ptr [ebp - 0x537af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0ef05], al; ret; 
0x0806c1f7: add byte ptr [ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x08079ce8: add byte ptr [ebp - 0x605bf7d], cl; call dword ptr [eax - 1]; 
0x0809b04d: add byte ptr [ebp - 0x637bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0806c622: add byte ptr [ebp - 0x65], dh; lea ecx, [esp + 0x14]; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x08057caf: add byte ptr [ebp - 0x727b8b01], al; pop edi; or byte ptr [ecx], bh; ret; 
0x0809d52e: add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc al, byte ptr [ebp - 2]; jmp dword ptr [ebp - 1]; 
0x080a0fc5: add byte ptr [ebp - 0x74898b40], al; mov bl, 0xa8; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x38728a0a], al; ret 0; 
0x0806fcb7: add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x0806d6d2: add byte ptr [ebp - 0x75], ah; push ebp; add cl, ch; sar ebp, 0xff; jmp dword ptr [ebp - 0x39]; 
0x0805ce3b: add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x08048be2: add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x08079bdf: add byte ptr [ebp - 0x7aef8b2e], al; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x080a24ec: add byte ptr [ebp - 0x7c208a01], al; in al, dx; add al, 0x83; ret; 
0x0806a96f: add byte ptr [ebp - 0x7c8b8a25], al; ret 0x6610; 
0x080701e7: add byte ptr [ebp - 0x7cf38b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0806d7d6: add byte ptr [ebp - 0x7cfa8b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x080a62bf: add byte ptr [ebp - 0x7e0b8a37], al; ret; 
0x08058d3d: add byte ptr [ebp - 0x7e70f70], cl; dec dword ptr [ecx + 0x50090]; add bl, dh; ret; 
0x08059e5c: add byte ptr [ebp - 0x800fdac], cl; fsub dword ptr [ecx]; ror byte ptr [ebx + 0x1242454], 1; ret 0xfa81; 
0x08048745: add byte ptr [ebp - 0x9096f7d], cl; call dword ptr [eax - 0x73]; 
0x08095602: add byte ptr [ebp - 0xb7af040], al; idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x0808b2d4: add byte ptr [ebp - 0xc7af001], al; adc al, 0; add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x0806c8a4: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806c384: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x0806d94e: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806d981: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806eba9: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop edx; pop ecx; pop ebx; ret; 
0x08093324: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0808eac7: add byte ptr [ebx + 0x106a04ec], al; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x08095029: add byte ptr [ebx + 0x107030f], cl; rol edi, 1; ret 0xa9f0; 
0x0804c980: add byte ptr [ebx + 0x15f480], cl; add byte ptr [ecx], bh; ret; 
0x0805695f: add byte ptr [ebx + 0x16a18ec], al; call 0xe3f0; add esp, 0x1c; ret; 
0x0805dae7: add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x08056f96: add byte ptr [ebx + 0x185c82], al; add byte ptr [ecx], al; pop ebx; ret; 
0x0809c769: add byte ptr [ebx + 0x1a7883], cl; add byte ptr [ecx], bh; ret 0x273; 
0x0806756f: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08091d6f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0806c00c: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0804d957: add byte ptr [ebx + 0x2480878c], cl; std; inc dword ptr [ecx]; stc; jmp ecx; 
0x080a11cf: add byte ptr [ebx + 0x2890c56], cl; add esp, 4; pop ebx; pop esi; ret; 
0x08051467: add byte ptr [ebx + 0x29182454], cl; fcmovb st(0), st(1); cli; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x0809e51f: add byte ptr [ebx + 0x2b650440], cl; add eax, 0; ret; 
0x0806755f: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08091d5f: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x08098083: add byte ptr [ebx + 0x31782444], cl; inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x080a162f: add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0806dd9f: add byte ptr [ebx + 0x33ff08ec], al; mov ebp, ebx; push edi; call esi; 
0x080aa05d: add byte ptr [ebx + 0x36ff04ec], al; push dword ptr [ebx + 4]; push ebp; call edi; 
0x0806754f: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08091d4f: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x08057d9f: add byte ptr [ebx + 0x408b0450], cl; or al, 0x83; ret; 
0x0806b58e: add byte ptr [ebx + 0x40a0b784], cl; std; inc dword ptr [ecx]; clc; jmp eax; 
0x0806e197: add byte ptr [ebx + 0x418b084f], cl; add al, 0x89; ret 0xe283; 
0x08095a72: add byte ptr [ebx + 0x420f02f8], al; ret; 
0x08095dda: add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x0805db1c: add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x080510fc: add byte ptr [ebx + 0x44890840], cl; and al, 0x20; mov esi, dword ptr [ebp + 0x54]; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0806ce76: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cb0e: add byte ptr [ebx + 0x448b10c4], al; and al, 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0808e0df: add byte ptr [ebx + 0x448d08ec], al; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08052e62: add byte ptr [ebx + 0x448d08ec], al; and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08052ac5: add byte ptr [ebx + 0x448d08ec], al; and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08050c76: add byte ptr [ebx + 0x448d08ec], al; and al, 0x3c; push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x080531d5: add byte ptr [ebx + 0x448d08ec], al; and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x080998c7: add byte ptr [ebx + 0x468b087d], cl; or byte ptr [ebx], al; pop es; call eax; 
0x0806753f: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x08091d3f: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x080a2b8f: add byte ptr [ebx + 0x4c8b01e8], al; ret 0x850c; 
0x0809a467: add byte ptr [ebx + 0x4d8b947d], cl; or byte ptr [ebx + 0x78b08c6], al; add eax, dword ptr [ecx]; call eax; 
0x08094dc5: add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x08053e08: add byte ptr [ebx + 0x51], dl; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x0805c7ef: add byte ptr [ebx + 0x525104ec], al; push ebx; call eax; 
0x08089e30: add byte ptr [ebx + 0x525604ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0806752f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x08091d2f: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x08048839: add byte ptr [ebx + 0x5c610c4], al; and byte ptr [ebx - 0x36fef7f3], dh; ret; 
0x0809d7de: add byte ptr [ebx + 0x5e5b010a], al; pop edi; ret; 
0x080496d3: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0804ef77: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0807a712: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; pop ebp; ret; 
0x08054b80: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x08052a79: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0804d49c: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0805c00a: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x08048345: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0804aee1: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x08054683: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x08075562: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0806f76c: add byte ptr [ebx + 0x5e5b74c4], al; pop edi; pop ebp; ret; 
0x08074d8c: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0809d3d6: add byte ptr [ebx + 0x5e], bl; cmp eax, -1; cmove eax, edx; pop edi; ret; 
0x0806eae2: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x08048aeb: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08053f3c: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0809182f: add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x0805daef: add byte ptr [ebx + 0x5e], bl; ret; 
0x08091d8f: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x08092cb5: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; pop ebx; ret; 
0x080645af: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x080567ed: add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [eax + 0x2c]; 
0x0804fc89: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0806751f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x08091d1f: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0805cbcf: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x30; push esi; push ebx; call eax; 
0x0805c99f: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push ebx; call eax; 
0x0805c48f: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x0805d09f: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x34; push ebp; call eax; 
0x080a8e54: add byte ptr [ebx + 0x758bf45d], cl; clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0808ec38: add byte ptr [ebx + 0x75ff04ec], al; in al, 0xff; jne 0x46c4e; push esi; call dword ptr [eax + 0x2c]; 
0x080a915f: add byte ptr [ebx + 0x75ff08ec], al; or al, 0x53; call dword ptr [ebp + 8]; 
0x080ab71f: add byte ptr [ebx + 0x76ff0cec], al; cmp al, ch; aad 0x11; sti; inc edi; ret 0; 
0x080a2552: add byte ptr [ebx + 0x7d8bd45d], cl; fadd st(7); ret 0xbf4c; 
0x08053acf: add byte ptr [ebx + 0x9485], cl; add bh, al; ret 0xafc0; 
0x080536ff: add byte ptr [ebx + 0x948e], cl; add bh, al; ret 0xafc0; 
0x0804fc69: add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x0808fb07: add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0xafc0; 
0x08053de6: add byte ptr [ebx + 0x94b5], cl; add bh, al; ret 0xafc0; 
0x08053f67: add byte ptr [ebx + 0x94bb], cl; add bh, al; ret 0xafc0; 
0x0806fcb1: add byte ptr [ebx + 0x9886], cl; add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x08095407: add byte ptr [ebx + 0x9887], cl; add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x0807c453: add byte ptr [ebx + 0xa0249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08056c70: add byte ptr [ebx + 0xa750450], cl; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0806757f: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08091d7f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0806fcdd: add byte ptr [ebx + 0xb886], cl; add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x080a178f: add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080874bf: add byte ptr [ebx + 0xf042474], cl; mov esi, 0xc75f2444; ret 0xfff0; 
0x08085f57: add byte ptr [ebx + 0xf082454], cl; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x080a7c3a: add byte ptr [ebx + 0xf10247c], cl; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x0805b7ab: add byte ptr [ebx + 0xf14244c], cl; inc ebp; ret 0x548b; 
0x080a6102: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x938d; 
0x080a5667: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x93e9; 
0x080a5a32: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0xec83; 
0x080a226a: add byte ptr [ebx + 0xfc08500], cl; inc esp; ret; 
0x0809b10f: add byte ptr [ebx + 0xfc08500], cl; test byte ptr [edi], dl; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0806c62d: add byte ptr [ebx + 1], bh; call dword ptr gs:[0x10]; 
0x0807c21c: add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0809ce74: add byte ptr [ebx + eax - 0x7d], dh; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x080cbf33: add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080c8c6b: add byte ptr [ebx + eax*2], dl; add byte ptr [eax + 0x19], dh; stc; jmp dword ptr [eax + 0xf]; 
0x0809fe91: add byte ptr [ebx + eax*4], 0xc0; add dword ptr [ebp + 0x390475c9], eax; ret; 
0x080cb473: add byte ptr [ebx + ebp*2], bl; add byte ptr [eax + 0x22], bh; cli; jmp dword ptr [esi]; 
0x080d344b: add byte ptr [ebx + ebp*8], dh; add byte ptr [eax], al; inc eax; mov ch, 0xfc; call dword ptr [ebp]; 
0x080cb83b: add byte ptr [ebx + ebp], dh; cli; jmp dword ptr [edx]; 
0x080c54a3: add byte ptr [ebx + ecx + 0x79380000], cl; clc; jmp edi; 
0x080d1453: add byte ptr [ebx + ecx*8], bh; add byte ptr [eax], al; or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x080c849b: add byte ptr [ebx + edi - 0x6700000], al; clc; jmp dword ptr [ebp]; 
0x080d3783: add byte ptr [ebx + edi*4], bl; cld; call dword ptr [edi]; 
0x080994c9: add byte ptr [ebx + edi], 0xfe; call dword ptr [eax - 0x18]; 
0x08091f62: add byte ptr [ebx + edx*2 - 0x7d], dh; ret 0xf601; 
0x080c5b7b: add byte ptr [ebx + edx*4 - 8], al; jmp dword ptr [edx]; 
0x080c5b5b: add byte ptr [ebx + edx*4], dh; clc; jmp dword ptr [ecx]; 
0x080cbcb3: add byte ptr [ebx + esi*2 + 0x32680000], bl; cli; jmp dword ptr [esi]; 
0x080cbc3b: add byte ptr [ebx + esi*2], ah; add byte ptr [eax], al; add byte ptr [edx], dh; cli; jmp dword ptr [ecx]; 
0x0809e36f: add byte ptr [ebx - 0x137c338b], cl; or byte ptr [ebp - 0x1ba117a], cl; call dword ptr [eax - 0x73]; 
0x0807e087: add byte ptr [ebx - 0x137c4ffc], cl; add al, 0x53; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x08051c44: add byte ptr [ebx - 0x137cab92], cl; or al, 0x55; call dword ptr [ebp + 0x10]; 
0x08050d57: add byte ptr [ebx - 0x137caba3], cl; or al, 0x53; call dword ptr [ebx + 0x10]; 
0x08088567: add byte ptr [ebx - 0x137ccffc], cl; add al, 0x53; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x08052886: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x08054d1f: add byte ptr [ebx - 0x137cefba], cl; add al, 0x29; ret 0x5052; 
0x08093557: add byte ptr [ebx - 0x14d3db8c], cl; ret 0x9066; 
0x080a1747: add byte ptr [ebx - 0x17], bl; jb 0x59745; cld; jmp dword ptr [esi - 0x70]; 
0x080960cf: add byte ptr [ebx - 0x17a8f314], al; daa; push 0xc483fffc; adc cl, ch; mov edi, 0x89fffffd; ret 0x8d90; 
0x08090334: add byte ptr [ebx - 0x17aaf314], al; ret 0xfcc5; 
0x080aadf7: add byte ptr [ebx - 0x17aff314], al; call dword ptr [ecx - 0xb]; 
0x0807c3cf: add byte ptr [ebx - 0x17fbdbbc], cl; or eax, 0x81fffd3d; ret 0xdc27; 
0x0807109f: add byte ptr [ebx - 0x18], dl; fidiv dword ptr [esi - 3]; inc dword ptr [ecx + 0x68f5ac3]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x08092ebf: add byte ptr [ebx - 0x18], dl; mov edx, 0x81fffb58; ret; 
0x0808f5bf: add byte ptr [ebx - 0x18], dl; mov edx, 0x81fffb91; ret; 
0x0806dfb5: add byte ptr [ebx - 0x1d7c3bab], cl; add dword ptr [ecx], ecx; ret 0x1689; 
0x0807baa0: add byte ptr [ebx - 0x1db73], cl; jmp dword ptr [ebx]; 
0x0809bc69: add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax - 0x73]; 
0x0809c91f: add byte ptr [ebx - 0x26b73], cl; jmp dword ptr [ebp - 0x7d]; 
0x080710ab: add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x08098a81: add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x0804909c: add byte ptr [ebx - 0x38f3db8c], cl; ret 0xbf88; 
0x08048cb8: add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xb900; 
0x080490b0: add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x08053b65: add byte ptr [ebx - 0x38fbdbac], cl; ret; 
0x0806bb4a: add byte ptr [ebx - 0x38fbdbbc], cl; ret 0xb900; 
0x0807dfb4: add byte ptr [ebx - 0x397cf314], al; and byte ptr [ebx - 0x88763], cl; call dword ptr [esi - 0x18]; 
0x0806f07f: add byte ptr [ebx - 0x397cfe39], al; sub al, 0x83; call dword ptr [esi]; 
0x0807c089: add byte ptr [ebx - 0x39], dl; ret 0xffd0; 
0x0805dbfa: add byte ptr [ebx - 0x39], dl; ret; 
0x0804d751: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x08092cab: add byte ptr [ebx - 0x3d], bl; nop; push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0809bd30: add byte ptr [ebx - 0x3e7c0f1d], al; add al, 0x83; ret; 
0x0804a8b0: add byte ptr [ebx - 0x3f7cf33c], al; add dword ptr [esi - 0x77], esp; push eax; call dword ptr [edi - 1]; 
0x08092eb4: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0805b5d4: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0805eabf: add byte ptr [ebx - 0x42], dh; call 0x780; add ebx, 0x4ef61; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0808b275: add byte ptr [ebx - 0x4737b], cl; jmp dword ptr [ebp - 0x39]; 
0x08082495: add byte ptr [ebx - 0x4776b], cl; ljmp [ecx]; ret 0xd639; 
0x0808b2dc: add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x080811cc: add byte ptr [ebx - 0x4837b], cl; jmp dword ptr [ebp - 0x39]; 
0x080622df: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a2ea; neg eax; ret; 
0x08072a1f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0805d38f: add byte ptr [ebx - 0x4946f314], al; adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdbac], cl; and byte ptr [eax + 0x38], 0xfd; call dword ptr [eax - 0x77]; 
0x0809a7ae: add byte ptr [ebx - 0x4972df3c], al; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x0808c387: add byte ptr [ebx - 0x49f43], al; jmp dword ptr [eax]; 
0x0808b7f5: add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x080942c7: add byte ptr [ebx - 0x4c7243bb], cl; imul ebp, dword ptr [edi], -2; jmp dword ptr [ebp - 0x75]; 
0x08080b48: add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x0806eaa7: add byte ptr [ebx - 0x577c76fa], cl; or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x08088ca1: add byte ptr [ebx - 0x6274f314], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x0808847d: add byte ptr [ebx - 0x6274f314], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x08088c79: add byte ptr [ebx - 0x6274f714], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x52]; 
0x0806ca66: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0806c9ad: add byte ptr [ebx - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0807eb7a: add byte ptr [ebx - 0x6a76fb14], al; dec esp; idiv edi; call dword ptr [edx + 0x56]; 
0x0807f491: add byte ptr [ebx - 0x6a76fb14], al; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x0809937f: add byte ptr [ebx - 0x6b746383], cl; mov bh, 0x40; cmp edi, esi; inc dword ptr [ecx]; cli; jmp edx; 
0x0809a55b: add byte ptr [ebx - 0x6b7463b3], cl; mov ecx, 0xfffe3f48; add edx, ecx; jmp edx; 
0x0809a400: add byte ptr [ebx - 0x6bfc63ab], cl; mov edx, 0xfffe3e9c; jmp edx; 
0x080a7c5f: add byte ptr [ebx - 0x70f0c003], al; ret 0; 
0x0805b8cf: add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [eax + 0x39], bl; std; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0805d407: add byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [eax + 0x38], esp; std; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x08054ac9: add byte ptr [ebx - 0x72ebdba4], cl; or eax, 0x29; std; call dword ptr [eax - 0x73]; 
0x0805d397: add byte ptr [ebx - 0x72ebdbac], cl; and byte ptr [eax + 0x38], 0xfd; call dword ptr [eax - 0x77]; 
0x080a6df1: add byte ptr [ebx - 0x73743783], cl; xchg eax, ecx; mov dword ptr [0xf901fffe], eax; jmp ecx; 
0x08055e3c: add byte ptr [ebx - 0x74007afa], cl; dec esi; sbb al, 0x89; ret 0x6074; 
0x080488ce: add byte ptr [ebx - 0x746ffb3c], al; pop ebp; cld; leave; ret; 
0x0805403b: add byte ptr [ebx - 0x74c7db84], cl; scasb al, byte ptr es:[edi]; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080930cc: add byte ptr [ebx - 0x74c7dbac], cl; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0806cc58: add byte ptr [ebx - 0x74dbdbac], cl; dec esp; and al, 0x28; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0809340d: add byte ptr [ebx - 0x74dfdba4], cl; dec esp; and al, 0x24; call dword ptr gs:[0x10]; 
0x08059e76: add byte ptr [ebx - 0x74e3dbbc], cl; inc eax; or al, 0x39; ret 0x870f; 
0x0806c925: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0806d6f5: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0806cb45: add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080512bf: add byte ptr [ebx - 0x74f3dbbc], cl; popfd; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080867ac: add byte ptr [ebx - 0x74f7dbac], cl; push edx; or byte ptr [ecx - 0x7cd3dbac], cl; ret 0x3917; 
0x080a8c0f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x080a8caf: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x080a8c5f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop esp; ret; 
0x080a8c4f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x080a8cbf: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push esp; ret; 
0x080a8c3f: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056c4f: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0808f8ef: add byte ptr [ebx - 0x75], bl; add bl, byte ptr [esi + 0x5f]; ret; 
0x0804f351: add byte ptr [ebx - 0x76d7dbb4], cl; ret 0xdaf7; 
0x0807819f: add byte ptr [ebx - 0x76f7db8c], cl; ret 0x44c7; 
0x0806437f: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x080573c7: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x0805d953: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0805c3d7: add byte ptr [ebx - 0x77c0f20], al; fisttp word ptr [edi]; xchg eax, edi; ret 0x50e9; 
0x08052346: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [ecx - 0x7af03fbb]; ret; 
0x0806f61f: add byte ptr [ebx - 0x77cfc18], al; push ds; ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x0809a552: add byte ptr [ebx - 0x78f0d501], al; ret 6; 
0x0809a3f7: add byte ptr [ebx - 0x78f0d501], al; sbb eax, 0x8b000008; push ebp; pushfd; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x080919d4: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0805c643: add byte ptr [ebx - 0x79f0ef05], al; ret; 
0x0808dba4: add byte ptr [ebx - 0x79f0f608], al; ret 0; 
0x0805ca7c: add byte ptr [ebx - 0x7af0fd20], al; ret 0; 
0x0809812b: add byte ptr [ebx - 0x7b74f714], al; and al, 0x88; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c88b79], cl; call dword ptr [eax - 0x18]; 
0x08062fe7: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x0808c0c9: add byte ptr [ebx - 0x7bf0f708], al; ret 0; 
0x0807a155: add byte ptr [ebx - 0x7bf0f901], al; ret; 
0x08091e32: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0806a523: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0809a7c8: add byte ptr [ebx - 0x7bfc63bb], cl; mov eax, 0xfffe3ff4; jmp eax; 
0x0806ecfb: add byte ptr [ebx - 0x7c72eb14], al; xchg eax, esi; dec edx; std; call dword ptr [eax - 0x18]; 
0x080aba8b: add byte ptr [ebx - 0x7c72ef14], al; inc eax; sbb bh, ch; call dword ptr [eax - 1]; 
0x080723bf: add byte ptr [ebx - 0x7cacf314], al; ret; 
0x080786ef: add byte ptr [ebx - 0x7cc3dbbc], cl; ret 0xc704; 
0x08074168: add byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x080aa16f: add byte ptr [ebx - 0x7cf7db8c], cl; inc esp; and al, 0x18; add al, 0x83; ret; 
0x08078095: add byte ptr [ebx - 0x7cf7dbac], cl; ret 0x3904; 
0x0809fe87: add byte ptr [ebx - 0x7cfb7db4], cl; rol dword ptr [ecx], 0x89; dec esp; add byte ptr [ebx + eax*4], 0xc0; add dword ptr [ebp + 0x390475c9], eax; ret; 
0x0804d45f: add byte ptr [ebx - 0x7cff7abc], cl; mov dword ptr [ecx], 0x83ff4788; ret 0x3901; 
0x08091c6a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0809869c: add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0806ed19: add byte ptr [ebx - 0x7f72eb14], al; scasd eax, dword ptr es:[edi]; dec edx; std; call dword ptr [eax + 0x6a]; 
0x0807e644: add byte ptr [ebx - 0x87f73], cl; ljmp [ecx]; ret; 
0x0807e867: add byte ptr [ebx - 0x88763], cl; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x08088b2f: add byte ptr [ebx - 0x89363], cl; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x08088c57: add byte ptr [ebx - 0x8a343], al; call dword ptr [ebx + 0xf]; 
0x0807e213: add byte ptr [ebx - 0x8b37b], cl; inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x08083709: add byte ptr [ebx - 0x8b43], cl; dec dword ptr [ebp + 0x57890150]; adc al, 0xc6; add byte ptr [0xfffe8ae9], ch; jmp dword ptr [esi - 0x70]; 
0x08089045: add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x0807b137: add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0804ad1f: add byte ptr [ebx - 0x976b], cl; inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x08053be6: add byte ptr [ebx - 0xa8fb14], al; je 0xbc12; cmp al, 0x56; call dword ptr [ebx + 0x38]; 
0x0805032d: add byte ptr [ebx - 0xa9fb14], al; jne 0x833d; push ecx; call dword ptr [ebx + 0x1c]; 
0x080cb62b: add byte ptr [ebx - 6], dh; jmp dword ptr [esi]; 
0x0807565e: add byte ptr [ebx], 0; add bh, dh; ret 0; 
0x080cadc4: add byte ptr [ebx], 2; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0809b032: add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x458b; 
0x08058f97: add byte ptr [ebx], al; push eax; or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x0806ac9c: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0805e8ca: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x08062326: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0805a208: add byte ptr [ecx + 0x100000fa], al; add byte ptr [edi], cl; inc edi; ret 0xc539; 
0x0809d528: add byte ptr [ecx + 0x101cec], al; add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc al, byte ptr [ebp - 2]; jmp dword ptr [ebp - 1]; 
0x0807c81a: add byte ptr [ecx + 0x110245c], cl; ret 0x5489; 
0x0807c7d0: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080d5653: add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x0806c1e9: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08056471: add byte ptr [ecx + 0x186093], cl; add bh, al; ret 0xa078; 
0x08056f90: add byte ptr [ecx + 0x18609a], cl; add byte ptr [ebx + 0x185c82], al; add byte ptr [ecx], al; pop ebx; ret; 
0x0807b83e: add byte ptr [ecx + 0x1a3083], cl; add byte ptr [ebp - 0x2959b7d], cl; call dword ptr [eax - 0x18]; 
0x0807c1f9: add byte ptr [ecx + 0x24948bc1], cl; xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x080ab3f7: add byte ptr [ecx + 0x314c245c], cl; fcmovnb st(0), st(7); ret; 
0x0805dfae: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806e788: add byte ptr [ecx + 0x4589d845], cl; fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x0807d82c: add byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0809dfd9: add byte ptr [ecx + 0x48da045], cl; jg 0x55f6e; pop esp; ret; 
0x0808f3c7: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0809e9dc: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0804d9fe: add byte ptr [ecx + 0x4fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080a023a: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x080a8d97: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x0809d60d: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x08058c96: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x080966cc: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x0805008b: add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0806ce54: add byte ptr [ecx + 0x6b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a62b7: add byte ptr [ecx + 0x6c8b8bcb], cl; add dword ptr [eax], eax; add byte ptr [ebp - 0x7e0b8a37], al; ret; 
0x0806eb9a: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080a10db: add byte ptr [ecx + 0x8c48310], cl; pop ebx; ret; 
0x0804873f: add byte ptr [ecx + 0x918c0c3], al; add byte ptr [ebp - 0x9096f7d], cl; call dword ptr [eax - 0x73]; 
0x08052b64: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08050d1f: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0807c1eb: add byte ptr [ecx + 0xe0b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080cb1fc: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x100e4302], al; or cl, byte ptr [0x4108]; ret; 
0x080ce41c: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x200e4e02], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x080cb618: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca764: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x080ca578: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6302], al; ret; 
0x080ce174: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d108c: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1034: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x0806cf5d: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805ad51: add byte ptr [ecx + 0xf40244c], cl; inc edi; ret 0x7489; 
0x080a2b5e: add byte ptr [ecx + 0xfc984e9], cl; test edi, eax; add byte ptr [eax], al; add bh, al; ret 0xbeec; 
0x0806ac54: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x0806aab0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x0806b4a2: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x080c549f: add byte ptr [ecx + eax + 0xb8c0000], dl; add byte ptr [eax], al; cmp byte ptr [ecx - 8], bh; jmp edi; 
0x080d1a53: add byte ptr [ecx + eax*2 - 4], bl; call dword ptr [ebx + 1]; 
0x080c72ab: add byte ptr [ecx + ebp - 0x27a00000], dl; clc; jmp dword ptr [edi]; 
0x080cb273: add byte ptr [ecx + ebp*2], bl; add byte ptr [eax], ch; sbb al, 0xfa; jmp dword ptr [esi]; 
0x080d102b: add byte ptr [ecx + ebx - 4], ah; inc dword ptr [edx]; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080ca58b: add byte ptr [ecx + ebx*8], dh; stc; call edx; 
0x080ca223: add byte ptr [ecx + ecx*8], bl; stc; call esp; 
0x080929ea: add byte ptr [ecx + edx - 0x7d], dh; ret 0x8304; 
0x080ce218: add byte ptr [ecx - 0x31fc0000], bl; cli; call dword ptr [esi + 3]; 
0x0809f4ba: add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x0806f5b8: add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x0804c75b: add byte ptr [ecx - 0x38ff743d], cl; xbegin 0x8a004766; ret 0xbd89; 
0x0806f5af: add byte ptr [ecx - 0x39c7db8c], cl; inc esp; and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x080a48c3: add byte ptr [ecx - 0x3b7cefba], cl; adc al, 0x5b; pop esi; ret; 
0x080a47e0: add byte ptr [ecx - 0x3b7cf3ba], cl; adc al, 0x5b; pop esi; ret; 
0x080a1372: add byte ptr [ecx - 0x3b7cf3ba], cl; and al, 0x5b; pop esi; ret; 
0x080b7dd3: add byte ptr [ecx - 0x43fffff3], bh; or eax, 0xdbf0000; add byte ptr [eax], al; ret 0xd; 
0x080811b7: add byte ptr [ecx - 0x47743], cl; jmp dword ptr [esi - 0x70]; 
0x08048379: add byte ptr [ecx - 0x47ebdbbc], cl; ret 0; 
0x0808ebeb: add byte ptr [ecx - 0x6b7174f2], cl; add byte ptr [eax], al; add byte ptr [ebp + 0x45450fd2], al; in al, 0xc7; ret 0xafc0; 
0x080591e6: add byte ptr [ecx - 0x72afaf05], cl; xchg eax, ebx; das; std; call dword ptr [eax - 1]; 
0x08076e59: add byte ptr [ecx - 0x74d3dba4], cl; pop edi; or byte ptr [ecx - 0x72dfdbb4], cl; dec edi; and dh, dh; ret; 
0x08077d89: add byte ptr [ecx - 0x74d3dba4], cl; pop edi; or byte ptr [ecx - 0x72e7dbb4], cl; dec eax; cmp al, 0xf6; ret; 
0x080a2753: add byte ptr [ecx - 0x74ed8b07], cl; inc ebp; aam 0xc7; ret 0xbee8; 
0x080515ca: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0808f78e: add byte ptr [ecx - 0x74efdb8c], cl; inc edi; adc al, 0x5b; pop esi; pop edi; jmp eax; 
0x0808f8de: add byte ptr [ecx - 0x74efdb8c], cl; inc edi; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x08048317: add byte ptr [ecx - 0x763fcf10], cl; ret 0x8789; 
0x080482e8: add byte ptr [ecx - 0x763fcf28], cl; ret 0x8789; 
0x0809395f: add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x0809aeeb: add byte ptr [ecx - 0x7b], dl; ror byte ptr [edi], 0x44; ret 0x8d50; 
0x080721f6: add byte ptr [ecx - 0x7c7227bb], cl; push eax; js 0x2a1f8; call dword ptr [eax - 0x77]; 
0x08086182: add byte ptr [ecx - 0x7c9fdbbc], cl; les edx, ptr [ebx + ecx*4]; je 0x3e1b1; adc al, 0x89; ret; 
0x0809605f: add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x080aa1a7: add byte ptr [ecx - 0x7cf769b4], cl; ret 0x8301; 
0x080a4887: add byte ptr [ecx - 0x7cf98a10], cl; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0804a6a3: add byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x75]; 
0x08088d02: add byte ptr [ecx - 0x88f6b], cl; call dword ptr [eax - 0x73]; 
0x0808814d: add byte ptr [ecx - 0x8a343], cl; call dword ptr [eax + 1]; 
0x0806c3d2: add byte ptr [ecx - 0x8b7b], cl; dec dword ptr [ebp - 0x2bb287d]; call dword ptr [eax - 0x18]; 
0x0809b055: add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0809aaad: add byte ptr [ecx - 0x9f6b], cl; dec dword ptr [ebp - 0x1c5126f]; dec dword ptr [ebx + 0xfc08500]; inc esp; ret 0x558b; 
0x08058414: add byte ptr [ecx - 0xfffff1a], al; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x0806b32b: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x08073a48: add byte ptr [ecx - 3], ah; call dword ptr [eax + 0x68]; 
0x08073a20: add byte ptr [ecx - 3], ah; call dword ptr [eax - 0x73]; 
0x080d293b: add byte ptr [ecx - 4], ah; jmp dword ptr [esi]; 
0x080c5f83: add byte ptr [ecx - 8], cl; call dword ptr [esi]; 
0x080753b4: add byte ptr [ecx], 0; add byte ptr [eax - 0x73], dl; add eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x080d218d: add byte ptr [ecx], 0x48; push cs; jo 0x8a1e8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d66ce: add byte ptr [ecx], 0x4a; push cs; jo 0x8e72a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d55a2: add byte ptr [ecx], 0x4c; push cs; jo 0x8d5ef; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c9638: add byte ptr [ecx], 0x53; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d576e: add byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x080cea85: add byte ptr [ecx], 0xa; ret; 
0x080d523c: add byte ptr [ecx], 2; dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cd083: add byte ptr [ecx], 3; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806b3f8: add byte ptr [ecx], ah; ret 0x2474; 
0x08057903: add byte ptr [ecx], al; add byte ptr [eax], al; add bl, dh; ret; 
0x0806b3e7: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x08066f73: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x08058049: add byte ptr [ecx], al; fidivr dword ptr [ecx]; retf 0xa75; add esp, 8; pop ebx; ret; 
0x08090a29: add byte ptr [ecx], al; fsubr dword ptr [ecx]; fidivr word ptr [ecx]; ret 0x830f; 
0x0805c1e1: add byte ptr [ecx], al; je 0x141f0; lea eax, [ebx + 0x18a4]; call 0x26b90; pop ebx; ret; 
0x080c2a67: add byte ptr [ecx], al; or eax, 0x73950000; ret 0x48; 
0x08056f9c: add byte ptr [ecx], al; pop ebx; ret; 
0x080859c4: add byte ptr [ecx], al; ret 0x458b; 
0x08059fe9: add byte ptr [ecx], al; ret 0x48b; 
0x080a5dbf: add byte ptr [ecx], al; ret 0xb70f; 
0x08051ddb: add byte ptr [ecx], al; ret 0xc301; 
0x0805c170: add byte ptr [ecx], bh; fidiv dword ptr [ebp - 0x25]; pop ebx; pop esi; pop edi; ret; 
0x0806ebe9: add byte ptr [ecx], bh; ret 0x1275; 
0x0809c76f: add byte ptr [ecx], bh; ret 0x273; 
0x08053160: add byte ptr [ecx], bh; ret 0x44c7; 
0x0809bcf2: add byte ptr [ecx], bh; ret 0x470f; 
0x080a26a1: add byte ptr [ecx], bh; ret 0x5589; 
0x08090959: add byte ptr [ecx], bh; ret 0x820f; 
0x08058ef9: add byte ptr [ecx], bh; ret 0x840f; 
0x0807ca9d: add byte ptr [ecx], bh; ret 0xe74; 
0x0804c986: add byte ptr [ecx], bh; ret; 
0x08091fa7: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x0806eb70: add byte ptr [ecx], bh; sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0805de6f: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x08090a7b: add byte ptr [ecx], ch; fmul dword ptr [ecx + 0xfd839de]; inc edx; ret; 
0x08081af1: add byte ptr [ecx], ch; ret 0x23e9; 
0x0805a32f: add byte ptr [ecx], ch; ret 0x48d; 
0x08058422: add byte ptr [ecx], ch; ret 0x5975; 
0x0804cd31: add byte ptr [ecx], ch; ret 0x97e8; 
0x08085265: add byte ptr [ecx], ch; ret 0xdf29; 
0x08084cef: add byte ptr [ecx], ch; ret; 
0x080c6a23: add byte ptr [ecx], cl; add byte ptr [eax], al; mov bl, al; clc; call dword ptr [eax]; 
0x0807bc24: add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x0809b40b: add byte ptr [ecx], dh; leave; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0808afc5: add byte ptr [ecx], dh; leave; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x080a8da4: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0806b59f: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0809bfc7: add byte ptr [ecx], dh; rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x08099e4c: add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xe2c1; 
0x0807c221: add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0806c142: add byte ptr [edi + 0x55], dl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x08055f51: add byte ptr [edi + 0x56], dl; push ebp; call dword ptr [ebx + 0x24]; 
0x08050ef0: add byte ptr [edi + 0x56], dl; push ebp; call dword ptr [ebx + 0x40]; 
0x080c3a3f: add byte ptr [edi + 0x72], dh; cld; jmp eax; 
0x080c9c08: add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x0806a384: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x0806a704: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x080608f4: add byte ptr [edi + 2], dh; neg eax; ret; 
0x0809381e: add byte ptr [edi + 7], dh; xor eax, eax; pop ebx; ret; 
0x080d62f3: add byte ptr [edi + eax*2 - 3], bl; jmp dword ptr [edi]; 
0x0806ee97: add byte ptr [edi + eax*8 + 0x3b], bh; pop eax; or byte ptr [ebx - 0x45], dh; pop ebx; ret; 
0x080d0743: add byte ptr [edi + eax], ch; cld; jmp edx; 
0x080d502b: add byte ptr [edi + eax], dl; add dword ptr [eax], eax; push eax; stc; cld; jmp dword ptr [esi]; 
0x080c7833: add byte ptr [edi + ebp], bl; add byte ptr [eax], al; sbb bl, ah; clc; call dword ptr [edi]; 
0x080d13f3: add byte ptr [edi + ebx], cl; cld; jmp dword ptr [eax]; 
0x080d41bb: add byte ptr [edi + ecx*8 - 4], ah; jmp dword ptr [esi]; 
0x080d38e3: add byte ptr [edi + edi*4], cl; cld; jmp dword ptr [esi + 3]; 
0x080d042b: add byte ptr [edi + edi*8], dh; sti; call ecx; 
0x080d4dc3: add byte ptr [edi + esi*8 - 4], bl; call dword ptr [esi]; 
0x080c70ab: add byte ptr [edi - 0x2d300000], dl; clc; jmp dword ptr [edi]; 
0x080b807b: add byte ptr [edi - 0x45fffff1], dh; sldt word ptr [eax]; mov ebp, 0xc000000f; sldt word ptr [eax]; ret; 
0x08091d04: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x08067504: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x0806cf78: add byte ptr [edi - 0x77], dh; xor al, 0x24; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x080cc61b: add byte ptr [edi*2 - 0xcf00000], al; std; jmp dword ptr [esi]; 
0x080ae59c: add byte ptr [edi], ah; stc; inc dword ptr [ebp - 0x530006da]; daa; stc; call eax; 
0x080bdb3f: add byte ptr [edi], ch; or al, 0xfc; call dword ptr [eax - 8]; 
0x080bdb3f: add byte ptr [edi], ch; or al, 0xfc; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x08079bea: add byte ptr [edi], cl; dec eax; ret 0xc083; 
0x08089521: add byte ptr [edi], cl; dec ecx; ret 0x9589; 
0x080743ec: add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x08094dd4: add byte ptr [edi], cl; inc ebp; ret 0x8789; 
0x0807842b: add byte ptr [edi], cl; inc ebp; ret; 
0x0807c2fd: add byte ptr [edi], cl; inc ebp; sar byte ptr [eax + 0xae], 1; call dword ptr gs:[0x10]; 
0x0805a20e: add byte ptr [edi], cl; inc edi; ret 0xc539; 
0x0805a836: add byte ptr [edi], cl; inc edi; ret; 
0x080926e9: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x08099f79: add byte ptr [edi], cl; inc esp; ret 0x4d89; 
0x0809bd40: add byte ptr [edi], cl; inc esp; ret 0xec83; 
0x08092516: add byte ptr [edi], cl; inc esp; ret 0xff85; 
0x0806b566: add byte ptr [edi], cl; lahf; ret 0xea81; 
0x08059f3b: add byte ptr [edi], cl; lea eax, [esi + edi*8 + 0x548dffff]; das; adc cl, byte ptr [ecx + 0x21d8f7f8]; ret 0xd539; 
0x080a7cbf: add byte ptr [edi], cl; mov bh, 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x0806ba50: add byte ptr [edi], cl; mov byte ptr [0x8247c83], al; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x0804894e: add byte ptr [edi], cl; mov byte ptr [0x89145589], al; ret 0x4d89; 
0x080623a4: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x08080f89: add byte ptr [edi], cl; mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808061f: add byte ptr [edi], cl; mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x0806088f: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0806089f: add byte ptr [edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0808ddcf: add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x080887fe: add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x080a7cdf: add byte ptr [edi], cl; mov dh, 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x0808b5e3: add byte ptr [edi], cl; mov dh, 0x84; add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1080], al; jmp eax; 
0x0808d50c: add byte ptr [edi], cl; mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x1d63c]; add ecx, ebx; jmp ecx; 
0x080a6be7: add byte ptr [edi], cl; mov dh, 0xd2; mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x0804dc62: add byte ptr [edi], cl; mov dh, 0xd2; mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x0806083f: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x080916c4: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08080fd7: add byte ptr [edi], cl; mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cd7: add byte ptr [edi], cl; mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08081072: add byte ptr [edi], cl; mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x0806787f: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x080678af: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x080494bf: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x08091e8f: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08091e3f: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x080808e2: add byte ptr [edi], cl; test byte ptr [edi - 0x7c000002], ah; in al, dx; add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08060a0a: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x08091de6: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0809f4b4: add byte ptr [edi], cl; test ch, dh; add byte ptr [eax], al; add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x08091e2c: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08062c0f: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0806250f: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x08062cba: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x08062ada: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x080625aa: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x08062904: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x080626d6: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x08048b43: add byte ptr [edi], cl; test dword ptr [ebx - 0x74000002], ecx; push ebp; sbb al, 0xf7; ret 0; 
0x080627de: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x08062753: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x08059786: add byte ptr [edi], cl; xchg eax, ebp; ret 0x448b; 
0x08059d0f: add byte ptr [edi], cl; xchg eax, ebp; ret 0x72e9; 
0x08090940: add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080780d0: add byte ptr [edi], cl; xchg eax, esi; ret; 
0x080d5e2b: add byte ptr [edx + 0x34f00001], dl; std; call dword ptr [eax + 1]; 
0x08050f88: add byte ptr [edx + 0x50], dl; push ebp; call dword ptr [ebx + 0x40]; 
0x0809e53f: add byte ptr [edx + 0x59], bl; pop eax; jmp dword ptr [eax]; 
0x0806ebb0: add byte ptr [edx + 0x59], bl; pop ebx; ret; 
0x0806239f: add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x080986a4: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0806eb9f: add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08049034: add byte ptr [edx + 1], bh; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x080512e3: add byte ptr [edx + 1], ch; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x0805371f: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ecx + 0x40]; 
0x080510bf: add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x0805351b: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edx + 0x40]; 
0x080d620b: add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x080ceb2b: add byte ptr [edx + eax*2], dh; sti; call dword ptr [eax]; 
0x080ca68b: add byte ptr [edx + eax], dl; cli; call dword ptr [eax + 1]; 
0x080cb063: add byte ptr [edx + ebx], bh; cli; call dword ptr [ecx]; 
0x080c934b: add byte ptr [edx + ecx*2], dh; add byte ptr [eax], al; pushal; cmp bh, cl; call dword ptr [eax]; 
0x080c5343: add byte ptr [edx + ecx], ch; add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080c83cb: add byte ptr [edx + edi - 0x9500000], dh; clc; call dword ptr [edx]; 
0x080c83a3: add byte ptr [edx + edi - 0x9680000], cl; clc; call dword ptr [edi]; 
0x080d00f3: add byte ptr [edx + edi*8 - 5], cl; call dword ptr [ebp]; 
0x080c837b: add byte ptr [edx + edi], ah; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x080c8353: add byte ptr [edx + edi], bh; add byte ptr [eax], al; cmp dh, dh; clc; jmp dword ptr [ecx]; 
0x080c9323: add byte ptr [edx + edi], ch; stc; call dword ptr [edi]; 
0x080c832b: add byte ptr [edx + edi], dl; add byte ptr [eax], al; adc dh, dh; clc; jmp dword ptr [ecx]; 
0x080cbca3: add byte ptr [edx + esi - 6], bl; jmp dword ptr [eax]; 
0x080cbbab: add byte ptr [edx + esi*2 + 0x31800000], dl; cli; jmp dword ptr [esi]; 
0x0809d81f: add byte ptr [edx - 0x75], bl; or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x0806ca5b: add byte ptr [edx - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x080934bb: add byte ptr [edx - 0x75], dh; dec esp; and al, 0x14; mov eax, 0x127; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0808febf: add byte ptr [edx - 0x75], dl; inc esp; and al, 0x38; push eax; call esi; 
0x0806443f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x08096586: add byte ptr [edx - 0x77], dl; ret 0xf089; 
0x080488f5: add byte ptr [edx - 0x77], dl; ret; 
0x08048869: add byte ptr [edx - 0x7f], bl; ret 0x1796; 
0x0807a8e7: add byte ptr [edx - 3], ah; call dword ptr [eax - 0x18]; 
0x08070165: add byte ptr [edx - 3], dl; call dword ptr [eax - 0x18]; 
0x080c3a50: add byte ptr [edx - 4], dh; jmp dword ptr [eax]; 
0x080cc6b0: add byte ptr [edx - 6], dl; call dword ptr [ecx]; 
0x080c5180: add byte ptr [edx], 0x48; push cs; lock add dword ptr [edx], eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080cb2c8: add byte ptr [edx], 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbac6: add byte ptr [edx], 0x83; add eax, dword ptr [esi + 0xc0e6704]; mov byte ptr [ecx + 0xe], 8; ret; 
0x080d58c8: add byte ptr [edx], 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08092eb0: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x080c2a64: add byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x0807c0c4: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x080c8318: add byte ptr [edx], bh; add byte ptr [eax], al; hlt; cmc; clc; jmp dword ptr [ecx]; 
0x0809257c: add byte ptr [edx], ch; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0809257a: add byte ptr [edx], ch; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x08073992: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x08074232: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x08074b20: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080750f6: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08073e82: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08074742: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x08078917: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x080766c5: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x0807171d: add byte ptr [edx], ch; push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x0808febb: add byte ptr [edx], ch; push 0; push edx; mov eax, dword ptr [esp + 0x38]; push eax; call esi; 
0x080536df: add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x080aab84: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x1c; ret; 
0x0805342d: add byte ptr [edx], ch; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x0804989a: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2640; add esp, 0x2c; ret; 
0x08073994: add byte ptr [edx], ch; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x08074234: add byte ptr [edx], ch; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x08074b22: add byte ptr [edx], ch; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080750f8: add byte ptr [edx], ch; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08073e84: add byte ptr [edx], ch; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08074744: add byte ptr [edx], ch; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x08078919: add byte ptr [edx], ch; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x080766c7: add byte ptr [edx], ch; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x0807171f: add byte ptr [edx], ch; push eax; push dword ptr [esi + 4]; call edi; 
0x080510c3: add byte ptr [edx], ch; push ebp; call dword ptr [ebx + 0x40]; 
0x080543e8: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x24]; 
0x08050eee: add byte ptr [edx], ch; push edi; push esi; push ebp; call dword ptr [ebx + 0x40]; 
0x0808febd: add byte ptr [edx], ch; push edx; mov eax, dword ptr [esp + 0x38]; push eax; call esi; 
0x08050f86: add byte ptr [edx], ch; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x080567f2: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x2c]; 
0x08053723: add byte ptr [edx], ch; push esi; call dword ptr [ecx + 0x40]; 
0x0805430b: add byte ptr [edx], ch; push esi; call dword ptr [edi + 0x40]; 
0x0805351f: add byte ptr [edx], ch; push esi; call dword ptr [edx + 0x40]; 
0x080cbc40: add byte ptr [edx], dh; cli; jmp dword ptr [ecx]; 
0x080bc917: add byte ptr [edx], dl; add byte ptr [0xfb357000], cl; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x08096256: add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x08072a25: add byte ptr [esi + 0x5f], bl; ret; 
0x08065bff: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x080643af: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080645cf: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806a984: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x1f]; add cl, byte ptr [edi]; xchg eax, edx; ror byte ptr [edi], 0x94; ret; 
0x0805e96f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x08067791: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0807c2f8: add byte ptr [esi + 8], bh; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0807c44e: add byte ptr [esi + 8], bh; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x080c4fcb: add byte ptr [esi + eax + 0x5e400000], dh; clc; call edx; 
0x080c8fd3: add byte ptr [esi + eax*2 + 0x32280000], bh; stc; call dword ptr [edi]; 
0x0809f109: add byte ptr [esi + ebp*4 - 0x77], dh; fmul dword ptr [ecx - 0x76080836]; ret; 
0x080cf72b: add byte ptr [esi + ebp*4], dl; add byte ptr [eax], al; mov al, 0xe2; sti; call dword ptr [esi]; 
0x080a8b84: add byte ptr [esi + ebx*8 - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x080c7583: add byte ptr [esi + ebx*8 - 8], cl; call dword ptr [edx]; 
0x080c9768: add byte ptr [esi + ecx + 8], cl; add dword ptr [edx], 0x57; ret; 
0x080c7fbc: add byte ptr [esi + ecx + 8], cl; add dword ptr [edx], 2; inc ebx; ret; 
0x080ce21b: add byte ptr [esi + ecx*8], al; cli; call dword ptr [esi + 3]; 
0x080d56f3: add byte ptr [esi + edx - 3], bh; jmp dword ptr [edx + 8]; 
0x080caea3: add byte ptr [esi + edx], ch; cli; call eax; 
0x080c836b: add byte ptr [esi + esi*8 - 8], dl; call dword ptr [edi]; 
0x080cfd43: add byte ptr [esi + esi*8], bh; sti; jmp dword ptr [edi]; 
0x080c8343: add byte ptr [esi + esi*8], ch; clc; call dword ptr [edi]; 
0x080577c8: add byte ptr [esi - 0x18], dl; inc ecx; ljmp 0x5b14:0xc483ffff; pop esi; ret; 
0x0804c906: add byte ptr [esi - 0x18], dl; ret; 
0x080bbe7b: add byte ptr [esi - 0x3ffffff9], bh; pop es; add byte ptr [eax], al; ret 7; 
0x080bbc7b: add byte ptr [esi - 0x3ffffffa], bh; push es; add byte ptr [eax], al; ret 6; 
0x080b757f: add byte ptr [esi - 0x43fffffa], dh; push es; add byte ptr [eax], al; ret 6; 
0x0804c971: add byte ptr [esi - 0x77], ah; add dword ptr [ebx - 0x1bb7b], ecx; dec dword ptr [ebx + 0x15f898]; add byte ptr [ebx + 0x15f480], cl; add byte ptr [ecx], bh; ret; 
0x0809ad3f: add byte ptr [esi - 0x7b], dl; ror byte ptr [edi], 0x44; ret 0x8d50; 
0x080a1797: add byte ptr [esi - 0x7d], ah; add al, 0x42; add dword ptr [ebx + 0x5e], ebx; ret; 
0x080a8b6b: add byte ptr [esi*2 - 0x7cff74e3], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0807c3f8: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x080a49d4: add byte ptr [esp + ebx - 0x75], dh; push ebx; add al, 0x85; sal byte ptr [ebp + edx - 0x7d], cl; ret; 
0x08091ec7: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x080c958b: add byte ptr [esp + ecx*2], dh; add byte ptr [eax], ah; inc ecx; stc; jmp edi; 
0x080c6cb3: add byte ptr [esp + ecx*8], bh; clc; jmp dword ptr [esi]; 
0x080a05e2: add byte ptr [esp + ecx], ch; or byte ptr [ebx + eax*2 - 0x7d], dh; call dword ptr [eax]; 
0x080d05a3: add byte ptr [esp + edi*4 + 0x880000], cl; cld; jmp dword ptr [edi]; 
0x080c5beb: add byte ptr [esp + edx*4], al; clc; jmp dword ptr [ebx]; 
0x080c71d3: add byte ptr [esp + edx*8], ch; clc; call dword ptr [eax]; 
0x080c7dcb: add byte ptr [esp + esi - 0x12200000], dh; clc; jmp dword ptr [eax]; 
0x08098ede: add byte ptr [esp + esi*2], al; push ds; sub esp, 0xc; mov eax, 0x80daa24; push ebx; call dword ptr [eax]; 
0x080d3db3: add byte ptr [esp + esi*8 - 0x39e80000], bl; cld; jmp esp; 
0x080d3d33: add byte ptr [esp + esi*8], bl; add byte ptr [eax], al; js 0x8bcff; cld; call dword ptr [edi]; 
0x080d2a63: add byte ptr [esp], ch; cld; jmp dword ptr [edi]; 
0x080c77b9: add byte ptr cs:[eax], al; aam 0xe2; clc; jmp dword ptr [edi]; 
0x0805223e: add byte ptr es:[eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x08081cfe: add byte ptr es:[eax - 0x4ab43], al; jmp dword ptr [eax]; 
0x08056eae: add byte ptr es:[eax - 1], bh; ret; 
0x0806787b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x08067dfb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x0806789b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08067e1b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x080cb614: add byte ptr es:[eax], al; add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080a8ca4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080561f4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea edi, [edi]; xor eax, eax; ret; 
0x0808fd2b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08099d43: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x080a6d5b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080a8c0b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8cbb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8c5b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08056f3b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x080674cb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x080998c3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edi]; call eax; 
0x0806084b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0806ce9b: add byte ptr es:[eax], al; add byte ptr [eax], al; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0805d09b: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x34]; push ebp; call eax; 
0x08067c6b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x080c6f51: add byte ptr es:[eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x08066eb7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ec7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ed7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066ee7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066ef7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066e47: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08066e57: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08066e67: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08066e77: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08066e87: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08066e97: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x08066ea7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x08091417: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xa]; pop edi; ret; 
0x08091407: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xb]; pop edi; ret; 
0x080913f7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913e7: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xe]; pop edi; ret; 
0x08091487: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 1]; pop edi; ret; 
0x08091477: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 2]; pop edi; ret; 
0x08091467: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 3]; pop edi; ret; 
0x08091457: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 5]; pop edi; ret; 
0x08091447: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 6]; pop edi; ret; 
0x08091437: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 7]; pop edi; ret; 
0x08091427: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 9]; pop edi; ret; 
0x08066f07: add byte ptr es:[ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080a5d36: add byte ptr es:[ebp - 0x15cb37d], cl; call dword ptr [eax - 0x73]; 
0x080a21ee: add byte ptr es:[ebp - 0x162e77d], cl; call dword ptr [eax + 0x68]; 
0x0808eac6: add byte ptr es:[ebx + 0x106a04ec], al; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x08051466: add byte ptr es:[ebx + 0x29182454], cl; fcmovb st(0), st(1); cli; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x0806e196: add byte ptr es:[ebx + 0x418b084f], cl; add al, 0x89; ret 0xe283; 
0x080a2b8e: add byte ptr es:[ebx + 0x4c8b01e8], al; ret 0x850c; 
0x0805c7ee: add byte ptr es:[ebx + 0x525104ec], al; push ebx; call eax; 
0x080a598e: add byte ptr es:[ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0806f4a6: add byte ptr es:[ebx + 0x5e], bl; pop edi; ret; 
0x0805c48e: add byte ptr es:[ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x08053ace: add byte ptr es:[ebx + 0x9485], cl; add bh, al; ret 0xafc0; 
0x0808fb06: add byte ptr es:[ebx + 0x94b3], cl; add bh, al; ret 0xafc0; 
0x0807c3ce: add byte ptr es:[ebx - 0x17fbdbbc], cl; or eax, 0x81fffd3d; ret 0xdc27; 
0x0807109e: add byte ptr es:[ebx - 0x18], dl; fidiv dword ptr [esi - 3]; inc dword ptr [ecx + 0x68f5ac3]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x08092ebe: add byte ptr es:[ebx - 0x18], dl; mov edx, 0x81fffb58; ret; 
0x0809c91e: add byte ptr es:[ebx - 0x26b73], cl; jmp dword ptr [ebp - 0x7d]; 
0x0806f07e: add byte ptr es:[ebx - 0x397cfe39], al; sub al, 0x83; call dword ptr [esi]; 
0x08081a36: add byte ptr es:[ebx - 0x4837b], cl; jmp dword ptr [ebp - 0x39]; 
0x0808c386: add byte ptr es:[ebx - 0x49f43], al; jmp dword ptr [eax]; 
0x080512be: add byte ptr es:[ebx - 0x74f3dbbc], cl; popfd; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080a8c4e: add byte ptr es:[ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x0808f8ee: add byte ptr es:[ebx - 0x75], bl; add bl, byte ptr [esi + 0x5f]; ret; 
0x080aa1a6: add byte ptr es:[ecx - 0x7cf769b4], cl; ret 0x8301; 
0x08091fa6: add byte ptr es:[ecx], bh; ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x0806ee96: add byte ptr es:[edi + eax*8 + 0x3b], bh; pop eax; or byte ptr [ebx - 0x45], dh; pop ebx; ret; 
0x0806088e: add byte ptr es:[edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0806089e: add byte ptr es:[edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0806083e: add byte ptr es:[edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0806443e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x080d06d4: add byte ptr fs:[eax], al; add al, al; mov ebp, 0x4a40000; cld; jmp esi; 
0x080c7c5c: add byte ptr fs:[eax], al; add byte ptr [eax + 0x33], cl; add byte ptr [eax], al; mov edi, fs; clc; jmp dword ptr [edi + 2]; 
0x080d289c: add byte ptr fs:[eax], al; add byte ptr [eax - 0x23ffff21], cl; xchg eax, edi; cld; call edx; 
0x080ce9cc: add byte ptr fs:[eax], al; add byte ptr [eax - 0x33ffff60], bh; out dx, eax; cli; call edi; 
0x080caea1: add byte ptr gs:[eax], al; sub al, 0x16; cli; call eax; 
0x080c7fb1: add byte ptr ss:[eax], al; pushfd; out dx, eax; clc; call dword ptr [eax]; 
0x080c7f61: add byte ptr ss:[eax], al; pushfd; out dx, eax; clc; call dword ptr [ebx]; 
0x0806d9c2: add byte ptr ss:[eax], al; ret; 
0x080c7ff5: add byte ptr ss:[eax], al; sbb al, dh; clc; call dword ptr [edi]; 
0x08052844: add ch, al; inc esi; ret; 
0x080d31bf: add ch, al; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080a7cda: add ch, bl; or dword ptr [ebp - 0x49f0ff8a], 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x0808fc3d: add ch, bl; out dx, al; mov eax, 0xffffffff; pop ebx; ret; 
0x080d613f: add ch, byte ptr [ebp + 0x45140e0a]; ret; 
0x080d15f0: add ch, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8e6a: add ch, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x080c29f9: add ch, byte ptr [ebp + ebp*2 + 0x5b]; ret 0x6f9; 
0x080c5b9c: add ch, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c79a1: add ch, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0808984d: add ch, byte ptr [ecx]; ret 0x858b; 
0x0808951a: add ch, byte ptr [ecx]; ret 0xb8; 
0x080594f2: add ch, byte ptr [ecx]; ret 0xc501; 
0x08084323: add ch, byte ptr [ecx]; ret 0xfac1; 
0x080c56d4: add ch, byte ptr [edi + 0x43140e0a]; ret; 
0x080cb2c9: add ch, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080510c1: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x08054309: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0805351d: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edx + 0x40]; 
0x080d103a: add ch, byte ptr [esi + 0xa]; ret; 
0x080c83f0: add ch, byte ptr [esi + 0xe]; adc al, 0x41; ret; 
0x080c29f8: add ch, byte ptr [si + 0x6d]; pop ebx; ret 0x6f9; 
0x080d3177: add ch, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x0804cfe0: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0804f042: add cl, al; ret 0x8909; 
0x0805e729: add cl, bl; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080d328e: add cl, bl; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0806b2fc: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0805f0fd: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x080d58c5: add cl, byte ptr [eax + 0xe]; add byte ptr [edx], 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5181: add cl, byte ptr [eax + 0xe]; lock add dword ptr [edx], eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080cf639: add cl, byte ptr [eax + 0xe]; mov al, byte ptr [0xa580283]; push cs; adc al, 0x41; ret; 
0x080645ea: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x08064588: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x080644aa: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x08064468: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x080528da: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x080a45ba: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x5c580; jmp eax; 
0x080d3060: add cl, byte ptr [ebp + 0xa]; push cs; adc al, 0x44; ret; 
0x080cbd1c: add cl, byte ptr [ebp + 0xa]; ret; 
0x080d26bd: add cl, byte ptr [ebp + ecx + 5]; dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080cecdd: add cl, byte ptr [ebp + ecx + 5]; dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x080d30cd: add cl, byte ptr [ebp + ecx + 5]; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080c4f7d: add cl, byte ptr [ebp + ecx + 5]; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080ccaa9: add cl, byte ptr [ebp + ecx + 5]; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x0805e6a6: add cl, byte ptr [ebp - 0x6eb4f7e]; dec dword ptr [ebp - 0x7592f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805dbd6: add cl, byte ptr [ebp - 0x6ed7f7e]; dec dword ptr [ebp - 0x7717f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0807605f: add cl, byte ptr [ebp - 0x77cfeb6]; jg 0x2dff0; ret; 
0x080d214e: add cl, byte ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080a447b: add cl, byte ptr [ebx + 0xf082444]; inc edi; ret 0x4489; 
0x080c6379: add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c6b88: add cl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c6e94: add cl, byte ptr [ecx + 0xa]; push cs; adc al, 0x45; ret; 
0x080c7e63: add cl, byte ptr [ecx + 0xa]; ret; 
0x080d5a10: add cl, byte ptr [ecx + 0xe]; lock add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x0806464a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x0806462a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x080643fa: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x080644ea: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x0809654c: add cl, byte ptr [ecx - 0x7c3e7631]; ret 0xf01; 
0x0804d66e: add cl, byte ptr [ecx - 0x9fbdb8c]; ret 0xfbf; 
0x080c8d76: add cl, byte ptr [edi + 0x410c0e0a]; ret; 
0x080d3746: add cl, byte ptr [edi + 0x41140e0a]; ret; 
0x080d1aaa: add cl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080cf391: add cl, byte ptr [edi + 0xa]; ret; 
0x0805dba0: add cl, byte ptr [edi]; inc ebp; ret 0xc3f3; 
0x08095a75: add cl, byte ptr [edi]; inc edx; ret; 
0x08051470: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x0809135c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x08091c28: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x080913ab: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x08091b15: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0808e05d: add cl, byte ptr [edi]; xchg eax, ebp; ret 0x5689; 
0x0806a98a: add cl, byte ptr [edi]; xchg eax, edx; ror byte ptr [edi], 0x94; ret; 
0x080547db: add cl, byte ptr [edi]; xchg eax, esi; ret 0x540a; 
0x0807a6cd: add cl, byte ptr [edi]; xchg eax, esi; ret; 
0x080d2ca0: add cl, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x080ce17a: add cl, byte ptr [edx + 0xa]; ret; 
0x080ccb80: add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c4e2c: add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080cbd7b: add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x080c8ca0: add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x080ccab6: add cl, byte ptr [edx]; ret; 
0x080d0b4d: add cl, byte ptr [esi]; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0b2b: add cl, byte ptr [esi]; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x0806bb6f: add cl, ch; imul edi, esi, -1; jmp dword ptr [esi - 0x70]; 
0x0806c846: add cl, ch; mov al, byte ptr [0xe8fffffd]; jmp dword ptr [ecx]; 
0x080a6126: add cl, ch; mov esp, 0x8dfffffd; cmp dword ptr [ebx], -2; call dword ptr [eax - 0x73]; 
0x0804f4a7: add cl, ch; ret 0xfffc; 
0x0804e4b0: add cl, ch; ret; 
0x080a05ae: add cl, ch; sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0806d6d6: add cl, ch; sar ebp, 0xff; jmp dword ptr [ebp - 0x39]; 
0x080d319b: add cl, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x08080535: add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08088eb5: add dh, al; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0806a706: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x080baed7: add dh, bh; xlatb; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x0805b678: add dh, bl; stosd dword ptr es:[edi], eax; add esp, 4; pop ebx; pop edi; ret; 
0x080c93fc: add dh, byte ptr [eax + 0x43140e0a]; ret; 
0x080867a8: add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbac], cl; push edx; or byte ptr [ecx - 0x7cd3dbac], cl; ret 0x3917; 
0x08067dec: add dh, byte ptr [eax]; ret; 
0x0808f582: add dh, byte ptr [ebp + 0x18]; sub esp, 0xc; mov eax, dword ptr [eax + 0xb0]; push ebx; call dword ptr [eax + 0x34]; 
0x080d2277: add dh, byte ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080cca84: add dh, byte ptr [ebp + 0xa]; ret; 
0x080c9223: add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d5517: add dh, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d5be5: add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x080cc9ed: add dh, byte ptr [edi + 0xa]; ret; 
0x080c8a84: add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x080d480d: add dh, byte ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c7c4d: add dh, byte ptr [edx + 0xa]; ret; 
0x080d564c: add dh, byte ptr [edx + 0xe]; add al, 0x54; add byte ptr [eax], al; add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x0805f0fb: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08048682: add dh, byte ptr [edx + ebp - 0x7d]; rol byte ptr [ecx], 0x89; ret 0xd189; 
0x080d28eb: add dh, byte ptr [esi + 0x45140e0a]; ret; 
0x080c71f4: add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8bb6: add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x080a44ef: add dh, dh; adc byte ptr [ecx + eax + 0xf030000], 0x85; cmp eax, 0x8bfffffd; jl 0x5c524; adc bh, al; ret 0x9da4; 
0x080913a8: add dh, dh; les eax, ptr [edx]; jne 0x49440; lea eax, [edi - 8]; pop edi; ret; 
0x080913d1: add dh, dh; les esp, ptr [eax]; jne 0x49470; lea eax, [edi - 4]; pop edi; ret; 
0x0808e365: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x08061d5d: add dh, dh; ret 0x7501; 
0x0808dfbf: add dh, dh; ret 0x7504; 
0x080984cd: add dh, dh; ret 0x7508; 
0x08066cb7: add dh, dh; ret 0xf01; 
0x08066cc8: add dh, dh; ret 0xf02; 
0x08066cd9: add dh, dh; ret 0xf04; 
0x08086cdf: add dh, dh; ret 0xf08; 
0x08066c71: add dh, dh; ret 0xf10; 
0x08066c82: add dh, dh; ret 0xf20; 
0x08066c93: add dh, dh; ret 0xf40; 
0x08085fc1: add dh, dh; ret 0xf50; 
0x08057bac: add dh, dh; ret; 
0x080c842c: add dl, bh; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080addf4: add dl, byte ptr [0x1532fffb]; sti; jmp dword ptr [edx + 0x15]; 
0x080c0dda: add dl, byte ptr [eax + 0x38]; xor esi, dword ptr [ecx]; xchg eax, edi; call dword ptr [ebx + 0x7c]; 
0x0808a8ee: add dl, byte ptr [eax + 0x51]; mov edi, eax; push dword ptr [ebp - 0x45c]; mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x080885f2: add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808ada1: add dl, byte ptr [eax + 0x57]; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x080cbc2b: add dl, byte ptr [eax + 0xa]; ret; 
0x080cb2c5: add dl, byte ptr [eax + 0xe]; add byte ptr [edx], 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080842b3: add dl, byte ptr [eax - 0x7d]; ret 0x8d08; 
0x0808d2c2: add dl, byte ptr [ebp + 0x50]; push esi; call dword ptr [ecx + 0x1c]; 
0x080d2438: add dl, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d28c4: add dl, byte ptr [ebp + 0xa]; push cs; adc al, 0x45; ret; 
0x080c888c: add dl, byte ptr [ebp + 0xa]; ret; 
0x080d2a9e: add dl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c4e43: add dl, byte ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d585e: add dl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c8718: add dl, byte ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x080ce5a4: add dl, byte ptr [edi + 0x41140e0a]; ret; 
0x080d1a7b: add dl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080ccb07: add dl, byte ptr [edi + 0xe]; adc al, 0x41; ret; 
0x08050d88: add dl, byte ptr [edx - 1]; jne 0x8d95; push dword ptr [ebp + 0xc]; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x080adb74: add dl, byte ptr [edx]; sti; push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080d3f48: add dl, byte ptr [esi + 0x41140e0a]; ret; 
0x08087ece: add dl, byte ptr [esi + 0x50]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080c808a: add dl, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080cbc4d: add dl, byte ptr [esi + 0xa]; ret; 
0x080c6906: add dword ptr [0x102e9702], 2; les ecx, ptr [edx]; ret; 
0x080cf92e: add dword ptr [0x102e9e02], 2; ja 0x87941; ret; 
0x080cbd73: add dword ptr [0x1880e4e], 3; mov es, word ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5b97: add dword ptr [0x2200e4e], -0x57; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf2df: add dword ptr [0x2240e4d], -0x57; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf28b: add dword ptr [0x2280e4d], -0x47; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d4a5f: add dword ptr [0x2300e49], 0x67; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c63c3: add dword ptr [0x2300e4e], -0x44; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c545f: add dword ptr [0x2300e53], -0x3a; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d2013: add dword ptr [0x2400e4d], -0x67; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3e87: add dword ptr [0x2400e4e], -0x69; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3f43: add dword ptr [0x2400e4e], -0x6a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8ebf: add dword ptr [0x2400e50], -0x6c; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080caba3: add dword ptr [0x2500e43], -0x59; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8a7f: add dword ptr [0x2500e4e], -0x4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfb8b: add dword ptr [0x2500e4e], -0x64; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3d53: add dword ptr [0x2600e43], 0x7c; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080cdaeb: add dword ptr [0x2600e4e], -0x79; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d6123: add dword ptr [0x2600e4e], -0x80; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d57fb: add dword ptr [0x2d00e53], 2; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5bdf: add dword ptr [0x2e00e4b], 2; mov bh, 0xa; push cs; adc al, 0x43; ret; 
0x080d2957: add dword ptr [0x3380e48], -0x5f; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080c77d7: add dword ptr [0x4e200e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080cf3db: add dword ptr [0x57300e4e], 0xa; push cs; adc al, 0x43; ret; 
0x080c803b: add dword ptr [0x59300e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080d2a07: add dword ptr [0x5b300e43], 0xa; push cs; adc al, 0x41; ret; 
0x080cfcaf: add dword ptr [0x71300e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080c2a68: add dword ptr [0x73950000], ecx; ret 0x48; 
0x080cbb4b: add dword ptr [0x74200e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080c93a3: add dword ptr [0x75200e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080c7ea7: add dword ptr [0x75300e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080cfda3: add dword ptr [0x79200e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080c94ff: add dword ptr [0x79300e4e], 0xa; push cs; adc al, 0x41; ret; 
0x080c78fb: add dword ptr [0x7a200e4d], 0xa; push cs; adc al, 0x41; ret; 
0x080aba90: add dword ptr [eax + 0x1a], -3; call dword ptr [eax - 1]; 
0x0805d8ff: add dword ptr [eax + 0x1fffd39], -0x27; jmp ecx; 
0x0807dd9d: add dword ptr [eax + 0x26], -2; call dword ptr [eax - 0x18]; 
0x0806b4a4: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x08096f16: add dword ptr [eax + 0x32], -2; call dword ptr [eax + 0x6a]; 
0x0809e9a5: add dword ptr [eax + 0x46], -2; call dword ptr [eax + 0x56]; 
0x08093c62: add dword ptr [eax + 0x4db60f0a], ecx; in al, 0x83; ret 0x8401; 
0x08055c35: add dword ptr [eax + 0x55], edx; call dword ptr [esi + 0xc]; 
0x08071938: add dword ptr [eax + 0x56], -3; call dword ptr [eax - 0x73]; 
0x0809246e: add dword ptr [eax + 0x57], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x0806b532: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x0806b24b: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x08065c91: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x0806ac56: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x0805e89b: add dword ptr [eax + 0x5f], eax; ret; 
0x08064441: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x080c665c: add dword ptr [eax + 0xa], esp; push cs; adc al, 0x41; ret; 
0x080d218e: add dword ptr [eax + 0xe], ecx; jo 0x8a1e8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c69b8: add dword ptr [eax + 0xe], ecx; mov al, 1; add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c4b94: add dword ptr [eax + 0xe], ecx; nop; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x0808c0a8: add dword ptr [eax + 0xffffe8c], 0x45; ret 0xc289; 
0x0806bf5f: add dword ptr [eax + 8], 1; add esp, 4; pop ebx; pop esi; ret; 
0x08048dc3: add dword ptr [eax + ecx], 0x7b8013eb; add al, 0x2a; mov esi, dword ptr [ebx]; jne 0x105e; call dword ptr [esi]; 
0x08080ae4: add dword ptr [eax - 0x4ab43], eax; jmp dword ptr [eax]; 
0x0804a2db: add dword ptr [eax - 0x6bf0d006], eax; ret 0xb60f; 
0x0804c6b0: add dword ptr [eax - 1], -1; call dword ptr [eax - 0x75]; 
0x08079cea: add dword ptr [eax - 6], -7; call dword ptr [eax - 1]; 
0x0806eb9c: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x08070164: add dword ptr [eax], 0x52; std; call dword ptr [eax - 0x18]; 
0x0808d334: add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x08073a47: add dword ptr [eax], 0x61; std; call dword ptr [eax + 0x68]; 
0x08073a1f: add dword ptr [eax], 0x61; std; call dword ptr [eax - 0x73]; 
0x0809a905: add dword ptr [eax], 0xa30f7000; ret 0x830f; 
0x0809aa4d: add dword ptr [eax], 0xa30f7000; ret 0xca73; 
0x080d54ca: add dword ptr [eax], eax; add al, 0x10; std; jmp dword ptr [ecx]; 
0x080d620a: add dword ptr [eax], eax; add al, 0x42; std; call dword ptr [ebx + 5]; 
0x08087e9a: add dword ptr [eax], eax; add bh, al; ret 0xb314; 
0x080a27ce: add dword ptr [eax], eax; add bl, bh; push esi; call dword ptr [ebx]; 
0x08075357: add dword ptr [eax], eax; add bl, ch; fisttp dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x0807c200: add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x08050b2e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + ebp], -3; call dword ptr [eax - 0x18]; 
0x080753b5: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x08073154: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x56], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0807bf78: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and edi, 0x69; std; call dword ptr [eax - 0x18]; 
0x0807bf59: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp esp, 0x69; std; call dword ptr [eax - 0x18]; 
0x08093e8b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [esi + 0x2f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08075317: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x5d; std; call dword ptr [eax - 0x18]; 
0x0807bf3a: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb ecx, 0x69; std; call dword ptr [eax - 0x18]; 
0x08073130: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x56], -3; call dword ptr [eax - 0x18]; 
0x0806b732: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x40], edi; std; call dword ptr [eax - 0x18]; 
0x08074b4e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x5c; std; call dword ptr [eax - 0x18]; 
0x0807536f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x080baeda: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x080ba08a: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call esp; 
0x080b9eaa: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d4; 
0x080ba642: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x1d5; 
0x080b9eb2: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0808f5f7: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0809d73d: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr [eax]; 
0x0806c62f: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806c38d: add dword ptr [eax], eax; add byte ptr [eax], al; int 0x80; 
0x080608f1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x188f9; neg eax; ret; 
0x08060ab1: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18ab9; neg eax; ret; 
0x08060c69: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18c71; neg eax; ret; 
0x080622e2: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a2ea; neg eax; ret; 
0x08062381: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a389; neg eax; ret; 
0x08062e68: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1ae70; neg eax; ret; 
0x080579a6: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08057956: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4c4], edx; ret; 
0x08057926: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4d8], edx; ret; 
0x0808ac2d: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808b552: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x4a0], 0x20; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0806eba1: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0809bf30: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x0808b172: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808b005: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0808ac37: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808af7d: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x0806b328: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x08080fd4: add dword ptr [eax], eax; add byte ptr [eax], al; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cd4: add dword ptr [eax], eax; add byte ptr [eax], al; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x0808106f: add dword ptr [eax], eax; add byte ptr [eax], al; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08080f86: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808061c: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x0808b5e0: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [ebx + eax - 0x1d760]; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x08055fb9: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x08092a05: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x08096253: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x08072a22: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x08092bd1: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x08049036: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0808afc2: add dword ptr [eax], eax; add byte ptr [eax], al; xor ecx, ecx; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x08073a4f: add dword ptr [eax], eax; add byte ptr [ebp - 0x2a3dd7d], cl; call dword ptr [eax - 0x73]; 
0x080a24ea: add dword ptr [eax], eax; add byte ptr [ebp - 0x7c208a01], al; in al, dx; add al, 0x83; ret; 
0x080a62bd: add dword ptr [eax], eax; add byte ptr [ebp - 0x7e0b8a37], al; ret; 
0x080aa05b: add dword ptr [eax], eax; add byte ptr [ebx + 0x36ff04ec], al; push dword ptr [ebx + 4]; push ebp; call edi; 
0x0806b58c: add dword ptr [eax], eax; add byte ptr [ebx + 0x40a0b784], cl; std; inc dword ptr [ecx]; clc; jmp eax; 
0x08052e60: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08048ae9: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080567eb: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [eax + 0x2c]; 
0x0804fc87: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0804fc67: add dword ptr [eax], eax; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x08053de4: add dword ptr [eax], eax; add byte ptr [ebx + 0x94b5], cl; add bh, al; ret 0xafc0; 
0x080874bd: add dword ptr [eax], eax; add byte ptr [ebx + 0xf042474], cl; mov esi, 0xc75f2444; ret 0xfff0; 
0x0806c62b: add dword ptr [eax], eax; add byte ptr [ebx + 1], bh; call dword ptr gs:[0x10]; 
0x080c54a1: add dword ptr [eax], eax; add byte ptr [ebx + ecx + 0x79380000], cl; clc; jmp edi; 
0x08052884: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0809bc67: add dword ptr [eax], eax; add byte ptr [ebx - 0x23b63], cl; dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax - 0x73]; 
0x0804909a: add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db8c], cl; ret 0xbf88; 
0x08053b63: add dword ptr [eax], eax; add byte ptr [ebx - 0x38fbdbac], cl; ret; 
0x0806ca64: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0806c9ab: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0809340b: add dword ptr [eax], eax; add byte ptr [ebx - 0x74dfdba4], cl; dec esp; and al, 0x24; call dword ptr gs:[0x10]; 
0x08059e74: add dword ptr [eax], eax; add byte ptr [ebx - 0x74e3dbbc], cl; inc eax; or al, 0x39; ret 0x870f; 
0x0804f34f: add dword ptr [eax], eax; add byte ptr [ebx - 0x76d7dbb4], cl; ret 0xdaf7; 
0x0809a550: add dword ptr [eax], eax; add byte ptr [ebx - 0x78f0d501], al; ret 6; 
0x080919d2: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0805c641: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0ef05], al; ret; 
0x0805ca7a: add dword ptr [eax], eax; add byte ptr [ebx - 0x7af0fd20], al; ret 0; 
0x0806a521: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x08078093: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cf7dbac], cl; ret 0x3904; 
0x08053be4: add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; je 0xbc12; cmp al, 0x56; call dword ptr [ebx + 0x38]; 
0x0807c818: add dword ptr [eax], eax; add byte ptr [ecx + 0x110245c], cl; ret 0x5489; 
0x0804c759: add dword ptr [eax], eax; add byte ptr [ecx - 0x38ff743d], cl; xbegin 0x8a004766; ret 0xbd89; 
0x0809395d: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x0809b053: add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0805315e: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x44c7; 
0x0809bcf0: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x080a269f: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5589; 
0x0809d002: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0806cf76: add dword ptr [eax], eax; add byte ptr [edi - 0x77], dh; xor al, 0x24; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x080a6be5: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0xd2; mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x080916c2: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0805371d: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ecx + 0x40]; 
0x080536dd: add dword ptr [eax], eax; add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x0807c2f6: add dword ptr [eax], eax; add byte ptr [esi + 8], bh; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0804c904: add dword ptr [eax], eax; add byte ptr [esi - 0x18], dl; ret; 
0x080a49d2: add dword ptr [eax], eax; add byte ptr [esp + ebx - 0x75], dh; push ebx; add al, 0x85; sal byte ptr [ebp + edx - 0x7d], cl; ret; 
0x08066cb5: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x08066cc6: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x08066cd7: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x08066c6f: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x08066c80: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08066c91: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x08053fcc: add dword ptr [eax], eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08052a78: add dword ptr [eax], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x08052519: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0805ba7a: add dword ptr [eax], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080d54de: add dword ptr [eax], eax; and byte ptr [eax], dl; std; call dword ptr [esi]; 
0x080d63e2: add dword ptr [eax], eax; in al, dx; inc edi; std; jmp dword ptr [edx]; 
0x080d56f2: add dword ptr [eax], eax; jl 0x8d70c; std; jmp dword ptr [edx + 8]; 
0x080d4a12: add dword ptr [eax], eax; lodsb al, byte ptr [esi]; frndint; jmp dword ptr [edi + 7]; 
0x080d514a: add dword ptr [eax], eax; mov ah, 7; std; call dword ptr [edx + 1]; 
0x080d6006: add dword ptr [eax], eax; mov byte ptr [eax], bh; std; call dword ptr [esi]; 
0x08056f8f: add dword ptr [eax], eax; mov dword ptr [edx + 0x1860], ebx; add dword ptr [edx + 0x185c], 1; pop ebx; ret; 
0x08058c95: add dword ptr [eax], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080d5a9a: add dword ptr [eax], eax; movsb byte ptr es:[edi], byte ptr [esi]; xor ch, bh; call dword ptr [ecx]; 
0x080d4f5e: add dword ptr [eax], eax; nop; clc; cld; jmp dword ptr [edi]; 
0x080d4aee: add dword ptr [eax], eax; nop; out dx, eax; cld; jmp dword ptr [esi]; 
0x0804fb47: add dword ptr [eax], eax; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0805d952: add dword ptr [eax], eax; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0805c1ee: add dword ptr [eax], eax; pop ebx; ret; 
0x080d6682: add dword ptr [eax], eax; pop esp; dec ebp; std; jmp dword ptr [ecx + 1]; 
0x080d4dc2: add dword ptr [eax], eax; pop esp; idiv esp; call dword ptr [esi]; 
0x080d62f2: add dword ptr [eax], eax; pop esp; inc edi; std; jmp dword ptr [edi]; 
0x080d502e: add dword ptr [eax], eax; push eax; stc; cld; jmp dword ptr [esi]; 
0x0805695e: add dword ptr [eax], eax; sub esp, 0x18; push 1; call 0xe3f0; add esp, 0x1c; ret; 
0x080d656a: add dword ptr [eax], eax; xchg eax, esp; dec edx; std; call dword ptr [eax + 1]; 
0x080d5c2a: add dword ptr [eax], eax; xchg eax, esp; xor ebp, edi; jmp dword ptr [esi]; 
0x0804f06c: add dword ptr [eax], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0805e0ec: add dword ptr [eax], edi; pop esp; add eax, 0x890b7500; ret 0x428d; 
0x0809fe95: add dword ptr [ebp + 0x390475c9], eax; ret; 
0x0807c445: add dword ptr [ebp + 0x40], esi; mov ecx, esi; mov eax, 0xaf; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x08071f0f: add dword ptr [ebp + 0x6bf475c0], eax; ret 0x833c; 
0x080a7868: add dword ptr [ebp + 0x75000000], ebp; adc dword ptr [esi - 0x7f], esp; js 0x5f878; int 0x80; 
0x080cd272: add dword ptr [ebp + 0xe], eax; mov al, byte ptr [0xa830201]; push cs; adc al, 0x41; ret; 
0x0806c1a8: add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x0805e660: add dword ptr [ebp - 0x7b75f7e], ecx; dec dword ptr [ebp - 0x7b0ef6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0806e5c6: add dword ptr [ebp - 9], esi; pop ebx; pop esi; pop edi; ret; 
0x080780c8: add dword ptr [ebx + 0x1b801f8], eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esi; ret; 
0x08055c2f: add dword ptr [ebx + 0x598d08ec], eax; add dword ptr [eax + 0x55], edx; call dword ptr [esi + 0xc]; 
0x0806bf62: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0806dba3: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x0809cd49: add dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0809d7e1: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0808fb91: add dword ptr [ebx + 0x5e], ebx; ret; 
0x0809b871: add dword ptr [ebx + 0x7b0101c7], eax; add al, 0x83; ret; 
0x0804feac: add dword ptr [ebx + 0x949e], ecx; add bh, al; ret 0xafc0; 
0x080c9639: add dword ptr [ebx + 0xa], edx; push cs; adc al, 0x41; ret; 
0x080cda21: add dword ptr [ebx + 0xa], esp; push cs; adc al, 0x41; ret; 
0x080cdf00: add dword ptr [ebx + 0xe], ecx; rol byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08065e93: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08064623: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065eb3: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08064643: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x080c6ee2: add dword ptr [ebx + ebx*2], 0xa; ret; 
0x0805c1e2: add dword ptr [ebx + ecx - 0x73], esi; and dword ptr [eax + ebx - 0x5f180000], 0x29; add dword ptr [eax], eax; pop ebx; ret; 
0x0804c974: add dword ptr [ebx - 0x1bb7b], ecx; dec dword ptr [ebx + 0x15f898]; add byte ptr [ebx + 0x15f480], cl; add byte ptr [ecx], bh; ret; 
0x0807038d: add dword ptr [ebx - 0x2288e808], eax; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x0805c44b: add dword ptr [ebx - 0x2f76ef3c], eax; pop ebx; pop esi; pop edi; ret; 
0x0807e2dc: add dword ptr [ebx - 0x427f002f], eax; aas; idiv edi; jmp dword ptr [eax]; 
0x0808b789: add dword ptr [ebx - 0x49f43], eax; jmp dword ptr [eax]; 
0x080764fd: add dword ptr [ebx - 0x67f3f1f], eax; or byte ptr [edi], 0x85; sbb eax, 0x83000002; ret; 
0x080763e9: add dword ptr [ebx - 0x69f0fa02], eax; ret; 
0x0809f394: add dword ptr [ebx - 0x78f0fe08], eax; ret 0; 
0x080a7c9a: add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x08089037: add dword ptr [ebx - 0x8d77b], ecx; inc dword ptr [ebp - 0x7d7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x080841ab: add dword ptr [ebx - 0xcb63], ecx; inc dword ptr [ecx]; ret; 
0x080c96e5: add dword ptr [ebx], -0x7a; add al, byte ptr [ebx + 0xa]; push cs; or al, 0x46; ret; 
0x080491aa: add dword ptr [ebx], -3; call dword ptr [eax - 0x18]; 
0x080cb03d: add dword ptr [ebx], 0x43; push cs; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080d0135: add dword ptr [ebx], 0x43; push cs; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d15a9: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7de1: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x080c9335: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ecx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d151d: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cb235: add dword ptr [ebx], 0x43; push cs; and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb075: add dword ptr [ebx], 0x43; push cs; and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080cb1c1: add dword ptr [ebx], 0x43; push cs; and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d164d: add dword ptr [ebx], 0x48; push cs; inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080d421d: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080cdc3d: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [eax + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d6319: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [ebp + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7795: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [ebp + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d00cd: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x080cbf09: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [edi + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c4cd1: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x080cfc6d: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7c09: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080c8d39: add dword ptr [ebx], 0x4e; push cs; adc byte ptr [edx], al; or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080d45f5: add dword ptr [ebx], 0x71; ret; 
0x080d0860: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08cf: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08be: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0924: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x080d089c: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d0b2e: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d08ad: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d088b: add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080d1709: add dword ptr [ebx], 2; inc ecx; ret; 
0x080d0cd9: add dword ptr [ebx], 2; jle 0x88ce8; ret; 
0x080cd830: add dword ptr [ebx], eax; dec eax; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x080cd460: add dword ptr [ebx], eax; lea eax, [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbd78: add dword ptr [ebx], eax; mov es, word ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cd084: add dword ptr [ebx], eax; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806e0c9: add dword ptr [ebx], ecx; inc ecx; or byte ptr [ecx + 0x418b0446], cl; add al, 0x89; ret 0xe083; 
0x0809bda2: add dword ptr [ecx + 0x291888f2], ecx; ret 0xca39; 
0x08065d01: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x08065e31: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x08064491: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x080645c1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x08065bd1: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x08065e01: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x08065e21: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x080645b1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08065e11: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x080645a1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x08066421: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08057a2c: add dword ptr [ecx + 0x4f082], ecx; add bl, dh; ret; 
0x080a1535: add dword ptr [ecx + 0x5bf88906], ecx; pop esi; pop edi; ret; 
0x08064381: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x080cf84d: add dword ptr [ecx + 0xa], ebx; push cs; adc al, 0x41; ret; 
0x08083712: add dword ptr [ecx + 0xc61457], ecx; sub eax, 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x080cfb46: add dword ptr [ecx + 0xe], eax; mov al, byte ptr [0x900e4601]; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c4b90: add dword ptr [ecx + 0xe], eax; mov al, byte ptr [0x900e4801]; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080ccc38: add dword ptr [ecx + 0xe], ecx; jo 0x84c3f; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080ccb7c: add dword ptr [ecx + 0xe], ecx; pushal; add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x08098a5a: add dword ptr [ecx + edi], -2; call dword ptr [eax - 0x18]; 
0x08079ab6: add dword ptr [ecx - 0x3b7cfbba], ecx; add al, 0x5b; pop esi; ret; 
0x0808b7e1: add dword ptr [ecx - 0x45f7b], ecx; dec dword ptr [ebx - 0x4cf43]; inc dword ptr [ebp - 0x7b7bf001]; add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x0808be71: add dword ptr [ecx - 0x45f7b], ecx; dec dword ptr [ebx - 0x4cf7b]; inc dword ptr [ebp - 0x707bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x080817e3: add dword ptr [ecx - 0x46f7b], ecx; dec dword ptr [ebx - 0x4df7b]; inc dword ptr [ebp - 0x6f7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x08080b34: add dword ptr [ecx - 0x46f7b], ecx; dec dword ptr [ebx - 0x4df7b]; inc dword ptr [ebp - 0x7a7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x0805b277: add dword ptr [ecx - 0x74f3dbac], ecx; adc bh, byte ptr [ecx]; ret 0x5489; 
0x0807491a: add dword ptr [ecx - 0x762176f2], ecx; ret 0xc539; 
0x0806ba57: add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x0809f73a: add dword ptr [ecx - 0x7cbb81f9], ecx; ret; 
0x0809fa86: add dword ptr [ecx - 0x7cfb6cb4], ecx; ret 0x8501; 
0x0807e629: add dword ptr [ecx - 0x87f73], ecx; call dword ptr [ebx - 1]; 
0x0805695d: add dword ptr [ecx], 0; sub esp, 0x18; push 1; call 0xe3f0; add esp, 0x1c; ret; 
0x080569e7: add dword ptr [ecx], 0x60938900; sbb byte ptr [eax], al; add bh, al; ret 0xa078; 
0x080d405e: add dword ptr [ecx], 0xa; ret; 
0x080a7ed7: add dword ptr [ecx], eax; ret; 
0x0808548b: add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x080a0934: add dword ptr [ecx], ebp; ret 0xd089; 
0x0806dfbb: add dword ptr [ecx], ecx; ret 0x1689; 
0x0805b7b9: add dword ptr [ecx], ecx; ret 0x5189; 
0x0804f70b: add dword ptr [ecx], edi; ret 0x4774; 
0x0809d5fa: add dword ptr [ecx], edi; ret 0x674; 
0x080a3393: add dword ptr [ecx], edi; ret 0xdc75; 
0x080a55da: add dword ptr [ecx], edi; ret 0xe175; 
0x08095f87: add dword ptr [ecx], edi; ret 0xf475; 
0x08096066: add dword ptr [ecx], edi; ret 0xf575; 
0x0805e286: add dword ptr [ecx], edi; ret; 
0x0807be61: add dword ptr [ecx], esp; ret 0x6a52; 
0x080d5a14: add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x080c9635: add dword ptr [edi + 0xe], ecx; add byte ptr [ecx], 0x53; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08052840: add dword ptr [edi + eax - 0x73], esi; add ch, al; inc esi; ret; 
0x080a2c41: add dword ptr [edi - 0x63], -2; call dword ptr [eax - 0x18]; 
0x08051c6d: add dword ptr [edi - 1], edx; jbe 0x9c7a; push dword ptr [esi + 0xc]; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x0808e368: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0805d504: add dword ptr [edi], ecx; inc ebp; ret; 
0x08077187: add dword ptr [edi], ecx; mov dh, 0x48; dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x0804fc63: add dword ptr [edi], ecx; test byte ptr [esi], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x08091b0c: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x08088c51: add dword ptr [edi], ecx; test dword ptr [ebx], eax; adc byte ptr [eax], al; add byte ptr [ebx - 0x8a343], al; call dword ptr [ebx + 0xf]; 
0x0807eac9: add dword ptr [edi], ecx; test eax, edx; or eax, dword ptr [eax]; add byte ptr [eax - 0x89343], al; call dword ptr [ebx + 0xf]; 
0x08056f97: add dword ptr [edx + 0x185c], 1; pop ebx; ret; 
0x08054e4a: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x080c8c9b: add dword ptr [edx + 0xb], edx; add esp, esi; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x080ca66f: add dword ptr [edx + 0xe], ecx; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x080d66cf: add dword ptr [edx + 0xe], ecx; jo 0x8e72a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08065e53: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080645e3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x080a8e1b: add dword ptr [edx + 1], ebp; call eax; 
0x080a1799: add dword ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080c9be6: add dword ptr [edx + eax], -0x56; ret; 
0x080ca556: add dword ptr [edx + eax], 0x40; ret; 
0x080cb91a: add dword ptr [edx + eax], 0x45; ret; 
0x080d0d12: add dword ptr [edx + eax], 0x50; ret; 
0x080c8fa2: add dword ptr [edx + eax], 0x57; ret; 
0x080ce38e: add dword ptr [edx + eax], 0x5a; ret; 
0x080cdf04: add dword ptr [edx + ecx + 0xe], ebx; adc al, 0x41; ret; 
0x080c4b98: add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080cfb4e: add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c6b42: add dword ptr [edx + edi*2], 0xa; ret; 
0x080d4ba2: add dword ptr [edx + edx*2], 0xa; ret; 
0x080cbaf2: add dword ptr [edx], -0x7f; add eax, dword ptr [edx + 0xc0e5f04]; ret 0xe41; 
0x080c7128: add dword ptr [edx], 0x45; push cs; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x080cf638: add dword ptr [edx], 0x48; push cs; mov al, byte ptr [0xa580283]; push cs; adc al, 0x41; ret; 
0x080cbc5c: add dword ptr [edx], 0x48; ret; 
0x080d10d0: add dword ptr [edx], 0x51; ret; 
0x080c976c: add dword ptr [edx], 0x57; ret; 
0x080cf63d: add dword ptr [edx], 0x58; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7628: add dword ptr [edx], 0x66; ret; 
0x080cfc4c: add dword ptr [edx], 0x68; ret; 
0x080d2a54: add dword ptr [edx], 0x6a; ret; 
0x080c7fc0: add dword ptr [edx], 2; inc ebx; ret; 
0x080ce404: add dword ptr [edx], 2; inc ecx; ret; 
0x080c8fc8: add dword ptr [edx], 2; pushal; ret; 
0x080d523d: add dword ptr [edx], eax; dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d596c: add dword ptr [edx], eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d35d3: add dword ptr [edx], eax; inc ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c6aac: add dword ptr [edx], eax; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c6c06: add dword ptr [edx], eax; inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5185: add dword ptr [edx], eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080cd276: add dword ptr [edx], eax; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080c612e: add dword ptr [edx], eax; pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d585d: add dword ptr [edx], eax; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080512e5: add dword ptr [edx], ebp; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x080543e6: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x08053721: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ecx + 0x40]; 
0x080c49cb: add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080c884a: add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x080c81a2: add dword ptr [edx], ecx; push cs; adc al, 0x45; ret; 
0x080d622e: add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x080c4f8a: add dword ptr [edx], ecx; ret; 
0x080c6aa8: add dword ptr [esi + 0xe], eax; mov al, byte ptr [0xa470201]; push cs; adc al, 0x41; ret; 
0x080cfb4a: add dword ptr [esi + 0xe], eax; nop; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x08065ed3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064663: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064683: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f13: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08065c03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x08065e43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x080643b3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x080645d3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x08066ac3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x080664b3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066ae3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x080664d3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08066b03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x080664f3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066b23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066513: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08075de1: add dword ptr [esi + ebx*2], -3; call dword ptr [eax - 0x73]; 
0x080d55a3: add dword ptr [esi + ecx + 0x70], ecx; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ccc34: add dword ptr [esi + ecx - 0x60], eax; add dword ptr [ecx + 0xe], ecx; jo 0x84c3f; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0804a8b6: add dword ptr [esi - 0x77], esp; push eax; call dword ptr [edi - 1]; 
0x080c5d7a: add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x080c81b9: add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x080a484d: add eax, -0x59; cld; call dword ptr [eax - 0x18]; 
0x080a20e5: add eax, -0x7d; cld; call dword ptr [eax - 0x73]; 
0x0807c032: add eax, 0; ret; 
0x080cfae3: add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf92f: add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c600f: add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x0807c156: add eax, 0x14; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0809e874: add eax, 0x14; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0805e897: add eax, 0x174d138; inc eax; pop edi; ret; 
0x080cbd74: add eax, 0x1880e4e; add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x0804ed13: add eax, 0x18; call eax; 
0x0805ba50: add eax, 0x1b90000; add byte ptr [eax], al; add al, ch; xchg eax, ebx; fdivr st(7); jmp dword ptr [ebp - 0x7d]; 
0x0807c0c3: add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x08065d78: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ed8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064508: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x08064668: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x080c5b98: add eax, 0x2200e4e; test eax, 0x41140e0a; ret; 
0x080cf2e0: add eax, 0x2240e4d; test eax, 0x41140e0a; ret; 
0x080cf28c: add eax, 0x2280e4d; mov ecx, 0x41140e0a; ret; 
0x080d4a60: add eax, 0x2300e49; or cl, byte ptr [0x4314]; ret; 
0x080c63c4: add eax, 0x2300e4e; mov esp, 0x41140e0a; ret; 
0x080d2014: add eax, 0x2400e4d; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3e88: add eax, 0x2400e4e; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3f44: add eax, 0x2400e4e; xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8ec0: add eax, 0x2400e50; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080caba4: add eax, 0x2500e43; cmpsd dword ptr [esi], dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8a80: add eax, 0x2500e4e; mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x080cfb8c: add eax, 0x2500e4e; pushfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4c14: add eax, 0x2500e4e; ret; 
0x080d3d54: add eax, 0x2600e43; jl 0x8bd65; push cs; adc al, 0x46; ret; 
0x080d6124: add eax, 0x2600e4e; or byte ptr [edx], 0xe; adc al, 0x43; ret; 
0x080cdaec: add eax, 0x2600e4e; xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080517e6: add eax, 0x2c; push eax; mov eax, dword ptr [esp + 0x28]; push eax; call dword ptr [eax + 4]; 
0x080d57fc: add eax, 0x2d00e53; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d5be0: add eax, 0x2e00e4b; add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x080d2958: add eax, 0x3380e48; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x080a1965: add eax, 0x3869b; mov eax, 0x80dbf64; mov eax, dword ptr [eax]; ret; 
0x08095ddd: add eax, 0x3911430f; ret 0x430f; 
0x0806696c: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x080bdfed: add eax, 0x468fffc; cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080c77d8: add eax, 0x4e200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806a2e3: add eax, 0x542b60f; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x08060893: add eax, 0x542b60f; sub eax, ecx; ret; 
0x080cf3dc: add eax, 0x57300e4e; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c803c: add eax, 0x59300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080523b8: add eax, 0x5b08c483; ret; 
0x0806d842: add eax, 0x5b18c483; ret; 
0x0809e87a: add eax, 0x5b28c483; ret; 
0x080d2a08: add eax, 0x5b300e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080bba71: add eax, 0x5ba0000; add byte ptr [eax], al; mov esp, 0xbe000005; add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x080bba7d: add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x080753ba: add eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x080a8e41: add eax, 0x5d8bbc75; hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0807c065: add eax, 0x5df9b; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807c045: add eax, 0x5dfbb; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x0807c025: add eax, 0x5dfdb; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x0807c005: add eax, 0x5dffb; mov edx, dword ptr [esp + 4]; mov eax, 0xffffffd4; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0806ad0e: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x08065d81: add eax, 0x5f0c428d; ret; 
0x08075e3e: add eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x08075917: add eax, 0x5f; std; call dword ptr [eax - 0x73]; 
0x080792b5: add eax, 0x60d4b; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080be081: add eax, 0x628fffc; cld; jmp edi; 
0x0807ad3d: add eax, 0x62; std; call dword ptr [eax - 0x73]; 
0x080718b5: add eax, 0x6874b; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x08071895: add eax, 0x6876b; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080701b5: add eax, 0x69e4b; lea eax, [eax + 0xaa0]; ret; 
0x08050f84: add eax, 0x6a0000; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x080cfcb0: add eax, 0x71300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbb4c: add eax, 0x74200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0808fa6f: add eax, 0x74fc5a39; cmp ecx, dword ptr [ebx + 0x94be]; add bh, al; ret 0xafc0; 
0x080c93a4: add eax, 0x75200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7ea8: add eax, 0x75300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfda4: add eax, 0x79200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c9500: add eax, 0x79300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c78fc: add eax, 0x7a200e4d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0809df48: add eax, 0x7e8d0000; dec dword ptr [ebx + 0x48dc85d]; jg 0x55ee0; inc esp; ret; 
0x0804883e: add eax, 0x80db320; add ecx, ecx; ret; 
0x08096377: add eax, 0x81fffb24; ret; 
0x08057a69: add eax, 0x82597; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4fc], edx; ret; 
0x08057a49: add eax, 0x825b7; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x080579e9: add eax, 0x82617; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579c9: add eax, 0x82637; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x08057979: add eax, 0x82687; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x08095dd7: add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x0804f137: add eax, 0x83000000; les ebp, ptr [eax]; pop ebx; ret; 
0x08070297: add eax, 0x830002c8; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0804effc: add eax, 0x830008b0; in al, dx; adc al, 0xc7; ret; 
0x08056f05: add eax, 0x830fb; mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x080cfadc: add eax, 0x86038743; add al, 0x83; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf928: add eax, 0x86038743; add al, 0x83; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c6008: add eax, 0x86038743; add al, 0x83; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce22c: add eax, 0x86038743; add al, 0x83; add eax, 0xa010803; ret; 
0x080d1978: add eax, 0x86038743; add al, 0x83; add eax, 0xa010f03; ret; 
0x080cc41c: add eax, 0x86038743; add al, 0x83; add eax, 0xa011003; ret; 
0x080d2730: add eax, 0x86038743; add al, 0x83; add eax, 0xa011903; ret; 
0x080d1908: add eax, 0x86038743; add al, 0x83; add eax, 0xa016803; ret; 
0x080cb944: add eax, 0x86038743; add al, 0x83; add eax, 0xa016d03; ret; 
0x080cacb4: add eax, 0x86038743; add al, 0x83; add eax, 0xa017303; ret; 
0x080d1cb8: add eax, 0x86038743; add al, 0x83; add eax, 0xa018103; ret; 
0x080cea7c: add eax, 0x86038743; add al, 0x83; add eax, 0xa018203; ret; 
0x080c66cc: add eax, 0x86038743; add al, 0x83; add eax, 0xa018503; ret; 
0x080ce5ec: add eax, 0x86038743; add al, 0x83; add eax, 0xa018803; ret; 
0x080cf58c: add eax, 0x86038743; add al, 0x83; add eax, 0xa01a403; ret; 
0x080d1938: add eax, 0x86038743; add al, 0x83; add eax, 0xa01ef03; ret; 
0x080c5a54: add eax, 0x86038743; add al, 0x83; add eax, 0xa01f303; ret; 
0x080d291c: add eax, 0x86038743; add al, 0x83; add eax, 0xa028f03; ret; 
0x080c4fb0: add eax, 0x86038743; add al, 0x83; add eax, 0xa03a503; ret; 
0x080d4a24: add eax, 0x86038743; add al, 0x83; add eax, 0xa04aa03; ret; 
0x080d50c0: add eax, 0x86038743; add al, 0x83; add eax, 0xa065403; ret; 
0x080cc724: add eax, 0x86038743; add al, 0x83; add eax, 0xa07ab03; ret; 
0x080cf55c: add eax, 0x86038743; add al, 0x83; add eax, 0xa080503; ret; 
0x080cea4c: add eax, 0x86038743; add al, 0x83; add eax, 0xa0a1503; ret; 
0x080d30d0: add eax, 0x86038746; add al, 0x83; add eax, 0xa016603; ret; 
0x080c4f80: add eax, 0x86038746; add al, 0x83; add eax, 0xa01eb03; ret; 
0x080c5424: add eax, 0x86038746; add al, 0x83; add eax, 0xa01ec03; ret; 
0x080ccaac: add eax, 0x86038746; add al, 0x83; add eax, 0xa02b103; ret; 
0x080d26f0: add eax, 0x86038746; add al, 0x83; add eax, 0xa030e03; ret; 
0x080d26c0: add eax, 0x86038749; add al, 0x83; add eax, 0xa031703; ret; 
0x080cece0: add eax, 0x86038749; add al, 0x83; add eax, 0xa04fe03; ret; 
0x08091d02: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x08067502: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x0805e0ef: add eax, 0x890b7500; ret 0x428d; 
0x08049099: add eax, 0x8b000001; je 0x10c4; or al, 0xc7; ret 0xbf88; 
0x08059784: add eax, 0x950f0000; ret 0x448b; 
0x080ce233: add eax, 0xa010803; ret; 
0x080d197f: add eax, 0xa010f03; ret; 
0x080cc423: add eax, 0xa011003; ret; 
0x080d2737: add eax, 0xa011903; ret; 
0x080d30d7: add eax, 0xa016603; ret; 
0x080d190f: add eax, 0xa016803; ret; 
0x080cb94b: add eax, 0xa016d03; ret; 
0x080cacbb: add eax, 0xa017303; ret; 
0x080d1cbf: add eax, 0xa018103; ret; 
0x080cea83: add eax, 0xa018203; ret; 
0x080c66d3: add eax, 0xa018503; ret; 
0x080ce5f3: add eax, 0xa018803; ret; 
0x080cf593: add eax, 0xa01a403; ret; 
0x080c4f87: add eax, 0xa01eb03; ret; 
0x080c542b: add eax, 0xa01ec03; ret; 
0x080d193f: add eax, 0xa01ef03; ret; 
0x080c5a5b: add eax, 0xa01f303; ret; 
0x080d2923: add eax, 0xa028f03; ret; 
0x080ccab3: add eax, 0xa02b103; ret; 
0x080d26f7: add eax, 0xa030e03; ret; 
0x080d26c7: add eax, 0xa031703; ret; 
0x080c4fb7: add eax, 0xa03a503; ret; 
0x080d4a2b: add eax, 0xa04aa03; ret; 
0x080cece7: add eax, 0xa04fe03; ret; 
0x080d50c7: add eax, 0xa065403; ret; 
0x080cc72b: add eax, 0xa07ab03; ret; 
0x080cf563: add eax, 0xa080503; ret; 
0x080cea53: add eax, 0xa0a1503; ret; 
0x08091f0d: add eax, 0xa; pop edi; ret; 
0x08091b72: add eax, 0xb; pop edi; ret; 
0x08048244: add eax, 0xc3810000; mov ecx, 0x8300091d; in al, dx; adc byte ptr [ebp - 0x1bcbb7d], cl; call dword ptr [eax + 0x6a]; 
0x08091f17: add eax, 0xc; pop edi; ret; 
0x080a00f6: add eax, 0xd; add esp, 4; jmp eax; 
0x08091f1c: add eax, 0xd; pop edi; ret; 
0x08091f21: add eax, 0xe; pop edi; ret; 
0x08091b9b: add eax, 0xf; pop edi; ret; 
0x08091ee0: add eax, 1; pop edi; ret; 
0x08092ba0: add eax, 1; ret; 
0x08091ee5: add eax, 2; pop edi; ret; 
0x08092b97: add eax, 2; ret; 
0x08091b25: add eax, 3; pop edi; ret; 
0x08092bb0: add eax, 3; ret; 
0x08091eef: add eax, 4; pop edi; ret; 
0x08091ef4: add eax, 5; pop edi; ret; 
0x08091ef9: add eax, 6; pop edi; ret; 
0x08091b4b: add eax, 7; pop edi; ret; 
0x08091f03: add eax, 8; pop edi; ret; 
0x08091f08: add eax, 9; pop edi; ret; 
0x0807c031: add eax, dword ptr [0]; ret; 
0x0809a7cc: add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x080a7f0b: add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x08099d5c: add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x080c4ce9: add eax, dword ptr [eax]; add ah, dh; dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x08075653: add eax, dword ptr [eax]; add bh, dh; ret 0; 
0x08098a55: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [ecx + edi], -2; call dword ptr [eax - 0x18]; 
0x08073a2d: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [edx + 0x5c], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0806cabc: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cb42: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092bf1: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x0809babc: add eax, dword ptr [eax]; add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x08096aa6: add eax, dword ptr [eax]; add byte ptr [ebp - 0x1cee27d], cl; call dword ptr [eax + 0x6a]; 
0x0806fcdb: add eax, dword ptr [eax]; add byte ptr [ebx + 0xb886], cl; add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x0806dfb3: add eax, dword ptr [eax]; add byte ptr [ebx - 0x1d7c3bab], cl; add dword ptr [ecx], ecx; ret 0x1689; 
0x08099e4a: add eax, dword ptr [eax]; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xe2c1; 
0x08053519: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edx + 0x40]; 
0x08091b19: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x08091b36: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x08091b3f: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x08051eff: add eax, dword ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x08091de5: add eax, dword ptr [eax]; je 0x49eea; mov eax, 4; pop edi; ret; 
0x080a1968: add eax, dword ptr [eax]; mov eax, 0x80dbf64; mov eax, dword ptr [eax]; ret; 
0x0809d527: add eax, dword ptr [eax]; sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x08092c87: add eax, dword ptr [ebp + 0x5bd475db]; ret; 
0x0806eb84: add eax, dword ptr [ebp + 0x5eec75c0]; pop ebx; pop edx; ret; 
0x080a5824: add eax, dword ptr [ebp]; push dword ptr [esp + 0x34]; push esi; push ebx; call eax; 
0x0806f622: add eax, dword ptr [ebx + 0x33771ef8]; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x0809dbec: add eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0808faa0: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x080d3c47: add eax, dword ptr [ebx + 0xa540204]; ret; 
0x080cb03e: add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080d0136: add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d15aa: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c8886: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa72: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b6: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080c7de2: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x080c9336: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ecx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d151e: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cb236: add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb076: add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080cb1c2: add eax, dword ptr [ebx + 0xe]; and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x08056311: add eax, dword ptr [ebx - 0x3b7c10dd]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0808fafa: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x080caac0: add eax, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0809b0a7: add eax, dword ptr [ebx]; push es; test edx, edx; jne 0x530b6; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x080d4dd6: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76b2: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d019e: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd16: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e22: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76ee: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e06: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff4a: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e36: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e16: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c852e: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba72: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080cd085: add eax, dword ptr [ecx + eax + 0x41140e0a]; ret; 
0x0809a473: add eax, dword ptr [ecx]; call eax; 
0x080caac1: add eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce499: add eax, dword ptr [edi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x08099788: add eax, dword ptr [edi]; call eax; 
0x080d576d: add eax, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x080cbaf5: add eax, dword ptr [edx + 0xc0e5f04]; ret 0xe41; 
0x080a3035: add eax, dword ptr [edx + 4]; call eax; 
0x0809390f: add eax, dword ptr [edx + ecx]; pop ebx; pop esi; ret; 
0x0804ad1d: add eax, dword ptr [edx]; add byte ptr [ebx - 0x976b], cl; inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x0809a1ae: add eax, dword ptr [edx]; call eax; 
0x080d170a: add eax, dword ptr [edx]; inc ecx; ret; 
0x080d0cda: add eax, dword ptr [edx]; jle 0x88ce8; ret; 
0x0808f581: add eax, dword ptr [edx]; jne 0x4759d; sub esp, 0xc; mov eax, dword ptr [eax + 0xb0]; push ebx; call dword ptr [eax + 0x34]; 
0x080cc324: add eax, dword ptr [edx]; pop esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cadc5: add eax, dword ptr [edx]; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cae87: add eax, dword ptr [esi + 0x2058304]; dec byte ptr [edx]; ret; 
0x080cca7f: add eax, dword ptr [esi + 0x2058304]; jne 0x84a91; ret; 
0x080c60ab: add eax, dword ptr [esi + 0x2058304]; mov cl, 0xa; ret; 
0x080c5fcf: add eax, dword ptr [esi + 0x2058304]; mov dl, 0xa; ret; 
0x080cf92b: add eax, dword ptr [esi + 0x2058304]; sahf; adc byte ptr cs:[edx], al; ja 0x87941; ret; 
0x080c6903: add eax, dword ptr [esi + 0x2058304]; xchg eax, edi; adc byte ptr cs:[edx], al; les ecx, ptr [edx]; ret; 
0x080c60bf: add eax, dword ptr [esi + 0x2102e04]; ret; 
0x080cea7f: add eax, dword ptr [esi + 0x3058304]; add byte ptr [ecx], 0xa; ret; 
0x080c5a57: add eax, dword ptr [esi + 0x3058304]; add dword ptr [edx], ecx; ret; 
0x080d30d3: add eax, dword ptr [esi + 0x3058304]; add word ptr [edx], cx; ret; 
0x080c5427: add eax, dword ptr [esi + 0x3058304]; in al, dx; add dword ptr [edx], ecx; ret; 
0x080cece3: add eax, dword ptr [esi + 0x3058304]; inc byte ptr [edx + ecx]; ret; 
0x080cb947: add eax, dword ptr [esi + 0x3058304]; insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x080cf58f: add eax, dword ptr [esi + 0x3058304]; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [edx], ecx; ret; 
0x080c4fb3: add eax, dword ptr [esi + 0x3058304]; movsd dword ptr es:[edi], dword ptr [esi]; add ecx, dword ptr [edx]; ret; 
0x080d193b: add eax, dword ptr [esi + 0x3058304]; out dx, eax; add dword ptr [edx], ecx; ret; 
0x080d26c3: add eax, dword ptr [esi + 0x3058304]; pop ss; add ecx, dword ptr [edx]; ret; 
0x080d26f3: add eax, dword ptr [esi + 0x3058304]; push cs; add ecx, dword ptr [edx]; ret; 
0x080d197b: add eax, dword ptr [esi + 0x3058304]; sidt [edx]; ret; 
0x080d4a27: add eax, dword ptr [esi + 0x3058304]; stosb byte ptr es:[edi], al; add al, 0xa; ret; 
0x080cc9e7: add eax, dword ptr [esi + 0x5835104]; add dh, byte ptr [edi + 0xa]; ret; 
0x080cbac9: add eax, dword ptr [esi + 0xc0e6704]; mov byte ptr [ecx + 0xe], 8; ret; 
0x080c96e6: add eax, dword ptr [esi + 0xe0a4302]; or al, 0x46; ret; 
0x080d5a50: add eax, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0809b0a8: add eax, dword ptr [esi]; test edx, edx; jne 0x530b6; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x0808fb7c: add eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x080a00f3: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x080a4580: add eax, dword ptr [esp]; ret; 
0x0807c030: add eax, dword ptr gs:[0]; ret; 
0x0806eda8: add eax, ebp; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0806c5d3: add eax, ebx; jmp eax; 
0x080563e0: add eax, ebx; pop ebx; ret; 
0x08062429: add eax, ecx; call 0x780; add ebx, 0x4ba78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0806231a: add eax, ecx; call 0x780; add ebx, 0x4bb87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x08066f76: add eax, ecx; pop edi; ret; 
0x080675e0: add eax, ecx; ret; 
0x08066f74: add eax, edi; add eax, ecx; pop edi; ret; 
0x0806b596: add eax, edi; jmp eax; 
0x08067017: add eax, edi; pop edi; ret; 
0x08091816: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x08067c9d: add eax, edx; add eax, ecx; ret; 
0x08067e03: add eax, edx; ret; 
0x0804ee63: add eax, edx; shr eax, 2; lea esi, [ecx + eax*4 + 4]; lea esi, [esi]; call dword ptr [edi]; 
0x080917d7: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x080cee3f: add ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080a8a0f: add ebp, dword ptr [eax + eax + 0x75]; mov esp, 0x950ff685; ret 0xc985; 
0x080c8db0: add ebp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c4983: add ebp, dword ptr [ebp - 0x3b]; ret; 
0x080d148e: add ebp, dword ptr [ebx + 0xa]; ret; 
0x080c495f: add ebp, dword ptr [ebx - 0x3b]; ret; 
0x08078d15: add ebp, dword ptr [ecx]; ret 0xeac1; 
0x080543e4: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x080ab84d: add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x080cecb2: add ebp, dword ptr [esi + 0xa]; ret; 
0x080c4f88: add ebp, ebx; add dword ptr [edx], ecx; ret; 
0x080a7cba: add ebp, ebx; mov dword ptr [0xf00768d], eax; mov bh, 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x080d1940: add ebp, edi; add dword ptr [edx], ecx; ret; 
0x080c542c: add ebp, esp; add dword ptr [edx], ecx; ret; 
0x0809869d: add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806aef1: add ebx, 0x430ef; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0806ac97: add ebx, 0x43349; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x08062430: add ebx, 0x4ba78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x08062321: add ebx, 0x4bb87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0805f0cd: add ebx, 0x4ebdb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805f01d: add ebx, 0x4ec8b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ef35: add ebx, 0x4ecf3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805eb83: add ebx, 0x4eea5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805eac7: add ebx, 0x4ef61; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ea6b: add ebx, 0x4efbd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805e9ad: add ebx, 0x4f07b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805e8c5: add ebx, 0x4f0e3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080d372e: add ebx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806ac9d: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0805e8cb: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x08062327: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x080d2738: add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x08092215: add ebx, dword ptr [esi + 0x5f]; ret; 
0x080c8b7c: add ebx, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08097bae: add ebx, dword ptr [esp + 0x3c]; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x08090d40: add ebx, ebp; ret; 
0x08065c83: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f33: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x08064433: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x080646c3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0805f0c2: add ecx, 0x80; call 0x780; add ebx, 0x4ebdb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ea60: add ecx, 0x80; call 0x780; add ebx, 0x4efbd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080d0f8e: add ecx, dword ptr [eax + 0xb]; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x080d164e: add ecx, dword ptr [eax + 0xe]; inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080cd831: add ecx, dword ptr [eax + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce234: add ecx, dword ptr [eax]; add dword ptr [edx], ecx; ret; 
0x080cd461: add ecx, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x08092212: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x080d4b76: add ecx, dword ptr [ebp + 2]; ret; 
0x080922f2: add ecx, dword ptr [ebp - 0x1d3efeaa]; add al, 1; ret 0xff85; 
0x0808abc2: add ecx, dword ptr [ebx - 0x4737b]; jmp dword ptr [ebp - 0x39]; 
0x08065d06: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x08065e36: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0809230d: add ecx, dword ptr [ecx + 0x5e5b084a]; pop edi; pop ebp; ret; 
0x08082e3a: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x080645c6: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x08064496: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x080c94a0: add ecx, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080d1980: add ecx, dword ptr [edi]; add dword ptr [edx], ecx; ret; 
0x080a44f6: add ecx, dword ptr [edi]; test dword ptr [0x8bfffffd], edi; jl 0x5c524; adc bh, al; ret 0x9da4; 
0x0806c1ae: add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x0806c1fd: add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x08048590: add ecx, dword ptr [edi]; xchg eax, esp; ret 0xca21; 
0x080cf79e: add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x080c4fba: add ecx, dword ptr [edx]; ret; 
0x080cbd79: add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x080d421e: add ecx, dword ptr [esi + 0xe]; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080cdc3e: add ecx, dword ptr [esi + 0xe]; adc byte ptr [eax + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d631a: add ecx, dword ptr [esi + 0xe]; adc byte ptr [ebp + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7796: add ecx, dword ptr [esi + 0xe]; adc byte ptr [ebp + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d00ce: add ecx, dword ptr [esi + 0xe]; adc byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x080cbf0a: add ecx, dword ptr [esi + 0xe]; adc byte ptr [edi + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c4cd2: add ecx, dword ptr [esi + 0xe]; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x080cfc6e: add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7c0a: add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080c8d3a: add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx], al; or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080cee3b: add ecx, dword ptr [esi + ecx - 0x60]; add ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080d0861: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08d0: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08bf: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0925: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x080d089d: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d0b2f: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d08ae: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d088c: add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080d26f8: add ecx, dword ptr [esi]; add ecx, dword ptr [edx]; ret; 
0x080cf79d: add ecx, dword ptr ss:[edx]; push cs; adc al, 0x41; ret; 
0x08099779: add ecx, eax; jmp ecx; 
0x0808d6bf: add ecx, ebp; ret 0xfffe; 
0x0805d904: add ecx, ebx; jmp ecx; 
0x08056cd3: add ecx, ebx; mov dword ptr [eax + 4], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x08048843: add ecx, ecx; ret; 
0x0804d95f: add ecx, edi; jmp ecx; 
0x080c5cd2: add ecx, edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080c8f48: add edi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0804f712: add edi, dword ptr [ecx]; ret 0x4f0f; 
0x080d0106: add edi, dword ptr [edi + 0xa]; ret; 
0x0808dc58: add edi, ebx; jmp edi; 
0x080c8875: add edi, ecx; call dword ptr [esi]; 
0x0806f62f: add edi, ecx; jmp edi; 
0x080cece8: add edi, esi; add al, 0xa; ret; 
0x080a8396: add edi, esi; jmp edi; 
0x0809380f: add edx, 0x467f1; int 0x80; 
0x080710c5: add edx, 0x68f3b; neg eax; mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x080cc424: add edx, dword ptr [eax]; add dword ptr [edx], ecx; ret; 
0x080d06ba: add edx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d622c: add edx, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080d26c8: add edx, dword ptr [edi]; add ecx, dword ptr [edx]; ret; 
0x0809a404: add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x080d50c8: add edx, dword ptr [esi + eax + 0xa]; ret; 
0x080d30e8: add edx, eax; add dword ptr [edx], ecx; ret; 
0x0805804a: add edx, ebx; cmp edx, ecx; jne 0x1005a; add esp, 8; pop ebx; ret; 
0x08062427: add edx, ecx; add eax, ecx; call 0x780; add ebx, 0x4ba78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x08062318: add edx, ecx; add eax, ecx; call 0x780; add ebx, 0x4bb87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0806aca0: add edx, ecx; add esi, ecx; jmp ebx; 
0x0805e8ce: add edx, ecx; jmp ebx; 
0x0809a566: add edx, ecx; jmp edx; 
0x080d2708: add edx, edi; add ecx, dword ptr [edx]; ret; 
0x0804dc6d: add edx, edi; jmp edx; 
0x0809d523: add esi, 0x3cadd; sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0809a46e: add esi, 8; mov eax, dword ptr [edi]; add eax, dword ptr [ecx]; call eax; 
0x080c8edb: add esi, dword ptr [0x140e0a01]; inc ebx; ret; 
0x080c800a: add esi, dword ptr [eax + 0xa]; ret; 
0x080cbcd8: add esi, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a067a: add esi, dword ptr [ebp - 0x15]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080a0652: add esi, dword ptr [ebp - 0x1d]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080d36ba: add esi, dword ptr [ebx + 0xa]; ret; 
0x08079a5a: add esi, dword ptr [ebx + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080c49c9: add esi, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x080c85bc: add esi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf79c: add esi, dword ptr [esi]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0807a8df: add esi, eax; popal; std; dec dword ptr [ebp + 0x62000384]; std; call dword ptr [eax - 0x18]; 
0x080c5a5c: add esi, ebx; add dword ptr [edx], ecx; ret; 
0x0806aca2: add esi, ecx; jmp ebx; 
0x0808eb75: add esi, edi; jmp dword ptr [esi - 0x70]; 
0x08091f67: add esi, esi; ret 0x7503; 
0x08085c4a: add esi, esi; ret 0x8901; 
0x0806b3e5: add esp, 0x100; sub eax, edx; ret; 
0x0805c9aa: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a9126: add esp, 0x10; add esp, 0xc; ret; 
0x0804d752: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x08053fce: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080487b2: add esp, 0x10; leave; ret; 
0x0804883a: add esp, 0x10; mov byte ptr [0x80db320], 1; leave; ret; 
0x08055fe0: add esp, 0x10; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0808f5f3: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x08055fb5: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0806ce77: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cb0f: add esp, 0x10; mov eax, dword ptr [esp + 8]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805c44c: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0809d6c5: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080a90b3: add esp, 0x10; mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0809ea4f: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a13fc: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a4754: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x0805dd24: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08054b81: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08057e19: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08052a7a: add esp, 0x14; pop ebx; pop esi; ret; 
0x0807c7d1: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0806c1ea: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804c6c7: add esp, 0x18; pop ebx; ret; 
0x080a47b2: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x080530e8: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x08049684: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804f0c5: add esp, 0x1c; ret; 
0x0809a7af: add esp, 0x20; lea esi, [esi]; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x0809b07d: add esp, 0x20; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x6c]; call eax; 
0x0809b141: add esp, 0x20; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x70]; call eax; 
0x080a6bb2: add esp, 0x20; ret; 
0x08049ff1: add esp, 0x23; std; call dword ptr [eax - 0x18]; 
0x080a0fa3: add esp, 0x24; movzx eax, al; pop ebx; pop esi; ret; 
0x0809cc62: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a0948: add esp, 0x24; pop ebx; pop esi; ret; 
0x0804f0fd: add esp, 0x28; pop ebx; ret; 
0x080a1c45: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x0804d253: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080498aa: add esp, 0x2c; ret; 
0x080937df: add esp, 0x34; pop ebx; pop esi; ret; 
0x0805d68c: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x08048346: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0806c352: add esp, 0x43; std; call dword ptr [eax - 0x18]; 
0x0805dfaf: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0807d82d: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809370e: add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x0804aee2: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0804d9ff: add esp, 0x4fc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08054684: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809bee3: add esp, 0x60; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0805d87a: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08092e35: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0806f76d: add esp, 0x74; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080492cf: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0808d331: add esp, 0x818c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0807c479: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x08052b65: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a18e8: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x08050d20: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08055d28: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0804ef78: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a9129: add esp, 0xc; ret; 
0x0805205b: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809ecef: add esp, 0xd4; pop ebx; pop esi; ret; 
0x0806cf5e: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a00fb: add esp, 4; jmp eax; 
0x0805dae8: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x080515e0: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x08085b85: add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x080488cf: add esp, 4; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0805b67b: add esp, 4; pop ebx; pop edi; ret; 
0x080515d2: add esp, 4; pop ebx; pop esi; jmp eax; 
0x080496d4: add esp, 4; pop ebx; pop esi; ret; 
0x0806a389: add esp, 4; pop ebx; ret; 
0x0805b5d5: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x080488fe: add esp, 8; call 0x8a5; mov eax, 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0805da88: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0808f600: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x080a95c0: add esp, 8; mov eax, 2; pop ebx; ret; 
0x080a95b4: add esp, 8; mov eax, 4; pop ebx; ret; 
0x080a95a0: add esp, 8; mov eax, 8; pop ebx; ret; 
0x0806ebf6: add esp, 8; mov eax, edx; pop ebx; ret; 
0x08057b05: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080481c6: add esp, 8; pop ebx; ret; 
0x0807cf90: add esp, 8; xor eax, eax; pop ebx; ret; 
0x0808b5e7: add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1080], al; jmp eax; 
0x0808c8dc: add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1100], al; jmp eax; 
0x080c81a0: add esp, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x45; ret; 
0x080c81b8: add esp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d295c: add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x080c8848: add esp, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080bddf9: add esp, edi; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080c8c9e: add esp, esi; add cl, byte ptr [edx]; push cs; adc al, 0x43; ret; 
0x080a1798: add word ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080d30d9: add word ptr [edx], cx; ret; 
0x080d163d: and ah, bh; call edi; 
0x0805e723: and ah, bl; clc; dec dword ptr [ebp - 0x726ff6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0808f6dc: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080cbf2c: and al, 0; add byte ptr [eax], al; sbb byte ptr [esi], dh; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x0806ce02: and al, 0x10; call 0x24cb0; add esp, 8; pop ebx; ret; 
0x0806cde8: and al, 0x10; call dword ptr gs:[0x10]; 
0x0809d531: and al, 0x10; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0805da77: and al, 0x10; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0806ca60: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806ead5: and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080515cd: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x08053f86: and al, 0x10; mov eax, dword ptr [edi + 0x10]; pop ebx; pop esi; pop edi; jmp eax; 
0x0805597c: and al, 0x10; mov eax, dword ptr [edi + 0x14]; pop ebx; pop esi; pop edi; jmp eax; 
0x08053067: and al, 0x10; mov eax, dword ptr [esi + 0x10]; pop ebx; pop esi; pop edi; jmp eax; 
0x0806f49b: and al, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; jmp eax; 
0x0806c928: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806cb4c: and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a4983: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d973: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080935e8: and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a7c3d: and al, 0x10; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x080a7f06: and al, 0x10; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x080557b5: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0xc]; pop esi; pop edi; jmp eax; 
0x0806b301: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080536e4: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x080a9250: and al, 0x10; push eax; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08082c93: and al, 0x10; push esi; call dword ptr [ecx + 0x1c]; 
0x080536e8: and al, 0x10; push esi; call dword ptr [ecx + 0x40]; 
0x080a920c: and al, 0x14; call eax; 
0x08053e0d: and al, 0x14; mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x0806c627: and al, 0x14; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x080934c0: and al, 0x14; mov eax, 0x127; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806d908: and al, 0x14; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0806ead1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080935e4: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08052661: and al, 0x14; push dword ptr [esp + 0x14]; push edi; call dword ptr [ebx + 0x3c]; 
0x0808e0e5: and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0808eacf: and al, 0x14; push ebp; call dword ptr [ebx + 0x1c]; 
0x08052665: and al, 0x14; push edi; call dword ptr [ebx + 0x3c]; 
0x080aa072: and al, 0x18; add al, 0x83; ret; 
0x08070294: and al, 0x18; call 0x54aa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08070255: and al, 0x18; call 0x54aa0; add esp, 0x18; pop ebx; ret; 
0x0807d9f7: and al, 0x18; call dword ptr [eax + 0x1c]; 
0x0806cdda: and al, 0x18; cmp ecx, 9; je 0x24e00; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x080a8bf9: and al, 0x18; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080a8be1: and al, 0x18; mov dword ptr [edx], eax; add esp, 8; pop ebx; ret; 
0x0807d9f3: and al, 0x18; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080aa28c: and al, 0x18; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0806eacd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080933a1: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; jne 0x4b3c8; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x08070251: and al, 0x18; push dword ptr [esp + 0x18]; call 0x54aa0; add esp, 0x18; pop ebx; ret; 
0x08050cbb: and al, 0x18; push dword ptr [esp + 0x18]; push ebp; call dword ptr [ebx + 0x40]; 
0x08085ab9: and al, 0x18; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x3b150; add esp, 0x1c; ret; 
0x08050cbf: and al, 0x18; push ebp; call dword ptr [ebx + 0x40]; 
0x08053e11: and al, 0x18; push ebp; call dword ptr [esi + 0x40]; 
0x08050436: and al, 0x18; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x080ab84b: and al, 0x1c; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x080a8c9b: and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x080799fe: and al, 0x1c; call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809226d: and al, 0x1c; call 0x22f50; add esp, 0x18; pop ebx; ret; 
0x0809229d: and al, 0x1c; call 0x22fd0; add esp, 0x18; pop ebx; ret; 
0x0806bb9d: and al, 0x1c; call 0x23040; add esp, 0x18; pop ebx; ret; 
0x08087b6d: and al, 0x1c; call 0x381b0; add esp, 0x18; pop ebx; ret; 
0x08085ac0: and al, 0x1c; call 0x3b150; add esp, 0x1c; ret; 
0x08051efa: and al, 0x1c; call 0x46b80; add esp, 0x18; pop ebx; ret; 
0x080a1147: and al, 0x1c; call 0x5c1d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a1109: and al, 0x1c; call 0x5c1d0; add esp, 0x18; pop ebx; ret; 
0x080aabc0: and al, 0x1c; call 0x62ad0; add esp, 0x18; pop ebx; ret; 
0x080aab8d: and al, 0x1c; call 0x62ad0; add esp, 0x1c; ret; 
0x0807cf80: and al, 0x1c; call 0x6b90; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0804f0be: and al, 0x1c; call 0x6ff0; add esp, 0x1c; ret; 
0x080500db: and al, 0x1c; call 0x7fe0; add esp, 0x1c; ret; 
0x0804f90d: and al, 0x1c; call 0x9f10; add esp, 0x18; pop ebx; ret; 
0x0805a557: and al, 0x1c; call eax; 
0x080933a5: and al, 0x1c; jne 0x4b3c8; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x08052511: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x24ea0; add esp, 0x18; pop ebx; ret; 
0x0804c6be: and al, 0x1c; push dword ptr [eax]; call 0x210; add esp, 0x18; pop ebx; ret; 
0x08071837: and al, 0x1c; push dword ptr [eax]; call 0x220; add esp, 0x18; pop ebx; ret; 
0x0804e59c: and al, 0x1c; push dword ptr [edi]; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x08092269: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x22f50; add esp, 0x18; pop ebx; ret; 
0x08092299: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x22fd0; add esp, 0x18; pop ebx; ret; 
0x0806bb99: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x23040; add esp, 0x18; pop ebx; ret; 
0x08087b69: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x381b0; add esp, 0x18; pop ebx; ret; 
0x080a1105: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x5c1d0; add esp, 0x18; pop ebx; ret; 
0x080aab89: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x1c; ret; 
0x0804f0ba: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6ff0; add esp, 0x1c; ret; 
0x080500d7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7fe0; add esp, 0x1c; ret; 
0x0804f909: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9f10; add esp, 0x18; pop ebx; ret; 
0x0804f0b6: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ff0; add esp, 0x1c; ret; 
0x0804e5e8: and al, 0x1c; push ebp; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e794: and al, 0x1c; push edi; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0809e870: and al, 0x1c; xor eax, dword ptr gs:[0x14]; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0809e63b: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d0: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e970: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea54: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a130a: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a1401: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a4759: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64b8: and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x0806cd67: and al, 0x20; call 0x24cb0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0809bf83: and al, 0x20; call 0x53a20; add esp, 0x1c; ret; 
0x0806c9b5: and al, 0x20; call dword ptr gs:[0x10]; 
0x080aa290: and al, 0x20; call eax; 
0x080ab468: and al, 0x20; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08093410: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0806cc63: and al, 0x20; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0809344b: and al, 0x20; mov edi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c9f0: and al, 0x20; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0809bf5d: and al, 0x20; mov edx, 0xffffffff; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x0809bf2d: and al, 0x20; mov edx, 1; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x08051102: and al, 0x20; mov esi, dword ptr [ebp + 0x54]; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0806cd8f: and al, 0x20; mov esi, eax; mov edx, dword ptr [esp + 8]; mov eax, 0xdd; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08093414: and al, 0x24; call dword ptr gs:[0x10]; 
0x0804e5a5: and al, 0x24; call eax; 
0x0805a553: and al, 0x24; mov dword ptr [esp + 0x1c], edx; call eax; 
0x08093451: and al, 0x24; mov eax, 0x127; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0809bf7f: and al, 0x24; mov eax, dword ptr [esp + 0x20]; call 0x53a20; add esp, 0x1c; ret; 
0x0806cc5b: and al, 0x24; mov ecx, dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x08052e68: and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805c9a5: and al, 0x24; push ebx; call eax; 
0x0805c495: and al, 0x24; push esi; call eax; 
0x080c0b44: and al, 0x26; outsd dx, dword ptr [esi]; ret 0x5ae4; 
0x08048680: and al, 0x28; add dh, byte ptr [edx + ebp - 0x7d]; rol byte ptr [ecx], 0x89; ret 0xd189; 
0x0804858e: and al, 0x28; add ecx, dword ptr [edi]; xchg eax, esp; ret 0xca21; 
0x080a88f9: and al, 0x28; call eax; 
0x0809ecad: and al, 0x28; call ebx; 
0x0804e5ed: and al, 0x28; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0806cc5f: and al, 0x28; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0809eca9: and al, 0x28; mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x08053432: and al, 0x28; push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x080517ec: and al, 0x28; push eax; call dword ptr [eax + 4]; 
0x08053436: and al, 0x28; push esi; call dword ptr [edx + 0x40]; 
0x0805a346: and al, 0x29; ret 0xc701; 
0x08059d39: and al, 0x2b; xor cl, byte ptr [edi]; xchg eax, esp; ret 0x4c89; 
0x0806bbe1: and al, 0x2c; call 0x24020; add esp, 0x2c; ret; 
0x080498a3: and al, 0x2c; call 0x2640; add esp, 0x2c; ret; 
0x0807cfc6: and al, 0x2c; call 0x35010; add esp, 0x28; pop ebx; ret; 
0x0807d553: and al, 0x2c; call 0x35010; add esp, 0x2c; ret; 
0x0808ea17: and al, 0x2c; call 0x46860; add esp, 0x2c; ret; 
0x0804eb83: and al, 0x2c; call 0x6840; add esp, 0x2c; ret; 
0x0804f0f6: and al, 0x2c; call 0x7140; add esp, 0x28; pop ebx; ret; 
0x0804f613: and al, 0x2c; call 0x7140; add esp, 0x2c; ret; 
0x0806cc67: and al, 0x2c; call dword ptr gs:[0x10]; 
0x0804e085: and al, 0x2c; or eax, 0x83000000; ret 0xc702; 
0x0804e5e4: and al, 0x2c; push dword ptr [esp + 0x1c]; push ebp; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0806bbdd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x24020; add esp, 0x2c; ret; 
0x0804989f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x2640; add esp, 0x2c; ret; 
0x0807cfc2: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x28; pop ebx; ret; 
0x0807d54f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x2c; ret; 
0x0808ea13: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x46860; add esp, 0x2c; ret; 
0x0804eb7f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x6840; add esp, 0x2c; ret; 
0x0804f0f2: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x28; pop ebx; ret; 
0x0804f60f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x2c; ret; 
0x0806bbd9: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x24020; add esp, 0x2c; ret; 
0x0807d54b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x2c; ret; 
0x0808ea0f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x46860; add esp, 0x2c; ret; 
0x0804eb7b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6840; add esp, 0x2c; ret; 
0x0804f60b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x2c; ret; 
0x080925e6: and al, 0x2c; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x080524bb: and al, 0x2c; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0807c1fe: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x08097bb4: and al, 0x30; call dword ptr [ebx + 0x34]; 
0x080716b9: and al, 0x30; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x080930d3: and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0805cbd5: and al, 0x30; push esi; push ebx; call eax; 
0x0806c14b: and al, 0x34; call esi; 
0x0806c147: and al, 0x34; push dword ptr [esp + 0x34]; call esi; 
0x0806c2a9: and al, 0x34; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x08092581: and al, 0x34; push eax; push dword ptr [ebp + 8]; call esi; 
0x08052acb: and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0805d0a5: and al, 0x34; push ebp; call eax; 
0x080a5865: and al, 0x34; push edi; push esi; call dword ptr [ebx]; 
0x080a5829: and al, 0x34; push esi; push ebx; call eax; 
0x080bf588: and al, 0x36; adc eax, 0x42d35a1d; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x08078f2f: and al, 0x38; call eax; 
0x08097bab: and al, 0x38; dec esp; add ebx, dword ptr [esp + 0x3c]; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x080930cf: and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08055f4e: and al, 0x38; push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x0804edcb: and al, 0x38; push dword ptr [ecx]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0808fec3: and al, 0x38; push eax; call esi; 
0x080a67c7: and al, 0x39; ret; 
0x080738c9: and al, 0x3c; call eax; 
0x08097bb0: and al, 0x3c; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x0806c2ad: and al, 0x3c; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x0808fde9: and al, 0x3c; push eax; lea eax, [edi + 0x28]; push eax; push ebp; call esi; 
0x0808ffa9: and al, 0x3c; push eax; lea eax, [edi + 0x50]; push eax; push ebp; call esi; 
0x08050c7c: and al, 0x3c; push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x08053af7: and al, 0x3c; push edi; push ebp; call dword ptr [eax + 0x20]; 
0x08053bed: and al, 0x3c; push esi; call dword ptr [ebx + 0x38]; 
0x0804ed0c: and al, 0x3c; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0807c2f4: and al, 0x40; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x080a59d7: and al, 0x40; call dword ptr [ebx]; 
0x08093745: and al, 0x40; call dword ptr gs:[0x10]; 
0x08073c32: and al, 0x40; call eax; 
0x08092473: and al, 0x40; push eax; push dword ptr [ebp]; call esi; 
0x080744d1: and al, 0x44; call eax; 
0x08093738: and al, 0x44; lea edx, [esp + 8]; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x080531db: and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0807d902: and al, 0x46; add al, 0; add byte ptr [eax - 0x18], dl; ret; 
0x080755d3: and al, 0x48; call eax; 
0x0807399d: and al, 0x48; call esi; 
0x080738c5: and al, 0x48; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x08073999: and al, 0x48; push dword ptr [esp + 0x48]; call esi; 
0x080738c1: and al, 0x48; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x08079010: and al, 0x4c; call edi; 
0x0807423d: and al, 0x4c; call esi; 
0x08078f2b: and al, 0x4c; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080738bd: and al, 0x4c; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0807900c: and al, 0x4c; push dword ptr [esp + 0x4c]; call edi; 
0x08074239: and al, 0x4c; push dword ptr [esp + 0x4c]; call esi; 
0x08078f27: and al, 0x4c; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08096781: and al, 0x50; add al, byte ptr [eax]; add bh, al; ret 0x9da8; 
0x08078562: and al, 0x50; call eax; 
0x08074b2b: and al, 0x50; call edi; 
0x080749b5: and al, 0x50; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074b27: and al, 0x50; push dword ptr [esp + 0x50]; call edi; 
0x080749b1: and al, 0x50; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08052e69: and al, 0x50; push esi; call dword ptr [edi + 0x48]; 
0x0805c9a6: and al, 0x53; call eax; 
0x08075101: and al, 0x54; call edi; 
0x08077f0d: and al, 0x54; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d1c: and al, 0x54; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755cf: and al, 0x54; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08078f23: and al, 0x54; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080750fd: and al, 0x54; push dword ptr [esp + 0x54]; call edi; 
0x08077f09: and al, 0x54; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d18: and al, 0x54; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755cb: and al, 0x54; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0805c496: and al, 0x56; call eax; 
0x08073e8d: and al, 0x58; call edi; 
0x08073c2e: and al, 0x58; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fdd: and al, 0x58; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807763e: and al, 0x58; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08073e89: and al, 0x58; push dword ptr [esp + 0x58]; call edi; 
0x08073c2a: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fd9: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807763a: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08073c26: and al, 0x58; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x080716b4: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x0806f5b6: and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x0806f5ad: and al, 0x5b; add byte ptr [ecx - 0x39c7db8c], cl; inc esp; and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x0809cc64: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080a094a: and al, 0x5b; pop esi; ret; 
0x0807474d: and al, 0x5c; call edi; 
0x080744cd: and al, 0x5c; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080716bd: and al, 0x5c; push dword ptr [eax + 4]; call edi; 
0x08074749: and al, 0x5c; push dword ptr [esp + 0x5c]; call edi; 
0x080744c9: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080749ac: and al, 0x5c; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08090a25: and al, 0x60; add al, 0; add byte ptr [ecx], al; fsubr dword ptr [ecx]; fidivr word ptr [ecx]; ret 0x830f; 
0x08090955: and al, 0x60; add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x08090a77: and al, 0x60; add al, 0; add byte ptr [ecx], ch; fmul dword ptr [ecx + 0xfd839de]; inc edx; ret; 
0x0809093c: and al, 0x60; add al, 0; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08078922: and al, 0x60; call edi; 
0x0807855e: and al, 0x60; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807891e: and al, 0x60; push dword ptr [esp + 0x60]; call edi; 
0x0807855a: and al, 0x60; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807c816: and al, 0x68; add dword ptr [eax], eax; add byte ptr [ecx + 0x110245c], cl; ret 0x5489; 
0x08077f04: and al, 0x68; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fd4: and al, 0x68; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080766d0: and al, 0x6c; call edi; 
0x080766cc: and al, 0x6c; push dword ptr [esp + 0x6c]; call edi; 
0x080744c4: and al, 0x6c; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755c6: and al, 0x70; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080cbc3c: and al, 0x73; add byte ptr [eax], al; add byte ptr [edx], dh; cli; jmp dword ptr [ecx]; 
0x0807012d: and al, 0x7f; add byte ptr [eax], al; add al, ch; inc ebp; ret 0xffff; 
0x080a2af9: and al, 0x7f; add byte ptr [eax], al; add al, ch; jns 0x5aa99; cld; call dword ptr [eax - 0x75]; 
0x08055f57: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0806bc9f: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x080938ac: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a95ff: and al, 0x83; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x08057e18: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0807af1b: and al, 0x83; ret 0x3901; 
0x080aa7cb: and al, 0x83; ret; 
0x08048bd1: and al, 0x84; add byte ptr [eax], al; add bh, al; ret 0xb8c0; 
0x08098131: and al, 0x88; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c88b79], cl; call dword ptr [eax - 0x18]; 
0x0809d86a: and al, 0x89; add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d823: and al, 0x89; add al, 0x24; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x080909b7: and al, 0x89; fld dword ptr [ecx]; ret; 
0x08055662: and al, 0x89; push eax; add al, 0x5b; ret; 
0x0805a554: and al, 0x89; push esp; and al, 0x1c; call eax; 
0x0806cc5c: and al, 0x8b; dec esp; and al, 0x28; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x080a5daf: and al, 0x8b; inc edx; adc byte ptr [ebp - 0x76dc8b40], al; test byte ptr [ebp + 0x27bc], 0; add byte ptr [ecx], al; ret 0xb70f; 
0x0809bf80: and al, 0x8b; inc esp; and al, 0x20; call 0x53a20; add esp, 0x1c; ret; 
0x0809d86d: and al, 0x8b; inc esp; and al, 4; ret 0x14; 
0x0809d826: and al, 0x8b; inc esp; and al, 4; ret 0xc; 
0x080489b2: and al, 0x8b; pop ebp; adc bh, dh; ret; 
0x080752c1: and al, 0x8d; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x080782c7: and al, 0x8d; and dword ptr [eax], 0x5f; std; call dword ptr [eax + 0x68]; 
0x080782a4: and al, 0x8d; and dword ptr [eax], 0x5f; std; call dword ptr [eax - 0x73]; 
0x080782ea: and al, 0x8d; and eax, 0x5e; std; call dword ptr [eax - 0x73]; 
0x0807532a: and al, 0x8d; and eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x08075382: and al, 0x8d; and eax, 0x5f; std; call dword ptr [eax - 0x73]; 
0x08098479: and al, 0x8d; sbb dh, 0x23; std; call dword ptr [eax - 0x18]; 
0x08048bde: and al, 0x98; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x0805114a: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 0x18]; 
0x080514e9: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 4]; 
0x0806cf7d: and al, 0xb8; mov bh, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x0809d174: and al, 0xc7; ret 0xbce0; 
0x0806ca1d: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0806ce7c: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806c92c: and al, 0xc; call dword ptr gs:[0x10]; 
0x0806c92c: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c95c: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0809336c: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080499b1: and al, 0xc; jmp esi; 
0x0806c9f6: and al, 0xc; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08093659: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806caed: and al, 0xc; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbbd: and al, 0xc; mov eax, 4; call dword ptr gs:[0x10]; 
0x080a9208: and al, 0xc; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0806d6f8: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a4987: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d977: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0806cb48: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0808fb7e: and al, 0xc; pop ebx; pop esi; ret; 
0x08091c04: and al, 0xc; pop edi; ret; 
0x080aa286: and al, 0xc; push dword ptr [ebx]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0807c152: and al, 0xc; xor eax, dword ptr gs:[0x14]; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0806ccc3: and al, 0xc; xor eax, eax; lea edx, [esp + 4]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0806bc95: and al, 0xc; xor ecx, dword ptr gs:[0x14]; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806cceb: and al, 0xc; xor ecx, dword ptr gs:[0x14]; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0806c8f4: and al, 0xc; xor edx, dword ptr gs:[0x14]; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806d838: and al, 0xc; xor edx, dword ptr gs:[0x14]; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x080d313c: and al, 0xe8; add byte ptr [eax], al; aam 0xb3; cld; call dword ptr [edi]; 
0x0806bc35: and al, 0xe8; lds ecx, ptr [edi + edi*8]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0806fe5d: and al, 0xe8; sub eax, 0xc7fffded; ret 0xbf20; 
0x0806c989: and al, 0xf6; ret 0x7540; 
0x080a0fa5: and al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0806d3d8: and al, 0xf; xchg eax, ebp; ret 0x4439; 
0x080cb73d: and al, 0xfa; call dword ptr [edx + 1]; 
0x0804c737: and al, 0xfd; call dword ptr [eax + 0x56]; 
0x0807739e: and al, 0xfd; dec dword ptr [ebx - 0x72d7dba4]; or esp, 0x5d; std; call dword ptr [eax - 0x73]; 
0x0804dc6a: and al, 0xfd; inc dword ptr [ecx]; cli; jmp edx; 
0x0804d95c: and al, 0xfd; inc dword ptr [ecx]; stc; jmp ecx; 
0x0805dbf2: and al, 0xff; inc dword ptr [ecx + 0x7c40bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080c8849: and al, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x08052d57: and al, 1; ret 0xe852; 
0x08059e68: and al, 1; ret 0xfa81; 
0x080c97e3: and al, 2; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf2e3: and al, 2; test eax, 0x41140e0a; ret; 
0x080ce103: and al, 2; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c842b: and al, 2; xlatb; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080579a1: and al, 4; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08057951: and al, 4; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4c4], edx; ret; 
0x08057921: and al, 4; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x4d8], edx; ret; 
0x08057a62: and al, 4; call 0x910; add eax, 0x82597; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4fc], edx; ret; 
0x08057a42: and al, 4; call 0x910; add eax, 0x825b7; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x0805a507: and al, 4; call eax; 
0x080a6bae: and al, 4; fstp st(0); add esp, 0x20; ret; 
0x0809ceaa: and al, 4; mov dword ptr [edx], ecx; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x0806d948: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806eb04: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x08093304: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806ccc9: and al, 4; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0806c37e: and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x0807c00c: and al, 4; mov eax, 0xffffffd4; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0808fd52: and al, 4; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x08056f32: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ba2: and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x080a8c12: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8c52: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x080a8cc2: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8cb2: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c62: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080578c2: and al, 4; mov eax, dword ptr [edx + 0x14]; cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x080a8c42: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056c52: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b412: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0809d870: and al, 4; ret 0x14; 
0x0809d829: and al, 4; ret 0xc; 
0x08056f42: and al, 4; ret; 
0x0806eb50: and al, 4; setae al; ret; 
0x0806ba55: and al, 8; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x080563de: and al, 8; add eax, ebx; pop ebx; ret; 
0x0806cb14: and al, 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x08093808: and al, 8; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0806cb50: and al, 8; call dword ptr gs:[0x10]; 
0x0806cb50: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc20: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806cea8: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d6fc: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x080a1730: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x08092cb8: and al, 8; call dword ptr gs:[0x10]; pop ebx; ret; 
0x080abaf2: and al, 8; call eax; 
0x0807a249: and al, 8; call edx; 
0x0806b023: and al, 8; cld; pop edi; ret; 
0x080a8c46: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0809ceb2: and al, 8; mov dword ptr [eax], edx; ret; 
0x0809373c: and al, 8; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x080a498b: and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d97b: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9ab: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0806cd95: and al, 8; mov eax, 0xdd; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08056c56: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b416: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0804ed98: and al, 8; mov eax, dword ptr [ecx - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a8c26: and al, 8; mov eax, dword ptr [edx + 0x60]; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x0806eee8: and al, 8; mov eax, ebx; call 0x26e40; add esp, 0x18; pop ebx; ret; 
0x0806d944: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806cae7: and al, 8; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbb7: and al, 8; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0809ee3b: and al, 8; mov esp, ecx; jmp edx; 
0x0805e8f7: and al, 8; pop ebx; ret; 
0x0806aff9: and al, 8; pop edi; ret; 
0x08053218: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0805321c: and al, 8; push esi; call dword ptr [ebx + 0x40]; 
0x080736b2: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x08052494: and bh, al; ret 0xafc0; 
0x0806fce7: and bh, al; ret 0xbf28; 
0x0804f06a: and bh, bl; add dword ptr [eax], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x080bfb29: and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x080488ba: and bh, ch; call dword ptr [eax - 0x18]; 
0x08080147: and bh, ch; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x08048db1: and bh, ch; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x0807c3a6: and bh, dl; dec dword ptr [ebp - 0x5dd9f80]; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x0807c3ac: and bh, dl; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x080cb479: and bh, dl; jmp dword ptr [esi]; 
0x080c06c3: and bl, byte ptr [edx + 0x7a]; pop ecx; cmp byte ptr [ebx + edi*2], bh; push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x0805ba4f: and byte ptr [0x1b90000], al; add byte ptr [eax], al; add al, ch; xchg eax, ebx; fdivr st(7); jmp dword ptr [ebp - 0x7d]; 
0x0809381a: and byte ptr [eax + 0x1a], 0; add byte ptr [edi + 7], dh; xor eax, eax; pop ebx; ret; 
0x0807c3aa: and byte ptr [eax + 0x22], 0xfa; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x0805d39d: and byte ptr [eax + 0x38], 0xfd; call dword ptr [eax - 0x77]; 
0x080d2d31: and byte ptr [eax + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080cf22c: and byte ptr [eax + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080d060f: and byte ptr [eax + 0xa], dl; push cs; adc al, 0x43; ret; 
0x0805e623: and byte ptr [eax + 0xc], 0xf9; dec dword ptr [ebp - 0x793bf6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080c6290: and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], bl; push cs; or al, 0x41; ret; 
0x080d4899: and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], dl; ret; 
0x080c573b: and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080d2dc9: and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; ret; 
0x080c4f08: and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], cl; ret; 
0x080d40b3: and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080c72e8: and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d25c7: and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080d29b0: and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], cl; ret; 
0x080d3477: and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080cff74: and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], cl; ret; 
0x080c5f4f: and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], dl; ret; 
0x080cf8e4: and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], al; ret; 
0x080c6866: and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cc9ac: and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb77: and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], dl; ret; 
0x080c682e: and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080d3665: and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080c6965: and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c96d6: and byte ptr [eax + 0xe], cl; or al, 0x43; ret; 
0x080d1243: and byte ptr [eax + 0xe], dl; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080cac46: and byte ptr [eax + 0xe], dl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d6331: and byte ptr [eax + 0xe], dl; or al, 0x43; ret; 
0x080a2ad0: and byte ptr [eax - 0x64], 0xfe; call dword ptr [eax - 0x18]; 
0x0805e662: and byte ptr [eax - 0x720007b8], 0x92; adc byte ptr [edi - 8], cl; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080aada2: and byte ptr [eax - 0x73], dl; adc dword ptr [eax], 4; std; call dword ptr [eax - 0x18]; 
0x0809c9c0: and byte ptr [eax - 0x73], dl; inc edx; sbb byte ptr [ecx - 0x2576b], cl; call dword ptr [eax - 0x18]; 
0x080a5ec6: and byte ptr [eax - 0x7bf0ffc6], al; ret 1; 
0x08074b41: and byte ptr [eax - 3], ah; call dword ptr [eax - 0x73]; 
0x08090689: and byte ptr [eax - 5], dh; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x08072c25: and byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x0805e722: and byte ptr [eax], 0xdc; clc; dec dword ptr [ebp - 0x726ff6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080cfdc9: and byte ptr [eax], al; add byte ptr [eax + eax], ch; add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x080c79c9: and byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x0808b55c: and byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x080d31b8: and byte ptr [eax], al; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; call 0xb3cdb1c2; cld; jmp dword ptr [eax]; 
0x080d3170: and byte ptr [eax], al; add byte ptr [eax], al; pop esp; call 0xb3d5b17a; cld; jmp dword ptr [eax]; 
0x080cb270: and byte ptr [eax], al; add byte ptr [eax], al; pop esp; imul eax, dword ptr [eax], 0xfa1c2800; jmp dword ptr [esi]; 
0x080d3194: and byte ptr [eax], al; add byte ptr [eax], al; sub al, 0; add cl, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x08082d04: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0804c9ee: and byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x080d54e0: and byte ptr [eax], dl; std; call dword ptr [esi]; 
0x08085fb9: and byte ptr [ebp + 0x1f850fed], al; add al, 0; add dh, dh; ret 0xf50; 
0x0806c49f: and byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x080c64f3: and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080c7077: and byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c9114: and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c67ca: and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080d6435: and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080c93a7: and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080d1109: and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080cb689: and byte ptr [ebp + 0xe], al; adc byte ptr [ecx + 0xa], al; ret; 
0x080d12ce: and byte ptr [ebp + 0xe], bh; or al, 0x41; ret; 
0x080c768b: and byte ptr [ebp + 0xe], bl; or al, 0x41; ret; 
0x080cb6e1: and byte ptr [ebp + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080cad3e: and byte ptr [ebp + 0xe], cl; adc byte ptr [edi + 0xa], al; ret; 
0x08074b3e: and byte ptr [ebp - 0x29fdf7d], cl; call dword ptr [eax - 0x73]; 
0x0805ce2b: and byte ptr [ebp - 0x38cf8740], al; sal al, 0xa9; or eax, 0x244c8b08; sbb al, 0x8b; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x08071932: and byte ptr [ebp - 0x72128b40], al; add dword ptr [eax + 0x56], -3; call dword ptr [eax - 0x73]; 
0x0808695a: and byte ptr [ebx + 0x3940244c], cl; ret; 
0x08055d27: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0806cd57: and byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080530e7: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x0809f004: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x080c7194: and byte ptr [ebx + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080c735a: and byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d6416: and byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c91d6: and byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080c8292: and byte ptr [ebx + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d2d7d: and byte ptr [ebx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080d2c26: and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080cb7ef: and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080ceb95: and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080c7453: and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080d4f4a: and byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x08052422: and byte ptr [ebx + ebp - 0x39], dh; ret; 
0x08051103: and byte ptr [ebx - 0x137cab8b], cl; or al, 0x56; call dword ptr [esi + 0x10]; 
0x0809bd63: and byte ptr [ebx - 0x24373], cl; ljmp [ecx]; ret 0xbd83; 
0x080abdb7: and byte ptr [ebx - 0x2d7aefb0], cl; je 0x63dcc; sub esp, 0xc; push eax; call edx; 
0x0804883f: and byte ptr [ebx - 0x36fef7f3], dh; ret; 
0x08052889: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [ebx + 0x38]; 
0x080a6d47: and byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x08077b94: and byte ptr [ebx - 0x76317700], cl; ret 0xe083; 
0x0807dfba: and byte ptr [ebx - 0x88763], cl; call dword ptr [esi - 0x18]; 
0x080777b9: and byte ptr [ecx + 0x1202474], cl; ret 0xd539; 
0x080a9e6f: and byte ptr [ecx + 0x244c89e8], cl; sbb al, 0xe8; push ebp; idiv edi; dec dword ptr [ebx - 0x76e3dbb4]; ret 0xec83; 
0x0806cd90: and byte ptr [ecx + 0x24548bc6], cl; or byte ptr [eax + 0xdd], bh; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0809b143: and byte ptr [ecx + 0x458ba04d], cl; nop; call eax; 
0x0809b07f: and byte ptr [ecx + 0x458ba04d], cl; xchg eax, esp; call eax; 
0x0808f098: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080489af: and byte ptr [ecx + 0x5d8b2455], cl; adc bh, dh; ret; 
0x080cfda7: and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080d1367: and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080d047c: and byte ptr [ecx + 0xa], bl; push cs; adc al, 0x43; ret; 
0x080d045d: and byte ptr [ecx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c4eb3: and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x0808d462: and byte ptr [ecx + ebp], bh; ja 0x4548f; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x080cfa38: and byte ptr [ecx - 0x103c0000], dh; sti; jmp dword ptr [edx]; 
0x0809b410: and byte ptr [ecx - 2], al; jmp dword ptr [ebp - 1]; 
0x080c9590: and byte ptr [ecx - 7], al; jmp edi; 
0x08048657: and byte ptr [ecx], ah; ret; 
0x0806eebe: and byte ptr [ecx], al; mov eax, ebx; call 0x26e40; add esp, 0x18; pop ebx; ret; 
0x080c81a1: and byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x0806ee88: and byte ptr [ecx], al; pop ebx; ret; 
0x080777bd: and byte ptr [ecx], al; ret 0xd539; 
0x080493d2: and byte ptr [ecx], bh; ret 0x4976; 
0x0807c87d: and byte ptr [ecx], bh; ret 0x4e8d; 
0x080861c8: and byte ptr [ecx], bh; ret; 
0x08050fda: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push ebp; call ecx; 
0x0805348b: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x080c5bbe: and byte ptr [edi + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080ce34b: and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c4f4f: and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080cb090: and byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080c8a2e: and byte ptr [edi + 0xa], bl; push cs; adc al, 0x46; ret; 
0x080c6d1d: and byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d0792: and byte ptr [edi + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080c7b6f: and byte ptr [edi + 0xe], cl; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080cdc55: and byte ptr [edi + 0xe], cl; adc byte ptr [edi + 0xa], dl; push cs; or al, 0x41; ret; 
0x080c6ff0: and byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080782ca: and byte ptr [edi - 3], bl; call dword ptr [eax + 0x68]; 
0x080782a7: and byte ptr [edi - 3], bl; call dword ptr [eax - 0x73]; 
0x080cb838: and byte ptr [edi], ch; add byte ptr [ebx + ebp], dh; cli; jmp dword ptr [edx]; 
0x0809b2b3: and byte ptr [edi], cl; inc ebp; ret 0xd231; 
0x0809b2d8: and byte ptr [edi], cl; inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x080678d2: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x08066dbd: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x08067ae9: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x08091381: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x080913d4: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x08091b3b: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x0804fc3b: and byte ptr [edi], cl; test dword ptr [esi - 0x77000000], ebp; ret 0xe281; 
0x08091c5b: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x08066c7c: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0809b5ed: and byte ptr [edi], cl; xchg eax, ebp; ret 0x940f; 
0x080c3a37: and byte ptr [edx + 0x65], dh; jno 0x7bab1; jae 0x7bab3; add byte ptr [edi + 0x72], dh; cld; jmp eax; 
0x080c78ff: and byte ptr [edx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080d128f: and byte ptr [edx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080c8811: and byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x08048861: and byte ptr [edx + 0xe8080a], ch; add byte ptr [eax], al; add byte ptr [edx - 0x7f], bl; ret 0x1796; 
0x080cc605: and byte ptr [edx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080d442c: and byte ptr [edx + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x0809bf2e: and byte ptr [edx + 1], bh; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x080cb239: and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb079: and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080c70e5: and byte ptr [edx + ecx + 0xe], cl; adc al, 0x43; ret; 
0x080cbb4f: and byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x0809bf5e: and byte ptr [edx - 1], bh; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x080d2c9f: and byte ptr [edx], al; dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb71b: and byte ptr [edx], al; fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x080c91ad: and byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080c9222: and byte ptr [edx], al; jae 0x81230; push cs; adc al, 0x41; ret; 
0x080d07e5: and byte ptr [edx], al; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7333: and byte ptr [edx], al; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2437: and byte ptr [edx], al; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5b9b: and byte ptr [edx], al; test eax, 0x41140e0a; ret; 
0x080ca6ab: and byte ptr [edx], al; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x080a27cb: and byte ptr [esi + 0x195], 0xfb; push esi; call dword ptr [ebx]; 
0x080d0769: and byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cb4c4: and byte ptr [esi + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080c77db: and byte ptr [esi + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080cb1c5: and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7c24: and byte ptr [esi + 0xe], al; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7656: and byte ptr [esi + 0xe], al; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d00a1: and byte ptr [esi + 0xe], al; adc byte ptr [ecx + 0xa], cl; ret; 
0x080cfee6: and byte ptr [esi + 0xe], al; adc byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7853: and byte ptr [esi + 0xe], al; adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x080ce0cd: and byte ptr [esi + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080c6a5f: and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], ah; ret; 
0x080cc6ea: and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7b86: and byte ptr [esi + 0xe], dl; adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x080623fc: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x080d5f79: and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080d538a: and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x080d302c: and byte ptr [esi + ecx + 0xc], bl; inc ecx; ret; 
0x080752c4: and byte ptr [esi - 3], bl; call dword ptr [eax - 0x73]; 
0x0806f62b: and byte ptr [esi - 3], cl; inc dword ptr [ecx]; iretd; jmp edi; 
0x080bcd78: and byte ptr [esi], bh; sti; call eax; 
0x080cb738: and byte ptr [esi], ch; add ah, ah; and al, 0xfa; call dword ptr [edx + 1]; 
0x08091ca6: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x08092b92: and ch, 0xf; je 0x4abb0; add eax, 2; ret; 
0x080d1638: and ch, cl; add byte ptr [eax], al; in al, 0x20; cld; call edi; 
0x080bdbcc: and ch, dh; sti; jmp dword ptr [eax]; 
0x08092b7b: and cl, 0xf; je 0x4aba0; ret; 
0x0809279d: and cl, byte ptr [ebp - 0x1d0f37d]; call dword ptr [eax - 0x73]; 
0x0806ca5d: and cl, byte ptr [ebx - 0x47efdbb4]; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0808e9be: and cl, byte ptr [ebx - 0x76cbdbbc]; ret 0x708d; 
0x0805703d: and cl, byte ptr [edi]; mov dh, 2; pop ebx; pop esi; ret; 
0x08048637: and dh, dh; ret 0x7401; 
0x08076e67: and dh, dh; ret; 
0x080719d5: and dword ptr [eax + 0x19], 0; add byte ptr [eax - 0x77], dl; inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x0806b9bb: and dword ptr [eax + 0x40], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08078af0: and dword ptr [eax + 0x5e], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08077cd7: and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08077cb4: and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080747b2: and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0807478f: and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08079ad4: and dword ptr [eax + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0805c1e6: and dword ptr [eax + ebx - 0x5f180000], 0x29; add dword ptr [eax], eax; pop ebx; ret; 
0x0806f62a: and dword ptr [eax], 0x1fffd4e; iretd; jmp edi; 
0x080752c3: and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x080782c9: and dword ptr [eax], 0x5f; std; call dword ptr [eax + 0x68]; 
0x080782a6: and dword ptr [eax], 0x5f; std; call dword ptr [eax - 0x73]; 
0x08074b40: and dword ptr [eax], 0x60; std; call dword ptr [eax - 0x73]; 
0x08072c24: and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x0809dea4: and dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0809b408: and dword ptr [eax], eax; add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x080488cb: and dword ptr [eax], edi; add byte ptr [ebx - 0x746ffb3c], al; pop ebp; cld; leave; ret; 
0x080c265e: and dword ptr [eax], edx; jmp dword ptr [edi]; 
0x08070395: and dword ptr [ebp + edx*2 - 3], 0xffffffff; add ecx, ebx; jmp ecx; 
0x0809d68e: and dword ptr [ebp - 2], eax; call dword ptr [eax - 0x18]; 
0x0809b95a: and dword ptr [ebx - 0x7c723ba3], ecx; xor eax, dword ptr [ecx - 2]; call dword ptr [eax + 0x6a]; 
0x0807b00f: and dword ptr [ebx - 3], esp; call dword ptr [eax - 0x18]; 
0x0807194b: and dword ptr [ebx], 0x56; std; call dword ptr [eax - 0x18]; 
0x08056312: and dword ptr [ebx], 0xffffffef; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08056366: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0809ba10: and dword ptr [ecx + 0x41], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807b00e: and dword ptr [ecx], 0x63; std; call dword ptr [eax - 0x18]; 
0x08070d76: and dword ptr [edi], 0x53; std; call dword ptr [ecx + 0x6a]; 
0x08073159: and dword ptr [edx + 0x56], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080a28dd: and dword ptr [edx - 0x65], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08073a53: and dword ptr [edx], 0x5c; std; call dword ptr [eax - 0x73]; 
0x0806209b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0806ee5e: and dword ptr [esi + 0x1a], edi; pop ebx; ret; 
0x080bf721: and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x0808faa1: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x080c265d: and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x08057a4b: and eax, 0x128b0008; mov dword ptr [eax + 0x4f8], edx; ret; 
0x08057a6b: and eax, 0x128b0008; mov dword ptr [eax + 0x4fc], edx; ret; 
0x080915c0: and eax, 0x1f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915f0: and eax, 0x1ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091620: and eax, 0x1fff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0804a7f8: and eax, 0x23; std; call dword ptr [eax - 0x73]; 
0x080915d0: and eax, 0x3f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091600: and eax, 0x3ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091630: and eax, 0x3fff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080953ba: and eax, 0x52f4838d; std; call dword ptr [eax - 0x73]; 
0x0807363e: and eax, 0x5b; std; call dword ptr [eax - 0x18]; 
0x080782ec: and eax, 0x5e; std; call dword ptr [eax - 0x73]; 
0x0807532c: and eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x08075384: and eax, 0x5f; std; call dword ptr [eax - 0x73]; 
0x08073f07: and eax, 0x60; std; call dword ptr [eax + 0x68]; 
0x08073ee4: and eax, 0x60; std; call dword ptr [eax - 0x73]; 
0x080915e0: and eax, 0x7f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091610: and eax, 0x7ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091640: and eax, 0x7fff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08048239: and eax, 0x80da040; nop; ret; 
0x080a4a57: and eax, 0x81fffa3d; ret; 
0x08096157: and eax, 0x81fffb26; ret; 
0x08082b57: and eax, 0x81fffc5c; ret; 
0x080c6f09: and eax, 0xd0940000; clc; call dword ptr [esi]; 
0x080887fb: and eax, 0xf000000; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x080914da: and eax, 0xf; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809150b: and eax, 0xff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091542: and eax, 0xfff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809157b: and eax, 0xffff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091590: and eax, 1; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809ee7e: and eax, 2; sub eax, 1; pop ebx; pop esi; ret; 
0x080915a0: and eax, 3; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915b0: and eax, 7; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080c6cb1: and eax, dword ptr [eax]; add byte ptr [esp + ecx*8], bh; clc; jmp dword ptr [esi]; 
0x080a6be4: and eax, dword ptr [ecx]; add byte ptr [eax], al; movzx edx, dl; mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x08048837: and eax, dword ptr [esi]; add byte ptr [ebx + 0x5c610c4], al; and byte ptr [ebx - 0x36fef7f3], dh; ret; 
0x0809173f: and eax, edx; je 0x49820; bsr eax, eax; add eax, edi; pop edi; ret; 
0x08056313: and ebp, edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08056367: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0807bf7d: and edi, 0x69; std; call dword ptr [eax - 0x18]; 
0x080491ac: and edi, ebp; call dword ptr [eax - 0x18]; 
0x0804a7fa: and edi, ebp; call dword ptr [eax - 0x73]; 
0x0809eb25: and edi, ebp; call dword ptr [edx + 0x68]; 
0x0807c985: and edi, edi; jmp dword ptr [esi - 0x70]; 
0x080cb6c5: and edi, edx; call dword ptr [edi]; 
0x080cb611: and edi, edx; jmp dword ptr [esi]; 
0x0807194c: and edx, dword ptr [esi - 3]; call dword ptr [eax - 0x18]; 
0x08057334: and esp, 0x29; std; call dword ptr [eax - 0x18]; 
0x080a14c1: and esp, ebp; cli; inc dword ptr [ecx + 0x38b3bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x0807b010: arpl bp, di; call dword ptr [eax - 0x18]; 
0x080af59d: arpl cx, di; dec dword ptr [ebx]; stc; ljmp [edi + 0x65]; stc; jmp dword ptr [eax]; 
0x080af5b1: arpl cx, di; ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x080af5ad: arpl cx, di; push dword ptr [eax + 0x63]; stc; ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x0806a988: arpl cx, sp; add cl, byte ptr [edi]; xchg eax, edx; ror byte ptr [edi], 0x94; ret; 
0x080c5349: arpl si, di; call dword ptr [edx]; 
0x0806242d: arpl si, di; inc dword ptr [ecx + 0x4ba78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x080bcc9c: arpl word ptr [0x3c18fffb], di; sti; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bdb37: arpl word ptr [eax + 0x69], bp; outsb dx, byte ptr [esi]; push 0xc2f0000; cld; call dword ptr [eax - 8]; 
0x08054ae9: arpl word ptr [ebp - 1], cx; dec dword ptr [ebx - 0x72ebdba4]; or eax, 0x29; std; call dword ptr [eax - 0x73]; 
0x0805f019: arpl word ptr [edi - 0x3c7e0002], dx; mov ebp, esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080792a9: arpl word ptr [edx - 1], bx; dec dword ptr [ebp + 0x5be80076]; idiv ah; inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080c62f4: arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x080c7195: arpl word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x080c7b1d: arpl word ptr [edx], cx; ret; 
0x0809ac3a: bnd jecxz 0x52c3c; jmp dword ptr [esi - 0x70]; 
0x08091ec3: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x080a120a: bound ebx, qword ptr [ebp - 1]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x080d4794: bound ecx, qword ptr [edx]; push cs; adc al, 0x43; ret; 
0x080c8e79: bound ecx, qword ptr [edx]; push cs; or al, 0x43; ret; 
0x080d4b68: bound ecx, qword ptr [edx]; ret; 
0x0807315a: bound edx, qword ptr [esi - 3]; call dword ptr [eax - 0x18]; 
0x08067880: bsf eax, eax; add eax, edi; pop edi; ret; 
0x08067c9a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x08067e00: bsf eax, eax; add eax, edx; ret; 
0x08067890: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x080678a0: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08067870: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08067e10: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08067e20: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x08067df0: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x080677bc: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067de7: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x080678b0: bsf eax, eax; sub edx, eax; jbe 0x1f8f0; add eax, edi; pop edi; ret; 
0x080678c3: bsf eax, eax; sub edx, eax; jbe 0x1f8f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x080678d3: bsf eax, eax; sub edx, eax; jbe 0x1f8f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080678e3: bsf eax, eax; sub edx, eax; jbe 0x1f8f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067c51: bsf ecx, ecx; add eax, ecx; ret; 
0x080675d9: bsf ecx, ecx; sub edx, ecx; jbe 0x1f610; add eax, ecx; ret; 
0x080916c5: bsr eax, eax; add eax, edi; pop edi; ret; 
0x08091813: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x08059fe6: call 0x1011fef; ret 0x48b; 
0x080ad994: call 0x110651d2; cmp bh, al; jmp dword ptr [eax]; 
0x0806bc36: call 0x14900; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x08079a00: call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0806da8b: call 0x14900; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0807b3c6: call 0x14900; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a76b1: call 0x14a83d5; call dword ptr [eax - 0x75]; 
0x0809d51e: call 0x15e9; add esi, 0x3cadd; sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x08070389: call 0x1711092; cmp eax, 0x17; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x080a1cff: call 0x1850; lea esi, [esi]; lea edi, [edi]; ret 4; 
0x0806c377: call 0x1850; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x080a124c: call 0x1d0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0806f621: call 0x1efaf929; ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x0804c6c2: call 0x210; add esp, 0x18; pop ebx; ret; 
0x08098fb3: call 0x218; add esp, 0x14; pop ebx; pop esi; ret; 
0x08071882: call 0x220; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0807183b: call 0x220; add esp, 0x18; pop ebx; ret; 
0x0805dc53: call 0x22f50; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0809226f: call 0x22f50; add esp, 0x18; pop ebx; ret; 
0x0809229f: call 0x22fd0; add esp, 0x18; pop ebx; ret; 
0x0806bb9f: call 0x23040; add esp, 0x18; pop ebx; ret; 
0x0806bbe3: call 0x24020; add esp, 0x2c; ret; 
0x0808db9b: call 0x244922d0; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x79f0f608], al; ret 0; 
0x0805390c: call 0x24950; add esp, 0x18; pop ebx; ret; 
0x08053fc9: call 0x24aa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08053fe9: call 0x24b40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0806cd69: call 0x24cb0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806ce04: call 0x24cb0; add esp, 8; pop ebx; ret; 
0x08092f36: call 0x24ea0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x08052a75: call 0x24ea0; add esp, 0x14; pop ebx; pop esi; ret; 
0x08052516: call 0x24ea0; add esp, 0x18; pop ebx; ret; 
0x080aba0d: call 0x25940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0805853d: call 0x25940; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a41c3: call 0x25940; add esp, 0x18; pop ebx; ret; 
0x08079cf6: call 0x26370; add esp, 0x18; pop ebx; ret; 
0x080ab989: call 0x263a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080498a5: call 0x2640; add esp, 0x2c; ret; 
0x0809309f: call 0x26b90; add esp, 0x14; pop ebx; pop esi; ret; 
0x08085b80: call 0x26b90; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x0805ba77: call 0x26b90; add esp, 4; pop ebx; pop esi; ret; 
0x0807cf2a: call 0x26b90; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x08087afe: call 0x26b90; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0805c1eb: call 0x26b90; pop ebx; ret; 
0x0804f069: call 0x26b90; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0806cae0: call 0x26bc0; mov ecx, dword ptr [esp + 8]; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806ce50: call 0x26bc0; mov esi, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x080792a8: call 0x26d10; lea esi, [esi]; call 0x910; add eax, 0x60d4b; mov eax, dword ptr [eax + 0x1974]; ret; 
0x0807c259: call 0x26d10; nop; mov eax, 0xad; int 0x80; 
0x080932f9: call 0x26d10; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806eec2: call 0x26e40; add esp, 0x18; pop ebx; ret; 
0x08071903: call 0x28270; mov dword ptr [esp], esi; call edi; 
0x08071a7a: call 0x28270; mov dword ptr [esp], esi; mov eax, dword ptr [ebp - 0x48]; call eax; 
0x0807201e: call 0x28270; mov dword ptr [esp], esi; mov ecx, dword ptr [ebp - 0x48]; call ecx; 
0x08079271: call 0x28270; mov ecx, dword ptr [ebp - 0x2c]; mov dword ptr [esp], ecx; call esi; 
0x0806ca90: call 0x290c0; add esp, 4; pop ebx; pop esi; ret; 
0x0807cd6a: call 0x34990; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0807cfc8: call 0x35010; add esp, 0x28; pop ebx; ret; 
0x0807d555: call 0x35010; add esp, 0x2c; ret; 
0x08087b6f: call 0x381b0; add esp, 0x18; pop ebx; ret; 
0x08085ac2: call 0x3b150; add esp, 0x1c; ret; 
0x080a6bab: call 0x42a6088; fstp st(0); add esp, 0x20; ret; 
0x0805ed42: call 0x42d77cad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805f2c2: call 0x42d7822d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08079ab5: call 0x449a3bb; add esp, 4; pop ebx; pop esi; ret; 
0x0808ea19: call 0x46860; add esp, 0x2c; ret; 
0x08051efc: call 0x46b80; add esp, 0x18; pop ebx; ret; 
0x0808f5ad: call 0x470e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0808f5ee: call 0x470e0; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x080a4a3f: call 0x4e610; mov dword ptr [ebx + 0x14], eax; add esp, 0x28; pop ebx; ret; 
0x080a1209: call 0x4ef70; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0809e8b8: call 0x4fdd0; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x080a61d1: call 0x4fdd0; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0809bf36: call 0x53a20; add esp, 0x1c; ret; 
0x0809a7aa: call 0x53f70; add esp, 0x20; lea esi, [esi]; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x08070296: call 0x54aa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08070257: call 0x54aa0; add esp, 0x18; pop ebx; ret; 
0x0809e5e0: call 0x5a040; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080a46be: call 0x5a040; mov dword ptr [esi + 8], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x0804d252: call 0x5b2d16da; pop esi; pop edi; pop ebp; ret; 
0x080a1c44: call 0x5b3260cc; pop esi; pop edi; pop ebp; ret 8; 
0x0809f347: call 0x5b5d7ad5; pop esi; pop edi; ret; 
0x0809e53b: call 0x5be20; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0809e57b: call 0x5bff0; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0809e59b: call 0x5c140; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a1149: call 0x5c1d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a110b: call 0x5c1d0; add esp, 0x18; pop ebx; ret; 
0x080a45c2: call 0x5c580; jmp eax; 
0x0804d192: call 0x5d5faff2; ret; 
0x0806ddc9: call 0x5d61bc29; ret; 
0x0809d60f: call 0x5d64b46f; ret; 
0x0809d624: call 0x5d64b484; ret; 
0x080a897d: call 0x5d6567dd; ret; 
0x080a48bf: call 0x5e410; mov dword ptr [esi + 0x10], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a47dc: call 0x5e4d0; mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0809f6d3: call 0x5f63d433; ret; 
0x080a0196: call 0x5f63def6; ret; 
0x080a4666: call 0x5f6423c6; ret; 
0x080aafd4: call 0x60c60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aafac: call 0x60cb0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aafec: call 0x60cc0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aabc2: call 0x62ad0; add esp, 0x18; pop ebx; ret; 
0x080aab8f: call 0x62ad0; add esp, 0x1c; ret; 
0x08048835: call 0x62bd0; add esp, 0x10; mov byte ptr [0x80db320], 1; leave; ret; 
0x080496cf: call 0x64228; add esp, 4; pop ebx; pop esi; ret; 
0x080677b4: call 0x6601f7b9; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0804eb85: call 0x6840; add esp, 0x2c; ret; 
0x0807cf82: call 0x6b90; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0804f0c0: call 0x6ff0; add esp, 0x1c; ret; 
0x0804f0f8: call 0x7140; add esp, 0x28; pop ebx; ret; 
0x0804f615: call 0x7140; add esp, 0x2c; ret; 
0x08092b73: call 0x74d72f7a; pop ss; mov cl, dl; and cl, 0xf; je 0x4aba0; ret; 
0x0806e5c3: call 0x75045f4b; neg dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0808d461: call 0x772d9086; sub byte ptr [edi], cl; mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x0806242b: call 0x780; add ebx, 0x4ba78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0806231c: call 0x780; add ebx, 0x4bb87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0805f0c8: call 0x780; add ebx, 0x4ebdb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805f018: call 0x780; add ebx, 0x4ec8b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ef30: call 0x780; add ebx, 0x4ecf3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805eb7e: call 0x780; add ebx, 0x4eea5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805eac2: call 0x780; add ebx, 0x4ef61; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ea66: call 0x780; add ebx, 0x4efbd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805e9a8: call 0x780; add ebx, 0x4f07b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805e8c0: call 0x780; add ebx, 0x4f0e3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080500dd: call 0x7fe0; add esp, 0x1c; ret; 
0x0809380a: call 0x80e6; add edx, 0x467f1; int 0x80; 
0x080488ca: call 0x80f0; add esp, 4; nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x080a0e94: call 0x82058911; ret; 
0x0805ac24: call 0x83012c2d; ret; 
0x0807f0f4: call 0x83037102; in al, dx; add al, 0x56; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0809bda1: call 0x88f7c6a7; sbb byte ptr [ecx], ch; ret 0xca39; 
0x08072da5: call 0x890f722d; inc esi; add al, 0x8d; and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x0807b58c: call 0x89d4be93; ret 0xf889; 
0x08048901: call 0x8a5; mov eax, 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x080a8c2c: call 0x8b079550; inc edx; dec esp; ret; 
0x080a5d30: call 0x8e05dd32; je 0x5dd5d; add byte ptr [ebp - 0x15cb37d], cl; call dword ptr [eax - 0x73]; 
0x0807c060: call 0x910; add eax, 0x5df9b; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807c040: call 0x910; add eax, 0x5dfbb; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x0807c020: call 0x910; add eax, 0x5dfdb; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x080792b0: call 0x910; add eax, 0x60d4b; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080718b0: call 0x910; add eax, 0x6874b; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x08071890: call 0x910; add eax, 0x6876b; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080701b0: call 0x910; add eax, 0x69e4b; lea eax, [eax + 0xaa0]; ret; 
0x08057a64: call 0x910; add eax, 0x82597; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4fc], edx; ret; 
0x08057a44: call 0x910; add eax, 0x825b7; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x080579e4: call 0x910; add eax, 0x82617; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579c4: call 0x910; add eax, 0x82637; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x08057974: call 0x910; add eax, 0x82687; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x08056f00: call 0x910; add eax, 0x830fb; mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x0804f90f: call 0x9f10; add esp, 0x18; pop ebx; ret; 
0x080d31bd: call 0xb3cdb1c2; cld; jmp dword ptr [eax]; 
0x080d3199: call 0xb3d1b19e; cld; jmp dword ptr [eax]; 
0x080d3175: call 0xb3d5b17a; cld; jmp dword ptr [eax]; 
0x080d313d: call 0xb3dcb142; cld; call dword ptr [edi]; 
0x0804875d: call 0xb90; hlt; mov ebx, dword ptr [esp]; ret; 
0x080cfb00: call 0xcc087bb6; int1; sti; call dword ptr [eax + 1]; 
0x0808f34d: call 0xd3d0; add esp, 0x14; pop ebx; pop esi; ret; 
0x08054259: call 0xd3f0; mov dword ptr [esi + 0x38], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x080577ca: call 0xe210; add esp, 0x14; pop ebx; pop esi; ret; 
0x08056965: call 0xe3f0; add esp, 0x1c; ret; 
0x08057776: call 0xed40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080578ae: call 0xf7e0; or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x080a0f0d: call 0xf7fb8000; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x080a418e: call 0xf7fb8000; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08098b04: call 0xf7fb8000; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080481c1: call 0xf7fb8000; add esp, 8; pop ebx; ret; 
0x0806c92f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c95f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0806cb53: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc23: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806ceab: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d6ff: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x0809336f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080a1733: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x0806c8a6: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0807c1da: call dword ptr [0x10]; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0806c386: call dword ptr [0x10]; mov eax, 1; int 0x80; 
0x0807c1e6: call dword ptr [0x10]; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0806d950: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0807c1f4: call dword ptr [0x10]; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0806d983: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x08092cbb: call dword ptr [0x10]; pop ebx; ret; 
0x0806ebab: call dword ptr [0x10]; pop edx; pop ecx; pop ebx; ret; 
0x08093326: call dword ptr [0x10]; ret; 
0x0807d9f9: call dword ptr [eax + 0x1c]; 
0x08053afb: call dword ptr [eax + 0x20]; 
0x080a8c07: call dword ptr [eax + 0x26b48d]; add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x080567f6: call dword ptr [eax + 0x2c]; 
0x0808f58f: call dword ptr [eax + 0x34]; 
0x080bc937: call dword ptr [eax + 0x35]; 
0x080bcb07: call dword ptr [eax + 0x37]; 
0x080bcb07: call dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcb6b: call dword ptr [eax + 0x3b]; 
0x080bcc87: call dword ptr [eax + 0x3d]; 
0x080ac54b: call dword ptr [eax + 0x3f]; 
0x0805a575: call dword ptr [eax + 0x50]; 
0x08048752: call dword ptr [eax + 0x51]; 
0x08084b4f: call dword ptr [eax + 0x52]; 
0x08054719: call dword ptr [eax + 0x53]; 
0x0804c739: call dword ptr [eax + 0x56]; 
0x0807ee6b: call dword ptr [eax + 0x57]; 
0x080aee27: call dword ptr [eax + 0x59]; 
0x0806b9b3: call dword ptr [eax + 0x68]; 
0x08048255: call dword ptr [eax + 0x6a]; 
0x080507d9: call dword ptr [eax + 0xc]; 
0x080b0363: call dword ptr [eax + 0xf]; 
0x080c8023: call dword ptr [eax + 1]; 
0x080517ef: call dword ptr [eax + 4]; 
0x08096cdd: call dword ptr [eax - 0x17]; 
0x080488bc: call dword ptr [eax - 0x18]; 
0x08090280: call dword ptr [eax - 0x18]; leave; xchg eax, ebp; sti; jmp dword ptr [esi - 0x70]; 
0x0809cdc7: call dword ptr [eax - 0x18]; or dl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0809d4e8: call dword ptr [eax - 0x18]; popal; ret; 
0x08070187: call dword ptr [eax - 0x18]; ret 0xfd96; 
0x0807e886: call dword ptr [eax - 0x18]; ret; 
0x080c44c3: call dword ptr [eax - 0x20]; 
0x080c4487: call dword ptr [eax - 0x24]; 
0x080c44af: call dword ptr [eax - 0x24]; cld; lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c441b: call dword ptr [eax - 0x2b]; 
0x080c43d3: call dword ptr [eax - 0x31]; 
0x080c43a3: call dword ptr [eax - 0x34]; 
0x08096390: call dword ptr [eax - 0x39]; 
0x080bcd5b: call dword ptr [eax - 0x3f0004c3]; sti; call eax; 
0x080bcd53: call dword ptr [eax - 0x6f0004c3]; cmp eax, 0x3d90fffb; sti; inc eax; sti; call eax; 
0x080bcd57: call dword ptr [eax - 0x6f0004c3]; cmp eax, 0x3ec0fffb; sti; call eax; 
0x0804874b: call dword ptr [eax - 0x73]; 
0x0804c6b4: call dword ptr [eax - 0x75]; 
0x0805d3a1: call dword ptr [eax - 0x77]; 
0x08050a44: call dword ptr [eax - 1]; 
0x080bdc7b: call dword ptr [eax - 7]; 
0x080bdc7b: call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x080bdb43: call dword ptr [eax - 8]; 
0x080bdb43: call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080956f7: call dword ptr [eax - 9]; 
0x08062fed: call dword ptr [eax]; 
0x080c7fb7: call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [esi + ecx + 8], cl; add dword ptr [edx], 2; inc ebx; ret; 
0x080ad997: call dword ptr [eax]; cmp bh, al; jmp dword ptr [eax]; 
0x08051c4c: call dword ptr [ebp + 0x10]; 
0x08051c77: call dword ptr [ebp + 0x18]; 
0x080543ec: call dword ptr [ebp + 0x24]; 
0x08055e2e: call dword ptr [ebp + 0x30]; 
0x08051cb4: call dword ptr [ebp + 0x40]; 
0x08098705: call dword ptr [ebp + 0x55]; 
0x0804938f: call dword ptr [ebp + 0x57]; 
0x08054066: call dword ptr [ebp + 0xc]; 
0x080a9167: call dword ptr [ebp + 8]; 
0x080488a4: call dword ptr [ebp - 0x77]; 
0x080a1c31: call dword ptr [ebp - 1]; 
0x080c5117: call dword ptr [ebp]; 
0x08050d5f: call dword ptr [ebx + 0x10]; 
0x08050d92: call dword ptr [ebx + 0x18]; 
0x08050336: call dword ptr [ebx + 0x1c]; 
0x08055f55: call dword ptr [ebx + 0x24]; 
0x0804fecd: call dword ptr [ebx + 0x30]; 
0x080a640f: call dword ptr [ebx + 0x31]; 
0x08097bb6: call dword ptr [ebx + 0x34]; 
0x0805075b: call dword ptr [ebx + 0x38]; 
0x08052668: call dword ptr [ebx + 0x3c]; 
0x08050cc2: call dword ptr [ebx + 0x40]; 
0x08050c80: call dword ptr [ebx + 0x48]; 
0x0807f1aa: call dword ptr [ebx + 0x50]; 
0x080c0de0: call dword ptr [ebx + 0x7c]; 
0x08050577: call dword ptr [ebx + 0xc]; 
0x0807ead5: call dword ptr [ebx + 0xf]; 
0x080d1a57: call dword ptr [ebx + 1]; 
0x080ce5df: call dword ptr [ebx + 3]; 
0x080d2723: call dword ptr [ebx + 4]; 
0x080d620f: call dword ptr [ebx + 5]; 
0x0804fc90: call dword ptr [ebx + 8]; 
0x080adc63: call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080adc5b: call dword ptr [ebx + edx - 5]; push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x0804d795: call dword ptr [ebx - 0x18]; 
0x0805cdbf: call dword ptr [ebx - 0x18]; mov edx, 0x81fffeb9; ret; 
0x080ae033: call dword ptr [ebx - 0x33]; 
0x0807f9f6: call dword ptr [ebx - 0x77]; 
0x0807dd24: call dword ptr [ebx - 0x7d]; 
0x0807dd24: call dword ptr [ebx - 0x7d]; ret; 
0x080556ac: call dword ptr [ebx - 1]; 
0x0807db4f: call dword ptr [ebx]; 
0x080adc6b: call dword ptr [ecx + 0x13]; 
0x08080807: call dword ptr [ecx + 0x1c]; 
0x080850ad: call dword ptr [ecx + 0x29]; 
0x080536eb: call dword ptr [ecx + 0x40]; 
0x0809d7c4: call dword ptr [ecx + 0x50]; 
0x08059c9e: call dword ptr [ecx + 0x51]; 
0x0807f9bd: call dword ptr [ecx + 0x56]; 
0x0807e6c6: call dword ptr [ecx + 0x57]; 
0x08070d7a: call dword ptr [ecx + 0x6a]; 
0x080c8a67: call dword ptr [ecx + 0xa]; 
0x080d04fb: call dword ptr [ecx + 1]; 
0x080be02b: call dword ptr [ecx + 6]; 
0x0808288a: call dword ptr [ecx - 0x18]; 
0x080c06cd: call dword ptr [ecx - 0x66]; 
0x0804adb1: call dword ptr [ecx - 0x77]; 
0x080aadfd: call dword ptr [ecx - 0xb]; 
0x0805280b: call dword ptr [ecx - 1]; 
0x080a6fda: call dword ptr [ecx]; 
0x0805043b: call dword ptr [edi + 0x10]; 
0x080adc4b: call dword ptr [edi + 0x13]; 
0x0808fa96: call dword ptr [edi + 0x18]; 
0x08055b00: call dword ptr [edi + 0x34]; 
0x0805430f: call dword ptr [edi + 0x40]; 
0x080544ce: call dword ptr [edi + 0x44]; 
0x08052acf: call dword ptr [edi + 0x48]; 
0x080857e1: call dword ptr [edi + 0x50]; 
0x0804bc29: call dword ptr [edi + 0x52]; 
0x08054b0f: call dword ptr [edi + 0x56]; 
0x0804c900: call dword ptr [edi + 0x68]; 
0x0804c900: call dword ptr [edi + 0x68]; nop; add dword ptr [eax], eax; add byte ptr [esi - 0x18], dl; ret; 
0x080504ae: call dword ptr [edi + 0xc]; 
0x080c86eb: call dword ptr [edi + 1]; 
0x0807a557: call dword ptr [edi + 3]; 
0x0806c408: call dword ptr [edi - 0x18]; 
0x0809c46e: call dword ptr [edi - 0x77]; 
0x0809adf4: call dword ptr [edi - 0x7b]; 
0x0804a8ba: call dword ptr [edi - 1]; 
0x080bdc9b: call dword ptr [edi - 8]; 
0x080bdc9b: call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x0804ee70: call dword ptr [edi]; 
0x080ae5e7: call dword ptr [edi]; stc; call eax; 
0x080802dd: call dword ptr [edx + 0x1c]; 
0x080ae5d3: call dword ptr [edx + 0x27]; 
0x080ae5d3: call dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x08053439: call dword ptr [edx + 0x40]; 
0x080531df: call dword ptr [edx + 0x48]; 
0x0807ab37: call dword ptr [edx + 0x50]; 
0x0807e98a: call dword ptr [edx + 0x51]; 
0x0808005a: call dword ptr [edx + 0x52]; 
0x0806bfc0: call dword ptr [edx + 0x56]; 
0x0809eb27: call dword ptr [edx + 0x68]; 
0x08070df5: call dword ptr [edx + 0x6a]; 
0x080cfc97: call dword ptr [edx + 1]; 
0x0809519e: call dword ptr [edx + 3]; 
0x0807b903: call dword ptr [edx - 0x18]; 
0x0804ad49: call dword ptr [edx - 0x77]; 
0x0807b24f: call dword ptr [edx - 1]; 
0x080c534b: call dword ptr [edx]; 
0x0805110b: call dword ptr [esi + 0x10]; 
0x08051151: call dword ptr [esi + 0x18]; 
0x080ae537: call dword ptr [esi + 0x28]; 
0x0808536d: call dword ptr [esi + 0x29]; 
0x080c241b: call dword ptr [esi + 0x30]; 
0x08053e14: call dword ptr [esi + 0x40]; 
0x080adf3b: call dword ptr [esi + 0x48]; 
0x080adf3b: call dword ptr [esi + 0x48]; sti; call esi; 
0x08081a6f: call dword ptr [esi + 0x50]; 
0x08088da1: call dword ptr [esi + 0x52]; 
0x0804f143: call dword ptr [esi + 0x53]; 
0x080952ec: call dword ptr [esi + 0x57]; 
0x0807e911: call dword ptr [esi + 0x6a]; 
0x080556ae: call dword ptr [esi + 0xc]; 
0x080ce21f: call dword ptr [esi + 3]; 
0x080514f0: call dword ptr [esi + 4]; 
0x0804c99d: call dword ptr [esi - 0x18]; 
0x0804ca9f: call dword ptr [esi - 0x75]; 
0x0807f1df: call dword ptr [esi - 0x77]; 
0x08049789: call dword ptr [esi - 1]; 
0x08048dd4: call dword ptr [esi]; 
0x08049042: call dword ptr gs:[0x10]; 
0x0806c92e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c95e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0806cb52: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc22: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806ceaa: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d6fe: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x0809336e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080a1732: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x0806c8a5: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806c385: call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x0806d94f: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0806d982: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x08092cba: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0806ebaa: call dword ptr gs:[0x10]; pop edx; pop ecx; pop ebx; ret; 
0x08093325: call dword ptr gs:[0x10]; ret; 
0x080487b0: call eax; 
0x0805c9a8: call eax; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a9124: call eax; add esp, 0x10; add esp, 0xc; ret; 
0x080487b0: call eax; add esp, 0x10; leave; ret; 
0x080c48d3: call eax; cld; inc eax; cld; jmp dword ptr [eax - 0xd]; 
0x080ae58b: call eax; stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [esi + 0x27]; 
0x080ae67b: call eax; stc; inc dword ptr [esi]; sub cl, bh; call dword ptr [eax]; 
0x0809b901: call ebx; 
0x08050fe3: call ecx; 
0x080adac3: call ecx; adc bh, bl; call dword ptr [ecx]; 
0x0806da86: call edi; 
0x080addaf: call edi; adc al, 0xfb; inc dword ptr [edi]; adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x080c484b: call edi; loope 0x7c84b; jmp eax; 
0x080487fd: call edx; 
0x080addef: call edx; adc al, 0xfb; inc dword ptr [edx]; adc eax, 0x1532fffb; sti; jmp dword ptr [edx + 0x15]; 
0x080487fd: call edx; add esp, 0x10; leave; ret; 
0x0806da2e: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0806c14d: call esi; 
0x080ada83: call esi; adc bh, bl; call dword ptr [esi]; 
0x0806da10: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080adf3f: call esi; dec eax; sti; jmp dword ptr [esi + 0x49]; 
0x080adf13: call esp; 
0x080ce219: cdq; add byte ptr [eax], al; add al, 0xce; cli; call dword ptr [esi + 3]; 
0x0806c213: cdq; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x08050f83: cdq; add eax, 0x6a0000; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x08071883: cdq; imul edi, ebp, 0x10c483ff; pop ebx; pop esi; pop edi; ret; 
0x080c1ebc: cdq; in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x080bf9eb: cdq; inc esp; push ds; mov ah, 0x13; ret; 
0x080bfab2: cdq; iretd; dec ebx; ret 0xde9e; 
0x080c1eb7: cdq; mov edi, 0x99b51319; in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x080d2019: cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08054e48: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x080526ca: cdq; push edx; push eax; push edi; call dword ptr [ebx + 0x40]; 
0x08051cb0: cdq; push edx; push edi; push esi; call dword ptr [ebp + 0x40]; 
0x080719e3: cdq; ret; 
0x080755db: clc; add al, 0x89; ret 0x840f; 
0x08049d75: clc; add al, 0x89; ret; 
0x0808fb8d: clc; add al, byte ptr [ebx + 0x5e5b01e8]; ret; 
0x080a49f9: clc; add bl, byte ptr [esi + 0x5f]; ret; 
0x080d41b9: clc; add byte ptr [eax], al; iretd; cld; jmp dword ptr [esi]; 
0x080d4209: clc; add byte ptr [eax], al; test bh, cl; cld; call dword ptr [ecx]; 
0x0808984c: clc; add ch, byte ptr [ecx]; ret 0x858b; 
0x08089519: clc; add ch, byte ptr [ecx]; ret 0xb8; 
0x08095a74: clc; add cl, byte ptr [edi]; inc edx; ret; 
0x0808a8ed: clc; add dl, byte ptr [eax + 0x51]; mov edi, eax; push dword ptr [ebp - 0x45c]; mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x080885f1: clc; add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808ada0: clc; add dl, byte ptr [eax + 0x57]; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x0807e2db: clc; add dword ptr [ebx - 0x427f002f], eax; aas; idiv edi; jmp dword ptr [eax]; 
0x08066f75: clc; add eax, ecx; pop edi; ret; 
0x08079a59: clc; add esi, dword ptr [ebx + ecx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0805eb7d: clc; call 0x780; add ebx, 0x4eea5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080c8022: clc; call dword ptr [eax + 1]; 
0x080ad996: clc; call dword ptr [eax]; 
0x080ad996: clc; call dword ptr [eax]; cmp bh, al; jmp dword ptr [eax]; 
0x080c4f72: clc; call dword ptr [ebx]; 
0x080c8466: clc; call dword ptr [ecx]; 
0x080c86ea: clc; call dword ptr [edi + 1]; 
0x080c82b6: clc; call dword ptr [edi]; 
0x080c7586: clc; call dword ptr [edx]; 
0x080c5f86: clc; call dword ptr [esi]; 
0x080c4fd2: clc; call edx; 
0x080c8465: clc; clc; call dword ptr [ecx]; 
0x080d4f61: clc; cld; jmp dword ptr [edi]; 
0x08098447: clc; dec byte ptr [ebp - 0x1b82669]; dec dword ptr [ebp - 0x1c90b79]; dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x0805e6e6: clc; dec dword ptr [ebp - 0x7213f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e725: clc; dec dword ptr [ebp - 0x726ff6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805e5e5: clc; dec dword ptr [ebp - 0x72fcf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805e665: clc; dec dword ptr [ebp - 0x7b0ef6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x08058d42: clc; dec dword ptr [ecx + 0x50090]; add bl, dh; ret; 
0x08058d36: clc; dec dword ptr [ecx + 0x50490]; add byte ptr [ebp - 0x7e70f70], cl; dec dword ptr [ecx + 0x50090]; add bl, dh; ret; 
0x0805234b: clc; dec dword ptr [ecx - 0x7af03fbb]; ret; 
0x0805db5b: clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0809d3da: clc; dec dword ptr [edi]; inc esp; ret 0xc35f; 
0x0805db1e: clc; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x08088c72: clc; dec dword ptr [edi]; test byte ptr [ebx - 0x7cffffeb], dh; in al, dx; or byte ptr [ebx - 0x89363], cl; call dword ptr [eax + 0x52]; 
0x0805c3dc: clc; fisttp word ptr [edi]; xchg eax, edi; ret 0x50e9; 
0x0805db9c: clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x08076064: clc; jg 0x2dff0; ret; 
0x08076597: clc; jg 0x2e610; aad 0x2d; ret 0; 
0x080ad99a: clc; jmp dword ptr [eax]; 
0x080c76a2: clc; jmp dword ptr [ebp]; 
0x080c5446: clc; jmp dword ptr [ebx + 1]; 
0x080c5eae: clc; jmp dword ptr [ebx]; 
0x080c4cee: clc; jmp dword ptr [ecx + 1]; 
0x080c5b5e: clc; jmp dword ptr [ecx]; 
0x080c7c66: clc; jmp dword ptr [edi + 2]; 
0x080c70b2: clc; jmp dword ptr [edi]; 
0x080c5b7e: clc; jmp dword ptr [edx]; 
0x080c49aa: clc; jmp dword ptr [esi + 2]; 
0x080c57e2: clc; jmp dword ptr [esi + 8]; 
0x080c65aa: clc; jmp dword ptr [esi]; 
0x0806b597: clc; jmp eax; 
0x080c54aa: clc; jmp edi; 
0x080c6f56: clc; jmp edx; 
0x080c0b22: clc; mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x0809cd06: clc; mov dword ptr [edi + 4], edx; pop ebx; pop esi; pop edi; ret; 
0x0805e8f1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed47: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a8e49: clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8edc: clc; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080807fc: clc; mov esi, edi; push eax; push edi; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x08093655: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a006a: clc; pop ebx; pop esi; pop ebp; ret; 
0x08049b11: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805006a: clc; pop ebx; pop esi; pop edi; ret; 
0x080a49f6: clc; pop ebx; sar eax, 2; pop esi; pop edi; ret; 
0x08064385: clc; pop edi; ret; 
0x08057347: clc; pop esi; pop edi; pop ebp; ret; 
0x0807038f: clc; pop ss; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x080c8485: clc; push cs; adc al, 0x41; ret; 
0x0806f624: clc; push ds; ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x08056399: clc; push dword ptr [ebp - 0x37]; add esp, 4; pop ebx; pop esi; ret; 
0x08093297: clc; push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x08070315: clc; push ss; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aaf8]; add ecx, ebx; jmp ecx; 
0x0805dc54: clc; rol byte ptr [eax], cl; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x080bdbf1: clc; sti; call dword ptr [eax]; 
0x080bdb45: clc; sti; jmp dword ptr [eax]; 
0x080bdc9d: clc; sti; jmp dword ptr [edi]; 
0x080bdc95: clc; sti; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x08091817: clc; sub eax, 0x10; pop edi; ret; 
0x08057322: clc; sub ebp, edi; call dword ptr [eax - 0x73]; 
0x0809d6df: clc; xor dword ptr [esi + 0x7d], esi; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x080c2654: cld; adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x0804da01: cld; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806c381: cld; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x08066c90: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x080a4cc6: cld; call dword ptr [eax + 0x56]; 
0x080bde02: cld; call dword ptr [eax + 1]; 
0x080bdeae: cld; call dword ptr [eax + 4]; 
0x080a4850: cld; call dword ptr [eax - 0x18]; 
0x080c44c2: cld; call dword ptr [eax - 0x20]; 
0x080c4486: cld; call dword ptr [eax - 0x24]; 
0x080c44ae: cld; call dword ptr [eax - 0x24]; cld; lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c441a: cld; call dword ptr [eax - 0x2b]; 
0x080c43d2: cld; call dword ptr [eax - 0x31]; 
0x080c43a2: cld; call dword ptr [eax - 0x34]; 
0x080a20e8: cld; call dword ptr [eax - 0x73]; 
0x080a2b01: cld; call dword ptr [eax - 0x75]; 
0x080bdb42: cld; call dword ptr [eax - 8]; 
0x080bdb42: cld; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080bdd22: cld; call dword ptr [eax]; 
0x080d3452: cld; call dword ptr [ebp]; 
0x080a640e: cld; call dword ptr [ebx + 0x31]; 
0x080d1a56: cld; call dword ptr [ebx + 1]; 
0x080d2722: cld; call dword ptr [ebx + 4]; 
0x080d10c6: cld; call dword ptr [ebx]; 
0x080be02a: cld; call dword ptr [ecx + 6]; 
0x080bdf4a: cld; call dword ptr [ecx]; 
0x080bdc9a: cld; call dword ptr [edi - 8]; 
0x080bdc9a: cld; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080d3142: cld; call dword ptr [edi]; 
0x08085a73: cld; call dword ptr [edx - 0x77]; 
0x080d4dc6: cld; call dword ptr [esi]; 
0x080bdbe2: cld; call eax; 
0x080c48d2: cld; call eax; cld; inc eax; cld; jmp dword ptr [eax - 0xd]; 
0x080c484a: cld; call edi; 
0x080c484a: cld; call edi; loope 0x7c84b; jmp eax; 
0x080d28a6: cld; call edx; 
0x080d2eea: cld; call esp; 
0x08062091: cld; cmp ecx, ebx; mov eax, 0; jne 0x1a2c0; pop ebx; ret; 
0x080626cf: cld; cmp ecx, ebx; mov eax, 0; jne 0x1ae50; pop ebx; ret; 
0x08096f13: cld; dec dword ptr [ebp - 0x1cdbf7d]; call dword ptr [eax + 0x6a]; 
0x08082b3b: cld; dec dword ptr [ebp - 0x1d9077d]; call dword ptr [eax + 0x68]; 
0x0807bf48: cld; dec dword ptr [ebp - 0x295bb7d]; call dword ptr [eax - 0x73]; 
0x0809d5e6: cld; dec dword ptr [ebp - 0x3b7cfeab]; adc byte ptr [ecx], bh; ret 0xd72; 
0x080ab847: cld; dec dword ptr [ebx + 0x31c2454]; push 8; mov dword ptr [esp], ebp; call edi; 
0x080800a4: cld; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x080c43b2: cld; dec dword ptr [ebx]; int 0xfc; push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080a3e14: cld; dec dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x080c4412: cld; dec eax; sar esp, cl; lcall [eax]; aam 0xfc; call dword ptr [eax - 0x2b]; 
0x080c4846: cld; dec ecx; loope 0x7c847; call edi; 
0x080c4846: cld; dec ecx; loope 0x7c847; call edi; loope 0x7c84b; jmp eax; 
0x0807c063: cld; inc dword ptr [0x5df9b]; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807c043: cld; inc dword ptr [0x5dfbb]; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x0807c023: cld; inc dword ptr [0x5dfdb]; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x080792b3: cld; inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080bdd3a: cld; inc dword ptr [eax - 0x7f000406]; idiv ebx; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080c3a4e: cld; inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x080ac1e9: cld; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0808f350: cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080d102e: cld; inc dword ptr [edx]; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080c48d6: cld; inc eax; cld; jmp dword ptr [eax - 0xd]; 
0x080c447e: cld; inc eax; into; cld; jmp eax; 
0x080c4842: cld; inc eax; loope 0x7c843; dec ecx; loope 0x7c847; call edi; 
0x080c3a62: cld; jmp dword ptr [eax + 0x72]; 
0x080c48aa: cld; jmp dword ptr [eax - 0x1c]; 
0x080c44ba: cld; jmp dword ptr [eax - 0x21]; 
0x080c43f6: cld; jmp dword ptr [eax - 0x2f]; 
0x080c43ba: cld; jmp dword ptr [eax - 0x34]; 
0x080c48b6: cld; jmp dword ptr [eax - 0xc]; 
0x080c48ae: cld; jmp dword ptr [eax - 0xd]; 
0x080bdb52: cld; jmp dword ptr [eax]; 
0x080d4456: cld; jmp dword ptr [ebx]; 
0x080d267a: cld; jmp dword ptr [ecx]; 
0x080d4a16: cld; jmp dword ptr [edi + 7]; 
0x080d05aa: cld; jmp dword ptr [edi]; 
0x080d20e2: cld; jmp dword ptr [esi + 0xa]; 
0x080d38e6: cld; jmp dword ptr [esi + 3]; 
0x0807bf86: cld; jmp dword ptr [esi - 0x70]; 
0x080c4876: cld; jmp dword ptr [esi]; 
0x080bdc8e: cld; jmp eax; 
0x080bdea2: cld; jmp ebx; 
0x080be086: cld; jmp edi; 
0x080d0746: cld; jmp edx; 
0x080d06de: cld; jmp esi; 
0x080d3dba: cld; jmp esp; 
0x080c44b2: cld; lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c4416: cld; lcall [eax]; aam 0xfc; call dword ptr [eax - 0x2b]; 
0x080bddfe: cld; lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdeaa: cld; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be026: cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf46: cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080bdf3a: cld; lcall [esi]; or al, 0xfc; call eax; 
0x080bdc8a: cld; lcall [esi]; or al, 0xfc; jmp eax; 
0x080bddfa: cld; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdea6: cld; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be022: cld; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf36: cld; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call eax; 
0x080bdc72: cld; lcall [esi]; or al, 0xfc; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x080488d5: cld; leave; ret; 
0x080bdf42: cld; ljmp [eax + 4]; cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080c48b2: cld; ljmp [eax]; hlt; cld; jmp dword ptr [eax - 0xc]; 
0x080be082: cld; ljmp [eax]; push es; cld; jmp edi; 
0x080c48ce: cld; ljmp [ebx - 0xc]; cld; call eax; 
0x080c48ca: cld; ljmp [ebx - 0xc]; cld; ljmp [ebx - 0xc]; cld; call eax; 
0x080bdd1e: cld; ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdbde: cld; ljmp [edi]; or al, 0xfc; call eax; 
0x080bdb4e: cld; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x080bdd1a: cld; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdb6e: cld; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x080a3016: cld; mov dword ptr [ebp - 0x30], esi; mov esi, ebx; mov ebx, eax; nop; call dword ptr [esi]; 
0x0805e8f4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a8edf: cld; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x08078b50: cld; or al, 0xfd; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x5e], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080bf646: cld; out 0x95, eax; push es; cld; ret; 
0x0806b025: cld; pop edi; ret; 
0x080cc744: cld; pop esp; cli; call dword ptr [edi]; 
0x080c43b6: cld; push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080c447a: cld; push dword ptr [eax - 0x3f000332]; into; cld; jmp eax; 
0x080bdc76: cld; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x080bdc76: cld; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x080c43ce: cld; push dword ptr [eax]; iretd; cld; call dword ptr [eax - 0x31]; 
0x0804ed07: cld; push dword ptr [ecx]; push dword ptr [esp + 0x3c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080c3a4a: cld; push dword ptr [edi + 0x72]; cld; inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x080c3a5e: cld; push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x080c3a5a: cld; push dword ptr [edi + 0x72]; cld; push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x080c44de: cld; push eax; fdiv st(4), st(0); jmp eax; 
0x080c44f6: cld; push eax; fdiv st(4), st(0); push eax; fdiv st(4), st(0); jmp eax; 
0x080bf64a: cld; ret; 
0x0804ed9c: cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080710b0: cld; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0804efc8: cld; sub ch, bh; call dword ptr [eax - 0x73]; 
0x080bffd6: cld; test al, 0x97; xchg eax, esp; ret; 
0x0804cfe2: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x08088608: cli; add bh, byte ptr [ecx]; ret 0x850f; 
0x080d43ed: cli; add byte ptr [eax], al; rcl al, 1; cld; jmp dword ptr [edi]; 
0x0808fc3c: cli; add ch, bl; out dx, al; mov eax, 0xffffffff; pop ebx; ret; 
0x0805146f: cli; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x080547da: cli; add cl, byte ptr [edi]; xchg eax, esi; ret 0x540a; 
0x0809f739: cli; add dword ptr [ecx - 0x7cbb81f9], ecx; ret; 
0x0806c1ad: cli; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x0806c1fc: cli; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xd284; 
0x080a46df: cli; call dword ptr [eax + 0x6a]; 
0x080b0362: cli; call dword ptr [eax + 0xf]; 
0x080ca68e: cli; call dword ptr [eax + 1]; 
0x080ab14e: cli; call dword ptr [ebp + 0x57]; 
0x080caafa: cli; call dword ptr [ebx + 1]; 
0x080ce5de: cli; call dword ptr [ebx + 3]; 
0x080a6d0e: cli; call dword ptr [ebx - 0x18]; 
0x080cbee6: cli; call dword ptr [ecx]; 
0x080a946e: cli; call dword ptr [edi + 0x56]; 
0x080cc746: cli; call dword ptr [edi]; 
0x080cb73e: cli; call dword ptr [edx + 1]; 
0x080ccb26: cli; call dword ptr [edx]; 
0x080ce21e: cli; call dword ptr [esi + 3]; 
0x0809bb33: cli; call dword ptr gs:[0x10]; 
0x080caea6: cli; call eax; 
0x080ca75e: cli; call ebx; 
0x080ce9d6: cli; call edi; 
0x080c8575: cli; clc; jmp dword ptr [ebp]; 
0x080a57b1: cli; dec dword ptr [ebp - 0x15e937d]; call dword ptr [eax + 0x68]; 
0x080a5715: cli; dec dword ptr [ebp - 0x15f4f7d]; call dword ptr [eax - 0x75]; 
0x080a2c4a: cli; dec dword ptr [ebp - 0x1606f7d]; call dword ptr [eax - 0x73]; 
0x0809ce2b: cli; dec dword ptr [ebp - 0x2417ff8a]; mov edx, 0xcb05fffa; rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x0807c3a7: cli; dec dword ptr [ebp - 0x5dd9f80]; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x0807b6b0: cli; dec dword ptr [ebx - 0x1ab43]; call dword ptr [eax - 0x73]; 
0x0809be3e: cli; dec dword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax + 0x6a]; 
0x0807c3ad: cli; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x0809bceb: cli; dec dword ptr [edi]; test byte ptr [edi], bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x080a1963: cli; inc dword ptr [0x3869b]; mov eax, 0x80dbf64; mov eax, dword ptr [eax]; ret; 
0x08098fb6: cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080a124f: cli; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x080a14c3: cli; inc dword ptr [ecx + 0x38b3bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08098a7a: cli; inc dword ptr [ecx + 0x41584c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x080b0356: cli; inc eax; psubd mm7, mm7; jo 0x6836d; cli; jmp dword ptr [eax + 0xf]; 
0x080c0ee5: cli; inc edx; ret 0xac65; 
0x080b035e: cli; jmp dword ptr [eax + 0xf]; 
0x080cba8e: cli; jmp dword ptr [eax]; 
0x080ca7ea: cli; jmp dword ptr [ebp]; 
0x080cbb0e: cli; jmp dword ptr [ebx]; 
0x080cbf36: cli; jmp dword ptr [ecx]; 
0x080ca856: cli; jmp dword ptr [edx]; 
0x0809ba19: cli; jmp dword ptr [esi - 0x70]; 
0x080caf92: cli; jmp dword ptr [esi]; 
0x0804dc6e: cli; jmp edx; 
0x080c087e: cli; mov eax, dword ptr [0xd11e901c]; stc; jnp 0x78840; ret; 
0x0805412f: cli; mov eax, edx; pop edi; pop ebp; ret; 
0x0805e934: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080d071b: cli; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a1a62: cli; or dh, byte ptr [edx + edi*2 - 0x75]; je 0x59a8d; or bh, al; ret 0xbf40; 
0x08057534: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08091452: cli; pop edi; ret; 
0x0809c217: cli; pop esi; pop edi; pop ebp; ret; 
0x080c243d: cli; push 0x6e; ja 0x7a3c5; ret 0x48f; 
0x080b035a: cli; push dword ptr [eax + 0xf]; cli; jmp dword ptr [eax + 0xf]; 
0x080a61d2: cli; sbb edi, edi; dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x08079cec: cli; stc; call dword ptr [eax - 1]; 
0x080d00f5: cli; sti; call dword ptr [ebp]; 
0x080bdd3d: cli; sti; inc dword ptr [eax + 0x2ffffbf7]; or al, 0xfc; call dword ptr [edi - 8]; 
0x08090632: cli; sti; inc dword ptr [ecx + 0x499cbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080bfb2e: cli; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x080a579c: cmc; add byte ptr [eax], al; add byte ptr [ebp - 0x160377d], cl; call dword ptr [eax - 0x73]; 
0x0809f4b7: cmc; add byte ptr [eax], al; add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x0807312f: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x56], -3; call dword ptr [eax - 0x18]; 
0x08092b91: cmc; and ch, 0xf; je 0x4abb0; add eax, 2; ret; 
0x080c82b5: cmc; clc; call dword ptr [edi]; 
0x080c82f5: cmc; clc; call dword ptr [edx]; 
0x080c831d: cmc; clc; jmp dword ptr [ecx]; 
0x080c2865: cmc; mov ch, 0xab; ret; 
0x08093717: cmc; mov ch, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0805edf7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080bf71f: cmc; pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x08091412: cmc; pop edi; ret; 
0x080bdbcd: cmc; sti; jmp dword ptr [eax]; 
0x08061de7: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x080c1ea1: cmc; xlatb; ret 0x4e27; 
0x08091faa: cmova eax, edx; sub eax, ebx; pop ebx; pop esi; ret; 
0x080578ca: cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x0806b331: cmovb eax, ecx; ret; 
0x0808fd24: cmove eax, ecx; ret; 
0x0805db20: cmove eax, edx; add esp, 0x18; pop ebx; ret; 
0x0808f121: cmove eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x08055a6d: cmove eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0809d3dc: cmove eax, edx; pop edi; ret; 
0x0806ea69: cmove eax, edx; ret; 
0x0806eb49: cmove edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x080a8c98: cmovne eax, dword ptr [esp + 0x1c]; add esp, 0x28; pop ebx; ret; 
0x0805dc13: cmovne eax, ecx; ret; 
0x0807c2fe: cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x080736be: cmovs eax, edx; ret; 
0x0806a987: cmp ah, byte ptr [ebx - 0x1f]; add cl, byte ptr [edi]; xchg eax, edx; ror byte ptr [edi], 0x94; ret; 
0x080a6d44: cmp al, 0x10; jne 0x5ed68; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a95fc: cmp al, 0x10; jne 0x61624; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080aa3dc: cmp al, 0x10; jne 0x62404; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080aafc4: cmp al, 0x10; jne 0x62ff9; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080cb064: cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x0804cdd4: cmp al, 0x24; ret; 
0x0808d463: cmp al, 0x29; ja 0x4548f; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x080a6dea: cmp al, 0x2f; ja 0x5f5b1; mov edi, dword ptr [ebp - 0x38]; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x080a6d34: cmp al, 0x30; jne 0x5ed68; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x080a95e8: cmp al, 0x30; jne 0x61620; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080aa3c8: cmp al, 0x30; jne 0x62400; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080a9845: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080c8354: cmp al, 0x3a; add byte ptr [eax], al; cmp dh, dh; clc; jmp dword ptr [ecx]; 
0x080c0b20: cmp al, 0x46; clc; mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x0808fdea: cmp al, 0x50; lea eax, [edi + 0x28]; push eax; push ebp; call esi; 
0x0808ffaa: cmp al, 0x50; lea eax, [edi + 0x50]; push eax; push ebp; call esi; 
0x08050c7d: cmp al, 0x50; push ebp; call dword ptr [ebx + 0x48]; 
0x08053bee: cmp al, 0x56; call dword ptr [ebx + 0x38]; 
0x08053af8: cmp al, 0x57; push ebp; call dword ptr [eax + 0x20]; 
0x08059f01: cmp al, 0x5b; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0805d68e: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x08048348: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080752fa: cmp al, 0x5d; std; call dword ptr [eax - 0x18]; 
0x080747e2: cmp al, 0x5e; std; call dword ptr [eax - 0x73]; 
0x08073990: cmp al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x08073e80: cmp al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x080c06c8: cmp al, 0x7b; push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x0808f126: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080789ad: cmp al, 0x83; ret 0x8904; 
0x0805ad6b: cmp al, 0x83; ret 0x8977; 
0x080786f3: cmp al, 0x83; ret 0xc704; 
0x08077184: cmp al, 0x83; rol byte ptr [ecx], 0xf; mov dh, 0x48; dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x080a97f3: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x08074e96: cmp al, 0x89; je 0x2cebe; cmp al, 1; ret; 
0x08085e11: cmp al, 0x89; ret 0xc031; 
0x080a59ce: cmp al, 0x90; sub esp, 4; push edi; push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x08048232: cmp al, 0xa0; or eax, 0xff906608; and eax, 0x80da040; nop; ret; 
0x080c2651: cmp al, 0xaa; xchg esp, edi; adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x080d1454: cmp al, 0xcb; add byte ptr [eax], al; or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x080c6cb4: cmp al, 0xcc; clc; jmp dword ptr [esi]; 
0x080c79d4: cmp al, 0xe5; clc; call dword ptr [edi]; 
0x080bf58f: cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x08077d97: cmp al, 0xf6; ret; 
0x080cfd44: cmp al, 0xf6; sti; jmp dword ptr [edi]; 
0x080ac4ad: cmp al, 0xf7; jmp dword ptr [esi + 0x3d]; 
0x080bcc85: cmp al, 0xfb; call dword ptr [eax + 0x3d]; 
0x080bcc3d: cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc99: cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcc39: cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc95: cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcc35: cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc91: cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080c8f49: cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08074e9a: cmp al, 1; ret; 
0x080a959c: cmp al, 4; jne 0x615ca; add esp, 8; mov eax, 8; pop ebx; ret; 
0x080c7638: cmp al, ah; clc; call dword ptr [edi]; 
0x080c8319: cmp al, byte ptr [eax]; add ah, dh; cmc; clc; jmp dword ptr [ecx]; 
0x080c837d: cmp al, byte ptr [eax]; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x080c8355: cmp al, byte ptr [eax]; add byte ptr [eax], bh; idiv al; jmp dword ptr [ecx]; 
0x080c832d: cmp al, byte ptr [eax]; add byte ptr [eax], dl; idiv al; jmp dword ptr [ecx]; 
0x080c8369: cmp al, byte ptr [eax]; add byte ptr [esi + esi*8 - 8], dl; call dword ptr [edi]; 
0x080c8341: cmp al, byte ptr [eax]; add byte ptr [esi + esi*8], ch; clc; call dword ptr [edi]; 
0x0809ce41: cmp al, byte ptr [eax]; jne 0x54e50; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x080932be: cmp al, byte ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x0806ad7d: cmp al, byte ptr [edx - 1]; jne 0x22f2b; pop esi; xor eax, eax; pop ebx; ret; 
0x080622ab: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x08062651: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x080c837c: cmp al, byte ptr fs:[eax]; add byte ptr [eax - 0xa], ah; clc; call dword ptr [edi]; 
0x080ab725: cmp al, ch; aad 0x11; sti; inc edi; ret 0; 
0x08058078: cmp al, ch; push 0x81ffff80; ret 0x1f82; 
0x08073e6f: cmp al, ch; sti; ret; 
0x08067875: cmp al, dh; pop edi; ret; 
0x0806edaa: cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x080ad999: cmp bh, al; jmp dword ptr [eax]; 
0x080a480f: cmp bh, al; ret 0; 
0x080bcc05: cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x08075e3a: cmp bh, ch; dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax + 0x68]; 
0x08075dfc: cmp bh, ch; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x080c9351: cmp bh, cl; call dword ptr [eax]; 
0x080c9325: cmp bh, cl; call dword ptr [edi]; 
0x0809acda: cmp bh, dh; call dword ptr [eax + 0x6a]; 
0x0809a720: cmp bh, dh; call dword ptr [eax - 0x18]; 
0x0809a70d: cmp bh, dh; call dword ptr [eax - 0x73]; 
0x0809adf2: cmp bh, dh; call dword ptr [edi - 0x7b]; 
0x0809adff: cmp bh, dh; call dword ptr [edx + 0x6a]; 
0x080994a8: cmp bh, dh; dec dword ptr [ebp - 0x1b8266a]; dec dword ptr [edi]; inc esp; ret 0x578b; 
0x0809aab7: cmp bh, dh; dec dword ptr [ebx + 0xfc08500]; inc esp; ret 0x558b; 
0x080bdd28: cmp bl, 0xfb; call eax; 
0x08081b9a: cmp bl, 0xff; dec dword ptr [ebx - 0x4eb73]; call dword ptr [esi - 0x75]; 
0x080d4450: cmp bl, bh; add byte ptr [eax], al; in al, dx; sar ah, 1; jmp dword ptr [ebx]; 
0x080bcb05: cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb05: cmp bl, bh; call dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bca31: cmp bl, bh; dec eax; sti; dec dword ptr [eax]; cmp bl, bh; jmp eax; 
0x080bcb31: cmp bl, bh; inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcad9: cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bca39: cmp bl, bh; jmp eax; 
0x080bcb2d: cmp bl, bh; lcall [eax]; cmp bl, bh; inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcad5: cmp bl, bh; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcad1: cmp bl, bh; lcall [eax]; cmp bl, bh; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcaf9: cmp bl, bh; lcall [eax]; cmp bl, bh; ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcafd: cmp bl, bh; ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb45: cmp bl, bh; push eax; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x08093382: cmp bl, ch; std; jmp dword ptr [esi - 0x70]; 
0x080a7862: cmp byte ptr [eax + 0x78811a75], bh; add dword ptr [ebp + 0x75000000], ebp; adc dword ptr [esi - 0x7f], esp; js 0x5f878; int 0x80; 
0x08091ccf: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x080678a5: cmp byte ptr [eax], ah; pop edi; ret; 
0x080c7698: cmp byte ptr [eax], al; add byte ptr [eax], al; test byte ptr [0xe0d00000], ch; clc; jmp dword ptr [ebp]; 
0x08067895: cmp byte ptr [eax], dl; pop edi; ret; 
0x08076d66: cmp byte ptr [ebp - 0x2a05f7d], cl; call dword ptr [eax + 0x68]; 
0x08076759: cmp byte ptr [ebp - 0x2a05f7d], cl; call dword ptr [eax - 0x73]; 
0x08076af5: cmp byte ptr [ebp - 0x2a2177d], cl; call dword ptr [eax - 0x73]; 
0x080a3888: cmp byte ptr [ebp - 0x57], 0; je 0x5ba65; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x080cc698: cmp byte ptr [ebp], 0; hlt; push ecx; cli; call dword ptr [ecx]; 
0x0807984d: cmp byte ptr [ebx + 0x24548910], cl; or al, 0x83; ret 0x8501; 
0x08053c93: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0805403f: cmp byte ptr [ebx + 0x94ae], cl; add bh, al; ret 0xafc0; 
0x08048dc8: cmp byte ptr [ebx + 4], 0x2a; mov esi, dword ptr [ebx]; jne 0x105e; call dword ptr [esi]; 
0x08097bac: cmp byte ptr [ebx + eax + 0x5c], cl; and al, 0x3c; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x080c06c7: cmp byte ptr [ebx + edi*2], bh; push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x080a8b65: cmp byte ptr [ebx + edx + 0x1b74], 4; jne 0x60b8c; mov eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x08081be6: cmp byte ptr [ebx - 0x4837b], cl; jmp dword ptr [ebp - 0x39]; 
0x080930d0: cmp byte ptr [ebx - 0x76cfdba4], cl; int1; call dword ptr gs:[0x10]; 
0x080711e8: cmp byte ptr [ebx - 0x7af04bbb], cl; ret 3; 
0x080c5348: cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080d295b: cmp byte ptr [ebx], al; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x08077d14: cmp byte ptr [ebx], bl; std; dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0807717e: cmp byte ptr [ecx + 0x245c89ce], cl; cmp al, 0x83; rol byte ptr [ecx], 0xf; mov dh, 0x48; dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x08087e29: cmp byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080a8b80: cmp byte ptr [ecx + edx + 0x6c], 0; je 0x60b65; add esp, 8; pop ebx; ret; 
0x0806d65b: cmp byte ptr [ecx - 3], cl; call dword ptr [eax - 0x18]; 
0x080c54a8: cmp byte ptr [ecx - 8], bh; jmp edi; 
0x080ca850: cmp byte ptr [edi], bl; add ah, ch; pop es; cli; jmp dword ptr [edx]; 
0x08053b5f: cmp byte ptr [edi], cl; xchg dl, ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x38fbdbac], cl; ret; 
0x08059ee7: cmp byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08062418: cmp byte ptr [edi], dl; ret 0x2c73; 
0x08062dd9: cmp byte ptr [edi], dl; ret 0x3273; 
0x08062403: cmp byte ptr [edi], dl; ret 0x3e73; 
0x08062dbf: cmp byte ptr [edi], dl; ret 0x4c73; 
0x080623ee: cmp byte ptr [edi], dl; ret 0x5073; 
0x080623d9: cmp byte ptr [edi], dl; ret 0x6273; 
0x08062da5: cmp byte ptr [edi], dl; ret 0x6673; 
0x08060954: cmp byte ptr [edi], dl; ret 0x830f; 
0x08091e8c: cmp byte ptr [edx + 0xb], 0; je 0x49f12; mov eax, 0xc; pop edi; ret; 
0x08091ec4: cmp byte ptr [edx + 0xf], 0; je 0x49f26; mov eax, 0x10; pop edi; ret; 
0x080a7990: cmp byte ptr [edx - 0x77], dl; ret 0xe889; 
0x080ab356: cmp byte ptr [edx - 0x77], dl; ret 0xf089; 
0x0809ce40: cmp byte ptr [edx], 0; jne 0x54e50; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x080759c5: cmp byte ptr [edx], ch; push 0; push 0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x080772f0: cmp byte ptr [edx], ch; push 0; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08055f4f: cmp byte ptr [edx], ch; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x080c6f50: cmp byte ptr [esi], ah; add byte ptr [eax], al; lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x0805771a: cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x0805d39f: cmp ch, bh; call dword ptr [eax - 0x77]; 
0x080d6009: cmp ch, bh; call dword ptr [esi]; 
0x0805d40f: cmp ch, bh; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x0806220a: cmp ch, bh; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x080625a4: cmp ch, bh; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x0806ddd2: cmp ch, byte ptr [ebx + 0x2a05fffd]; ret 6; 
0x080a0995: cmp ch, byte ptr [ecx]; ret; 
0x0806b4a0: cmp cl, 0; je 0x234a6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x080562e5: cmp cl, byte ptr [ebx + 0x94b3]; add bh, al; mov eax, 0xc7080daf; ret 0xb314; 
0x0807a6b6: cmp cl, byte ptr [ecx - 0x76fbdb84]; fisttp word ptr [edi]; xchg eax, esp; ret; 
0x08093c34: cmp cl, byte ptr [edi]; test byte ptr [0x83000001], dl; ret 0x8320; 
0x0806214e: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x08062508: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x08060c64: cmp cl, byte ptr [edx]; je 0x18c80; mov eax, 1; ja 0x18c71; neg eax; ret; 
0x0806ac75: cmp cl, byte ptr [edx]; jne 0x22c7d; xor eax, eax; pop ebx; ret; 
0x080d1a50: cmp cl, dl; add byte ptr [eax], al; pop esp; inc ecx; cld; call dword ptr [ebx + 1]; 
0x080c43f4: cmp cl, dl; cld; jmp dword ptr [eax - 0x2f]; 
0x0805e898: cmp cl, dl; je 0x1689d; inc eax; pop edi; ret; 
0x08062e63: cmp cx, bx; pop ebx; mov eax, 1; ja 0x1ae70; neg eax; ret; 
0x080abae5: cmp dh, 0xff; dec dword ptr [ecx - 0x3f7a55f4]; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x0807a23f: cmp dh, 0xff; inc dword ptr [ebp - 0x76f58b2e]; inc esp; and al, 8; call edx; 
0x0806f5b3: cmp dh, al; inc esp; and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x08098111: cmp dh, bh; call dword ptr [eax - 0x18]; 
0x080ac4a5: cmp dh, bh; call dword ptr [esi]; 
0x080ac4a1: cmp dh, bh; push dword ptr [eax]; cmp dh, bh; call dword ptr [esi]; 
0x080ac49d: cmp dh, bh; push dword ptr [eax]; cmp dh, bh; push dword ptr [eax]; cmp dh, bh; call dword ptr [esi]; 
0x0804aab1: cmp dh, byte ptr [eax + edx - 0x7d]; ret 0x8301; 
0x0809220f: cmp dh, cl; jne 0x4a216; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x080ae04c: cmp dh, cl; sti; call eax; 
0x080c8358: cmp dh, dh; clc; jmp dword ptr [ecx]; 
0x08061d67: cmp dh, dh; ret 0x7504; 
0x08099be5: cmp dl, 0xa; jne 0x51762; mov edx, dword ptr [ebp - 0x84]; test edx, edx; jne 0x51762; call eax; 
0x0809a1fd: cmp dl, 0xa; jne 0x51eac; mov edx, dword ptr [ebp - 0x84]; test edx, edx; jne 0x51eac; call eax; 
0x080bdd3c: cmp dl, 0xfb; inc dword ptr [eax + 0x2ffffbf7]; or al, 0xfc; call dword ptr [edi - 8]; 
0x08095ddc: cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x08048243: cmp dword ptr [0xc3810000], eax; mov ecx, 0x8300091d; in al, dx; adc byte ptr [ebp - 0x1bcbb7d], cl; call dword ptr [eax + 0x6a]; 
0x08079ce4: cmp dword ptr [eax + 0x19], 0; add byte ptr [ebp - 0x605bf7d], cl; call dword ptr [eax - 1]; 
0x0809c76b: cmp dword ptr [eax + 0x1a], 0; add byte ptr [ecx], bh; ret 0x273; 
0x080c82f1: cmp dword ptr [eax], eax; add ah, cl; cmc; clc; call dword ptr [edx]; 
0x080a612d: cmp dword ptr [ebx], -2; call dword ptr [eax - 0x73]; 
0x080a5713: cmp dword ptr [ecx - 6], eax; dec dword ptr [ebp - 0x15f4f7d]; call dword ptr [eax - 0x75]; 
0x0809c04a: cmp dword ptr [ecx], 0x89117230; ret; 
0x080678b6: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0807e640: cmp dword ptr [edx + 0xf], 0; add byte ptr [ebx - 0x87f73], cl; ljmp [ecx]; ret; 
0x080578c7: cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x080927a6: cmp dword ptr [esi + 0x68fffe2e], -0x7a; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x08067a76: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x080747e1: cmp dword ptr [esi + ebx*2], -3; call dword ptr [eax - 0x73]; 
0x0805db1d: cmp eax, -1; cmove eax, edx; add esp, 0x18; pop ebx; ret; 
0x0809d3d9: cmp eax, -1; cmove eax, edx; pop edi; ret; 
0x08056398: cmp eax, -1; jne 0xe366; add esp, 4; pop ebx; pop esi; ret; 
0x08070314: cmp eax, 0x16; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aaf8]; add ecx, ebx; jmp ecx; 
0x0807038e: cmp eax, 0x17; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x0806f623: cmp eax, 0x1e; ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x08057321: cmp eax, 0x29; std; call dword ptr [eax - 0x73]; 
0x0809d6de: cmp eax, 0x31; jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x080bcc81: cmp eax, 0x3c18fffb; sti; call dword ptr [eax + 0x3d]; 
0x080bcc9d: cmp eax, 0x3c18fffb; sti; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcd55: cmp eax, 0x3d90fffb; sti; call dword ptr [eax - 0x3f0004c3]; sti; call eax; 
0x080bcd59: cmp eax, 0x3d90fffb; sti; inc eax; sti; call eax; 
0x080bcd5d: cmp eax, 0x3ec0fffb; sti; call eax; 
0x080bcd95: cmp eax, 0x3ec0fffb; sti; inc eax; sti; call eax; 
0x0807010d: cmp eax, 0x54838d50; push ecx; std; call dword ptr [eax - 0x18]; 
0x08056614: cmp eax, 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x080c0a01: cmp eax, 0x7170d773; mov ebp, 0xfb67d10d; ret; 
0x080c09fe: cmp eax, 0x733db8a1; xlatb; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x0806f079: cmp eax, 0x748d3474; add byte ptr es:[ebx - 0x397cfe39], al; sub al, 0x83; call dword ptr [esi]; 
0x080a44f9: cmp eax, 0x8bfffffd; jl 0x5c524; adc bh, al; ret 0x9da4; 
0x08099ec0: cmp eax, 0xc101fffe; jmp ecx; 
0x08067de2: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x080c86e5: cmp eax, 0xfe980000; clc; call dword ptr [edi + 1]; 
0x0806c935: cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c965: cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0806ca73: cmp eax, 0xfffff000; ja 0x24a90; add esp, 4; pop ebx; pop esi; ret; 
0x0806cac7: cmp eax, 0xfffff000; ja 0x24b20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cb59: cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cb97: cmp eax, 0xfffff000; ja 0x24bf0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cc29: cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806cd51: cmp eax, 0xfffff000; ja 0x24d78; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cdf1: cmp eax, 0xfffff000; ja 0x24e10; add esp, 8; pop ebx; ret; 
0x0806ce3f: cmp eax, 0xfffff000; ja 0x24e88; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806ceb1: cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d705: cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x08093375: cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x080934d2: cmp eax, 0xfffff000; ja 0x4b4f0; add esp, 4; pop ebx; pop esi; ret; 
0x080935f8: cmp eax, 0xfffff000; ja 0x4b610; add esp, 4; pop ebx; pop esi; ret; 
0x080a1739: cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x0806c8ac: cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x08079a58: cmp eax, 3; je 0x31a68; add esp, 4; pop ebx; pop esi; ret; 
0x0805d8f4: cmp eax, 9; ja 0x15a30; mov ecx, dword ptr [ebx + eax*4 - 0x2c680]; add ecx, ebx; jmp ecx; 
0x08067010: cmp eax, ecx; ja 0x1f020; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0808f3ab: cmp eax, ecx; jbe 0x473e0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0808fa8d: cmp eax, ecx; jbe 0x47ac0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0804fc82: cmp eax, ecx; jbe 0x7e08; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0804fec5: cmp eax, ecx; jbe 0x7f30; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x080544c2: cmp eax, ecx; jbe 0xc5f0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08054b68: cmp eax, ecx; jbe 0xcbb0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08055af8: cmp eax, ecx; jbe 0xdb30; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x08055b7b: cmp eax, ecx; jbe 0xdba0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0806ad0a: cmp eax, ecx; jne 0x22f17; pop esi; xor eax, eax; pop ebx; ret; 
0x0806adfd: cmp eax, ecx; jne 0x22f2b; pop esi; xor eax, eax; pop ebx; ret; 
0x0806af29: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x080ad995: cmp eax, edi; call dword ptr [eax]; 
0x080ad995: cmp eax, edi; call dword ptr [eax]; cmp bh, al; jmp dword ptr [eax]; 
0x08091fa8: cmp eax, edx; cmova eax, edx; sub eax, ebx; pop ebx; pop esi; ret; 
0x08055e22: cmp eax, edx; jbe 0xdef0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0806eb71: cmp eax, edx; jne 0x26b81; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08083129: cmp eax, esi; ja 0x3b110; mov eax, ebx; pop ebx; pop esi; ret; 
0x08058bee: cmp ebp, -1; jmp dword ptr [ebp - 0x7d]; 
0x08075ed4: cmp ebp, edi; dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax + 0x68]; 
0x08075e59: cmp ebp, edi; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x0805b8d7: cmp ebp, edi; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0806d9c0: cmp ebx, 0x36; add byte ptr [eax], al; ret; 
0x0806ee9a: cmp ebx, dword ptr [eax + 8]; jae 0x26e5a; pop ebx; ret; 
0x0806ebf1: cmp ecx, 0xa; je 0x26c04; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0806e5c4: cmp ecx, 1; jne 0x265c0; pop ebx; pop esi; pop edi; ret; 
0x0806cddc: cmp ecx, 9; je 0x24e00; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0808fa74: cmp ecx, dword ptr [ebx + 0x94be]; add bh, al; ret 0xafc0; 
0x080a14c7: cmp ecx, dword ptr [ebx - 0x38acfffd]; ret; 
0x080710c7: cmp ecx, dword ptr [edi - 0x2708fffa]; mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0808fd21: cmp ecx, dword ptr [edx + 0x28]; cmove eax, ecx; ret; 
0x0809c051: cmp ecx, ebx; jne 0x54038; mov eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x08062092: cmp ecx, ebx; mov eax, 0; jne 0x1a2c0; pop ebx; ret; 
0x080626d0: cmp ecx, ebx; mov eax, 0; jne 0x1ae50; pop ebx; ret; 
0x08062e64: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x1ae70; neg eax; ret; 
0x080563d8: cmp ecx, edx; jne 0xe3d0; mov eax, dword ptr [esp + 8]; add eax, ebx; pop ebx; ret; 
0x0809a3f8: cmp edi, 0x2a; ja 0x52c1e; mov edx, dword ptr [ebp - 0x64]; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x080bcb69: cmp edi, ebx; call dword ptr [eax + 0x3b]; 
0x080bcb9d: cmp edi, ebx; call dword ptr [eax]; 
0x080bcb91: cmp edi, ebx; jmp dword ptr [eax]; 
0x080bcb65: cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb99: cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcb8d: cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x080bcb61: cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb95: cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcbfd: cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x080bcb89: cmp edi, ebx; push dword ptr [eax]; cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x080bcc01: cmp edi, ebx; push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x080994cb: cmp edi, esi; call dword ptr [eax - 0x18]; 
0x08099387: cmp edi, esi; inc dword ptr [ecx]; cli; jmp edx; 
0x0806bb57: cmp edx, 1; je 0x23b70; cmp edx, 2; je 0x23b68; xor eax, eax; ret; 
0x0806bb5c: cmp edx, 2; je 0x23b68; xor eax, eax; ret; 
0x0806ee5a: cmp edx, dword ptr [eax + 0x14]; jl 0x26e80; jle 0x26e7b; pop ebx; ret; 
0x080a2c3e: cmp edx, dword ptr [eax - 0x73]; add dword ptr [edi - 0x63], -2; call dword ptr [eax - 0x18]; 
0x0806eb4e: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0806ee59: cmp edx, dword ptr ds:[eax + 0x14]; jl 0x26e80; jle 0x26e7b; pop ebx; ret; 
0x080a4157: cmp edx, eax; je 0x5c160; add esp, 8; pop ebx; ret; 
0x0805c171: cmp edx, ebx; jne 0x14150; pop ebx; pop esi; pop edi; ret; 
0x0805703a: cmp edx, ecx; jae 0xf060; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x080562fe: cmp edx, ecx; jbe 0xe330; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0805804c: cmp edx, ecx; jne 0x1005a; add esp, 8; pop ebx; ret; 
0x0808fb78: cmp edx, ecx; jne 0x47b70; add eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0806c5c0: cmp esi, 0xf6; ja 0x24860; mov eax, dword ptr [ebx + esi*4 - 0x2bacc]; add eax, ebx; jmp eax; 
0x080c1ea0: cmp esi, ebp; xlatb; ret 0x4e27; 
0x08098f56: cmp esi, edi; call dword ptr [eax + 0x6a]; 
0x08098a5c: cmp esi, edi; call dword ptr [eax - 0x18]; 
0x080972ce: cmp esi, edi; call dword ptr [eax - 0x73]; 
0x0804efc7: cmp esp, 0x28; std; call dword ptr [eax - 0x73]; 
0x0807bf5e: cmp esp, 0x69; std; call dword ptr [eax - 0x18]; 
0x08067dc4: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x080ada80: cmpsb byte ptr [esi], byte ptr es:[edi]; adc bh, bl; call esi; 
0x080ada80: cmpsb byte ptr [esi], byte ptr es:[edi]; adc bh, bl; call esi; adc bh, bl; call dword ptr [esi]; 
0x080add00: cmpsb byte ptr [esi], byte ptr es:[edi]; adc eax, 0x15d6fffb; sti; call dword ptr [esi]; 
0x08066c66: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0805e6b0: cmpsb byte ptr [esi], byte ptr es:[edi]; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080a0eb0: cmpsb byte ptr [esi], byte ptr es:[edi]; jne 0x58ec0; pop ebx; pop esi; pop edi; ret; 
0x080a27cc: cmpsb byte ptr [esi], byte ptr es:[edi]; xchg eax, ebp; add dword ptr [eax], eax; add bl, bh; push esi; call dword ptr [ebx]; 
0x080addac: cmpsd dword ptr [esi], dword ptr es:[edi]; adc al, 0xfb; call edi; 
0x080adb2c: cmpsd dword ptr [esi], dword ptr es:[edi]; adc ebx, edi; call edi; 
0x08091c55: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x08078092: cmpsd dword ptr [esi], dword ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cf7dbac], cl; ret 0x3904; 
0x080a484f: cmpsd dword ptr [esi], dword ptr es:[edi]; cld; call dword ptr [eax - 0x18]; 
0x0806cf7a: cmpsd dword ptr [esi], dword ptr es:[edi]; mov dword ptr [esp], esi; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x080caba9: cmpsd dword ptr [esi], dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806c4d5: cmpsd dword ptr [esi], dword ptr es:[edi]; ret 0xfffd; 
0x080c29f1: cmpsd dword ptr [esi], dword ptr es:[edi]; xor byte ptr [esi + 0x4ce2e5dd], 0x67; add ch, byte ptr [ebp + ebp*2 + 0x5b]; ret 0x6f9; 
0x0809d865: cvtps2pd xmm3, qword ptr [edx - 0x75]; or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0807d9c4: cwde; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0806fcb4: cwde; add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x08048bdf: cwde; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x0808e0bc: cwde; add byte ptr [eax], al; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x080ce169: cwde; add byte ptr [eax], al; hlt; retf; cli; call dword ptr [edx]; 
0x080cafb0: cwde; add byte ptr [eax], al; pushfd; sbb edx, edi; jmp dword ptr [esi]; 
0x080c7fb0: cwde; add byte ptr ss:[eax], al; pushfd; out dx, eax; clc; call dword ptr [eax]; 
0x0808eb74: cwde; add esi, edi; jmp dword ptr [esi - 0x70]; 
0x080c6cb0: cwde; and eax, dword ptr [eax]; add byte ptr [esp + ecx*8], bh; clc; jmp dword ptr [esi]; 
0x080a2b00: cwde; cld; call dword ptr [eax - 0x75]; 
0x080c44b8: cwde; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080a1340: cwde; fld dword ptr [edi - 2]; inc dword ptr [ecx + 0xc9]; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x080c83a8: cwde; idiv al; call dword ptr [edi]; 
0x080488ee: cwde; movsb byte ptr es:[edi], byte ptr [esi]; or eax, 0x6a128b08; add byte ptr [edx - 0x77], dl; ret; 
0x08058cf6: cwde; sbb byte ptr [eax], al; add byte ptr [ebp - 0x38ed8b2e], al; sbb byte ptr [eax + 0x18], 0; add byte ptr [eax], al; ret; 
0x08067e0b: daa; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0808176b: daa; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x08066ebb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ecb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066edb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066eeb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066efb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066e4b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08066e5b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08066e6b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08066e7b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08066e8b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08066e9b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x08066eab: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x0809141b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xa]; pop edi; ret; 
0x0809140b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xb]; pop edi; ret; 
0x080913fb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913eb: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xe]; pop edi; ret; 
0x0809148b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 1]; pop edi; ret; 
0x0809147b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 2]; pop edi; ret; 
0x0809146b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 3]; pop edi; ret; 
0x0809145b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 5]; pop edi; ret; 
0x0809144b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 6]; pop edi; ret; 
0x0809143b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 7]; pop edi; ret; 
0x0809142b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 9]; pop edi; ret; 
0x08067b5b: daa; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08055b3b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08092bcb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x08092bdb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; ret; 
0x08092beb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; ret; 
0x08092bfb: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 4; ret; 
0x08092c0b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 5; ret; 
0x08092c1b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 6; ret; 
0x08092c2b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 7; ret; 
0x08056f2b: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8cab: daa; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x08066f0b: daa; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080561fb: daa; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x080c70ad: daa; add byte ptr [eax], al; rcl dl, 1; clc; jmp dword ptr [edi]; 
0x0806ca63: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0806c9aa: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0809340a: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x74dfdba4], cl; dec esp; and al, 0x24; call dword ptr gs:[0x10]; 
0x0806b2fe: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0806b534: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080960d5: daa; push 0xc483fffc; adc cl, ch; mov edi, 0x89fffffd; ret 0x8d90; 
0x080524b8: daa; push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08070d77: daa; push ebx; std; call dword ptr [ecx + 0x6a]; 
0x080c2065: daa; push esp; syscall; 
0x080ae5e5: daa; stc; call dword ptr [edi]; stc; call eax; 
0x080ae5d1: daa; stc; call dword ptr [edx + 0x27]; 
0x080ae5d1: daa; stc; call dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae5a5: daa; stc; call eax; 
0x080ae65d: daa; stc; call esp; 
0x080ae6f9: daa; stc; dec edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080ae59d: daa; stc; inc dword ptr [ebp - 0x530006da]; daa; stc; call eax; 
0x080ae8f1: daa; stc; inc dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae5d5: daa; stc; jmp dword ptr [eax + 0x28]; 
0x080ae6e5: daa; stc; jmp dword ptr [esi + 0x27]; 
0x080ae6e1: daa; stc; lcall [edi - 7]; jmp dword ptr [esi + 0x27]; 
0x080ae659: daa; stc; lcall [esi]; daa; stc; call esp; 
0x080ae5cd: daa; stc; push edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080579e5: daa; ud0; inc dword ptr [0x82617]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x08059f44: das; adc cl, byte ptr [ecx + 0x21d8f7f8]; ret 0xd539; 
0x080742ed: das; add al, byte ptr [eax]; add byte ptr [ebp - 0x2a3dd7d], cl; call dword ptr [eax - 0x73]; 
0x0804a8ad: das; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7cf33c], al; add dword ptr [esi - 0x77], esp; push eax; call dword ptr [edi - 1]; 
0x080c7835: das; add byte ptr [eax], al; sbb bl, ah; clc; call dword ptr [edi]; 
0x08092e34: das; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0804c736: das; and al, 0xfd; call dword ptr [eax + 0x56]; 
0x080c0ee2: das; hlt; stosb byte ptr es:[edi], al; cli; inc edx; ret 0xac65; 
0x080a6deb: das; ja 0x5f5b1; mov edi, dword ptr [ebp - 0x38]; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x080bdb40: das; or al, 0xfc; call dword ptr [eax - 8]; 
0x080bdb40: das; or al, 0xfc; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080bdd20: das; or al, 0xfc; call dword ptr [eax]; 
0x080bdc98: das; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdc98: das; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bdbe0: das; or al, 0xfc; call eax; 
0x080bdb50: das; or al, 0xfc; jmp dword ptr [eax]; 
0x080bdd1c: das; or al, 0xfc; ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdbdc: das; or al, 0xfc; ljmp [edi]; or al, 0xfc; call eax; 
0x080bdb4c: das; or al, 0xfc; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x080591ee: das; std; call dword ptr [eax - 1]; 
0x0808fa90: das; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0809dedf: dec byte ptr [ebp + 0x448b7604]; ret; 
0x08098448: dec byte ptr [ebp - 0x1b82669]; dec dword ptr [ebp - 0x1c90b79]; dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x0806001b: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x080692fb: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0805f81b: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x080683fb: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x0805e938: dec byte ptr [ebx + 0x5b082444]; ret; 
0x0807b360: dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x080cae8d: dec byte ptr [edx]; ret; 
0x08073629: dec byte ptr [esi*2 + 0x8838ddb]; pop esp; std; call dword ptr [eax - 0x73]; 
0x0807718b: dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x080bca37: dec dword ptr [eax]; cmp bl, bh; jmp eax; 
0x080ae00f: dec dword ptr [eax]; int 0xfb; ljmp [edi - 0x33]; sti; jmp ebx; 
0x080719d3: dec dword ptr [ebp + 0x196083]; add byte ptr [eax - 0x77], dl; inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x080a98d2: dec dword ptr [ebp + 0x432b0443]; add al, 0x83; ret; 
0x08088143: dec dword ptr [ebp + 0x48d873c]; mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x8a343], cl; call dword ptr [eax + 1]; 
0x08058f94: dec dword ptr [ebp + 0x50030076]; or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x0808370f: dec dword ptr [ebp + 0x57890150]; adc al, 0xc6; add byte ptr [0xfffe8ae9], ch; jmp dword ptr [esi - 0x70]; 
0x080aaa43: dec dword ptr [ebp + 0x5b002674]; ret; 
0x080792ac: dec dword ptr [ebp + 0x5be80076]; idiv ah; inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080701ac: dec dword ptr [ebp + 0x5be80076]; xchg ebp, edi; inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x0808ec77: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0807a8e3: dec dword ptr [ebp + 0x62000384]; std; call dword ptr [eax - 0x18]; 
0x08056d31: dec dword ptr [ebp + 0xb6]; add bl, dh; ret; 
0x080562a3: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0xbf], cl; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x08050d51: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x137caba3], cl; or al, 0x53; call dword ptr [ebx + 0x10]; 
0x080942c1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x4c7243bb], cl; imul ebp, dword ptr [edi], -2; jmp dword ptr [ebp - 0x75]; 
0x080786e9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7cc3dbbc], cl; ret 0xc704; 
0x08081a49: dec dword ptr [ebp + 0xb6]; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x080a612b: dec dword ptr [ebp - 0x15cc37d]; call dword ptr [eax - 0x73]; 
0x080a5f8c: dec dword ptr [ebp - 0x15d9f6d]; call dword ptr [esi + 0x52]; 
0x080a5793: dec dword ptr [ebp - 0x15e937d]; call dword ptr [eax + 0x68]; 
0x080a52e0: dec dword ptr [ebp - 0x15e937d]; call dword ptr [eax - 0x73]; 
0x080a5764: dec dword ptr [ebp - 0x15ee77d]; call dword ptr [eax + 0x6a]; 
0x080a5716: dec dword ptr [ebp - 0x15f4f7d]; call dword ptr [eax - 0x75]; 
0x080a2c2f: dec dword ptr [ebp - 0x1606f7d]; call dword ptr [eax - 0x73]; 
0x080a2219: dec dword ptr [ebp - 0x162e77d]; call dword ptr [eax + 0x68]; 
0x080a1f65: dec dword ptr [ebp - 0x165117d]; call dword ptr [eax - 0x75]; 
0x0808c0a6: dec dword ptr [ebp - 0x1737f7d]; dec dword ptr [edi]; inc ebp; ret 0xc289; 
0x080994aa: dec dword ptr [ebp - 0x1b8266a]; dec dword ptr [edi]; inc esp; ret 0x578b; 
0x0809c560: dec dword ptr [ebp - 0x1bd6d4d]; jmp dword ptr [ebp - 0x75]; 
0x0809c4c0: dec dword ptr [ebp - 0x1bd874d]; jmp dword ptr [ebp - 0x75]; 
0x0809be23: dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax + 0x6a]; 
0x0809bc6f: dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax - 0x73]; 
0x0809aab3: dec dword ptr [ebp - 0x1c5126f]; dec dword ptr [ebx + 0xfc08500]; inc esp; ret 0x558b; 
0x080980b2: dec dword ptr [ebp - 0x1c8ea6a]; dec dword ptr [edi]; inc ebp; ret 0x3980; 
0x0809844e: dec dword ptr [ebp - 0x1c90b79]; dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x08096f44: dec dword ptr [ebp - 0x1c9bb7d]; call dword ptr [eax - 0x73]; 
0x0809560a: dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x08096e2c: dec dword ptr [ebp - 0x1ca077d]; call dword ptr [eax - 0x39]; 
0x08096341: dec dword ptr [ebp - 0x1cacb7d]; call dword ptr [eax + 0x6a]; 
0x08096136: dec dword ptr [ebp - 0x1caef7d]; call dword ptr [eax + 0x6a]; 
0x08096f14: dec dword ptr [ebp - 0x1cdbf7d]; call dword ptr [eax + 0x6a]; 
0x08095305: dec dword ptr [ebp - 0x1cf9f4d]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x08092935: dec dword ptr [ebp - 0x1d0f37d]; call dword ptr [eax - 0x73]; 
0x08092655: dec dword ptr [ebp - 0x1d14b7d]; call dword ptr [eax - 0x73]; 
0x0809024e: dec dword ptr [ebp - 0x1d1937d]; call dword ptr [eax - 0x73]; 
0x0808d058: dec dword ptr [ebp - 0x1d7637d]; call dword ptr [eax + 0x68]; 
0x08082a69: dec dword ptr [ebp - 0x1d9077d]; call dword ptr [eax + 0x68]; 
0x08082aac: dec dword ptr [ebp - 0x1d9077d]; call dword ptr [eax - 0x73]; 
0x0807ee96: dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0807e86d: dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x0809ce2c: dec dword ptr [ebp - 0x2417ff8a]; mov edx, 0xcb05fffa; rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x0807bf2a: dec dword ptr [ebp - 0x295bb7d]; call dword ptr [eax - 0x73]; 
0x0807aff9: dec dword ptr [ebp - 0x2964b7d]; call dword ptr [eax - 0x73]; 
0x0807ad3b: dec dword ptr [ebp - 0x29d3f7d]; call dword ptr [eax - 0x73]; 
0x08079cac: dec dword ptr [ebp - 0x29e477d]; call dword ptr [eax - 0x73]; 
0x080742e4: dec dword ptr [ebp - 0x29f5f7d]; call dword ptr [eax + 0x68]; 
0x080742c5: dec dword ptr [ebp - 0x29f5f7d]; call dword ptr [eax - 0x73]; 
0x08075e3c: dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax + 0x68]; 
0x08075eb7: dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax - 0x73]; 
0x08075ddf: dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x08073120: dec dword ptr [ebp - 0x2a84b7d]; call dword ptr [eax - 0x73]; 
0x08071790: dec dword ptr [ebp - 0x2a9ef7d]; call dword ptr [eax - 0x73]; 
0x08070e45: dec dword ptr [ebp - 0x2ac417d]; call dword ptr [edx + 0x6a]; 
0x08070dc6: dec dword ptr [ebp - 0x2ac4a7d]; call dword ptr [ecx + 0x6a]; 
0x08070def: dec dword ptr [ebp - 0x2acd47d]; call dword ptr [edx + 0x6a]; 
0x08070d74: dec dword ptr [ebp - 0x2acd87d]; call dword ptr [ecx + 0x6a]; 
0x080700fe: dec dword ptr [ebp - 0x2acf37d]; call dword ptr [eax - 0x73]; 
0x08070136: dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x0807011a: dec dword ptr [ebp - 0x2ae697d]; call dword ptr [ecx + 0x51]; 
0x0806e560: dec dword ptr [ebp - 0x2b5ef7d]; call dword ptr [eax - 0x73]; 
0x0806c3d8: dec dword ptr [ebp - 0x2bb287d]; call dword ptr [eax - 0x18]; 
0x0806c2e3: dec dword ptr [ebp - 0x2bb477d]; call dword ptr [eax - 0x73]; 
0x0805d411: dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x0805b8d9: dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0809d5e7: dec dword ptr [ebp - 0x3b7cfeab]; adc byte ptr [ecx], bh; ret 0xd72; 
0x0808b9b9: dec dword ptr [ebp - 0x43b7b]; inc dword ptr [ebx - 0x7a76fb14]; sar bl, 0xff; dec dword ptr [ebp - 0x43f7b]; call dword ptr [eax - 0x73]; 
0x0808b9c8: dec dword ptr [ebp - 0x43f7b]; call dword ptr [eax - 0x73]; 
0x0808baf4: dec dword ptr [ebp - 0x4437b]; call dword ptr [eax - 0x73]; 
0x080814a7: dec dword ptr [ebp - 0x44f7b]; call dword ptr [eax - 0x73]; 
0x080812ff: dec dword ptr [ebp - 0x4537b]; call dword ptr [eax - 0x73]; 
0x08090686: dec dword ptr [ebp - 0x48fdf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0807c3a8: dec dword ptr [ebp - 0x5dd9f80]; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x08088b2c: dec dword ptr [ebp - 0x6274ff8a]; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x080536fc: dec dword ptr [ebp - 0x7174ff8a]; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0805e6e7: dec dword ptr [ebp - 0x7213f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e726: dec dword ptr [ebp - 0x726ff6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805e5e6: dec dword ptr [ebp - 0x72fcf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0806f7e3: dec dword ptr [ebp - 0x74ffd98c]; inc edx; add al, 0x83; ret 0xc608; 
0x0809a1a3: dec dword ptr [ebp - 0x74ffd98c]; push ebp; or byte ptr [ebx + 0x2030846], cl; call eax; 
0x0805e6ac: dec dword ptr [ebp - 0x7592f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805dbdc: dec dword ptr [ebp - 0x7717f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805e627: dec dword ptr [ebp - 0x793bf6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805db97: dec dword ptr [ebp - 0x7ab6f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e666: dec dword ptr [ebp - 0x7b0ef6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0808c51b: dec dword ptr [ebp - 0x7cffd98c]; in al, dx; add al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x080894b7: dec dword ptr [ebp - 0x87f7b]; inc dword ptr [eax - 0x7410f299]; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x57]; 
0x0804c97a: dec dword ptr [ebx + 0x15f898]; add byte ptr [ebx + 0x15f480], cl; add byte ptr [ecx], bh; ret; 
0x080984c7: dec dword ptr [ebx + 0x20497]; add dh, dh; ret 0x7508; 
0x080ab848: dec dword ptr [ebx + 0x31c2454]; push 8; mov dword ptr [esp], ebp; call edi; 
0x080a4475: dec dword ptr [ebx + 0x3b1c2444]; add cl, byte ptr [ebx + 0xf082444]; inc edi; ret 0x4489; 
0x08085a6c: dec dword ptr [ebx + 0x3be88c5d]; mov ah, bh; call dword ptr [edx - 0x77]; 
0x0806e27d: dec dword ptr [ebx + 0x440fcc7d]; ret 0x4189; 
0x08072c19: dec dword ptr [ebx + 0x4589d45d]; fadd qword ptr [ebx - 0x7c72f33c]; and byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x0809df4d: dec dword ptr [ebx + 0x48dc85d]; jg 0x55ee0; inc esp; ret; 
0x080832b7: dec dword ptr [ebx + 0x500f884d]; ret; 
0x0805e917: dec dword ptr [ebx + 0x5b082444]; ret; 
0x0808e269: dec dword ptr [ebx + 0x948e]; add bh, al; ret 0xafc0; 
0x08053048: dec dword ptr [ebx + 0x94b3]; add bh, al; ret 0xafc0; 
0x080a7f03: dec dword ptr [ebx + 0xf102444]; mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x0809aab9: dec dword ptr [ebx + 0xfc08500]; inc esp; ret 0x558b; 
0x08095600: dec dword ptr [ebx + 0xfc08500]; test esp, esi; idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x080a2ae2: dec dword ptr [ebx - 0x137c2ba3]; or byte ptr [ebp - 0x1632f7d], cl; call dword ptr [eax + 0x6a]; 
0x08054c99: dec dword ptr [ebx - 0x137cefba]; add al, 0x29; ret 0x5052; 
0x08056338: dec dword ptr [ebx - 0x14f3dbbc]; ret; 
0x0807b6b1: dec dword ptr [ebx - 0x1ab43]; call dword ptr [eax - 0x73]; 
0x0804c7cd: dec dword ptr [ebx - 0x1cb7b]; inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x0804cbeb: dec dword ptr [ebx - 0x1f363]; inc dword ptr [ecx]; sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x0809be1d: dec dword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax + 0x6a]; 
0x080ada5f: dec dword ptr [ebx - 0x340004ec]; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x08098540: dec dword ptr [ebx - 0x38e7dbbc]; ret; 
0x080a44fc: dec dword ptr [ebx - 0x38efdb84]; ret 0x9da4; 
0x08094954: dec dword ptr [ebx - 0x3b7c7bab]; adc byte ptr [ecx], bh; ret 0x840f; 
0x0807b3e5: dec dword ptr [ebx - 0x3b7cf3ba]; adc bl, ch; ret 0x9066; 
0x080a5ec0: dec dword ptr [ebx - 0x3b7cfbab]; and byte ptr [eax - 0x7bf0ffc6], al; ret 1; 
0x08087f92: dec dword ptr [ebx - 0x4276f3bb]; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8df73]; jmp dword ptr [ebp - 0x75]; 
0x0808a9a2: dec dword ptr [ebx - 0x45b7b]; jmp dword ptr [ebp - 0x75]; 
0x0808039a: dec dword ptr [ebx - 0x46b7b]; jmp dword ptr [ebp - 0x75]; 
0x08082509: dec dword ptr [ebx - 0x4af7b]; push dword ptr [ecx]; rol dh, cl; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x0809441d: dec dword ptr [ebx - 0x4c7243bb]; imul ebp, dword ptr [edi], -2; jmp dword ptr [ebp - 0x75]; 
0x0808b7e7: dec dword ptr [ebx - 0x4cf43]; inc dword ptr [ebp - 0x7b7bf001]; add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x0808be77: dec dword ptr [ebx - 0x4cf7b]; inc dword ptr [ebp - 0x707bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x0808241c: dec dword ptr [ebx - 0x4cf7b]; jmp dword ptr [ebp - 0x75]; 
0x0808c245: dec dword ptr [ebx - 0x4d773]; call dword ptr [esi - 0x75]; 
0x0808cb82: dec dword ptr [ebx - 0x4db7b]; jmp dword ptr [ebp - 0x75]; 
0x080817e9: dec dword ptr [ebx - 0x4df7b]; inc dword ptr [ebp - 0x6f7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x08080b3a: dec dword ptr [ebx - 0x4df7b]; inc dword ptr [ebp - 0x7a7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x08081b9d: dec dword ptr [ebx - 0x4eb73]; call dword ptr [esi - 0x75]; 
0x08076af1: dec dword ptr [ebx - 0x72c7dba4]; sub eax, 0x5d; std; call dword ptr [eax - 0x73]; 
0x08078aea: dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x5e], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080747ac: dec dword ptr [ebx - 0x72d3dba4]; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08074789: dec dword ptr [ebx - 0x72d3dba4]; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080747db: dec dword ptr [ebx - 0x72d3dba4]; cmp dword ptr [esi + ebx*2], -3; call dword ptr [eax - 0x73]; 
0x08077cd1: dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08077cae: dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08073f01: dec dword ptr [ebx - 0x72d7dba4]; and eax, 0x60; std; call dword ptr [eax + 0x68]; 
0x08073ede: dec dword ptr [ebx - 0x72d7dba4]; and eax, 0x60; std; call dword ptr [eax - 0x73]; 
0x080773a0: dec dword ptr [ebx - 0x72d7dba4]; or esp, 0x5d; std; call dword ptr [eax - 0x73]; 
0x080752bd: dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x080782c3: dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5f; std; call dword ptr [eax + 0x68]; 
0x080782a0: dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5f; std; call dword ptr [eax - 0x73]; 
0x080782e6: dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5e; std; call dword ptr [eax - 0x73]; 
0x08075326: dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x0807537e: dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax - 0x73]; 
0x08074b3a: dec dword ptr [ebx - 0x72dfdba4]; and dword ptr [eax], 0x60; std; call dword ptr [eax - 0x73]; 
0x08098491: dec dword ptr [ebx - 0x72e7dba4]; adc dword ptr [eax + 0x39], -2; call dword ptr [eax - 0x73]; 
0x08073a41: dec dword ptr [ebx - 0x72e7dba4]; add dword ptr [eax], 0x61; std; call dword ptr [eax + 0x68]; 
0x08054aec: dec dword ptr [ebx - 0x72ebdba4]; or eax, 0x29; std; call dword ptr [eax - 0x73]; 
0x080876a2: dec dword ptr [ebx - 0x72fbdba4]; sbb dword ptr [eax + 0x28], -2; call dword ptr [eax - 0x73]; 
0x080530b8: dec dword ptr [ebx - 0x74f3dbb4]; stosd dword ptr es:[edi], eax; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0807c80f: dec dword ptr [ebx - 0x74f7dbbc]; xchg eax, esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [ecx + 0x110245c], cl; ret 0x5489; 
0x080a9e7a: dec dword ptr [ebx - 0x76e3dbb4]; ret 0xec83; 
0x0809b0a5: dec dword ptr [ebx - 0x7af9fcfd]; sal byte ptr [ebp + 8], cl; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x080a6100: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x938d; 
0x080a5665: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x93e9; 
0x080a5a30: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080a2268: dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x08050b1b: dec dword ptr [ebx - 0x7c7247a3]; xor byte ptr [ecx], ch; std; call dword ptr [eax - 0x73]; 
0x080789a9: dec dword ptr [ebx - 0x7cc3dbbc]; ret 0x8904; 
0x08075cf0: dec dword ptr [ebx - 0x7ccfdbbc]; ret 0x8904; 
0x080a78a1: dec dword ptr [ebx - 0x7ce3dbb4]; in al, dx; or al, 0x89; ret 0x74ff; 
0x08054984: dec dword ptr [ebx - 0x7cebdbbc]; in al, dx; or al, 0xc7; ret; 
0x0805adf2: dec dword ptr [ebx - 0x7cf7dba4]; ret; 
0x0807ee90: dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x080800a5: dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x0807f95f: dec dword ptr [ebx - 0x88f4b]; ljmp [ecx]; ret; 
0x08089568: dec dword ptr [ebx - 0x88f6b]; inc dword ptr [ecx]; retf 0x8d8b; push 0x29fffff7; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x0808947e: dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0807dd1e: dec dword ptr [ebx - 0x89b73]; call dword ptr [ebx - 0x7d]; 
0x0807dd1e: dec dword ptr [ebx - 0x89b73]; call dword ptr [ebx - 0x7d]; ret; 
0x08088206: dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; 
0x08088206: dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; ret; 
0x0807b249: dec dword ptr [ebx - 0x976b]; call dword ptr [edx - 1]; 
0x08048633: dec dword ptr [ebx - 0x9dfdbac]; ret 0x7401; 
0x080850a7: dec dword ptr [ebx - 0xb77b]; call dword ptr [ecx + 0x29]; 
0x080955fa: dec dword ptr [ebx - 0xdb7b]; dec dword ptr [ebx + 0xfc08500]; test esp, esi; idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x0808509b: dec dword ptr [ebx - 0xdb7b]; dec dword ptr [ecx - 0xcb7b]; dec dword ptr [ebx - 0xb77b]; call dword ptr [ecx + 0x29]; 
0x080847f7: dec dword ptr [ebx - 0xef7b]; inc dword ptr [ebx - 0x50f0ef3c]; ret 0x8d8b; 
0x080c43b3: dec dword ptr [ebx]; int 0xfc; push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080af59f: dec dword ptr [ebx]; stc; ljmp [edi + 0x65]; stc; jmp dword ptr [eax]; 
0x0807e2d3: dec dword ptr [ebx]; test dword ptr [eax], edx; idiv edi; inc dword ptr [ebx - 0x2e7cfe08]; inc dword ptr [eax - 0x8c043]; jmp dword ptr [eax]; 
0x0807bc1e: dec dword ptr [ecx + 0x19a0b3]; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x0809c763: dec dword ptr [ecx + 0x1a7c83]; add byte ptr [ebx + 0x1a7883], cl; add byte ptr [ecx], bh; ret 0x273; 
0x08048db3: dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x080a61d5: dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x0806fe5a: dec dword ptr [ecx + 0x2de82404]; in eax, dx; std; inc edi; ret 0xbf20; 
0x08094ed4: dec dword ptr [ecx + 0x42890c4a]; add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x08058d43: dec dword ptr [ecx + 0x50090]; add bl, dh; ret; 
0x08058d37: dec dword ptr [ecx + 0x50490]; add byte ptr [ebp - 0x7e70f70], cl; dec dword ptr [ecx + 0x50090]; add bl, dh; ret; 
0x080a3e15: dec dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x0806ee0d: dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x08094794: dec dword ptr [ecx + 0x5f5e5bd0]; pop ebp; ret; 
0x08082e5d: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x0805841a: dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x0807c3ae: dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x0807b611: dec dword ptr [ecx - 0x1af6b]; call dword ptr [eax - 1]; 
0x0807b6f1: dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ecx]; 
0x0804c7c7: dec dword ptr [ecx - 0x1c37b]; dec dword ptr [ebx - 0x1cb7b]; inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x0804c9e2: dec dword ptr [ecx - 0x1e763]; inc dword ptr [ecx]; ror dword ptr [ebx + 0x200091], cl; add byte ptr [ecx], bh; ret; 
0x080a46c2: dec dword ptr [ecx - 0x3b7cf7ba]; and al, 0x5b; pop esi; ret; 
0x080abae8: dec dword ptr [ecx - 0x3f7a55f4]; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x0808c8d2: dec dword ptr [ecx - 0x4674b]; dec dword ptr [edi]; mov dh, 0x84; add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1100], al; jmp eax; 
0x0808a7db: dec dword ptr [ecx - 0x4677b]; jmp dword ptr [ebp - 0x5f]; 
0x0808a7f2: dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x08082193: dec dword ptr [ecx - 0x47743]; dec dword ptr [edi]; mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x080801db: dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x080801f2: dec dword ptr [ecx - 0x4837b]; jmp dword ptr [ebp - 0x75]; 
0x0808d037: dec dword ptr [ecx - 0x48f73]; call dword ptr [eax + 0x50]; 
0x0808d006: dec dword ptr [ecx - 0x49373]; call dword ptr [eax + 0x50]; 
0x08081e28: dec dword ptr [ecx - 0x4976b]; call dword ptr [ecx + 0x6a]; 
0x0808c3ea: dec dword ptr [ecx - 0x49b6b]; dec dword ptr [edi]; dec ecx; ret 0x8589; 
0x080829e7: dec dword ptr [ecx - 0x49f6b]; call dword ptr [eax + 0x50]; 
0x080828ee: dec dword ptr [ecx - 0x49f6b]; call dword ptr [eax + 0x51]; 
0x080828c7: dec dword ptr [ecx - 0x49f6b]; call dword ptr [edx + 0x52]; 
0x080829d8: dec dword ptr [ecx - 0x4a36b]; call dword ptr [eax + 0x50]; 
0x08082942: dec dword ptr [ecx - 0x4a36b]; call dword ptr [eax + 0x51]; 
0x080828d6: dec dword ptr [ecx - 0x4a36b]; call dword ptr [edx + 0x52]; 
0x0804ed95: dec dword ptr [ecx - 0x74f7dbac]; inc ecx; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0805a550: dec dword ptr [ecx - 0x76dbdbb4]; push esp; and al, 0x1c; call eax; 
0x0805234c: dec dword ptr [ecx - 0x7af03fbb]; ret; 
0x0807fc9f: dec dword ptr [ecx - 0x8634b]; call dword ptr [ecx - 0x77]; 
0x0807f3c9: dec dword ptr [ecx - 0x87f6b]; call dword ptr [edx + 0x6a]; 
0x08080023: dec dword ptr [ecx - 0x87f73]; call dword ptr [ecx + 0x51]; 
0x0807f41c: dec dword ptr [ecx - 0x87f73]; call dword ptr [ecx + 0x6a]; 
0x0807e9df: dec dword ptr [ecx - 0x87f73]; call dword ptr [esi + 0x6a]; 
0x0807e90b: dec dword ptr [ecx - 0x8836b]; call dword ptr [esi + 0x6a]; 
0x08080032: dec dword ptr [ecx - 0x88373]; call dword ptr [eax + 0x50]; 
0x0807f7f9: dec dword ptr [ecx - 0x88373]; call dword ptr [ecx + 0x6a]; 
0x08089c6c: dec dword ptr [ecx - 0x88f6b]; call dword ptr [edx - 0x18]; 
0x0808a284: dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x0808997b: dec dword ptr [ecx - 0x88f73]; call dword ptr [ecx + 0x6a]; 
0x0807f9b7: dec dword ptr [ecx - 0x8936b]; call dword ptr [ecx + 0x56]; 
0x0808a0c3: dec dword ptr [ecx - 0x89773]; call dword ptr [ecx + 0x6a]; 
0x0808813d: dec dword ptr [ecx - 0x89b43]; dec dword ptr [ebp + 0x48d873c]; mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x8a343], cl; call dword ptr [eax + 1]; 
0x08089922: dec dword ptr [ecx - 0x8a373]; call dword ptr [edx + 0x6a]; 
0x08080041: dec dword ptr [ecx - 0x8a76b]; call dword ptr [eax + 0x50]; 
0x0807fe00: dec dword ptr [ecx - 0x8a76b]; call dword ptr [eax + 0x51]; 
0x0807e6c0: dec dword ptr [ecx - 0x8a76b]; call dword ptr [ecx + 0x57]; 
0x0808a27e: dec dword ptr [ecx - 0x8b373]; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x0807fc99: dec dword ptr [ecx - 0x8bb6b]; dec dword ptr [ecx - 0x8634b]; call dword ptr [ecx - 0x77]; 
0x08089855: dec dword ptr [ecx - 0x8bb6b]; dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x08087f9b: dec dword ptr [ecx - 0x8df73]; jmp dword ptr [ebp - 0x75]; 
0x0806c3c9: dec dword ptr [ecx - 0x937b]; jmp dword ptr [ebp - 0x75]; 
0x08094927: dec dword ptr [ecx - 0x937b]; jmp dword ptr [esi - 0x70]; 
0x080956a7: dec dword ptr [ecx - 0xaf73]; jmp dword ptr [ecx]; 
0x080845ef: dec dword ptr [ecx - 0xcb63]; inc dword ptr [eax - 0xf743]; jmp dword ptr [edi + 0xf]; 
0x080850a1: dec dword ptr [ecx - 0xcb7b]; dec dword ptr [ebx - 0xb77b]; call dword ptr [ecx + 0x29]; 
0x08083c8e: dec dword ptr [ecx - 0xeb7b]; jmp dword ptr [ebp - 0x75]; 
0x08081298: dec dword ptr [ecx]; ret 0xb60f; 
0x080bc923: dec dword ptr [edi + 0x60fffb34]; xor eax, 0x348ffffb; sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x080bc92f: dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x080bc91f: dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080bc953: dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax]; 
0x08091543: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08058412: dec dword ptr [edi]; add byte ptr [ecx - 0xfffff1a], al; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x0806d9be: dec dword ptr [edi]; cmp ebx, 0x36; add byte ptr [eax], al; ret; 
0x080736bd: dec dword ptr [edi]; dec eax; ret 0x8dc3; 
0x08084bc2: dec dword ptr [edi]; dec ecx; ret 0x8589; 
0x0808985b: dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x080980b8: dec dword ptr [edi]; inc ebp; ret 0x3980; 
0x08098454: dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x0808c0ac: dec dword ptr [edi]; inc ebp; ret 0xc289; 
0x0805db5c: dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080994b0: dec dword ptr [edi]; inc esp; ret 0x578b; 
0x0809d3db: dec dword ptr [edi]; inc esp; ret 0xc35f; 
0x0805db1f: dec dword ptr [edi]; inc esp; ret 0xc483; 
0x0806f83f: dec dword ptr [edi]; mov bh, 0x42; add al, 0x83; ret 0xc608; 
0x0807b35b: dec dword ptr [edi]; mov bh, 0x44; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x08082199: dec dword ptr [edi]; mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08089cc9: dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0808c8d8: dec dword ptr [edi]; mov dh, 0x84; add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1100], al; jmp eax; 
0x0806c8b0: dec dword ptr [edi]; or dword ptr [ecx], 0x48; add byte ptr [eax], al; ret; 
0x0806eaea: dec dword ptr [edi]; or edi, 0x25; add byte ptr [eax], al; ret; 
0x0806d98e: dec dword ptr [edi]; sub dword ptr [ebx], 0x37; add byte ptr [eax], al; ret; 
0x0807565b: dec dword ptr [edi]; test byte ptr [eax - 0x8fffffd], al; ret 0; 
0x08088c73: dec dword ptr [edi]; test byte ptr [ebx - 0x7cffffeb], dh; in al, dx; or byte ptr [ebx - 0x89363], cl; call dword ptr [eax + 0x52]; 
0x0809bcec: dec dword ptr [edi]; test byte ptr [edi], bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x0807564f: dec dword ptr [edi]; test byte ptr [edi], bl; add eax, dword ptr [eax]; add bh, dh; ret 0; 
0x0809f38c: dec dword ptr [edi]; test byte ptr [edx - 0x75000000], dh; add dword ptr [ebx - 0x78f0fe08], eax; ret 0; 
0x0806ad7f: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0806ae8a: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0806dfaf: dec dword ptr [edi]; test dword ptr [edx], ebx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x1d7c3bab], cl; add dword ptr [ecx], ecx; ret 0x1689; 
0x0808b2d6: dec dword ptr [edi]; test ebx, esi; adc al, 0; add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x08089e2a: dec dword ptr [edi]; xchg byte ptr [esi], al; or byte ptr [eax], al; add byte ptr [ebx + 0x525604ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0807f48b: dec dword ptr [edi]; xchg byte ptr [esi], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x6a76fb14], al; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x0804bb95: dec dword ptr [edi]; xchg eax, ebp; ret 0x2fe9; 
0x0804bac9: dec dword ptr [edi]; xchg eax, ebp; ret 0xd284; 
0x0807f2b0: dec dword ptr [edi]; xchg eax, esp; rcl byte ptr [eax - 1], 0xb5; inc eax; idiv edi; call dword ptr [ebx - 1]; 
0x0806cfbe: dec dword ptr [edi]; xchg eax, esp; ret 0xca21; 
0x0807f1a0: dec dword ptr [edi]; xchg eax, esp; ret 0xff52; 
0x08081aed: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x23e9; 
0x080ae6df: dec dword ptr [edx]; daa; stc; lcall [edi - 7]; jmp dword ptr [esi + 0x27]; 
0x080887f7: dec eax; adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0808a6d1: dec eax; adc byte ptr [ebx + 0x31e91458], cl; loope 0x426d9; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0808f3c4: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0808f09a: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080cb060: dec eax; add byte ptr [bx + si], al; cmp al, 0x1a; cli; call dword ptr [ecx]; 
0x080cbcb0: dec eax; add byte ptr [eax], al; add byte ptr [ebx + esi*2 + 0x32680000], bl; cli; jmp dword ptr [esi]; 
0x0806c8b4: dec eax; add byte ptr [eax], al; ret; 
0x080c9175: dec eax; add byte ptr [eax], al; sbb byte ptr [edi], dh; stc; jmp dword ptr [ecx]; 
0x080c7f60: dec eax; add byte ptr ss:[eax], al; pushfd; out dx, eax; clc; call dword ptr [ebx]; 
0x080cd832: dec eax; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0805e65f: dec eax; add dword ptr [ebp - 0x7b75f7e], ecx; dec dword ptr [ebp - 0x7b0ef6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x08060892: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x08059783: dec eax; add eax, 0x950f0000; ret 0x448b; 
0x08055661: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x080488b9: dec eax; and bh, ch; call dword ptr [eax - 0x18]; 
0x080755d4: dec eax; call eax; 
0x0807399e: dec eax; call esi; 
0x0805e664: dec eax; clc; dec dword ptr [ebp - 0x7b0ef6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080bdc93: dec eax; clc; sti; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x08077d96: dec eax; cmp al, 0xf6; ret; 
0x0809ad49: dec eax; cmp bh, dh; call dword ptr [eax + 0x6a]; 
0x0809adfe: dec eax; cmp bh, dh; call dword ptr [edx + 0x6a]; 
0x0807718a: dec eax; dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x0806e8f0: dec eax; dec edx; std; call dword ptr [eax - 0x18]; 
0x080c8a60: dec eax; inc ecx; add byte ptr [eax], al; mov word ptr [eax], cs; stc; call dword ptr [ecx + 0xa]; 
0x080d2a60: dec eax; loope 0x8aa63; add byte ptr [esp], ch; cld; jmp dword ptr [edi]; 
0x080738c6: dec eax; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x08093710: dec eax; movzx eax, al; pop ebx; ret; 
0x08058f9c: dec eax; or al, 0x83; ret; 
0x08097b90: dec eax; or byte ptr [ebx - 0x76ebdbb4], cl; dec eax; or al, 0x83; ret; 
0x0808f0cb: dec eax; or byte ptr [ecx + 0x10890450], cl; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; pop ebx; ret; 
0x0808f09d: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080cf6da: dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1d80: dec eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c7b73: dec eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080d5606: dec eax; or eax, dword ptr [edx]; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e41: dec eax; or eax, dword ptr [edx]; push ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080ceba6: dec eax; or ebx, dword ptr [ecx + 0xa]; ret; 
0x080d0624: dec eax; or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080c70fa: dec eax; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d48aa: dec eax; or ecx, dword ptr [edx + 0xa]; ret; 
0x080d0f8f: dec eax; or esp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8dc6: dec eax; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x08060832: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x080c53b6: dec eax; push cs; adc al, 0x41; ret; 
0x080c6291: dec eax; push cs; adc byte ptr [eax + 0xa], bl; push cs; or al, 0x41; ret; 
0x080d489a: dec eax; push cs; adc byte ptr [eax + 0xa], dl; ret; 
0x080c573c: dec eax; push cs; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080d2dca: dec eax; push cs; adc byte ptr [ebx + 0xa], al; ret; 
0x080c4f09: dec eax; push cs; adc byte ptr [ebx + 0xa], cl; ret; 
0x080d40b4: dec eax; push cs; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080c72e9: dec eax; push cs; adc byte ptr [ecx + 0xa], al; ret; 
0x080d25c8: dec eax; push cs; adc byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080d29b1: dec eax; push cs; adc byte ptr [edi + 0xa], cl; ret; 
0x080d3478: dec eax; push cs; adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080cff75: dec eax; push cs; adc byte ptr [edx + 0xa], cl; ret; 
0x080c5f50: dec eax; push cs; adc byte ptr [edx + 0xa], dl; ret; 
0x080cf8e5: dec eax; push cs; adc byte ptr [esi + 0xa], al; ret; 
0x080c6867: dec eax; push cs; adc byte ptr [esi + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cc9ad: dec eax; push cs; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb78: dec eax; push cs; adc byte ptr [esi + 0xa], dl; ret; 
0x080c682f: dec eax; push cs; adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080d3666: dec eax; push cs; adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080d58c6: dec eax; push cs; add byte ptr [edx], 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7075: dec eax; push cs; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c9112: dec eax; push cs; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d6433: dec eax; push cs; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080d1107: dec eax; push cs; and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080c7358: dec eax; push cs; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d6414: dec eax; push cs; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c8290: dec eax; push cs; and byte ptr [ebx + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d2c24: dec eax; push cs; and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080d1365: dec eax; push cs; and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080d047a: dec eax; push cs; and byte ptr [ecx + 0xa], bl; push cs; adc al, 0x43; ret; 
0x080d045b: dec eax; push cs; and byte ptr [ecx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c5bbc: dec eax; push cs; and byte ptr [edi + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080d43a5: dec eax; push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080cb4e1: dec eax; push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080cb08e: dec eax; push cs; and byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080c6d1b: dec eax; push cs; and byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d128d: dec eax; push cs; and byte ptr [edx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080c880f: dec eax; push cs; and byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cb4c2: dec eax; push cs; and byte ptr [esi + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080d5388: dec eax; push cs; and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x080d2959: dec eax; push cs; cmp byte ptr [ebx], al; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x080d164f: dec eax; push cs; inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080d28e8: dec eax; push cs; inc eax; add dh, byte ptr [esi + 0x45140e0a]; ret; 
0x080c58ba: dec eax; push cs; inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d218f: dec eax; push cs; jo 0x8a1e8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5182: dec eax; push cs; lock add dword ptr [edx], eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080c69b9: dec eax; push cs; mov al, 1; add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080cf63a: dec eax; push cs; mov al, byte ptr [0xa580283]; push cs; adc al, 0x41; ret; 
0x080c4b95: dec eax; push cs; nop; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080c6966: dec eax; push cs; or al, 0x41; ret; 
0x080c96d7: dec eax; push cs; or al, 0x43; ret; 
0x080ce96e: dec eax; push cs; or byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d64c9: dec eax; push cs; push eax; imul ecx, dword ptr [edx], 0xe; adc al, 0x43; ret; 
0x080d3715: dec eax; push cs; push eax; push 0x41140e0a; ret; 
0x080c899c: dec eax; push cs; rcl byte ptr [edx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1d7c: dec eax; push cs; rol byte ptr [eax + ecx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1d26: dec eax; push cs; rol byte ptr [ebx + ebx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d2f9c: dec eax; push cs; xor byte ptr [eax + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080cf6d7: dec eax; push cs; xor byte ptr [eax + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c7946: dec eax; push cs; xor byte ptr [eax + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c9432: dec eax; push cs; xor byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d3ece: dec eax; push cs; xor byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c63eb: dec eax; push cs; xor byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c6565: dec eax; push cs; xor byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080cde12: dec eax; push cs; xor byte ptr [ebx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080cdddb: dec eax; push cs; xor byte ptr [ebx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080cc96d: dec eax; push cs; xor byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080cdcd5: dec eax; push cs; xor byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080c8620: dec eax; push cs; xor byte ptr [ecx + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c6426: dec eax; push cs; xor byte ptr [ecx + 0xa], dl; push cs; adc al, 0x46; ret; 
0x080ce1b7: dec eax; push cs; xor byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c5687: dec eax; push cs; xor byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d3fcf: dec eax; push cs; xor byte ptr [edi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080c5796: dec eax; push cs; xor byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d03e9: dec eax; push cs; xor byte ptr [edi + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d1a33: dec eax; push cs; xor byte ptr [edi + 0xe], al; adc al, 0x43; ret; 
0x080c57b5: dec eax; push cs; xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080d16c2: dec eax; push cs; xor byte ptr [edx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d4f91: dec eax; push cs; xor byte ptr [edx + 0xa], dl; push cs; or al, 0x41; ret; 
0x080ce6a2: dec eax; push cs; xor byte ptr [edx + ecx + 0xe], bh; adc al, 0x41; ret; 
0x080cf9e9: dec eax; push cs; xor byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080cdaad: dec eax; push cs; xor byte ptr [edx + ecx + 0xe], dl; adc al, 0x41; ret; 
0x080c5667: dec eax; push cs; xor byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080c5acf: dec eax; push cs; xor byte ptr [esi + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080cc92d: dec eax; push cs; xor byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080d5b88: dec eax; push cs; xor byte ptr [esi + ecx + 8], dl; inc ecx; ret; 
0x0807399a: dec eax; push dword ptr [esp + 0x48]; call esi; 
0x080738c2: dec eax; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x080608a2: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0805787c: dec eax; ret 0x4489; 
0x080736bf: dec eax; ret 0x8dc3; 
0x08079bec: dec eax; ret 0xc083; 
0x08062c23: dec eax; ret 0xff3; 
0x080578a6: dec eax; ret 0xff50; 
0x08062b83: dec eax; ret; 
0x080c4413: dec eax; sar esp, cl; lcall [eax]; aam 0xfc; call dword ptr [eax - 0x2b]; 
0x080adf3d: dec eax; sti; call esi; 
0x080adf3d: dec eax; sti; call esi; dec eax; sti; jmp dword ptr [esi + 0x49]; 
0x080bca33: dec eax; sti; dec dword ptr [eax]; cmp bl, bh; jmp eax; 
0x080adf41: dec eax; sti; jmp dword ptr [esi + 0x49]; 
0x080d2ee8: dec eax; stosb byte ptr es:[edi], al; cld; call esp; 
0x08079277: dec ebp; aam 0x89; or al, 0x24; call esi; 
0x08092f97: dec ebp; add al, 0xe8; ret 0xfdbb; 
0x0805c75a: dec ebp; add al, ch; jmp dword ptr [ebx]; 
0x0805c755: dec ebp; add byte ptr [eax + ecx - 0x73], dh; dec ebp; add al, ch; jmp dword ptr [ebx]; 
0x080489ae: dec ebp; and byte ptr [ecx + 0x5d8b2455], cl; adc bh, dh; ret; 
0x080c241a: dec ebp; call dword ptr [esi + 0x30]; 
0x08093c67: dec ebp; in al, 0x83; ret 0x8401; 
0x080a2b0e: dec ebp; in al, 0x8d; and byte ptr [eax - 0x64], 0xfe; call dword ptr [eax - 0x18]; 
0x080a375b: dec ebp; les ecx, ptr [ecx + 0xfc839c2]; xchg eax, esp; ret; 
0x0809b8fb: dec ebp; mov al, byte ptr [0xfffff8ba]; call ebx; 
0x080832b9: dec ebp; mov byte ptr [edi], cl; push eax; ret; 
0x0809b0af: dec ebp; movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x0809a46c: dec ebp; or byte ptr [ebx + 0x78b08c6], al; add eax, dword ptr [ecx]; call eax; 
0x08099447: dec ebp; or byte ptr [ecx], ch; ret 0x5789; 
0x080c67cb: dec ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d6436: dec ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d3061: dec ebp; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x080d631e: dec ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080cc3ad: dec ebp; push cs; adc al, 0x41; ret; 
0x080d0626: dec ebp; push cs; adc al, 0x43; ret; 
0x080cb6e2: dec ebp; push cs; adc byte ptr [ecx + 0xa], al; ret; 
0x080cad3f: dec ebp; push cs; adc byte ptr [edi + 0xa], al; ret; 
0x080cf2e1: dec ebp; push cs; and al, 2; test eax, 0x41140e0a; ret; 
0x080c78fd: dec ebp; push cs; and byte ptr [edx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080d5f77: dec ebp; push cs; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080d2015: dec ebp; push cs; inc eax; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c7457: dec ebp; push cs; or al, 0x41; ret; 
0x080cf28d: dec ebp; push cs; sub byte ptr [edx], al; mov ecx, 0x41140e0a; ret; 
0x0809a55d: dec ebp; pushfd; mov edx, dword ptr [ecx + edi*4 - 0x1c0b8]; add edx, ecx; jmp edx; 
0x080c1da1: dec ebp; ret 0xdcd9; 
0x0805bd8f: dec ebp; ret 0xffff; 
0x080c6b53: dec ebp; ret; 
0x0806ee0b: dec ebp; stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080d6685: dec ebp; std; jmp dword ptr [ecx + 1]; 
0x080ada63: dec ebx; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080c4f71: dec ebx; clc; call dword ptr [ebx]; 
0x080c0b1d: dec ebx; inc esp; sar byte ptr [esi + eax*2], 0xf8; mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x08091d44: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x08067544: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x080d2d7e: dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d214f: dec ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d4230: dec ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080792b6: dec ebx; or eax, 0x808b0006; je 0x312d7; add byte ptr [eax], al; ret; 
0x080c86dc: dec ebx; or eax, dword ptr [eax]; add byte ptr [eax - 0x34000000], cl; cmp eax, 0xfe980000; clc; call dword ptr [edi + 1]; 
0x080c8736: dec ebx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c813d: dec ebx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d2e34: dec ebx; or eax, dword ptr [ecx + 0xa]; ret; 
0x080c9279: dec ebx; or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080d552c: dec ebx; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d608b: dec ebx; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080ce1ce: dec ebx; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x080adce3: dec ebx; pop ss; sti; inc dword ptr [esi - 0x490004ec]; adc al, 0xfb; jmp esi; 
0x080ceb96: dec ebx; push cs; adc byte ptr [ebp + 0xa], al; ret; 
0x080c7454: dec ebx; push cs; adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080c96e2: dec ebx; push cs; adc byte ptr [ebx + 0x43028603], al; or cl, byte ptr [esi]; or al, 0x46; ret; 
0x080c4f4d: dec ebx; push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d0767: dec ebx; push cs; and byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080d4322: dec ebx; push cs; or al, 0x41; ret; 
0x080cdf01: dec ebx; push cs; rol byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cea0f: dec ebx; push cs; xor byte ptr [edi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cf508: dec ebx; push cs; xor byte ptr [edx + ecx + 0xe], bl; adc al, 0x41; ret; 
0x080c23d3: dec ebx; ret 0x5803; 
0x080bfab4: dec ebx; ret 0xde9e; 
0x080d0112: dec ebx; ret; 
0x080adf11: dec ebx; sti; call esp; 
0x080adf55: dec ebx; sti; jmp dword ptr [esi + 0x4c]; 
0x080670e9: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08067101: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0809ce82: dec ecx; add al, 0x85; leave; jne 0x54e60; pop ebx; ret; 
0x08065d77: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ed7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064507: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x08064667: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x080c4ced: dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x08063817: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x08063947: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x080bf991: dec ecx; jns 0x77926; ret 0xf869; 
0x080642c7: dec ecx; ljmp [ecx]; ret 0x280f; 
0x080c4847: dec ecx; loope 0x7c847; call edi; 
0x080c4847: dec ecx; loope 0x7c847; call edi; loope 0x7c84b; jmp eax; 
0x080c6b89: dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c70fc: dec ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c6e95: dec ecx; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080d57c0: dec ecx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c62a0: dec ecx; or eax, dword ptr [ebx + 0xe]; or al, 0x46; ret; 
0x080c60bd: dec ecx; or eax, dword ptr [ebx]; xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x080c78c0: dec ecx; or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8e39: dec ecx; or ecx, dword ptr [esi + 0xa]; ret; 
0x080ce649: dec ecx; or edx, dword ptr [eax + 0xe]; or al, 0x46; ret; 
0x080cdcec: dec ecx; or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080d0146: dec ecx; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x08065f17: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x080c4eb4: dec ecx; push cs; adc al, 0x41; ret; 
0x080d11dc: dec ecx; push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080c8a2c: dec ecx; push cs; and byte ptr [edi + 0xa], bl; push cs; adc al, 0x46; ret; 
0x080ccc39: dec ecx; push cs; jo 0x84c3f; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080d5a11: dec ecx; push cs; lock add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x080c7b8a: dec ecx; push cs; or al, 0x43; ret; 
0x080ca5c3: dec ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ccb7d: dec ecx; push cs; pushal; add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080d33f7: dec ecx; push cs; xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080d5dbb: dec ecx; push cs; xor byte ptr [ebx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080c92cc: dec ecx; push cs; xor byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d4a61: dec ecx; push cs; xor byte ptr [edx], al; or cl, byte ptr [0x4314]; ret; 
0x08065ef7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064687: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08084bc4: dec ecx; ret 0x8589; 
0x08089523: dec ecx; ret 0x9589; 
0x0808985d: dec ecx; ret 0xdb85; 
0x0806e4d6: dec ecx; ret 0xf8c1; 
0x0806d05f: dec ecx; std; call dword ptr [eax + 0x6a]; 
0x0806d65c: dec ecx; std; call dword ptr [eax - 0x18]; 
0x0806d7e3: dec ecx; std; call dword ptr [eax - 0x73]; 
0x080d26c1: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080cece1: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x0806ac99: dec ecx; xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x080a8898: dec edi; adc byte ptr [edi], cl; xchg eax, esp; ret; 
0x0806785c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x08066cbd: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x08076e66: dec edi; and dh, dh; ret; 
0x0805e66a: dec edi; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080d1aab: dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d0793: dec edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c650a: dec edi; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080cbf0e: dec edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080d4496: dec edi; or eax, dword ptr [ecx + 0xa]; ret; 
0x080c90f4: dec edi; or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d5a15: dec edi; push cs; adc al, 0x43; ret; 
0x080c7b70: dec edi; push cs; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080cdc56: dec edi; push cs; adc byte ptr [edi + 0xa], dl; push cs; or al, 0x41; ret; 
0x080c9636: dec edi; push cs; add byte ptr [ecx], 0x53; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d38a5: dec edi; push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c6ff1: dec edi; push cs; or al, 0x41; ret; 
0x080c7b2c: dec edi; ret; 
0x080ac3b3: dec edi; stc; idiv bh; ret 0xf6f9; 
0x080677aa: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0804e29d: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0808f7a1: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x0807e173: dec edx; add al, 0x89; or byte ptr [ebx - 0x7ce976ee], cl; ret; 
0x080c934d: dec edx; add byte ptr [eax], al; pushal; cmp bh, cl; call dword ptr [eax]; 
0x080c9321: dec edx; add byte ptr [eax], al; sub al, 0x3a; stc; call dword ptr [edi]; 
0x08065d80: dec edx; add eax, 0x5f0c428d; ret; 
0x080ab846: dec edx; cld; dec dword ptr [ebx + 0x31c2454]; push 8; mov dword ptr [esp], ebp; call edi; 
0x080ae6fb: dec edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080922e4: dec edx; or al, 0x83; ret 0x3910; 
0x08094ed6: dec edx; or al, 0x89; inc edx; add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x080a2bd9: dec edx; or bh, al; ret 0xbcc8; 
0x0809230f: dec edx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080c57b8: dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce1f0: dec edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d65fa: dec edx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c8a43: dec edx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cb5dd: dec edx; or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080d1498: dec edx; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d3cf3: dec edx; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d0491: dec edx; or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080c90b9: dec edx; or ecx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x080c6402: dec edx; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x08065dc0: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f20: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x08064550: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x080646b0: dec edx; pop es; mov eax, edx; ret; 
0x08073a33: dec edx; pop esp; std; call dword ptr [eax - 0x18]; 
0x080cc606: dec edx; push cs; adc byte ptr [ebp + 0xa], al; ret; 
0x080d442d: dec edx; push cs; adc byte ptr [esi + 0xa], cl; ret; 
0x080ca670: dec edx; push cs; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x080d060d: dec edx; push cs; and byte ptr [eax + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c64f1: dec edx; push cs; and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080c70e3: dec edx; push cs; and byte ptr [edx + ecx + 0xe], cl; adc al, 0x43; ret; 
0x080d6032: dec edx; push cs; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080d66d0: dec edx; push cs; jo 0x8e72a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c580b: dec edx; push cs; nop; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c9e77: dec edx; push cs; or byte ptr [ebx + 0x40e4702], al; ret; 
0x080d2c21: dec edx; push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080c62f1: dec edx; push cs; xor byte ptr [ebx + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080c6057: dec edx; push cs; xor byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c73f3: dec edx; push cs; xor byte ptr [edi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080c4c9f: dec edx; push cs; xor byte ptr [esi + ecx + 0x14], cl; inc ecx; ret; 
0x08065da0: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065f00: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x08064530: dec edx; push es; mov eax, edi; pop edi; ret; 
0x08064690: dec edx; push es; mov eax, edx; ret; 
0x080c09ac: dec edx; ret 0x1b49; 
0x080cf900: dec edx; ret; 
0x0806ed20: dec edx; std; call dword ptr [eax + 0x6a]; 
0x080d656d: dec edx; std; call dword ptr [eax + 1]; 
0x0806e574: dec edx; std; call dword ptr [eax - 0x18]; 
0x0806e564: dec edx; std; call dword ptr [eax - 0x73]; 
0x0806ef4e: dec edx; std; push dword ptr [ecx]; leave; int 0x80; 
0x080adf4d: dec edx; sti; call dword ptr [esi]; 
0x080adf0d: dec edx; sti; push dword ptr [ebx + ecx*2]; sti; call esp; 
0x0807c0a9: dec edx; sub bh, al; ret; 
0x0806d9f5: dec edx; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x08067dd9: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08095176: dec esi; adc al, 0x39; ret 0x8d89; 
0x080c975d: dec esi; add byte ptr [eax], al; nop; inc esp; stc; jmp dword ptr [edi]; 
0x080a946d: dec esi; cli; call dword ptr [edi + 0x56]; 
0x080c087d: dec esi; cli; mov eax, dword ptr [0xd11e901c]; stc; jnp 0x78840; ret; 
0x080a133d: dec esi; or byte ptr [ebp - 0x1b82668], cl; inc dword ptr [ecx + 0xc9]; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x0809d9dd: dec esi; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080c77dc: dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2514: dec esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d421f: dec esi; push cs; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080cdc3f: dec esi; push cs; adc byte ptr [eax + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d631b: dec esi; push cs; adc byte ptr [ebp + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7797: dec esi; push cs; adc byte ptr [ebp + 0xa], dh; push cs; or al, 0x41; ret; 
0x080ce0ce: dec esi; push cs; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d00cf: dec esi; push cs; adc byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x080c6a60: dec esi; push cs; adc byte ptr [ecx + 0xa], ah; ret; 
0x080cc6eb: dec esi; push cs; adc byte ptr [ecx + 0xa], al; ret; 
0x080cbf0b: dec esi; push cs; adc byte ptr [edi + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c4cd3: dec esi; push cs; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x080cfc6f: dec esi; push cs; adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7c0b: dec esi; push cs; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080c8d3b: dec esi; push cs; adc byte ptr [edx], al; or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080c93a5: dec esi; push cs; and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080cfda5: dec esi; push cs; and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080c4eb1: dec esi; push cs; and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x080cbb4d: dec esi; push cs; and byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080c5b99: dec esi; push cs; and byte ptr [edx], al; test eax, 0x41140e0a; ret; 
0x080c77d9: dec esi; push cs; and byte ptr [esi + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080d3e89: dec esi; push cs; inc eax; add dl, byte ptr [edi + 0x41140e0a]; ret; 
0x080d3f45: dec esi; push cs; inc eax; add dl, byte ptr [esi + 0x41140e0a]; ret; 
0x080cbd75: dec esi; push cs; mov byte ptr [ecx], al; add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x080d3669: dec esi; push cs; or al, 0x43; ret; 
0x080c8a81: dec esi; push cs; push eax; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x080d576a: dec esi; push cs; push eax; add eax, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x080d6125: dec esi; push cs; pushal; add al, byte ptr [eax + 0x43140e0a]; ret; 
0x080cdaed: dec esi; push cs; pushal; add al, byte ptr [edi + 0x41140e0a]; ret; 
0x080c7ea9: dec esi; push cs; xor byte ptr [ebp + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c9501: dec esi; push cs; xor byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080c803d: dec esi; push cs; xor byte ptr [ecx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cfcb1: dec esi; push cs; xor byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080cf3dd: dec esi; push cs; xor byte ptr [edi + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080ce1ed: dec esi; push cs; xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080c63c5: dec esi; push cs; xor byte ptr [edx], al; mov esp, 0x41140e0a; ret; 
0x080c0c83: dec esi; ret 0x474c; 
0x08073b84: dec esi; ret; 
0x08055e42: dec esi; sbb al, 0x89; ret 0x6074; 
0x0806f62c: dec esi; std; inc dword ptr [ecx]; iretd; jmp edi; 
0x0805dfb1: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080d41b4: dec esp; add byte ptr [eax], al; add byte ptr [eax + 0x640000f8], ah; iretd; cld; jmp dword ptr [esi]; 
0x080a880b: dec esp; add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x080c958d: dec esp; add byte ptr [eax], al; and byte ptr [ecx - 7], al; jmp edi; 
0x0809fe90: dec esp; add byte ptr [ebx + eax*4], 0xc0; add dword ptr [ebp + 0x390475c9], eax; ret; 
0x080c29f7: dec esp; add ch, byte ptr [si + 0x6d]; pop ebx; ret 0x6f9; 
0x08087e99: dec esp; add dword ptr [eax], eax; add bh, al; ret 0xb314; 
0x0807c7d3: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08097bad: dec esp; add ebx, dword ptr [esp + 0x3c]; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x0809d530: dec esp; and al, 0x10; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0806ca5f: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806c927: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08053e0c: dec esp; and al, 0x14; mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x0806c626: dec esp; and al, 0x14; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x080934bf: dec esp; and al, 0x14; mov eax, 0x127; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806ead0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080935e3: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a8bf8: dec esp; and al, 0x18; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x0809e6cf: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e96f: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea53: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a1309: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a1400: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a4758: dec esp; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x0806c9b4: dec esp; and al, 0x20; call dword ptr gs:[0x10]; 
0x0806c9ef: dec esp; and al, 0x20; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08093413: dec esp; and al, 0x24; call dword ptr gs:[0x10]; 
0x0805a552: dec esp; and al, 0x24; mov dword ptr [esp + 0x1c], edx; call eax; 
0x08093450: dec esp; and al, 0x24; mov eax, 0x127; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0809bf7e: dec esp; and al, 0x24; mov eax, dword ptr [esp + 0x20]; call 0x53a20; add esp, 0x1c; ret; 
0x0806cc5e: dec esp; and al, 0x28; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0806cd9d: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x080499b0: dec esp; and al, 0xc; jmp esi; 
0x0806d6f7: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a4986: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d976: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0806cb47: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0805a506: dec esp; and al, 4; call eax; 
0x0806d943: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806cae6: dec esp; and al, 8; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbb6: dec esp; and al, 8; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x08079011: dec esp; call edi; 
0x0807423e: dec esp; call esi; 
0x080d00f4: dec esp; cli; sti; call dword ptr [ebp]; 
0x080c7584: dec esp; fdivp st(0); call dword ptr [edx]; 
0x0807fce2: dec esp; idiv edi; call dword ptr [ecx - 1]; 
0x0807eb80: dec esp; idiv edi; call dword ptr [edx + 0x56]; 
0x0808a281: dec esp; idiv edi; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x0807f19d: dec esp; idiv edi; dec dword ptr [edi]; xchg eax, esp; ret 0xff52; 
0x08089847: dec esp; idiv edi; inc ecx; clc; add ch, byte ptr [ecx]; ret 0x858b; 
0x0807e216: dec esp; idiv edi; inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x08078f2c: dec esp; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0806fe06: dec esp; mov edi, 0x940f080d; ret 0x1089; 
0x0807af19: dec esp; nop; and al, 0x83; ret 0x3901; 
0x080c4b99: dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e2d: dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d3def: dec esp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080d30ce: dec esp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080c4f7e: dec esp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080ccaaa: dec esp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x080d26be: dec esp; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080cecde: dec esp; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x080ccb05: dec esp; or eax, dword ptr [edx]; push edi; push cs; adc al, 0x41; ret; 
0x080c7756: dec esp; or ebp, dword ptr [eax + 0xa]; ret; 
0x080ca6d7: dec esp; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8d4b: dec esp; or edx, dword ptr [eax + 0xe]; or al, 0x43; ret; 
0x080c7702: dec esp; or esp, dword ptr [ebp + 0xa]; ret; 
0x080d2b3b: dec esp; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0804aee4: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a87f1: dec esp; pop esi; pop edi; ret; 
0x080c4ca2: dec esp; push cs; adc al, 0x41; ret; 
0x080c8feb: dec esp; push cs; adc byte ptr [ebx + 0xa7e0204], al; ret; 
0x080d0790: dec esp; push cs; and byte ptr [edi + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080d60d3: dec esp; push cs; inc eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080d55a4: dec esp; push cs; jo 0x8d5ef; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cee3c: dec esp; push cs; mov al, byte ptr [0xe0a6803]; adc al, 0x41; ret; 
0x080d45ed: dec esp; push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x71; ret; 
0x080c6376: dec esp; push cs; pushal; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c6dee: dec esp; push cs; xor byte ptr [eax + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d5e11: dec esp; push cs; xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080d2fe3: dec esp; push cs; xor byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d2f48: dec esp; push cs; xor byte ptr [ebx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080cfa0e: dec esp; push cs; xor byte ptr [ecx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080cde40: dec esp; push cs; xor byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c6e44: dec esp; push cs; xor byte ptr [edi + 0xe], ch; adc al, 0x41; ret; 
0x080cfe0d: dec esp; push cs; xor byte ptr [esi + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080738be: dec esp; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0807900d: dec esp; push dword ptr [esp + 0x4c]; call edi; 
0x0807423a: dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x08078f28: dec esp; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080a2b94: dec esp; ret 0x850c; 
0x080a8c16: dec esp; ret; 
0x080a48c0: dec esp; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x3b7cefba], cl; adc al, 0x5b; pop esi; ret; 
0x08096061: dec esp; test dword ptr [ebx + eax*4], edx; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0809fa88: dec esp; xchg eax, ebx; add al, 0x83; ret 0x8501; 
0x08098b07: div bh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08072a0f: div byte ptr [ebp - 0x1b]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0809d6d9: div byte ptr [esp + eax*2 - 0x75]; push es; cmp eax, 0x31; jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x08048749: div dh; call dword ptr [eax - 0x73]; 
0x08098b05: div dword ptr [esi + esi*8 - 9]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080c71cc: fadd dword ptr [eax]; add byte ptr [eax], al; mov eax, 0x2c000028; aam 0xf8; call dword ptr [eax]; 
0x08057097: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0809be26: fadd dword ptr [ecx - 2]; call dword ptr [eax + 0x6a]; 
0x0809bc72: fadd dword ptr [ecx - 2]; call dword ptr [eax - 0x73]; 
0x0809f323: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x080cbef8: fadd dword ptr [edx - 6]; jmp dword ptr [ebp]; 
0x0806fcae: fadd qword ptr [eax + eax]; add byte ptr [ebx + 0x9886], cl; add byte ptr [ebp - 0x74dd8b40], al; push eax; add al, 0xf6; ret 0x8902; 
0x080a1722: fadd qword ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08072c1f: fadd qword ptr [ebx - 0x7c72f33c]; and byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x080a2558: fadd st(7); ret 0xbf4c; 
0x080710cc: fadd st(7); ret 0xffe0; 
0x0805146d: fcmovb st(0), st(1); cli; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x08092932: fcmovb st(0), st(3); std; dec dword ptr [ebp - 0x1d0f37d]; call dword ptr [eax - 0x73]; 
0x080ab3fd: fcmovnb st(0), st(7); ret; 
0x080504a6: fcom qword ptr [esi - 1]; jae 0x84af; push ebp; push ecx; push edi; call dword ptr [edi + 0xc]; 
0x0806f49e: fcomp dword ptr [ebx + 0x5e]; pop edi; jmp eax; 
0x08054403: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x08093bcb: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0808312e: fcomp dword ptr [ebx + 0x5e]; ret; 
0x080d62f0: fcomp dword ptr [ecx]; add dword ptr [eax], eax; pop esp; inc edi; std; jmp dword ptr [edi]; 
0x0806a708: fcomp dword ptr [edi + 0x5b]; ret; 
0x080c2a15: fcomp dword ptr [edx + 0x21]; ret; 
0x0809dd09: fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x080a0154: fcomp dword ptr [esi + 0x5f]; ret; 
0x080c0c80: fcomp qword ptr [edi - 0x4a]; dec esi; ret 0x474c; 
0x080a46c0: fcos; dec dword ptr [ecx - 0x3b7cf7ba]; and al, 0x5b; pop esi; ret; 
0x080d00f0: fdiv dword ptr [edi - 0x5b40000]; sti; call dword ptr [ebp]; 
0x080a6bac: fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x080cbef4: fdiv qword ptr [ebp]; add al, bl; inc edx; cli; jmp dword ptr [ebp]; 
0x080c7af4: fdiv qword ptr [ecx]; add byte ptr [eax], al; pop eax; out 0xf8, al; jmp dword ptr [edx]; 
0x080c7ff4: fdiv qword ptr [esi]; add byte ptr [eax], al; sbb al, dh; clc; call dword ptr [edi]; 
0x0805e724: fdiv st(0), st(0); dec dword ptr [ebp - 0x726ff6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080ac3b0: fdiv st(1), st(0); idiv bh; iretd; stc; idiv bh; ret 0xf6f9; 
0x080ce415: fdiv st(2), st(0); call dword ptr [edi]; 
0x080c2062: fdiv st(2); scasd eax, dword ptr es:[edi]; daa; push esp; syscall; 
0x080cc5e8: fdiv st(2); std; jmp dword ptr [ebx]; 
0x080c44a9: fdiv st(4), st(0); call dword ptr [eax - 0x24]; 
0x080c44ad: fdiv st(4), st(0); call dword ptr [eax - 0x24]; cld; lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c449d: fdiv st(4), st(0); call eax; 
0x080c44b9: fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c44e1: fdiv st(4), st(0); jmp eax; 
0x080c44b1: fdiv st(4), st(0); lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c44f9: fdiv st(4), st(0); push eax; fdiv st(4), st(0); jmp eax; 
0x080c7585: fdivp st(0); call dword ptr [edx]; 
0x0805e6e5: fdivp st(0); dec dword ptr [ebp - 0x7213f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e6eb: fdivp st(0); inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0809ba18: fdivp st(2); jmp dword ptr [esi - 0x70]; 
0x08092222: fdivp st(3); inc dword ptr [ecx + 0x47ddbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080c44e5: fdivp st(4); jmp eax; 
0x080c4505: fdivp st(4); push eax; fdiv st(4), st(0); jmp eax; 
0x080c44f5: fdivp st(4); push eax; fdiv st(4), st(0); push eax; fdiv st(4), st(0); jmp eax; 
0x08090e63: fdivp st(5); jmp dword ptr [esi - 0x70]; 
0x0805de71: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0805c65f: fdivr dword ptr [ecx]; ret 0x870f; 
0x080d04f4: fdivr qword ptr [ebx - 0x680000]; sti; call dword ptr [ecx + 1]; 
0x080c72b1: fdivr st(0); jmp dword ptr [edi]; 
0x0807bf66: fdivr st(4); dec dword ptr [ebp - 0x295bb7d]; call dword ptr [eax - 0x73]; 
0x0807bf85: fdivr st(4); jmp dword ptr [esi - 0x70]; 
0x080bffd5: fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x08093830: fdivr st(5); jmp dword ptr [esi - 0x70]; 
0x0805ba5a: fdivr st(7); jmp dword ptr [ebp - 0x7d]; 
0x0808ec17: fdivr st(7); jne 0x46bff; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0806ac80: fdivr st(7); pop ebx; ret; 
0x0806af2e: fdivr st(7); pop esi; pop ebx; ret; 
0x0808eaa1: ffreep st(7); ret 0xafc0; 
0x08084e45: fiadd dword ptr [ebx + 0x5d8b08ec]; mov word ptr [ecx - 0xb76b], cs; call dword ptr [ecx + 0x57]; 
0x0809bd60: fiadd dword ptr [ebx - 0x7274df3c]; mov esp, 0x29fffffd; ret 0xbd83; 
0x08061d53: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x0806b3e1: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x080d271d: fiadd word ptr [eax]; add byte ptr [eax], al; xchg eax, ebx; cld; call dword ptr [ebx + 4]; 
0x08053e87: ficomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080a4561: ficomp word ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x080c2862: ficomp word ptr [edx - 0x19]; cmc; mov ch, 0xab; ret; 
0x0809ce7e: fidiv dword ptr [ebp - 0x11]; mov ecx, dword ptr [ecx + 4]; test ecx, ecx; jne 0x54e60; pop ebx; ret; 
0x0805c172: fidiv dword ptr [ebp - 0x25]; pop ebx; pop esi; pop edi; ret; 
0x080710a2: fidiv dword ptr [esi - 3]; inc dword ptr [ecx + 0x68f5ac3]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0809b8aa: fidiv dword ptr [esp + ecx*2 - 0x77]; ret 0xde89; 
0x0808548d: fidivr dword ptr [ecx]; ret 0xee7f; 
0x0805804b: fidivr dword ptr [ecx]; retf 0xa75; add esp, 8; pop ebx; ret; 
0x08090a7f: fidivr word ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x08090a2d: fidivr word ptr [ecx]; ret 0x830f; 
0x0806d9ae: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080d28a1: fild word ptr [eax]; add ah, bl; xchg eax, edi; cld; call edx; 
0x080abe60: fild word ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0808f9f9: fild word ptr [ecx]; ret 0xc501; 
0x0805a7f9: fimul dword ptr [ebx - 0x153ef7b9]; add al, 0x83; ret 0x8501; 
0x0806eb01: fimul dword ptr [ebx - 0x47fbdba4]; je 0x26b09; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08093301: fimul dword ptr [ebx - 0x47fbdba4]; jp 0x4b309; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806d941: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0805e36c: fimul dword ptr [ecx + 0x2918245c]; ret 0x6a52; 
0x08053e64: fimul dword ptr [ecx + 0x5f5e5bc8]; pop ebp; ret; 
0x08067e81: fimul word ptr [ecx + 0x5f5e5bf0]; ret; 
0x0805c174: fistp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0809c214: fistp word ptr [ebx - 0x77]; cli; pop esi; pop edi; pop ebp; ret; 
0x0807362c: fisttp dword ptr [ebp - 0x2a3f77d]; call dword ptr [eax - 0x73]; 
0x0807535b: fisttp dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x080a8bf6: fisttp dword ptr [ebx - 0x76e7dbb4]; or al, 0x82; add esp, 8; pop ebx; ret; 
0x0806dd64: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x08093bc9: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0807bc26: fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x08053de0: fisttp dword ptr [edi]; mov byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x94b5], cl; add bh, al; ret 0xafc0; 
0x0804cbca: fisttp dword ptr [edi]; test byte ptr [ebx - 0x76000002], cl; ret; 
0x0804f34b: fisttp dword ptr [edi]; test ebp, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76d7dbb4], cl; ret 0xdaf7; 
0x080c9571: fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x080a6c7b: fisttp word ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x0805c3dd: fisttp word ptr [edi]; xchg eax, edi; ret 0x50e9; 
0x0807a6bc: fisttp word ptr [edi]; xchg eax, esp; ret; 
0x0805eccd: fisub dword ptr [esi + 0xf]; jg 0x16d14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805f24d: fisub dword ptr [esi + 0xf]; jg 0x17294; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806278c: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0809847c: fisub word ptr [ebx]; std; call dword ptr [eax - 0x18]; 
0x0806254c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0804a4e3: fisubr dword ptr [ecx]; ret 0x4a8d; 
0x08091743: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0809f782: fld dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0809fc52: fld dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0807e2b6: fld dword ptr [ebx - 0x8bf43]; call dword ptr [eax]; 
0x080909b9: fld dword ptr [ecx]; ret; 
0x08062426: fld dword ptr [ecx]; retf 0xc801; call 0x780; add ebx, 0x4ba78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0806fdca: fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x080a0d71: fld dword ptr [edi - 2]; call dword ptr [esi + 0x50]; 
0x0809844b: fld dword ptr [edi - 2]; dec dword ptr [ebp - 0x1c90b79]; dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x080994ad: fld dword ptr [edi - 2]; dec dword ptr [edi]; inc esp; ret 0x578b; 
0x080a1341: fld dword ptr [edi - 2]; inc dword ptr [ecx + 0xc9]; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x0806cccc: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cde2: fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806cd42: fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806cd98: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08057ff1: fld qword ptr [edx - 2]; call dword ptr [eax + 0x6a]; 
0x080c0cc1: fld qword ptr [esi + 0x32]; mov bh, 0xb4; mov edi, dword ptr [edx]; ret; 
0x080a6baa: fld1; fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x0807bf40: fldcw word ptr [ecx - 3]; call dword ptr [eax - 0x18]; 
0x080677a6: fldenv [esi + 0xf]; je 0x1f7fa; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08067dd5: fldenv [esi + 0xf]; je 0x1fe24; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0806281c: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08067203: fldenv [esi + 0xf]; xlatb; ret; 
0x080d56f0: fmul dword ptr [0x167c0001]; std; jmp dword ptr [edx + 8]; 
0x08048758: fmul dword ptr [eax - 0x17aff7fc]; add al, 0; add ah, dh; mov ebx, dword ptr [esp]; ret; 
0x0808e5a8: fmul dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x080630dc: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x08053f64: fmul dword ptr [ebp - 0x4474ff8a]; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080719c6: fmul dword ptr [ebp - 0x687af7d]; call dword ptr [eax - 0x77]; 
0x080a1307: fmul dword ptr [ebx + 0x651c244c]; xor ecx, dword ptr [0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080982c4: fmul dword ptr [ecx + 0x24448bc6]; sbb bh, al; ret; 
0x08090a7d: fmul dword ptr [ecx + 0xfd839de]; inc edx; ret; 
0x0809f10d: fmul dword ptr [ecx - 0x76080836]; ret; 
0x08091f48: fmul dword ptr [edi]; inc edx; ret 0xc3f6; 
0x0805de73: fmul dword ptr [edi]; inc edx; ret; 
0x08094099: fmul qword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x08092270: fmul qword ptr [ebp + edi*8 + 0x18c483ff]; pop ebx; ret; 
0x0806e78e: fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x0806e653: fmul qword ptr [ebp - 0x2b60f7d]; call dword ptr [eax - 0x18]; 
0x0809be50: fmul qword ptr [ebx - 0x23b63]; dec dword ptr [ebp - 0x1be277d]; call dword ptr [eax - 0x73]; 
0x080c087c: fmul qword ptr [esi - 6]; mov eax, dword ptr [0xd11e901c]; stc; jnp 0x78840; ret; 
0x080d13f0: fmul st(2); add byte ptr [eax], al; or al, 0x1f; cld; jmp dword ptr [eax]; 
0x08062093: fnstcw word ptr [eax]; jne 0x1a2c0; pop ebx; ret; 
0x080626d1: fnstcw word ptr [eax]; jne 0x1ae50; pop ebx; ret; 
0x0809c052: fnstenv [ebp - 0x1d]; mov eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x08053aef: fnstenv [esi + 0x16]; sub esp, 4; push dword ptr [esp + 0x3c]; push edi; push ebp; call dword ptr [eax + 0x20]; 
0x0805e72a: fprem; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0807bf47: frndint; dec dword ptr [ebp - 0x295bb7d]; call dword ptr [eax - 0x73]; 
0x080d4a15: frndint; jmp dword ptr [edi + 7]; 
0x080a131b: frndint; jmp dword ptr [esi - 0x70]; 
0x080625ec: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08085a33: fst dword ptr [edx + 0x458bfffe]; mov word ptr [ebx - 0xc763], cs; call dword ptr [ecx + 0x6a]; 
0x080c09a7: fstp dword ptr [ebx + 0x4a315a58]; ret 0x1b49; 
0x08062e65: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1ae70; neg eax; ret; 
0x080bf60c: fstp dword ptr [edx]; push ds; ret; 
0x080a6bb0: fstp st(0); add esp, 0x20; ret; 
0x080c0d20: fstp st(0); ret 0xde5d; 
0x08092227: fstp xword ptr [ebp + 4]; add byte ptr [ebx - 0x39], dl; ret; 
0x0809ce31: fstp xword ptr [edx - 0x34fa0006]; rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x08059763: fsub dword ptr [ecx]; ret 0x5489; 
0x08059f49: fsub dword ptr [ecx]; ret 0xd539; 
0x08059e62: fsub dword ptr [ecx]; ror byte ptr [ebx + 0x1242454], 1; ret 0xfa81; 
0x080628bc: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806610c: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x080caaf4: fsub qword ptr [ecx]; add al, ch; push cs; cli; call dword ptr [ebx + 1]; 
0x08049067: fsub qword ptr [edx]; std; call dword ptr [eax - 0x18]; 
0x08090a2b: fsubr dword ptr [ecx]; fidivr word ptr [ecx]; ret 0x830f; 
0x0808fb89: fsubr dword ptr [ecx]; rol cl, 1; clc; add al, byte ptr [ebx + 0x5e5b01e8]; ret; 
0x080591ed: fsubr dword ptr [edi]; std; call dword ptr [eax - 1]; 
0x08090095: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push eax; push esi; push ecx; call edi; 
0x0805f0cf: fucomi st(3); add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0809d525: fxch st(0), st(2); add eax, dword ptr [eax]; sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x080ca58d: fyl2xp1; call edx; 
0x080abe85: fyl2xp1; jmp dword ptr [esi - 0x70]; 
0x080d3d35: hlt; add byte ptr [eax], al; js 0x8bcff; cld; call dword ptr [edi]; 
0x080d3db5: hlt; add byte ptr [eax], al; sbb dh, al; cld; jmp esp; 
0x0808fb7b: hlt; add eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x080c48d1: hlt; cld; call eax; 
0x080c48b5: hlt; cld; jmp dword ptr [eax - 0xc]; 
0x080c48b9: hlt; cld; jmp dword ptr [eax - 0xd]; 
0x080c48cd: hlt; cld; ljmp [ebx - 0xc]; cld; call eax; 
0x080c831c: hlt; cmc; clc; jmp dword ptr [ecx]; 
0x08075e58: hlt; cmp ebp, edi; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x080c4cec: hlt; dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x08095607: hlt; idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x080cb60c: hlt; insb byte ptr es:[edi], dx; add byte ptr [eax], al; pushal; and edi, edx; jmp dword ptr [esi]; 
0x0805ee37: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e8ee: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080563db: hlt; mov eax, dword ptr [esp + 8]; add eax, ebx; pop ebx; ret; 
0x08048762: hlt; mov ebx, dword ptr [esp]; ret; 
0x080a8e46: hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8ed9: hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x08049d1c: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809138a: hlt; pop edi; ret; 
0x080cc69c: hlt; push ecx; cli; call dword ptr [ecx]; 
0x08070139: hlt; push edx; std; call dword ptr [eax - 0x73]; 
0x080ce16c: hlt; retf; cli; call dword ptr [edx]; 
0x080ca52c: hlt; salc; stc; call dword ptr [ebx]; 
0x080cfc95: hlt; sti; call dword ptr [edx + 1]; 
0x080c0ee3: hlt; stosb byte ptr es:[edi], al; cli; inc edx; ret 0xac65; 
0x08061dd7: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0806b323: hlt; xor eax, eax; ret; 
0x080792b2: idiv ah; inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080c8345: idiv al; call dword ptr [edi]; 
0x080c83d1: idiv al; call dword ptr [edx]; 
0x080c8331: idiv al; jmp dword ptr [ecx]; 
0x08070d1c: idiv bh; call dword ptr [eax - 0x73]; 
0x080ac3b2: idiv bh; iretd; stc; idiv bh; ret 0xf6f9; 
0x080ac3b6: idiv bh; ret 0xf6f9; 
0x080cfd45: idiv bl; jmp dword ptr [edi]; 
0x080cfdd5: idiv bl; jmp esi; 
0x0806eb6b: idiv byte ptr [ecx + 0x80]; cmp eax, edx; jne 0x26b81; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080cff01: idiv ebx; jmp dword ptr [ebp]; 
0x080bdd41: idiv ebx; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdd41: idiv ebx; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bdbd9: idiv ebx; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; call eax; 
0x08080036: idiv edi; call dword ptr [eax + 0x50]; 
0x0807fe04: idiv edi; call dword ptr [eax + 0x51]; 
0x08088c80: idiv edi; call dword ptr [eax + 0x52]; 
0x0807fe6d: idiv edi; call dword ptr [eax + 0x53]; 
0x0807f72a: idiv edi; call dword ptr [eax + 0x56]; 
0x0807ee69: idiv edi; call dword ptr [eax + 0x57]; 
0x08088151: idiv edi; call dword ptr [eax + 1]; 
0x0807e433: idiv edi; call dword ptr [eax - 0x18]; 
0x08088d06: idiv edi; call dword ptr [eax - 0x73]; 
0x0808a6a8: idiv edi; call dword ptr [eax - 1]; 
0x0807e1cd: idiv edi; call dword ptr [eax]; 
0x0807f1a8: idiv edi; call dword ptr [ebx + 0x50]; 
0x0807ead3: idiv edi; call dword ptr [ebx + 0xf]; 
0x0807f9f4: idiv edi; call dword ptr [ebx - 0x77]; 
0x0807dd22: idiv edi; call dword ptr [ebx - 0x7d]; 
0x0807dd22: idiv edi; call dword ptr [ebx - 0x7d]; ret; 
0x0807e62d: idiv edi; call dword ptr [ebx - 1]; 
0x0807db4d: idiv edi; call dword ptr [ebx]; 
0x08080027: idiv edi; call dword ptr [ecx + 0x51]; 
0x0807f9bb: idiv edi; call dword ptr [ecx + 0x56]; 
0x0807e6c4: idiv edi; call dword ptr [ecx + 0x57]; 
0x0807f420: idiv edi; call dword ptr [ecx + 0x6a]; 
0x0807fca3: idiv edi; call dword ptr [ecx - 0x77]; 
0x0807fce3: idiv edi; call dword ptr [ecx - 1]; 
0x0807e988: idiv edi; call dword ptr [edx + 0x51]; 
0x08080058: idiv edi; call dword ptr [edx + 0x52]; 
0x0807eb81: idiv edi; call dword ptr [edx + 0x56]; 
0x0807f3cd: idiv edi; call dword ptr [edx + 0x6a]; 
0x08088dfe: idiv edi; call dword ptr [edx - 0x18]; 
0x08088ca8: idiv edi; call dword ptr [edx - 0x77]; 
0x08088d0d: idiv edi; call dword ptr [esi + 0x50]; 
0x08088d9f: idiv edi; call dword ptr [esi + 0x52]; 
0x0807e90f: idiv edi; call dword ptr [esi + 0x6a]; 
0x0807dfbe: idiv edi; call dword ptr [esi - 0x18]; 
0x0807f1dd: idiv edi; call dword ptr [esi - 0x77]; 
0x080896bb: idiv edi; call dword ptr [esi - 1]; 
0x08088141: idiv edi; dec dword ptr [ebp + 0x48d873c]; mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x8a343], cl; call dword ptr [eax + 1]; 
0x08081a47: idiv edi; dec dword ptr [ebp + 0xb6]; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08095608: idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x0807ee94: idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0807e86b: idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x08087f90: idiv edi; dec dword ptr [ebx - 0x4276f3bb]; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8df73]; jmp dword ptr [ebp - 0x75]; 
0x080a9e78: idiv edi; dec dword ptr [ebx - 0x76e3dbb4]; ret 0xec83; 
0x0807f95d: idiv edi; dec dword ptr [ebx - 0x88f4b]; ljmp [ecx]; ret; 
0x0807dd1c: idiv edi; dec dword ptr [ebx - 0x89b73]; call dword ptr [ebx - 0x7d]; 
0x0807dd1c: idiv edi; dec dword ptr [ebx - 0x89b73]; call dword ptr [ebx - 0x7d]; ret; 
0x08088204: idiv edi; dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; 
0x08088204: idiv edi; dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; ret; 
0x08085099: idiv edi; dec dword ptr [ebx - 0xdb7b]; dec dword ptr [ecx - 0xcb7b]; dec dword ptr [ebx - 0xb77b]; call dword ptr [ecx + 0x29]; 
0x0807fc9d: idiv edi; dec dword ptr [ecx - 0x8634b]; call dword ptr [ecx - 0x77]; 
0x0807f3c7: idiv edi; dec dword ptr [ecx - 0x87f6b]; call dword ptr [edx + 0x6a]; 
0x0807f41a: idiv edi; dec dword ptr [ecx - 0x87f73]; call dword ptr [ecx + 0x6a]; 
0x0807e9dd: idiv edi; dec dword ptr [ecx - 0x87f73]; call dword ptr [esi + 0x6a]; 
0x0807e909: idiv edi; dec dword ptr [ecx - 0x8836b]; call dword ptr [esi + 0x6a]; 
0x0807f7f7: idiv edi; dec dword ptr [ecx - 0x88373]; call dword ptr [ecx + 0x6a]; 
0x08089c6a: idiv edi; dec dword ptr [ecx - 0x88f6b]; call dword ptr [edx - 0x18]; 
0x0808a282: idiv edi; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x08089979: idiv edi; dec dword ptr [ecx - 0x88f73]; call dword ptr [ecx + 0x6a]; 
0x0807f9b5: idiv edi; dec dword ptr [ecx - 0x8936b]; call dword ptr [ecx + 0x56]; 
0x0808a0c1: idiv edi; dec dword ptr [ecx - 0x89773]; call dword ptr [ecx + 0x6a]; 
0x08089920: idiv edi; dec dword ptr [ecx - 0x8a373]; call dword ptr [edx + 0x6a]; 
0x0807fdfe: idiv edi; dec dword ptr [ecx - 0x8a76b]; call dword ptr [eax + 0x51]; 
0x0807e6be: idiv edi; dec dword ptr [ecx - 0x8a76b]; call dword ptr [ecx + 0x57]; 
0x0808a27c: idiv edi; dec dword ptr [ecx - 0x8b373]; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x0807fc97: idiv edi; dec dword ptr [ecx - 0x8bb6b]; dec dword ptr [ecx - 0x8634b]; call dword ptr [ecx - 0x77]; 
0x08089853: idiv edi; dec dword ptr [ecx - 0x8bb6b]; dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x08087f99: idiv edi; dec dword ptr [ecx - 0x8df73]; jmp dword ptr [ebp - 0x75]; 
0x08089859: idiv edi; dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x0807f19e: idiv edi; dec dword ptr [edi]; xchg eax, esp; ret 0xff52; 
0x080894bb: idiv edi; inc dword ptr [eax - 0x7410f299]; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x57]; 
0x0807db43: idiv edi; inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08088cfc: idiv edi; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x88f6b], cl; call dword ptr [eax - 0x73]; 
0x0808903b: idiv edi; inc dword ptr [ebp - 0x7d7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x0807e2d7: idiv edi; inc dword ptr [ebx - 0x2e7cfe08]; inc dword ptr [eax - 0x8c043]; jmp dword ptr [eax]; 
0x08089599: idiv edi; inc dword ptr [ebx - 0x2e7cfe08]; inc dword ptr [eax - 0x8cc43]; jmp dword ptr [eax]; 
0x08088df5: idiv edi; inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x0808956c: idiv edi; inc dword ptr [ecx]; retf 0x8d8b; push 0x29fffff7; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x08089848: idiv edi; inc ecx; clc; add ch, byte ptr [ecx]; ret 0x858b; 
0x0808a397: idiv edi; inc esi; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0807e217: idiv edi; inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x080ac4aa: idiv edi; int1; cmp al, 0xf7; jmp dword ptr [esi + 0x3d]; 
0x0807e21d: idiv edi; jmp dword ptr [eax]; 
0x08087f9f: idiv edi; jmp dword ptr [ebp - 0x75]; 
0x0807e7bb: idiv edi; jmp dword ptr [esi - 0x70]; 
0x0807e648: idiv edi; ljmp [ecx]; ret; 
0x08089574: idiv edi; ljmp [ecx]; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x080ac55e: idiv edi; out 0x3f, al; idiv edi; ret 0xf73f; 
0x0807fa9d: idiv edi; push dword ptr [ecx]; test dh, 0x85; aas; idiv edi; jmp dword ptr [eax]; 
0x080ac562: idiv edi; ret 0xf73f; 
0x080d4dc5: idiv esp; call dword ptr [esi]; 
0x08061df7: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08063818: imul byte ptr [ecx]; ret 0x280f; 
0x08061d88: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08063948: imul dword ptr [ecx]; ret 0x280f; 
0x080cb475: imul eax, dword ptr [eax], 0; js 0x8349c; cli; jmp dword ptr [esi]; 
0x080cb275: imul eax, dword ptr [eax], 0xfa1c2800; jmp dword ptr [esi]; 
0x0806c9c4: imul eax, dword ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x08071896: imul eax, dword ptr [edi - 0x7f74fffa], -0x64; pop ds; add byte ptr [eax], al; ret; 
0x08082b26: imul eax, dword ptr [esi], 0; add byte ptr [ebp - 0x1da017d], cl; call dword ptr [eax - 0x73]; 
0x0804e18e: imul eax, edi, 0xfffff8c2; jmp dword ptr [ebp - 0x75]; 
0x080942cd: imul ebp, dword ptr [edi], -2; jmp dword ptr [ebp - 0x75]; 
0x080bdb39: imul ebp, dword ptr [esi + 0x65], 0x682e; das; or al, 0xfc; call dword ptr [eax - 8]; 
0x080bdb39: imul ebp, dword ptr [esi + 0x65], 0x682e; das; or al, 0xfc; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x08097ba9: imul ebx, dword ptr [esp + 0x38], 0x4c; add ebx, dword ptr [esp + 0x3c]; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x080c8293: imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080c78c2: imul ecx, dword ptr [edx], 0xe; adc al, 0x43; ret; 
0x080c7de6: imul ecx, dword ptr [edx], 0xe; or al, 0x41; ret; 
0x080cf2a7: imul ecx, dword ptr [esi], 0x14; inc esi; ret; 
0x080d37a3: imul ecx, dword ptr [esi], 0xc0e4110; ret; 
0x080c9a19: imul ecx, dword ptr [esi], 4; ret; 
0x08071884: imul edi, ebp, 0x10c483ff; pop ebx; pop esi; pop edi; ret; 
0x0807183d: imul edi, ebp, 0x18c483ff; pop ebx; ret; 
0x0807bf7f: imul edi, ebp, 0xc8e850ff; fdivr st(4); jmp dword ptr [esi - 0x70]; 
0x080984c4: imul edi, edx, -1; dec dword ptr [ebx + 0x20497]; add dh, dh; ret 0x7508; 
0x0806bb71: imul edi, esi, -1; jmp dword ptr [esi - 0x70]; 
0x080576a0: imul edx, dword ptr [ebx + eax*4], -0x3c; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0809ce96: imul edx, ecx, 3; add bh, al; ret 0xa068; 
0x0809e999: imul esi, dword ptr [esi - 0x137cfffd], 0x24748b0c; sbb byte ptr [ebp - 0x1b9bf7d], cl; call dword ptr [eax + 0x56]; 
0x080c48d0: imul esi, esp, -4; call eax; 
0x080c48cc: imul esi, esp, -4; ljmp [ebx - 0xc]; cld; call eax; 
0x080773e3: imul esp, dword ptr [edi*8 + 0x245c8bff], 0xcc838d28; pop ebp; std; call dword ptr [eax - 0x73]; 
0x080d163c: in al, 0x20; cld; call edi; 
0x080cb73c: in al, 0x24; cli; call dword ptr [edx + 1]; 
0x08057335: in al, 0x29; std; call dword ptr [eax - 0x18]; 
0x080a294a: in al, 0x81; ret; 
0x0808e289: in al, 0x83; in al, dx; add al, 0x53; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x08049683: in al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08093c68: in al, 0x83; ret 0x8401; 
0x0809f663: in al, 0x89; pop ebp; aam 0x39; ret 0x840f; 
0x080a2b0f: in al, 0x8d; and byte ptr [eax - 0x64], 0xfe; call dword ptr [eax - 0x18]; 
0x080cfefc: in al, 0xb5; add byte ptr [eax], al; xor bh, 0xfb; jmp dword ptr [ebp]; 
0x080c23ce: in al, 0xb7; push es; movsd dword ptr es:[edi], dword ptr [esi]; int1; dec ebx; ret 0x5803; 
0x0809ce3c: in al, 0xbe; or eax, 0x3a8008; jne 0x54e50; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x0808ebf9: in al, 0xc7; ret 0xafc0; 
0x080c48ad: in al, 0xfc; jmp dword ptr [eax - 0xd]; 
0x0808c519: in al, 0xff; dec dword ptr [ebp - 0x7cffd98c]; in al, dx; add al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x0807ff6b: in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0808ec1a: in al, 0xff; jne 0x46c2a; push esi; call dword ptr [eax + 0x2c]; 
0x0808ec3e: in al, 0xff; jne 0x46c4e; push esi; call dword ptr [eax + 0x2c]; 
0x0806bb48: in al, 6; add byte ptr [ebx - 0x38fbdbbc], cl; ret 0xb900; 
0x080487a9: in al, dx; adc al, 0x68; sub byte ptr [edi - 0x2f00f7f3], 0x83; les edx, ptr [eax]; leave; ret; 
0x0804f001: in al, dx; adc al, 0xc7; ret; 
0x080487f5: in al, dx; adc byte ptr [eax + 0x68], dl; sub byte ptr [edi - 0x2d00f7f3], 0x83; les edx, ptr [eax]; leave; ret; 
0x080a10bd: in al, dx; adc byte ptr [ebp - 0x165e67d], cl; call dword ptr [eax - 1]; 
0x0809d90d: in al, dx; adc byte ptr [ebp - 0x1ba937d], cl; call dword ptr [eax + 0x6a]; 
0x0804824e: in al, dx; adc byte ptr [ebp - 0x1bcbb7d], cl; call dword ptr [eax + 0x6a]; 
0x080aba8d: in al, dx; adc byte ptr [ebp - 0x2e5bf7d], cl; call dword ptr [eax - 1]; 
0x08079cdd: in al, dx; adc byte ptr [ebx - 0x76e7dbbc], cl; cmp dword ptr [eax + 0x19], 0; add byte ptr [ebp - 0x605bf7d], cl; call dword ptr [eax - 1]; 
0x080933e4: in al, dx; adc byte ptr [ebx - 0x9d7dbac], cl; ret 0x7540; 
0x0806c984: in al, dx; adc byte ptr [ebx - 0x9dbdbac], cl; ret 0x7540; 
0x0805ef38: in al, dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0807e10c: in al, dx; add al, 0x29; rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08093f94: in al, dx; add al, 0x29; ret 0x4503; 
0x0805288b: in al, dx; add al, 0x29; ret 0x5052; 
0x080573d7: in al, dx; add al, 0x29; ret 0x6a52; 
0x0805739a: in al, dx; add al, 0x31; ljmp [ecx]; ret 0x6a52; 
0x080a9201: in al, dx; add al, 0x50; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08050fde: in al, dx; add al, 0x50; push edx; push ebp; call ecx; 
0x0805348f: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x0806da28: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0805c7f1: in al, dx; add al, 0x51; push edx; push ebx; call eax; 
0x0808e28b: in al, dx; add al, 0x53; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0807e08c: in al, dx; add al, 0x53; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x0808856c: in al, dx; add al, 0x53; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x0808eb39: in al, dx; add al, 0x53; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x080ab461: in al, dx; add al, 0x55; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08082c8e: in al, dx; add al, 0x55; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x0805032f: in al, dx; add al, 0x56; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x0808b8bd: in al, dx; add al, 0x56; push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x0807e3e5: in al, dx; add al, 0x56; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08089e32: in al, dx; add al, 0x56; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0806d9e3: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x0806d9f7: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x0806da0a: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x080848fd: in al, dx; add al, 0x57; push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x08053be8: in al, dx; add al, 0x57; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebx + 0x38]; 
0x0807d9ed: in al, dx; add al, 0x57; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a59d1: in al, dx; add al, 0x57; push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x0808eac9: in al, dx; add al, 0x6a; adc bh, bh; je 0x46af4; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x0808ed71: in al, dx; add al, 0x6a; adc bh, bh; je 0x46d9c; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x080567ef: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x2c]; 
0x0809c9bd: in al, dx; add al, 0x6a; and byte ptr [eax - 0x73], dl; inc edx; sbb byte ptr [ecx - 0x2576b], cl; call dword ptr [eax - 0x18]; 
0x08079c37: in al, dx; add al, 0x83; ret 0x5201; 
0x080a24f2: in al, dx; add al, 0x83; ret; 
0x0805e369: in al, dx; add al, 0x89; fimul dword ptr [ecx + 0x2918245c]; ret 0x6a52; 
0x0808072a: in al, dx; add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x57]; 
0x080808ea: in al, dx; add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08082364: in al, dx; add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x08081e21: in al, dx; add al, 0x89; lea ebp, [ebx + edi*8 - 1]; dec dword ptr [ecx - 0x4976b]; call dword ptr [ecx + 0x6a]; 
0x0808c521: in al, dx; add al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x0807eb7c: in al, dx; add al, 0x89; xchg eax, ebp; dec esp; idiv edi; call dword ptr [edx + 0x56]; 
0x0807f493: in al, dx; add al, 0x89; xchg eax, ebp; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x08098fce: in al, dx; add al, 0x8b; je 0x50ff7; adc bh, al; ret 0xa9f0; 
0x08089164: in al, dx; add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x6a]; 
0x08088bf2: in al, dx; add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x0808d2be: in al, dx; add al, 0xc1; std; add dl, byte ptr [ebp + 0x50]; push esi; call dword ptr [ecx + 0x1c]; 
0x0809eb5e: in al, dx; add al, 0xc7; ret 0xfffc; 
0x0805cbd1: in al, dx; add al, 0xff; je 0x14bfa; xor byte ptr [esi + 0x53], dl; call eax; 
0x080a5861: in al, dx; add al, 0xff; je 0x5d88a; xor al, 0x57; push esi; call dword ptr [ebx]; 
0x08053af3: in al, dx; add al, 0xff; je 0xbb1c; cmp al, 0x57; push ebp; call dword ptr [eax + 0x20]; 
0x0808ec3a: in al, dx; add al, 0xff; jne 0x46c23; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x080896b6: in al, dx; add al, 0xff; mov ch, 0x3c; idiv edi; call dword ptr [esi - 1]; 
0x080aa05f: in al, dx; add al, 0xff; push dword ptr ss:[ebx + 4]; push ebp; call edi; 
0x080a924a: in al, dx; add al, 0xff; xor cl, byte ptr [ecx + 0x50102454]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0806cf60: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080c542d: in al, dx; add dword ptr [edx], ecx; ret; 
0x080a00bb: in al, dx; cld; jmp dword ptr [esi - 0x70]; 
0x080a14c2: in al, dx; cli; inc dword ptr [ecx + 0x38b3bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x0806c2f6: in al, dx; inc ebx; std; call dword ptr [eax - 0x18]; 
0x080d63e4: in al, dx; inc edi; std; jmp dword ptr [edx]; 
0x080c5444: in al, dx; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x08048b9e: in al, dx; jo 0xb68; ret 0; 
0x0805ec72: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080930a0: in al, dx; mov edx, 0xc483fffd; adc al, 0x5b; pop esi; ret; 
0x080500b9: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x080abdc0: in al, dx; or al, 0x50; call edx; 
0x08050d5c: in al, dx; or al, 0x53; call dword ptr [ebx + 0x10]; 
0x08055b80: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x08051c49: in al, dx; or al, 0x55; call dword ptr [ebp + 0x10]; 
0x0807926e: in al, dx; or al, 0x56; call 0x28270; mov ecx, dword ptr [ebp - 0x2c]; mov dword ptr [esp], ecx; call esi; 
0x08055e2b: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0804feca: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x08055afd: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x080544cb: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x08051108: in al, dx; or al, 0x56; call dword ptr [esi + 0x10]; 
0x0807b39c: in al, dx; or al, 0x56; call eax; 
0x08071900: in al, dx; or al, 0x57; call 0x28270; mov dword ptr [esp], esi; call edi; 
0x080a2355: in al, dx; or al, 0x83; ret; 
0x0808b1f8: in al, dx; or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x0808cd97: in al, dx; or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x0808cfc3: in al, dx; or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0808b0b5: in al, dx; or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x080a78a7: in al, dx; or al, 0x89; ret 0x74ff; 
0x08085d55: in al, dx; or al, 0x89; ret 0xc031; 
0x08057721: in al, dx; or al, 0x89; ret 0xf989; 
0x0809e99e: in al, dx; or al, 0x8b; je 0x569c7; sbb byte ptr [ebp - 0x1b9bf7d], cl; call dword ptr [eax + 0x56]; 
0x08055cef: in al, dx; or al, 0x8b; je 0xdd18; and bh, al; ret 0xafc0; 
0x0808870e: in al, dx; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x08088df9: in al, dx; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x08088ca3: in al, dx; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x0808847f: in al, dx; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x0807dd9a: in al, dx; or al, 0x8d; add dword ptr [eax + 0x26], -2; call dword ptr [eax - 0x18]; 
0x0804c6ad: in al, dx; or al, 0x8d; add dword ptr [eax - 1], -1; call dword ptr [eax - 0x75]; 
0x08049fee: in al, dx; or al, 0x8d; add esp, 0x23; std; call dword ptr [eax - 0x18]; 
0x08095dd4: in al, dx; or al, 0xba; add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x0805498a: in al, dx; or al, 0xc7; ret; 
0x08048c54: in al, dx; or al, 0xff; xor al, ch; ret; 
0x080710ad: in al, dx; or al, ch; cld; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0805c491: in al, dx; or bh, bh; je 0x144ba; and al, 0x56; call eax; 
0x0805c9a1: in al, dx; or bh, bh; je 0x149ca; and al, 0x53; call eax; 
0x0805d0a1: in al, dx; or bh, bh; je 0x150ca; xor al, 0x55; call eax; 
0x080a9161: in al, dx; or bh, bh; jne 0x61172; push ebx; call dword ptr [ebp + 8]; 
0x08056303: in al, dx; or byte ptr [eax + 0x53], dl; call dword ptr [esi + 0x18]; 
0x0806e782: in al, dx; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d845], cl; fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x0808e0e1: in al, dx; or byte ptr [ebp + 0x50142444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x08052e64: in al, dx; or byte ptr [ebp + 0x50242444], cl; push esi; call dword ptr [edi + 0x48]; 
0x08052ac7: in al, dx; or byte ptr [ebp + 0x50342444], cl; push esi; call dword ptr [edi + 0x48]; 
0x08050c78: in al, dx; or byte ptr [ebp + 0x503c2444], cl; push ebp; call dword ptr [ebx + 0x48]; 
0x080531d7: in al, dx; or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [edx + 0x48]; 
0x08055c31: in al, dx; or byte ptr [ebp + 0x55500159], cl; call dword ptr [esi + 0xc]; 
0x080a2ae7: in al, dx; or byte ptr [ebp - 0x1632f7d], cl; call dword ptr [eax + 0x6a]; 
0x0809e374: in al, dx; or byte ptr [ebp - 0x1ba117a], cl; call dword ptr [eax - 0x73]; 
0x0808fa92: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0807f9b0: in al, dx; or byte ptr [ebx - 0x88763], cl; dec dword ptr [ecx - 0x8936b]; call dword ptr [ecx + 0x56]; 
0x0807fdf9: in al, dx; or byte ptr [ebx - 0x88763], cl; dec dword ptr [ecx - 0x8a76b]; call dword ptr [eax + 0x51]; 
0x0807e6b9: in al, dx; or byte ptr [ebx - 0x88763], cl; dec dword ptr [ecx - 0x8a76b]; call dword ptr [ecx + 0x57]; 
0x08088c7b: in al, dx; or byte ptr [ebx - 0x89363], cl; call dword ptr [eax + 0x52]; 
0x0808a6a3: in al, dx; or byte ptr [ebx - 0x89363], cl; call dword ptr [eax - 1]; 
0x0805da47: in al, dx; or byte ptr [ebx - 0x9ebdba4], cl; ret; 
0x080c985a: in al, dx; or byte ptr [ecx + 0xe], al; lock or byte ptr [esi + ecx - 0x20], cl; or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x0807b60a: in al, dx; or byte ptr [ecx - 0x1bb73], cl; dec dword ptr [ecx - 0x1af6b]; call dword ptr [eax - 1]; 
0x0807fe68: in al, dx; or byte ptr [ecx - 0x88373], cl; call dword ptr [eax + 0x53]; 
0x0807b0ad: in al, dx; or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0804d696: in al, dx; or byte ptr [ecx], ch; ret 0x5052; 
0x08095187: in al, dx; or byte ptr [ecx], ch; ret 0x76ff; 
0x0804fc8b: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x080ca854: in al, dx; pop es; cli; jmp dword ptr [edx]; 
0x0806eb88: in al, dx; pop esi; pop ebx; pop edx; ret; 
0x08071787: in al, dx; push ebp; std; call dword ptr [eax - 0x18]; 
0x080d6004: in al, dx; push ss; add dword ptr [eax], eax; mov byte ptr [eax], bh; std; call dword ptr [esi]; 
0x080d4454: in al, dx; sar ah, 1; jmp dword ptr [ebx]; 
0x0809d52a: in al, dx; sbb al, 0x10; add byte ptr [eax], al; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0804ec90: in al, dx; sbb al, 0xc7; ret 0; 
0x08056961: in al, dx; sbb byte ptr [edx + 1], ch; call 0xe3f0; add esp, 0x1c; ret; 
0x080d10c4: in al, dx; sbb edi, esp; call dword ptr [ebx]; 
0x08072450: in al, dx; sub al, 0xc7; ret 0; 
0x080d2ee5: in eax, 0; add byte ptr [eax - 0x56], cl; cld; call esp; 
0x08091ca7: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x080c0b43: in eax, 0x24; outsd dx, dword ptr es:[esi]; ret 0x5ae4; 
0x080c29ef: in eax, 0x2d; cmpsd dword ptr [esi], dword ptr es:[edi]; xor byte ptr [esi + 0x4ce2e5dd], 0x67; add ch, byte ptr [ebp + ebp*2 + 0x5b]; ret 0x6f9; 
0x0809dd8a: in eax, 0x39; ret 0x840f; 
0x08072a11: in eax, 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x080bfdd9: in eax, 0x6a; mov eax, 0x45155e93; ret 0x591c; 
0x080ab7e2: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08093dea: in eax, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08090267: in eax, 0x95; sti; dec dword ptr [ebp - 0x1d1937d]; call dword ptr [eax - 0x73]; 
0x080c29f5: in eax, 0xe2; dec esp; add ch, byte ptr [si + 0x6d]; pop ebx; ret 0x6f9; 
0x080c79d5: in eax, 0xf8; call dword ptr [edi]; 
0x08092b93: in eax, 0xf; je 0x4abb0; add eax, 2; ret; 
0x0808a75b: in eax, 0xff; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x080c1ebd: in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x080aba89: in eax, 2; add byte ptr [ebx - 0x7c72ef14], al; inc eax; sbb bh, ch; call dword ptr [eax - 1]; 
0x0806c1a7: in eax, dx; add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg eax, esi; ret 0xc085; 
0x080c7dd1: in eax, dx; clc; jmp dword ptr [eax]; 
0x0809adf1: in eax, dx; cmp bh, dh; call dword ptr [edi - 0x7b]; 
0x0809aab6: in eax, dx; cmp bh, dh; dec dword ptr [ebx + 0xfc08500]; inc esp; ret 0x558b; 
0x0805ec42: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080ae100: in eax, dx; push ss; stc; call dword ptr [edi]; 
0x0806fe60: in eax, dx; std; inc edi; ret 0xbf20; 
0x0806e28a: inc byte ptr [ebx - 0x7401fb9d]; inc ecx; add al, 0x89; ret 0xe083; 
0x080cece9: inc byte ptr [edx + ecx]; ret; 
0x08087ecd: inc byte ptr [edx]; push esi; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0808ad9e: inc cl; clc; add dl, byte ptr [eax + 0x57]; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x080a1964: inc dword ptr [0x3869b]; mov eax, 0x80dbf64; mov eax, dword ptr [eax]; ret; 
0x0807c064: inc dword ptr [0x5df9b]; mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807c044: inc dword ptr [0x5dfbb]; mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x0807c024: inc dword ptr [0x5dfdb]; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x0807c004: inc dword ptr [0x5dffb]; mov edx, dword ptr [esp + 4]; mov eax, 0xffffffd4; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x080792b4: inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080718b4: inc dword ptr [0x6874b]; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x08071894: inc dword ptr [0x6876b]; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080701b4: inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x08057a68: inc dword ptr [0x82597]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4fc], edx; ret; 
0x08057a48: inc dword ptr [0x825b7]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x080579e8: inc dword ptr [0x82617]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579c8: inc dword ptr [0x82637]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x08057978: inc dword ptr [0x82687]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x08056f04: inc dword ptr [0x830fb]; mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x080bdd3f: inc dword ptr [eax + 0x2ffffbf7]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdd3f: inc dword ptr [eax + 0x2ffffbf7]; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bcb33: inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x0805db9d: inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080adecb: inc dword ptr [eax + 0x46]; sti; call eax; 
0x080894bd: inc dword ptr [eax - 0x7410f299]; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x57]; 
0x0808dd62: inc dword ptr [eax - 0x7cfef3b2]; ret 0x8b04; 
0x080bdd3b: inc dword ptr [eax - 0x7f000406]; idiv ebx; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x0807e2df: inc dword ptr [eax - 0x8c043]; jmp dword ptr [eax]; 
0x080895a1: inc dword ptr [eax - 0x8cc43]; jmp dword ptr [eax]; 
0x080855f3: inc dword ptr [eax - 0xf743]; jmp dword ptr [edi + 0x75]; 
0x080845f5: inc dword ptr [eax - 0xf743]; jmp dword ptr [edi + 0xf]; 
0x0807db45: inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08088cfe: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x88f6b], cl; call dword ptr [eax - 0x73]; 
0x08080531: inc dword ptr [eax]; add byte ptr [eax], al; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08089360: inc dword ptr [eax]; add byte ptr [eax], al; add dh, al; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0809150c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080c3a4f: inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x0806aaaf: inc dword ptr [eax]; je 0x22ab4; inc eax; pop edi; ret; 
0x0806ac53: inc dword ptr [eax]; je 0x22c58; inc eax; pop edi; pop esi; ret; 
0x0808b2cc: inc dword ptr [ebp + 0x7b840fc0]; adc eax, dword ptr [eax]; add byte ptr [ebp - 0xc7af001], al; adc al, 0; add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x080a47ac: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x08088def: inc dword ptr [ebp - 0x4b7bf040]; idiv edi; inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x08080d1a: inc dword ptr [ebp - 0x527bf001]; adc dword ptr [eax], eax; add byte ptr [ebp - 0x527af02e], al; adc al, byte ptr [eax]; add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x080ae59f: inc dword ptr [ebp - 0x530006da]; daa; stc; call eax; 
0x080817ef: inc dword ptr [ebp - 0x6f7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x0808be7d: inc dword ptr [ebp - 0x707bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x0807a242: inc dword ptr [ebp - 0x76f58b2e]; inc esp; and al, 8; call edx; 
0x080ae5f7: inc dword ptr [ebp - 0x7a0006da]; stc; call eax; 
0x080ae62f: inc dword ptr [ebp - 0x7a0006da]; stc; inc dword ptr [ebp - 0x7a0006da]; stc; call eax; 
0x080ae807: inc dword ptr [ebp - 0x7a0006da]; stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae80f: inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae58f: inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [esi + 0x27]; 
0x08080b40: inc dword ptr [ebp - 0x7a7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x0808b7ed: inc dword ptr [ebp - 0x7b7bf001]; add byte ptr [eax], al; add byte ptr [ebx - 0x4b743], al; call dword ptr [eax]; 
0x0808903d: inc dword ptr [ebp - 0x7d7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x0809e37f: inc dword ptr [ebp - 2]; call dword ptr [eax - 0x18]; 
0x08048cb0: inc dword ptr [ebx + 0x3b810c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xb900; 
0x0804ad25: inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x080a90b2: inc dword ptr [ebx + 0x5d8b10c4]; hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x08070212: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x080ac1ea: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0806da8f: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x08054224: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0807037c: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080ab771: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x080581f5: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x080a611e: inc dword ptr [ebx + 0xcb810c4]; add byte ptr [eax], al; add cl, ch; mov esp, 0x8dfffffd; cmp dword ptr [ebx], -2; call dword ptr [eax - 0x73]; 
0x0807e2d9: inc dword ptr [ebx - 0x2e7cfe08]; inc dword ptr [eax - 0x8c043]; jmp dword ptr [eax]; 
0x0808959b: inc dword ptr [ebx - 0x2e7cfe08]; inc dword ptr [eax - 0x8cc43]; jmp dword ptr [eax]; 
0x08087b02: inc dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x08085b84: inc dword ptr [ebx - 0x2f76fb3c]; pop ebx; pop esi; ret; 
0x08056365: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0806bc3a: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0807cf2e: inc dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x0804c7d3: inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x0806fdc4: inc dword ptr [ebx - 0x4c72f314]; fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x080847fd: inc dword ptr [ebx - 0x50f0ef3c]; ret 0x8d8b; 
0x08088df7: inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x0808a6a1: inc dword ptr [ebx - 0x6274f714]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 1]; 
0x08089162: inc dword ptr [ebx - 0x6274fb14]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x6a]; 
0x08088bf0: inc dword ptr [ebx - 0x6274fb14]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x0807ab2d: inc dword ptr [ebx - 0x72adfb14]; xchg eax, ebx; lodsd eax, dword ptr [esi]; inc ebx; std; call dword ptr [edx + 0x50]; 
0x08093292: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x0808b9bf: inc dword ptr [ebx - 0x7a76fb14]; sar bl, 0xff; dec dword ptr [ebp - 0x43f7b]; call dword ptr [eax - 0x73]; 
0x0809bce9: inc dword ptr [ebx - 0x7bf00006]; pop ds; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x0809d6c4: inc dword ptr [ebx - 0xf76ef3c]; pop ebx; pop esi; pop edi; ret; 
0x08091601: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080aba85: inc dword ptr [ecx + 0x2e57ac3]; add byte ptr [ebx - 0x7c72ef14], al; inc eax; sbb bh, ch; call dword ptr [eax - 1]; 
0x080a14c4: inc dword ptr [ecx + 0x38b3bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x0809d522: inc dword ptr [ecx + 0x3caddc6]; add byte ptr [ecx + 0x101cec], al; add byte ptr [ebp - 0x72efdbb4], cl; sahf; adc al, byte ptr [ebp - 2]; jmp dword ptr [ebp - 1]; 
0x080ac55b: inc dword ptr [ecx + 0x3f]; idiv edi; out 0x3f, al; idiv edi; ret 0xf73f; 
0x08098a7b: inc dword ptr [ecx + 0x41584c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x0806aef0: inc dword ptr [ecx + 0x430efc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0806ac96: inc dword ptr [ecx + 0x43349c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x08092224: inc dword ptr [ecx + 0x47ddbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08090634: inc dword ptr [ecx + 0x499cbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x0806242f: inc dword ptr [ecx + 0x4ba78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x08062320: inc dword ptr [ecx + 0x4bb87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0805f0cc: inc dword ptr [ecx + 0x4ebdbc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805f01c: inc dword ptr [ecx + 0x4ec8bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805ef34: inc dword ptr [ecx + 0x4ecf3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805eb82: inc dword ptr [ecx + 0x4eea5c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805eac6: inc dword ptr [ecx + 0x4ef61c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805ea6a: inc dword ptr [ecx + 0x4efbdc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805e9ac: inc dword ptr [ecx + 0x4f07bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0805e8c4: inc dword ptr [ecx + 0x4f0e3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x080710a5: inc dword ptr [ecx + 0x68f5ac3]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0806ecf5: inc dword ptr [ecx + 0x6b30ac3]; add byte ptr [ebx - 0x7c72eb14], al; xchg eax, esi; dec edx; std; call dword ptr [eax - 0x18]; 
0x0805dbf4: inc dword ptr [ecx + 0x7c40bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080488b0: inc dword ptr [ecx + 0x9174fc3]; add byte ptr [ebp - 0x2ddb77d], cl; call dword ptr [eax - 0x18]; 
0x080a1344: inc dword ptr [ecx + 0xc9]; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x080ad9e7: inc dword ptr [ecx + 0xf]; sti; jmp dword ptr [ecx + 0xf]; 
0x080add27: inc dword ptr [ecx - 0x4e0004ec]; adc al, 0xfb; jmp ecx; 
0x080adaa7: inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080859c0: inc dword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x458b; 
0x0808afc1: inc dword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx], dh; leave; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x080915f1: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0806b595: inc dword ptr [ecx]; clc; jmp eax; 
0x0804dc6c: inc dword ptr [ecx]; cli; jmp edx; 
0x08091f46: inc dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret 0xc3f6; 
0x0806f62e: inc dword ptr [ecx]; iretd; jmp edi; 
0x080954f8: inc dword ptr [ecx]; ret 0x1f6; 
0x0804cfe9: inc dword ptr [ecx]; ret 0xd089; 
0x080841b1: inc dword ptr [ecx]; ret; 
0x0808956e: inc dword ptr [ecx]; retf 0x8d8b; push 0x29fffff7; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x0804c9e8: inc dword ptr [ecx]; ror dword ptr [ebx + 0x200091], cl; add byte ptr [ecx], bh; ret; 
0x0804cbf1: inc dword ptr [ecx]; sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x0804d95e: inc dword ptr [ecx]; stc; jmp ecx; 
0x080ad9c7: inc dword ptr [edi + 0xf]; sti; jmp dword ptr [edi + 0xf]; 
0x080adb33: inc dword ptr [edi]; adc bh, bl; push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080addb3: inc dword ptr [edi]; adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x08091611: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809584f: inc dword ptr [edi]; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x080ae8f3: inc dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080adb73: inc dword ptr [edx]; adc bh, bl; push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080addf3: inc dword ptr [edx]; adc eax, 0x1532fffb; sti; jmp dword ptr [edx + 0x15]; 
0x080d102f: inc dword ptr [edx]; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080ada9f: inc dword ptr [esi - 0x390004ec]; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080adce7: inc dword ptr [esi - 0x490004ec]; adc al, 0xfb; jmp esi; 
0x080ada67: inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080ae67f: inc dword ptr [esi]; sub cl, bh; call dword ptr [eax]; 
0x080bcb34: inc eax; aaa; sti; jmp dword ptr [eax + 0x37]; 
0x08071f0b: inc eax; adc al, 0x8d; push edi; add dword ptr [ebp + 0x6bf475c0], eax; ret 0x833c; 
0x080c5b58: inc eax; adc al, byte ptr [eax]; add byte ptr [ebx + edx*4], dh; clc; jmp dword ptr [ecx]; 
0x08091bfc: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x080515d0: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x080919cd: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x08091d0a: inc eax; add al, 0x5f; ret; 
0x0809e521: inc eax; add al, 0x65; sub eax, dword ptr [0]; ret; 
0x080d1651: inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080cb5c7: inc eax; add bh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c748b: inc eax; add bh, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d3dd7: inc eax; add bh, ch; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c5d60: inc eax; add bh, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2017: inc eax; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c49a0: inc eax; add byte ptr [eax], al; add byte ptr [eax + eax + 0x3f780000], cl; clc; jmp dword ptr [esi + 2]; 
0x080c7dc8: inc eax; add byte ptr [eax], al; add byte ptr [esp + esi - 0x12200000], dh; clc; jmp dword ptr [eax]; 
0x080c2a63: inc eax; add byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [0x73950000], ecx; ret 0x48; 
0x080d15ef: inc eax; add ch, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d328d: inc eax; add cl, bl; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c6e93: inc eax; add cl, byte ptr [ecx + 0xa]; push cs; adc al, 0x45; ret; 
0x080d480c: inc eax; add dh, byte ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d28ea: inc eax; add dh, byte ptr [esi + 0x45140e0a]; ret; 
0x080d28c3: inc eax; add dl, byte ptr [ebp + 0xa]; push cs; adc al, 0x45; ret; 
0x080d3e8b: inc eax; add dl, byte ptr [edi + 0x41140e0a]; ret; 
0x080d3f47: inc eax; add dl, byte ptr [esi + 0x41140e0a]; ret; 
0x0807c2f5: inc eax; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x08074919: inc eax; add dword ptr [ecx - 0x762176f2], ecx; ret 0xc539; 
0x080d5a4f: inc eax; add eax, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8daf: inc eax; add ebp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8f47: inc eax; add edi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806b3e4: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x080c819f: inc eax; add esp, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x45; ret; 
0x0808f6db: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0806ee87: inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x080cb88f: inc eax; arpl word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x080a59d8: inc eax; call dword ptr [ebx]; 
0x08093746: inc eax; call dword ptr gs:[0x10]; 
0x08073c33: inc eax; call eax; 
0x080c48d7: inc eax; cld; jmp dword ptr [eax - 0xd]; 
0x080a57b0: inc eax; cli; dec dword ptr [ebp - 0x15e937d]; call dword ptr [eax + 0x68]; 
0x08079ceb: inc eax; cli; stc; call dword ptr [eax - 1]; 
0x08058077: inc eax; cmp al, ch; push 0x81ffff80; ret 0x1f82; 
0x0806b49f: inc eax; cmp cl, 0; je 0x234a6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x08099386: inc eax; cmp edi, esi; inc dword ptr [ecx]; cli; jmp edx; 
0x080c53b5: inc eax; dec eax; push cs; adc al, 0x41; ret; 
0x080cc96c: inc eax; dec eax; push cs; xor byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080d1a32: inc eax; dec eax; push cs; xor byte ptr [edi + 0xe], al; adc al, 0x43; ret; 
0x080ce6a1: inc eax; dec eax; push cs; xor byte ptr [edx + ecx + 0xe], bh; adc al, 0x41; ret; 
0x080cf9e8: inc eax; dec eax; push cs; xor byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080cdaac: inc eax; dec eax; push cs; xor byte ptr [edx + ecx + 0xe], dl; adc al, 0x41; ret; 
0x080a8ba5: inc eax; dec eax; ret; 
0x080c8735: inc eax; dec ebx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c9278: inc eax; dec ebx; or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080cf507: inc eax; dec ebx; push cs; xor byte ptr [edx + ecx + 0xe], bl; adc al, 0x41; ret; 
0x080c70e2: inc eax; dec edx; push cs; and byte ptr [edx + ecx + 0xe], cl; adc al, 0x43; ret; 
0x080c4c9e: inc eax; dec edx; push cs; xor byte ptr [esi + ecx + 0x14], cl; inc ecx; ret; 
0x080a946c: inc eax; dec esi; cli; call dword ptr [edi + 0x56]; 
0x080d2513: inc eax; dec esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d5e10: inc eax; dec esp; push cs; xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080c6e43: inc eax; dec esp; push cs; xor byte ptr [edi + 0xe], ch; adc al, 0x41; ret; 
0x080a8c15: inc eax; dec esp; ret; 
0x0805e6e4: inc eax; fdivp st(0); dec dword ptr [ebp - 0x7213f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080a6ba9: inc eax; fld1; fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x0807e1cc: inc eax; idiv edi; call dword ptr [eax]; 
0x0807f1a7: inc eax; idiv edi; call dword ptr [ebx + 0x50]; 
0x0807f2b7: inc eax; idiv edi; call dword ptr [ebx - 1]; 
0x08056364: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0806b3e3: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0806b3e2: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x080c55af: inc eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8163: inc eax; inc ebp; push cs; adc al, 0x41; ret; 
0x080d4c55: inc eax; inc ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb78f: inc eax; inc ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d3b29: inc eax; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d392d: inc eax; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7a05: inc eax; inc esi; push cs; adc al, 0x41; ret; 
0x080adecc: inc eax; inc esi; sti; call eax; 
0x0805e62a: inc eax; insb byte ptr es:[edi], dx; clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080d024d: inc eax; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c447f: inc eax; into; cld; jmp eax; 
0x080c68af: inc eax; jae 0x7e8bc; push cs; adc al, 0x43; ret; 
0x080cbe49: inc eax; jle 0x83e56; push cs; adc al, 0x41; ret; 
0x0806082d: inc eax; jne 0x188a0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08066dc5: inc eax; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x08066e18: inc eax; jne 0x1ef00; lea eax, [edi + 0xf]; pop edi; ret; 
0x08066d39: inc eax; jne 0x1ef10; lea eax, [edi + 0xf]; pop edi; ret; 
0x08066c96: inc eax; jne 0x1ef10; lea eax, [edi + 7]; pop edi; ret; 
0x08067261: inc eax; jne 0x1f390; lea eax, [edi + 7]; pop edi; ret; 
0x080672b4: inc eax; jne 0x1f3f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08067af1: inc eax; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x08067b44: inc eax; jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x08091b44: inc eax; jne 0x49ef9; add eax, 7; pop edi; ret; 
0x08091b94: inc eax; jne 0x49f21; add eax, 0xf; pop edi; ret; 
0x080d3f0f: inc eax; jns 0x8bf1c; push cs; or al, 0x41; ret; 
0x080d4707: inc eax; jns 0x8c714; push cs; adc al, 0x41; ret; 
0x080c4843: inc eax; loope 0x7c843; dec ecx; loope 0x7c847; call edi; 
0x0804823a: inc eax; mov al, byte ptr [0x9066080d]; ret; 
0x080d3450: inc eax; mov ch, 0xfc; call dword ptr [ebp]; 
0x0807c447: inc eax; mov ecx, esi; mov eax, 0xaf; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0806fe29: inc eax; mov edi, 0x950f080d; ret 0x1089; 
0x08059e7c: inc eax; or al, 0x39; ret 0x870f; 
0x08091d66: inc eax; or al, 0x5f; ret; 
0x08057da4: inc eax; or al, 0x83; ret; 
0x080560d9: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add bl, dh; ret; 
0x0804af03: inc eax; or byte ptr [ebp - 0x7c398a40], al; ret; 
0x080510fe: inc eax; or byte ptr [ecx - 0x74dfdbbc], cl; jne 0x915b; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0806bf60: inc eax; or byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x080c58bc: inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d60d5: inc eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080a8cb5: inc eax; pop eax; ret; 
0x080cd8dd: inc eax; pop ebp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0806b24c: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0806ac57: inc eax; pop edi; pop esi; ret; 
0x0805e89c: inc eax; pop edi; ret; 
0x08091c75: inc eax; pop es; pop edi; ret; 
0x080ca758: inc eax; pop esi; add byte ptr [eax], al; add al, 5; cli; call ebx; 
0x080c4fd0: inc eax; pop esi; clc; call edx; 
0x080cc77e: inc eax; pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a8c65: inc eax; pop esp; ret; 
0x080b0357: inc eax; psubd mm7, mm7; jo 0x6836d; cli; jmp dword ptr [eax + 0xf]; 
0x08091d86: inc eax; push cs; pop edi; ret; 
0x080c75d4: inc eax; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cde9c: inc eax; push eax; push cs; xor byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x08092474: inc eax; push eax; push dword ptr [ebp]; call esi; 
0x080a8c55: inc eax; push eax; ret; 
0x080d1c64: inc eax; push ebx; push cs; xor byte ptr [edx + ecx + 0xe], dl; adc al, 0x41; ret; 
0x080c92a6: inc eax; push ecx; push cs; xor byte ptr [edx + ecx + 0xe], cl; adc al, 0x41; ret; 
0x080d20e0: inc eax; push edx; cld; jmp dword ptr [esi + 0xa]; 
0x08091d26: inc eax; push es; pop edi; ret; 
0x080d49e9: inc eax; push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce89d: inc eax; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x08071939: inc eax; push esi; std; call dword ptr [eax - 0x73]; 
0x080cb9b3: inc eax; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a8cc5: inc eax; push esp; ret; 
0x0807c01a: inc eax; ret; 
0x0805db59: inc eax; retf; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080aba91: inc eax; sbb bh, ch; call dword ptr [eax - 1]; 
0x080a10d8: inc eax; sldt word ptr [eax]; mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x0806b739: inc eax; std; call dword ptr [eax - 0x18]; 
0x0806b9bd: inc eax; std; call dword ptr [eax - 0x73]; 
0x0806b593: inc eax; std; inc dword ptr [ecx]; clc; jmp eax; 
0x080bcd1b: inc eax; sti; call eax; 
0x080bcd17: inc eax; sti; inc eax; sti; call eax; 
0x080bcd6f: inc eax; sti; inc eax; sti; jmp dword ptr [eax]; 
0x080bcd73: inc eax; sti; jmp dword ptr [eax]; 
0x080d01d0: inc eax; sti; sti; jmp dword ptr [esi]; 
0x0806b4a5: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0806aaaa: inc eax; test ecx, 0xff0000; je 0x22ab4; inc eax; pop edi; ret; 
0x08056028: inc eax; xor al, 0x85; sal byte ptr [ebp - 0xe], 0xf3; ret; 
0x08096f17: inc eax; xor bh, dh; call dword ptr [eax + 0x6a]; 
0x0809f42b: inc ebp; aam 0x85; ror byte ptr [edi], 0x85; ret; 
0x080941c7: inc ebp; aam 0x89; ret 0xc083; 
0x080a2759: inc ebp; aam 0xc7; ret 0xbee8; 
0x0808a7d4: inc ebp; adc byte ptr [ecx - 0x45b4b], cl; dec dword ptr [ecx - 0x4677b]; jmp dword ptr [ebp - 0x5f]; 
0x080801d4: inc ebp; adc byte ptr [ecx - 0x46b4b], cl; dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x0807e132: inc ebp; adc byte ptr [ecx], bh; ret 0x8f0f; 
0x080a5825: inc ebp; add bh, bh; je 0x5d84e; xor al, 0x56; push ebx; call eax; 
0x080c8e8d: inc ebp; add byte ptr [eax], al; xor byte ptr [ecx + edi*8], ch; call dword ptr [edx]; 
0x080a1a77: inc ebp; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x080530e6: inc ebp; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x08050fd9: inc ebp; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push ebp; call ecx; 
0x080a3e13: inc ebp; cld; dec dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x08072c1e: inc ebp; fadd qword ptr [ebx - 0x7c72f33c]; and byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x0808e5a7: inc ebp; fmul dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x080719c5: inc ebp; fmul dword ptr [ebp - 0x687af7d]; call dword ptr [eax - 0x77]; 
0x08094098: inc ebp; fmul qword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0806e78d: inc ebp; fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x0806e652: inc ebp; fmul qword ptr [ebp - 0x2b60f7d]; call dword ptr [eax - 0x18]; 
0x0808ebf8: inc ebp; in al, 0xc7; ret 0xafc0; 
0x0808ebf7: inc ebp; inc ebp; in al, 0xc7; ret 0xafc0; 
0x080a8c99: inc ebp; inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0804ad2a: inc ebp; mov ah, 0x83; ret 0x5201; 
0x08050951: inc ebp; mov ah, 0x8b; pop ebp; rcl byte ptr [edx + 0x51], 0x50; call dword ptr [eax + 0xc]; 
0x080a55a3: inc ebp; mov al, 0x89; ret 0x870f; 
0x0804a85b: inc ebp; mov al, 0xf; xchg eax, edi; ret 0x920f; 
0x0809b0f3: inc ebp; mov al, byte ptr [0x4203008b]; add al, 0x89; ret 0x458b; 
0x0809b02c: inc ebp; mov al, byte ptr [0x8b34568b]; add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x458b; 
0x0809dfdb: inc ebp; mov al, byte ptr [0x8d7f048d]; pop esp; ret; 
0x080c264f: inc ebp; mov al, byte ptr [0xfc87aa3c]; adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x080848d1: inc ebp; mov edi, es; ret 0xafc0; 
0x08050754: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x08085a38: inc ebp; mov word ptr [ebx - 0xc763], cs; call dword ptr [ecx + 0x6a]; 
0x0809b148: inc ebp; nop; call eax; 
0x080719dc: inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x080a2a16: inc ebp; or byte ptr [ebx + 0x70ff08ec], al; adc al, 0x6a; add al, ch; wait; ret; 
0x0809aa21: inc ebp; or byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0d601], cl; ret 0xff83; 
0x080c55b0: inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c9115: inc ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c5422: inc ebp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080cc4cc: inc ebp; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080cb09d: inc ebp; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d109f: inc ebp; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d2ad2: inc ebp; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c5cd0: inc ebp; or eax, dword ptr [ebx]; retf 0xa01; push cs; adc al, 0x41; ret; 
0x080d5515: inc ebp; or eax, dword ptr [edx]; jno 0x8d524; push cs; adc al, 0x41; ret; 
0x080c8e2a: inc ebp; or ecx, dword ptr [ebp + 0xa]; ret; 
0x080d57be: inc ebp; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d568d: inc ebp; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6ea9: inc ebp; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080c93bc: inc ebp; or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x08062e0a: inc ebp; pop ebx; ret; 
0x080c8164: inc ebp; push cs; adc al, 0x41; ret; 
0x080cb68a: inc ebp; push cs; adc byte ptr [ecx + 0xa], al; ret; 
0x080c712a: inc ebp; push cs; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x080c9157: inc ebp; push cs; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c91d4: inc ebp; push cs; and byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080cb7ed: inc ebp; push cs; and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080cd273: inc ebp; push cs; mov al, byte ptr [0xa830201]; push cs; adc al, 0x41; ret; 
0x080d085d: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08cc: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08bb: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0899: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d08aa: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d0888: inc ebp; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080d6187: inc ebp; push cs; pushal; or cl, byte ptr fs:[esi]; adc al, 0x45; ret; 
0x080d2573: inc ebp; push cs; xor byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080cc47b: inc ebp; push cs; xor byte ptr [ebx + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080cc4b5: inc ebp; push cs; xor byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x0809a7ca: inc ebp; pushfd; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08099d5a: inc ebp; pushfd; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x08099eba: inc ebp; pushfd; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x08099770: inc ebp; pushfd; mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x080980ba: inc ebp; ret 0x3980; 
0x080743ee: inc ebp; ret 0x4489; 
0x0805b7b1: inc ebp; ret 0x548b; 
0x080bfddf: inc ebp; ret 0x591c; 
0x0806b634: inc ebp; ret 0x67e9; 
0x08098456: inc ebp; ret 0x7c8b; 
0x08094dd6: inc ebp; ret 0x8789; 
0x0808c0ae: inc ebp; ret 0xc289; 
0x0805db5e: inc ebp; ret 0xc3f3; 
0x0804f35d: inc ebp; ret 0xc483; 
0x0805e04e: inc ebp; ret 0xc701; 
0x0809b2b5: inc ebp; ret 0xd231; 
0x0808e36a: inc ebp; ret 0xec83; 
0x08070133: inc ebp; ret 0xffff; 
0x0805ddbd: inc ebp; ret 7; 
0x08049d7c: inc ebp; ret; 
0x080a4cb9: inc ebp; rol byte ptr [ebx + 0x758d04ec], 1; les edx, ptr [eax - 0x73]; adc dword ptr [eax], -0x56; cld; call dword ptr [eax + 0x56]; 
0x0806e1db: inc ebp; ror byte ptr [ecx - 0x74fbe1bc], 1; inc edx; add al, 0x89; ret 0xe283; 
0x0805234e: inc ebp; ror byte ptr [edi], 0x85; ret; 
0x0809b2da: inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x08093f8d: inc ebp; sal byte ptr [ecx], 1; ror byte ptr [ecx + 0x4ec83f2], 0x29; ret 0x4503; 
0x0807c2ff: inc ebp; sar byte ptr [eax + 0xae], 1; call dword ptr gs:[0x10]; 
0x080489a8: inc ebp; sbb byte ptr [ecx + 0x4d891c5d], cl; and byte ptr [ecx + 0x5d8b2455], cl; adc bh, dh; ret; 
0x08051010: inc ebp; sbb byte ptr [ecx], al; ret 0x458b; 
0x080752de: inc ebp; std; dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x08075324: inc ebp; std; dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x080adec9: inc ebp; sti; inc dword ptr [eax + 0x46]; sti; call eax; 
0x0804b537: inc ebp; sub byte ptr [eax], al; add byte ptr [eax], al; add bh, al; ret 0; 
0x0809de9e: inc ebp; test al, 0x89; push ebp; lodsb al, byte ptr [esi]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0809b084: inc ebp; xchg eax, esp; call eax; 
0x080a4a45: inc ebx; adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x080556db: inc ebx; adc byte ptr [ecx - 0x7c3fceed], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0805dc0f: inc ebx; adc dl, byte ptr [eax]; pop ebx; cmovne eax, ecx; ret; 
0x08095ddf: inc ebx; adc dword ptr [ecx], edi; ret 0x430f; 
0x080a98d4: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x080a98d7: inc ebx; add al, 0x83; ret; 
0x08052e03: inc ebx; add al, 0x89; inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x080c8c6d: inc ebx; add byte ptr [eax], al; jo 0x80c8b; stc; jmp dword ptr [eax + 0xf]; 
0x08055d26: inc ebx; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x080cbf35: inc ebx; cli; jmp dword ptr [ecx]; 
0x0809331e: inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0809e5e6: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x08052e06: inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x080c63ee: inc ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c6568: inc ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c951a: inc ebx; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x080cb7a6: inc ebx; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080c813f: inc ebx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c573f: inc ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c96e9: inc ebx; or cl, byte ptr [esi]; or al, 0x46; ret; 
0x080cb7a4: inc ebx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x45; ret; 
0x080d1098: inc ebx; or eax, dword ptr [ebx + 0xa]; ret; 
0x080cf6ee: inc ebx; or eax, dword ptr [edx]; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d3075: inc ebx; or eax, dword ptr [edx]; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x080d423c: inc ebx; or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x080d5542: inc ebx; or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d65f8: inc ebx; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3ded: inc ebx; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080cb1d2: inc ebx; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d5a7c: inc ebx; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0809064f: inc ebx; pop ss; add al, 0x5b; cmovne eax, ecx; ret; 
0x080cb5df: inc ebx; push cs; adc al, 0x41; ret; 
0x080c5ae8: inc ebx; push cs; adc al, 0x43; ret; 
0x080d30a4: inc ebx; push cs; adc al, 0x46; ret; 
0x080cb03f: inc ebx; push cs; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080d0137: inc ebx; push cs; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d15ab: inc ebx; push cs; adc byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c8887: inc ebx; push cs; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa73: inc ebx; push cs; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b7: inc ebx; push cs; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080c7de3: inc ebx; push cs; adc byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x080c9337: inc ebx; push cs; adc byte ptr [ecx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d151f: inc ebx; push cs; adc byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c4f06: inc ebx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], cl; ret; 
0x080c6963: inc ebx; push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c7451: inc ebx; push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080cb237: inc ebx; push cs; and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb077: inc ebx; push cs; and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080cb1c3: inc ebx; push cs; and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c6a5d: inc ebx; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], ah; ret; 
0x080cac4a: inc ebx; push cs; or al, 0x41; ret; 
0x080c62a2: inc ebx; push cs; or al, 0x46; ret; 
0x080caba5: inc ebx; push cs; push eax; add ah, byte ptr [edi + 0x41140e0a]; ret; 
0x080d3d55: inc ebx; push cs; pushal; add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080cb7ea: inc ebx; push cs; xor byte ptr [ebp + 0xe], al; and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080d2a09: inc ebx; push cs; xor byte ptr [ebx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x0805d179: inc ebx; ret 0x4489; 
0x080a5123: inc ebx; ret 0x958b; 
0x08095de4: inc ebx; ret 0xe883; 
0x0805e06b: inc ebx; ret; 
0x0806b9b1: inc ebx; std; call dword ptr [eax + 0x68]; 
0x0806c2f7: inc ebx; std; call dword ptr [eax - 0x18]; 
0x0807ab35: inc ebx; std; call dword ptr [edx + 0x50]; 
0x080cfadd: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf929: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c6009: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce22d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d1979: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc41d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d2731: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d1909: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb945: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacb5: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cb9: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea7d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66cd: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5ed: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf58d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080d1939: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a55: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d291d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080c4fb1: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a25: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080d50c1: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc725: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf55d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea4d: inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x08056bd6: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x080ac55c: inc ecx; aas; idiv edi; out 0x3f, al; idiv edi; ret 0xf73f; 
0x080494ba: inc ecx; adc al, 0; add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0809b36d: inc ecx; adc al, 0x39; ret; 
0x080ca663: inc ecx; adc eax, dword ptr [ecx]; ret; 
0x08065ce6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x08065e26: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x08064486: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x080645b6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0806e0d1: inc ecx; add al, 0x89; ret 0xe083; 
0x0806e19c: inc ecx; add al, 0x89; ret 0xe283; 
0x080a54a1: inc ecx; add al, 0x8b; inc esi; or byte ptr [ecx - 0x4016f7bf], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x080c8a61: inc ecx; add byte ptr [eax], al; mov word ptr [eax], cs; stc; call dword ptr [ecx + 0xa]; 
0x08064587: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x08064467: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x0806696b: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x08065d05: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x08065e35: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x080645c5: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x08064495: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x0808984a: inc ecx; clc; add ch, byte ptr [ecx]; ret 0x858b; 
0x080d1a55: inc ecx; cld; call dword ptr [ebx + 1]; 
0x0804ed9b: inc ecx; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a5714: inc ecx; cli; dec dword ptr [ebp - 0x15f4f7d]; call dword ptr [eax - 0x75]; 
0x0807b6f0: inc ecx; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ecx]; 
0x0806b31e: inc ecx; inc edx; test al, al; jne 0x23318; xor eax, eax; ret; 
0x08063c19: inc ecx; jmp dword ptr [esi + 0xf]; 
0x080d309e: inc ecx; lds ecx, ptr [esi]; add al, 0x41; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080d5bf6: inc ecx; lds ecx, ptr [esi]; add al, 0x41; or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x080cf2a1: inc ecx; lds ecx, ptr [esi]; add al, 0x41; or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080cf2f5: inc ecx; lds ecx, ptr [esi]; add al, 0x41; or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080d3d95: inc ecx; lds ecx, ptr [esi]; add al, 0x42; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d3de9: inc ecx; lds ecx, ptr [esi]; add al, 0x43; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080d16d5: inc ecx; lds ecx, ptr [esi]; add al, 0x44; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080d447f: inc ecx; lds ecx, ptr [esi]; add al, 0x44; or ebx, dword ptr [esi + 0xa]; ret; 
0x080cbe5a: inc ecx; lds ecx, ptr [esi]; add al, 0x44; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080d2ace: inc ecx; lds ecx, ptr [esi]; add al, 0x45; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080d5689: inc ecx; lds ecx, ptr [esi]; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6ea5: inc ecx; lds ecx, ptr [esi]; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080c93b8: inc ecx; lds ecx, ptr [esi]; add al, 0x45; or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x080c5ae2: inc ecx; lds ecx, ptr [esi]; add al, 0x46; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080cd8ee: inc ecx; lds ecx, ptr [esi]; add al, 0x46; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d0620: inc ecx; lds ecx, ptr [esi]; add al, 0x48; or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080cb5d9: inc ecx; lds ecx, ptr [esi]; add al, 0x4a; or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080d3cef: inc ecx; lds ecx, ptr [esi]; add al, 0x4a; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d048d: inc ecx; lds ecx, ptr [esi]; add al, 0x4a; or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080d4492: inc ecx; lds ecx, ptr [esi]; add al, 0x4f; or eax, dword ptr [ecx + 0xa]; ret; 
0x080cf93c: inc ecx; lds ecx, ptr [esp + eax]; add al, 0x42; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6914: inc ecx; lds ecx, ptr [esp + eax]; add al, 0x44; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed4: inc ecx; lds ecx, ptr [esp + eax]; add al, 0x44; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c6922: inc ecx; lds ecx, ptr [esp + eax]; add al, 0x46; or ebp, dword ptr [eax + 0xa]; ret; 
0x080577cb: inc ecx; ljmp 0x5b14:0xc483ffff; pop esi; ret; 
0x080cf938: inc ecx; mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x42; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6910: inc ecx; mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x44; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed0: inc ecx; mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x44; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c691e: inc ecx; mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x46; or ebp, dword ptr [eax + 0xa]; ret; 
0x080cf93a: inc ecx; mov dword ptr [ecx - 0x3b], 0x4204040c; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6912: inc ecx; mov dword ptr [ecx - 0x3b], 0x4404040c; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed2: inc ecx; mov dword ptr [ecx - 0x3b], 0x4404040c; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c6920: inc ecx; mov dword ptr [ecx - 0x3b], 0x4604040c; or ebp, dword ptr [eax + 0xa]; ret; 
0x0806643b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x080662db: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0806e0cb: inc ecx; or byte ptr [ecx + 0x418b0446], cl; add al, 0x89; ret 0xe083; 
0x0806649b: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0806633b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0806683a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b2b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x0806624a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0806651b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x08065e55: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080645e5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065eb5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08064645: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08065e76: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x08064606: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x080cbfb9: inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d35d5: inc ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c9518: inc ecx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x44; ret; 
0x080cfd6f: inc ecx; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x46; ret; 
0x080d1040: inc ecx; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d30a2: inc ecx; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080d2706: inc ecx; or eax, dword ptr [ebx]; xlatb; add ecx, dword ptr [edx]; ret; 
0x080d1047: inc ecx; or eax, dword ptr [esi + 0xa]; ret; 
0x080d5bfa: inc ecx; or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x080c8441: inc ecx; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080cf2a5: inc ecx; or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080cf2f9: inc ecx; or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080cb04e: inc ecx; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080cc33a: inc ecx; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080ceb0b: inc ecx; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806692b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08066a8b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806631b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806647b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x080669ab: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b0b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806639b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664fb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08065e95: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08064625: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x080c5b94: inc ecx; push cs; adc al, 0x83; add eax, 0x2200e4e; test eax, 0x41140e0a; ret; 
0x080cf2dc: inc ecx; push cs; adc al, 0x83; add eax, 0x2240e4d; test eax, 0x41140e0a; ret; 
0x080cf288: inc ecx; push cs; adc al, 0x83; add eax, 0x2280e4d; mov ecx, 0x41140e0a; ret; 
0x080d4a5c: inc ecx; push cs; adc al, 0x83; add eax, 0x2300e49; or cl, byte ptr [0x4314]; ret; 
0x080c63c0: inc ecx; push cs; adc al, 0x83; add eax, 0x2300e4e; mov esp, 0x41140e0a; ret; 
0x080c4c10: inc ecx; push cs; adc al, 0x83; add eax, 0x2500e4e; ret; 
0x080d57f8: inc ecx; push cs; adc al, 0x83; add eax, 0x2d00e53; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d5bdc: inc ecx; push cs; adc al, 0x83; add eax, 0x2e00e4b; add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x080d4dd7: inc ecx; push cs; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76b3: inc ecx; push cs; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d019f: inc ecx; push cs; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd17: inc ecx; push cs; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e23: inc ecx; push cs; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76ef: inc ecx; push cs; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e07: inc ecx; push cs; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff4b: inc ecx; push cs; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e37: inc ecx; push cs; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e17: inc ecx; push cs; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c852f: inc ecx; push cs; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba73: inc ecx; push cs; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080c7b19: inc ecx; push cs; adc byte ptr [edx], al; arpl word ptr [edx], cx; ret; 
0x080d4897: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], dl; ret; 
0x080c72e6: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d3475: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080cff72: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], cl; ret; 
0x080c5f4d: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], dl; ret; 
0x080cf8e2: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], al; ret; 
0x080cc9aa: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb75: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], dl; ret; 
0x080c682c: inc ecx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080c8241: inc ecx; push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c96d4: inc ecx; push cs; and byte ptr [eax + 0xe], cl; or al, 0x43; ret; 
0x080cb687: inc ecx; push cs; and byte ptr [ebp + 0xe], al; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7689: inc ecx; push cs; and byte ptr [ebp + 0xe], bl; or al, 0x41; ret; 
0x080cad3c: inc ecx; push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [edi + 0xa], al; ret; 
0x080ceb93: inc ecx; push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080cc603: inc ecx; push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080d442a: inc ecx; push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080d009f: inc ecx; push cs; and byte ptr [esi + 0xe], al; adc byte ptr [ecx + 0xa], cl; ret; 
0x080c7851: inc ecx; push cs; and byte ptr [esi + 0xe], al; adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x080ce0cb: inc ecx; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080cc6e8: inc ecx; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7b84: inc ecx; push cs; and byte ptr [esi + 0xe], dl; adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x080c985c: inc ecx; push cs; lock or byte ptr [esi + ecx - 0x20], cl; or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x080cfb47: inc ecx; push cs; mov al, byte ptr [0x900e4601]; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c4b91: inc ecx; push cs; mov al, byte ptr [0x900e4801]; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080c5807: inc ecx; push cs; mov al, byte ptr [0x900e4a0a]; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080d1706: inc ecx; push cs; or al, 0x83; add eax, dword ptr [edx]; inc ecx; ret; 
0x080d0cd6: inc ecx; push cs; or al, 0x83; add eax, dword ptr [edx]; jle 0x88ce8; ret; 
0x080d148a: inc ecx; push cs; or al, 0x83; add ebp, dword ptr [ebx + 0xa]; ret; 
0x080cecae: inc ecx; push cs; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x080d0102: inc ecx; push cs; or al, 0x83; add edi, dword ptr [edi + 0xa]; ret; 
0x080c8006: inc ecx; push cs; or al, 0x83; add esi, dword ptr [eax + 0xa]; ret; 
0x080d36b6: inc ecx; push cs; or al, 0x83; add esi, dword ptr [ebx + 0xa]; ret; 
0x080c8882: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa6e: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b2: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080d4dd2: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76ae: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d019a: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd12: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e1e: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76ea: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e02: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff46: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e32: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e12: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c852a: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba6e: inc ecx; push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080cb1fd: inc ecx; push cs; or byte ptr [ebx + 0x100e4302], al; or cl, byte ptr [0x4108]; ret; 
0x080ce41d: inc ecx; push cs; or byte ptr [ebx + 0x200e4e02], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x080ca76e: inc ecx; push cs; or byte ptr [ebx + 0x40e4602], al; ret; 
0x080ca5ba: inc ecx; push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x080cb619: inc ecx; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca765: inc ecx; push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x080c99dc: inc ecx; push cs; or byte ptr [ebx + 0x40e6002], al; ret; 
0x080c99d3: inc ecx; push cs; or byte ptr [ebx + 0x40e6202], al; ret; 
0x080ca579: inc ecx; push cs; or byte ptr [ebx + 0x40e6302], al; ret; 
0x080c9f33: inc ecx; push cs; or byte ptr [ebx + 0x40e6602], al; ret; 
0x080c9e51: inc ecx; push cs; or byte ptr [ebx + 0x40e6a02], al; ret; 
0x080c9a14: inc ecx; push cs; or byte ptr [ebx + 0x40e6b02], al; ret; 
0x080c9a02: inc ecx; push cs; or byte ptr [ebx + 0x40e7002], al; ret; 
0x080c9adb: inc ecx; push cs; or byte ptr [ebx + 0x40e7102], al; ret; 
0x080c99f9: inc ecx; push cs; or byte ptr [ebx + 0x40e7202], al; ret; 
0x080c9f2a: inc ecx; push cs; or byte ptr [ebx + 0x40e7302], al; ret; 
0x080c9a38: inc ecx; push cs; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x080c9a5e: inc ecx; push cs; or byte ptr [ebx + 0x40e7b02], al; ret; 
0x080ce175: inc ecx; push cs; or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d108d: inc ecx; push cs; or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1035: inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080d0b49: inc ecx; push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0b27: inc ecx; push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d5385: inc ecx; push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x080cc3aa: inc ecx; push cs; xor byte ptr [ebp + 0xe], cl; adc al, 0x41; ret; 
0x080d431f: inc ecx; push cs; xor byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080cc8b7: inc ecx; push cs; xor byte ptr [edi + 0xe], ah; adc al, 0x43; ret; 
0x080c4eae: inc ecx; push cs; xor byte ptr [esi + 0xe], cl; and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x0806698b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066aeb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806637b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664db: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080c49cf: inc ecx; ret; 
0x080c9591: inc ecx; stc; jmp edi; 
0x0805597f: inc edi; adc al, 0x5b; pop esi; pop edi; jmp eax; 
0x08053f89: inc edi; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x08066e71: inc edi; add al, 0x5f; ret; 
0x08083c87: inc edi; add al, 0xc7; ret 0xfff0; 
0x08098089: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0809654b: inc edi; add cl, byte ptr [ecx - 0x7c3e7631]; ret 0xf01; 
0x0805e285: inc edi; add dword ptr [ecx], edi; ret; 
0x080c265b: inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x080913b3: inc edi; clc; pop edi; ret; 
0x080913dc: inc edi; cld; pop edi; ret; 
0x08091451: inc edi; cli; pop edi; ret; 
0x08091411: inc edi; cmc; pop edi; ret; 
0x08091389: inc edi; hlt; pop edi; ret; 
0x080913e1: inc edi; int1; pop edi; ret; 
0x080936c5: inc edi; mov dh, 0xfd; jmp dword ptr [esi - 0x70]; 
0x08066ee1: inc edi; or al, 0x5f; ret; 
0x080ac0cc: inc edi; or bh, al; ret 0xaa28; 
0x08057bd6: inc edi; or byte ptr [ecx], bh; ret; 
0x080c6aae: inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4f50: inc edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cb091: inc edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c81b6: inc edi; or eax, dword ptr [ebx]; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x080cffd6: inc edi; or eax, dword ptr [ecx + 0xa]; ret; 
0x080cbf1a: inc edi; or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x080cff5e: inc edi; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d561d: inc edi; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c6508: inc edi; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x080cf241: inc edi; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080d429e: inc edi; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080c8e77: inc edi; or esp, dword ptr [edx + 0xa]; push cs; or al, 0x43; ret; 
0x080913f1: inc edi; pop edi; ret; 
0x08066c9e: inc edi; pop es; pop edi; ret; 
0x080cdea0: inc edi; push cs; adc al, 0x41; ret; 
0x080d1a36: inc edi; push cs; adc al, 0x43; ret; 
0x080d29ae: inc edi; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], cl; ret; 
0x080d302a: inc edi; push cs; and byte ptr [esi + ecx + 0xc], bl; inc ecx; ret; 
0x080ca5cc: inc edi; push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x08066f01: inc edi; push cs; pop edi; ret; 
0x080d602f: inc edi; push cs; xor byte ptr [edx + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x0808ffad: inc edi; push eax; push eax; push ebp; call esi; 
0x08066e91: inc edi; push es; pop edi; ret; 
0x080ab72a: inc edi; ret 0; 
0x080a4481: inc edi; ret 0x4489; 
0x0805a79f: inc edi; ret 0x548b; 
0x0805ad57: inc edi; ret 0x7489; 
0x080a6091: inc edi; ret 0x9da4; 
0x08050309: inc edi; ret 0xafc0; 
0x080497eb: inc edi; ret 0xb608; 
0x080706c3: inc edi; ret 0xb900; 
0x0806fe62: inc edi; ret 0xbf20; 
0x0806ffe0: inc edi; ret 0xbf24; 
0x08094258: inc edi; ret 0xbf88; 
0x0805a210: inc edi; ret 0xc539; 
0x08091fab: inc edi; ret 0xd829; 
0x080abba4: inc edi; ret 2; 
0x08049c64: inc edi; ret; 
0x08095840: inc edi; ror byte ptr [ebp*4 - 0x137cf7f3], 0xc; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x0807e109: inc edi; sbb byte ptr [ebx - 0x2fd6fb14], al; push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08091441: inc edi; stc; pop edi; ret; 
0x080d62f5: inc edi; std; jmp dword ptr [edi]; 
0x080d63e5: inc edi; std; jmp dword ptr [edx]; 
0x08091471: inc edi; std; pop edi; ret; 
0x080adf39: inc edi; sti; call dword ptr [esi + 0x48]; 
0x080adf39: inc edi; sti; call dword ptr [esi + 0x48]; sti; call esi; 
0x080adeb5: inc edi; sti; call edx; 
0x080adf35: inc edi; sti; jmp esi; 
0x08091461: inc edi; sti; pop edi; ret; 
0x0808fded: inc edi; sub byte ptr [eax + 0x55], dl; call esi; 
0x0806da08: inc edi; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x08061d83: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x080579c5: inc edi; ud0; inc dword ptr [0x82637]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x080736a2: inc edi; xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x080a5db1: inc edx; adc byte ptr [ebp - 0x76dc8b40], al; test byte ptr [ebp + 0x27bc], 0; add byte ptr [ecx], al; ret 0xb70f; 
0x080ca60f: inc edx; adc eax, dword ptr [ecx]; ret; 
0x08065cdb: inc edx; add al, 0x5f; ret; 
0x08066a68: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x08066458: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x080a9611: inc edx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0806f779: inc edx; add al, 0x83; ret 0xc608; 
0x08064478: inc edx; add al, 0x89; clc; pop edi; ret; 
0x0809b034: inc edx; add al, 0x89; ret 0x458b; 
0x0806e1e2: inc edx; add al, 0x89; ret 0xe283; 
0x08066438: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x080662d8: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x08066498: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x08066338: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x08094ed9: inc edx; add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x08065cd8: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x080667e9: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x08066a38: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x080a179b: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x08066970: inc edx; add eax, 0x5f0c428d; ret; 
0x08092c86: inc edx; add eax, dword ptr [ebp + 0x5bd475db]; ret; 
0x0808d6be: inc edx; add ecx, ebp; ret 0xfffe; 
0x0806ce45: inc edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805ed41: inc edx; call 0x42d77cad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805f2c1: inc edx; call 0x42d7822d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e8f0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed46: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e8f3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080cbee5: inc edx; cli; call dword ptr [ecx]; 
0x080cbef9: inc edx; cli; jmp dword ptr [ebp]; 
0x0805e933: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080bf58e: inc edx; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x080ae8f4: inc edx; daa; stc; jmp dword ptr [eax + 0x28]; 
0x0805e937: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805e916: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0806ad7e: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0806ae89: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x080a8c31: inc edx; dec esp; ret; 
0x0805eccc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x16d14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805f24c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x17294; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805ee36: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec71: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080adedf: inc edx; inc esi; sti; jmp dword ptr [edx + 0x47]; 
0x080c1fe2: inc edx; jl 0x79f6d; outsd dx, dword ptr [esi]; aad 8; stosd dword ptr es:[edi], eax; ret; 
0x080bff2f: inc edx; jmp dword ptr [edx - 0x71]; 
0x0805eab2: inc edx; jo 0x16a36; ret 0x80; 
0x0805eb19: inc edx; jo 0x16a9d; ret 0x80; 
0x0805eb6b: inc edx; jo 0x16aef; ret 0x80; 
0x0805ecd1: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805ee76: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805eeb6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080c1cb5: inc edx; mov esi, 0x5fd2fe07; insd dword ptr es:[edi], dx; test eax, 0x7d4c8c5d; ret 0xd8f; 
0x0805edb6: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08065d83: inc edx; or al, 0x5f; ret; 
0x080c6c08: inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfada: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf926: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c6006: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce22a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d1976: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc41a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d272e: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d1906: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb942: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacb2: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cb6: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea7a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66ca: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5ea: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf58a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080d1936: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a52: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d291a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080c4fae: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a22: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080d50be: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc722: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf55a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea4a: inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x080d26ee: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x080cfe24: inc edx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8ed9: inc edx; or eax, dword ptr [ebx]; xor eax, 0x140e0a01; inc ebx; ret; 
0x080d152e: inc edx; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d99: inc edx; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080c5f60: inc edx; or ebx, dword ptr [edi + 0xa]; ret; 
0x080cf941: inc edx; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d5a66: inc edx; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d6242: inc edx; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080ca6c1: inc edx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0805ec11: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ebe1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a6d39: inc edx; pop eax; add esp, 8; pop ebx; ret; 
0x08065d5c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e9c: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x080669b0: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b10: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x080644ec: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x0806462c: inc edx; pop es; mov eax, edx; ret; 
0x08065c09: inc edx; pop es; pop edi; ret; 
0x08065e49: inc edx; pop es; ret; 
0x08060836: inc edx; pop es; sub eax, ecx; ret; 
0x080a6d51: inc edx; pop esp; add esp, 8; pop ebx; ret; 
0x080a8b22: inc edx; push 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x080d3663: inc edx; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080cac44: inc edx; push cs; and byte ptr [eax + 0xe], dl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d632f: inc edx; push cs; and byte ptr [eax + 0xe], dl; or al, 0x43; ret; 
0x080d12cc: inc edx; push cs; and byte ptr [ebp + 0xe], bh; or al, 0x41; ret; 
0x080cb6df: inc edx; push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d4f48: inc edx; push cs; and byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080d0910: inc edx; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0921: inc edx; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x08065dc3: inc edx; push cs; pop edi; ret; 
0x08065f23: inc edx; push cs; ret; 
0x08066990: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066af0: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x08066380: inc edx; push es; mov eax, edi; pop edi; ret; 
0x080664e0: inc edx; push es; mov eax, edx; ret; 
0x08065d0b: inc edx; push es; pop edi; ret; 
0x08065e3b: inc edx; push es; ret; 
0x080608a6: inc edx; push es; sub eax, ecx; ret; 
0x080a6d61: inc edx; push esp; add esp, 8; pop ebx; ret; 
0x080a8c29: inc edx; pushal; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x080c0ee6: inc edx; ret 0xac65; 
0x0805b772: inc edx; ret 0xc189; 
0x08091f4a: inc edx; ret 0xc3f6; 
0x0805eea7: inc edx; ret 0xf66; 
0x0805de75: inc edx; ret; 
0x0809c9c3: inc edx; sbb byte ptr [ecx - 0x2576b], cl; call dword ptr [eax - 0x18]; 
0x080d620d: inc edx; std; call dword ptr [ebx + 5]; 
0x0805e957: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080ceb2d: inc edx; sti; call dword ptr [eax]; 
0x0805e913: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806b31f: inc edx; test al, al; jne 0x23318; xor eax, eax; ret; 
0x0805e930: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0807c0c1: inc edx; xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x080adaa3: inc esi; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x0806be17: inc esi; adc bh, al; ret 0; 
0x0807b395: inc esi; adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x080a48c5: inc esi; adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0805306a: inc esi; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x08053156: inc esi; adc byte ptr [ebx - 0x7bf0ebaa], cl; sgdt [eax]; add byte ptr [ecx], bh; ret 0x44c7; 
0x0807d903: inc esi; add al, 0; add byte ptr [eax - 0x18], dl; ret; 
0x08049aa7: inc esi; add al, 0x5b; pop esi; pop edi; ret; 
0x08079ab8: inc esi; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08099dc9: inc esi; add al, 0x89; ret; 
0x0806e0ce: inc esi; add al, 0x8b; inc ecx; add al, 0x89; ret 0xe083; 
0x08072daa: inc esi; add al, 0x8d; and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x080c8fb9: inc esi; add byte ptr [eax], al; aam 0x31; stc; jmp dword ptr [edx]; 
0x0806ca92: inc esi; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x080c8fd5: inc esi; add byte ptr [eax], al; sub byte ptr [edx], dh; stc; call dword ptr [edi]; 
0x080d5a51: inc esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x08092214: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x08071931: inc esi; and byte ptr [ebp - 0x72128b40], al; add dword ptr [eax + 0x56], -3; call dword ptr [eax - 0x73]; 
0x0805348a: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x080c0b21: inc esi; clc; mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x0808f125: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a87f0: inc esi; dec esp; pop esi; pop edi; ret; 
0x080557b9: inc esi; or al, 0x5e; pop edi; jmp eax; 
0x080a47e2: inc esi; or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a1374: inc esi; or al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a11f1: inc esi; or al, 0x89; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0809dc9a: inc esi; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0809cc60: inc esi; or byte ptr [ebx + 0x5e5b24c4], al; pop edi; pop ebp; ret; 
0x080a46c4: inc esi; or byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x080998cc: inc esi; or byte ptr [ebx], al; pop es; call eax; 
0x0805255c: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x080a54a4: inc esi; or byte ptr [ecx - 0x4016f7bf], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x080d392e: inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2099: inc esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080caceb: inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c91af: inc esi; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080c8101: inc esi; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5ae6: inc esi; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c5d76: inc esi; or eax, dword ptr [ebx]; mov word ptr [ecx], es; push cs; adc al, 0x41; ret; 
0x080cbd2a: inc esi; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d613d: inc esi; or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080ce119: inc esi; or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080c6927: inc esi; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c91bb: inc esi; or ebp, dword ptr [esi + 0xa]; push cs; or al, 0x43; ret; 
0x080d422e: inc esi; or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d258a: inc esi; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d3e36: inc esi; or edi, dword ptr [eax + 0xa]; ret; 
0x080cd8f2: inc esi; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080c7df2: inc esi; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d3e45: inc esi; or esp, dword ptr [eax + 0xa]; ret; 
0x080c1f41: inc esi; pcmpeqw mm5, qword ptr [ebp - 0x5f]; mov cs, edi; ret 0x8b36; 
0x080add23: inc esi; pop ss; sti; inc dword ptr [ecx - 0x4e0004ec]; adc al, 0xfb; jmp ecx; 
0x080c7a06: inc esi; push cs; adc al, 0x41; ret; 
0x080d5bfc: inc esi; push cs; adc al, 0x43; ret; 
0x080c7c25: inc esi; push cs; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7657: inc esi; push cs; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d1211: inc esi; push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080d00a2: inc esi; push cs; adc byte ptr [ecx + 0xa], cl; ret; 
0x080cfee7: inc esi; push cs; adc byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7854: inc esi; push cs; adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x080d40b1: inc esi; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d2489: inc esi; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080c67c8: inc esi; push cs; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c6aa9: inc esi; push cs; mov al, byte ptr [0xa470201]; push cs; adc al, 0x41; ret; 
0x080cfb4b: inc esi; push cs; nop; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c6f7e: inc esi; push cs; xor byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x08050918: inc esi; ret 0x558d; 
0x08052846: inc esi; ret; 
0x0805335e: inc esi; sbb al, 0x89; ret 0x4489; 
0x08094dbe: inc esi; sbb al, 0x89; xchg dword ptr [eax], edi; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x08088832: inc esi; sbb byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0809edf8: inc esi; sbb byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x080adecd: inc esi; sti; call eax; 
0x080adedd: inc esi; sti; inc edx; inc esi; sti; jmp dword ptr [edx + 0x47]; 
0x080adee1: inc esi; sti; jmp dword ptr [edx + 0x47]; 
0x080adf31: inc esi; sti; push dword ptr [esi]; inc edi; sti; jmp esi; 
0x0805575c: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0808d9aa: inc esi; sub cl, ch; ret 0xfffd; 
0x08080f75: inc esi; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08089dea: inc esi; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0807e219: inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x080d30d1: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080c4f81: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080c5425: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080ccaad: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x080d26f1: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x080bf7e7: inc esp; aas; mov ch, 0x31; mov ah, bl; push esi; ret; 
0x08067df4: inc esp; adc al, dh; ret; 
0x08067e24: inc esp; adc byte ptr [eax], ah; ret; 
0x08067e14: inc esp; adc byte ptr [eax], dl; ret; 
0x080a126b: inc esp; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x080c6f04: inc esp; add byte ptr [eax], al; add al, dh; and eax, 0xd0940000; clc; call dword ptr [esi]; 
0x08067deb: inc esp; add dh, byte ptr [eax]; ret; 
0x0806ce01: inc esp; and al, 0x10; call 0x24cb0; add esp, 8; pop ebx; ret; 
0x080a7f05: inc esp; and al, 0x10; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x0806b300: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a920b: inc esp; and al, 0x14; call eax; 
0x0808e0e4: inc esp; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x080aa071: inc esp; and al, 0x18; add al, 0x83; ret; 
0x0807d9f6: inc esp; and al, 0x18; call dword ptr [eax + 0x1c]; 
0x080a8be0: inc esp; and al, 0x18; mov dword ptr [edx], eax; add esp, 8; pop ebx; ret; 
0x08050435: inc esp; and al, 0x18; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x080a8c9a: inc esp; and al, 0x1c; add esp, 0x28; pop ebx; ret; 
0x0809bf82: inc esp; and al, 0x20; call 0x53a20; add esp, 0x1c; ret; 
0x080aa28f: inc esp; and al, 0x20; call eax; 
0x08051101: inc esp; and al, 0x20; mov esi, dword ptr [ebp + 0x54]; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0804e5a4: inc esp; and al, 0x24; call eax; 
0x08052e67: inc esp; and al, 0x24; push eax; push esi; call dword ptr [edi + 0x48]; 
0x080a88f8: inc esp; and al, 0x28; call eax; 
0x080517eb: inc esp; and al, 0x28; push eax; call dword ptr [eax + 4]; 
0x0804e084: inc esp; and al, 0x2c; or eax, 0x83000000; ret 0xc702; 
0x08092580: inc esp; and al, 0x34; push eax; push dword ptr [ebp + 8]; call esi; 
0x08052aca: inc esp; and al, 0x34; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08078f2e: inc esp; and al, 0x38; call eax; 
0x0808fec2: inc esp; and al, 0x38; push eax; call esi; 
0x080738c8: inc esp; and al, 0x3c; call eax; 
0x08050c7b: inc esp; and al, 0x3c; push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x08073c31: inc esp; and al, 0x40; call eax; 
0x08092472: inc esp; and al, 0x40; push eax; push dword ptr [ebp]; call esi; 
0x080744d0: inc esp; and al, 0x44; call eax; 
0x080531da: inc esp; and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x080755d2: inc esp; and al, 0x48; call eax; 
0x08078561: inc esp; and al, 0x50; call eax; 
0x0806f5b5: inc esp; and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x080716bc: inc esp; and al, 0x5c; push dword ptr [eax + 4]; call edi; 
0x0806ce7b: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x08093658: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0808fb7d: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x08091c03: inc esp; and al, 0xc; pop edi; ret; 
0x0806ccc2: inc esp; and al, 0xc; xor eax, eax; lea edx, [esp + 4]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0808fd51: inc esp; and al, 4; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x08056f31: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ba1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x080a8c11: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8c51: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x080a8cc1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8cb1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c61: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080a8c41: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056c51: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b411: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0809d86f: inc esp; and al, 4; ret 0x14; 
0x0809d828: inc esp; and al, 4; ret 0xc; 
0x08056f41: inc esp; and al, 4; ret; 
0x080563dd: inc esp; and al, 8; add eax, ebx; pop ebx; ret; 
0x0806cb13: inc esp; and al, 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0807a248: inc esp; and al, 8; call edx; 
0x0806b022: inc esp; and al, 8; cld; pop edi; ret; 
0x0809ceb1: inc esp; and al, 8; mov dword ptr [eax], edx; ret; 
0x0809ee3a: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0805e8f6: inc esp; and al, 8; pop ebx; ret; 
0x0806aff8: inc esp; and al, 8; pop edi; ret; 
0x080744d2: inc esp; call eax; 
0x08049d74: inc esp; clc; add al, 0x89; ret; 
0x08067874: inc esp; cmp al, dh; pop edi; ret; 
0x080678a4: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x08067894: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x080972cd: inc esp; cmp esi, edi; call dword ptr [eax - 0x73]; 
0x0807fc9c: inc esp; idiv edi; dec dword ptr [ecx - 0x8634b]; call dword ptr [ecx - 0x77]; 
0x08089858: inc esp; idiv edi; dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x0808a396: inc esp; idiv edi; inc esi; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x080adec7: inc esp; inc ebp; sti; inc dword ptr [eax + 0x46]; sti; call eax; 
0x08093739: inc esp; lea edx, [esp + 8]; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x0809d6db: inc esp; mov eax, dword ptr [esi]; cmp eax, 0x31; jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0807c018: inc esp; nop; inc eax; ret; 
0x080d308c: inc esp; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d16d9: inc esp; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c6919: inc esp; or eax, dword ptr [edi + 0xa]; ret; 
0x080d4791: inc esp; or eax, dword ptr [edx]; bound ecx, qword ptr [edx]; push cs; adc al, 0x43; ret; 
0x080d2096: inc esp; or eax, dword ptr [edx]; inc esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8ddc: inc esp; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4483: inc esp; or ebx, dword ptr [esi + 0xa]; ret; 
0x080d2d46: inc esp; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5ed9: inc esp; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d4a79: inc esp; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080d15ba: inc esp; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d6d: inc esp; or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d5911: inc esp; or edx, dword ptr [ecx + 0xa]; ret; 
0x080d3d83: inc esp; or esi, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080cbe5e: inc esp; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c77f0: inc esp; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0809fd2f: inc esp; popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0807bf2d: inc esp; push -3; call dword ptr [eax - 0x73]; 
0x080d505f: inc esp; push cs; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080d2dc7: inc esp; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; ret; 
0x080ccc35: inc esp; push cs; mov al, byte ptr [0x700e4901]; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x080d40fd: inc esp; push cs; xor byte ptr [edx + 0xe], bl; or al, 0x44; ret; 
0x0806e1de: inc esp; push ds; add al, 0x8b; inc edx; add al, 0x89; ret 0xe283; 
0x080bf9ec: inc esp; push ds; mov ah, 0x13; ret; 
0x080531dc: inc esp; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0807b35e: inc esp; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x0809adf9: inc esp; rcl dword ptr [edx - 0x73], 1; nop; dec eax; cmp bh, dh; call dword ptr [edx + 0x6a]; 
0x0806e0bf: inc esp; ret 0x4189; 
0x0807c3b4: inc esp; ret 0x4489; 
0x0808f122: inc esp; ret 0x4689; 
0x08099f7b: inc esp; ret 0x4d89; 
0x0809aabf: inc esp; ret 0x558b; 
0x080994b2: inc esp; ret 0x578b; 
0x0806ea6a: inc esp; ret 0x66c3; 
0x08055a6e: inc esp; ret 0x689; 
0x08099333: inc esp; ret 0x6a; 
0x08094f7f: inc esp; ret 0x8b0c; 
0x0809ad44: inc esp; ret 0x8d50; 
0x080a6108: inc esp; ret 0x938d; 
0x080a566d: inc esp; ret 0x93e9; 
0x0809d3dd: inc esp; ret 0xc35f; 
0x0805db21: inc esp; ret 0xc483; 
0x0806fa10: inc esp; ret 0xc931; 
0x0809bd42: inc esp; ret 0xec83; 
0x0805d9b5: inc esp; ret 0xfa89; 
0x0806bbd1: inc esp; ret 0xff65; 
0x08092518: inc esp; ret 0xff85; 
0x0809b831: inc esp; ret; 
0x080a134e: inc esp; rol edi, cl; ret; 
0x0806eb4a: inc esp; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x080c0b1e: inc esp; sar byte ptr [esi + eax*2], 0xf8; mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x080c9761: inc esp; stc; jmp dword ptr [edi]; 
0x0806c21b: inc esp; std; call dword ptr [eax - 0x18]; 
0x0806c208: inc esp; std; call dword ptr [eax - 0x73]; 
0x0807539f: inc esp; std; dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x0807537c: inc esp; std; dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax - 0x73]; 
0x08054b6b: inc esp; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x080c5b7c: inc esp; xchg eax, ebx; clc; jmp dword ptr [edx]; 
0x08080f8c: inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808219c: inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08080cdd: inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08080622: inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x08081078: inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x080d5e84: insb byte ptr es:[edi], dx; adc eax, 0x35e80001; std; call dword ptr [eax]; 
0x0807d82f: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080cfdcc: insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x080d073c: insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [eax], ch; mov esi, 0x72c0000; cld; jmp edx; 
0x080cb60d: insb byte ptr es:[edi], dx; add byte ptr [eax], al; pushal; and edi, edx; jmp dword ptr [esi]; 
0x080a8b83: insb byte ptr es:[edi], dx; add byte ptr [esi + ebx*8 - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x080a62bc: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebp - 0x7e0b8a37], al; ret; 
0x0806c1ec: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080766d1: insb byte ptr es:[edi], dx; call edi; 
0x0805e62b: insb byte ptr es:[edi], dx; clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080a2c49: insb byte ptr es:[edi], dx; cli; dec dword ptr [ebp - 0x1606f7d]; call dword ptr [eax - 0x73]; 
0x08088c7f: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x52]; 
0x080894c4: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x57]; 
0x08088712: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x0808a6a7: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 1]; 
0x0807ead2: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx + 0xf]; 
0x0807f9f3: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx - 0x77]; 
0x0807f9ba: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x56]; 
0x08089168: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x6a]; 
0x08088dfd: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x08088ca7: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x08088bf6: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x08088483: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x08089481: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x08088b32: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x08088203: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; 
0x08088203: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; ret; 
0x08089c69: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88f6b]; call dword ptr [edx - 0x18]; 
0x08089978: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88f73]; call dword ptr [ecx + 0x6a]; 
0x0808a0c0: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x89773]; call dword ptr [ecx + 0x6a]; 
0x0808991f: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8a373]; call dword ptr [edx + 0x6a]; 
0x0808a27b: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8b373]; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x08087f98: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8df73]; jmp dword ptr [ebp - 0x75]; 
0x080c29fa: insb byte ptr es:[edi], dx; insd dword ptr es:[edi], dx; pop ebx; ret 0x6f9; 
0x0806fa0b: insb byte ptr es:[edi], dx; mov edi, 0x440f080d; ret 0xc931; 
0x080c5034: insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb07a: insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0805d87c: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080766cd: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x080744c5: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080cb629: insd dword ptr es:[edi], dx; add byte ptr [eax], al; je 0x83651; cli; jmp dword ptr [esi]; 
0x080cb6c1: insd dword ptr es:[edi], dx; add byte ptr [eax], al; pushfd; and edi, edx; call dword ptr [edi]; 
0x080c8db1: insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; push cs; adc al, 0x43; ret; 
0x080cb94d: insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; ret; 
0x08082b3a: insd dword ptr es:[edi], dx; cld; dec dword ptr [ebp - 0x1d9077d]; call dword ptr [eax + 0x68]; 
0x08067602: insd dword ptr es:[edi], dx; lea esi, [esi]; lea edi, [edi]; xor eax, eax; ret; 
0x080d024e: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8443: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8e6b: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c29fb: insd dword ptr es:[edi], dx; pop ebx; ret 0x6f9; 
0x080747f5: insd dword ptr es:[edi], dx; pop esp; std; call dword ptr [eax - 0x18]; 
0x080c0dad: insd dword ptr es:[edi], dx; ret 0xb9b9; 
0x080ced39: insd dword ptr es:[edi], dx; sti; call esp; 
0x080ced25: insd dword ptr es:[edi], dx; sti; jmp dword ptr [ebx]; 
0x080c1cbb: insd dword ptr es:[edi], dx; test eax, 0x7d4c8c5d; ret 0xd8f; 
0x080d1639: int 0; add ah, ah; and ah, bh; call edi; 
0x080c2120: int 0x6b; ret; 
0x08049533: int 0x80; 
0x0806f4c0: int 0x80; ret; 
0x080d3178: int 0xb3; cld; jmp dword ptr [eax]; 
0x080c0b66: int 0xdd; je 0x78b2f; xor al, 0xd8; ret; 
0x080bffd3: int 0xe0; fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x0805cb07: int 0xf; xchg eax, edi; ret 0x5de9; 
0x080ae019: int 0xfb; jmp dword ptr [edx - 0x32]; 
0x080ae015: int 0xfb; jmp ebx; 
0x080ae011: int 0xfb; ljmp [edi - 0x33]; sti; jmp ebx; 
0x080c43b1: int 0xfc; dec dword ptr [ebx]; int 0xfc; push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080c43b5: int 0xfc; push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080cf1b5: int 0xfd; jmp dword ptr [ebp]; 
0x08093811: int1; add al, 0; int 0x80; 
0x0805dbf1: int1; and al, 0xff; inc dword ptr [ecx + 0x7c40bc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080496ce: int1; call 0x64228; add esp, 4; pop ebx; pop esi; ret; 
0x080930d6: int1; call dword ptr gs:[0x10]; 
0x080ac4ac: int1; cmp al, 0xf7; jmp dword ptr [esi + 0x3d]; 
0x080c23d2: int1; dec ebx; ret 0x5803; 
0x0807c449: int1; mov eax, 0xaf; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x080913e2: int1; pop edi; ret; 
0x080bfb27: int1; push ds; and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x080cfb05: int1; sti; call dword ptr [eax + 1]; 
0x0808a6fd: int1; sti; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0804efd8: int1; sub ch, bh; call dword ptr [eax - 0x18]; 
0x08061da7: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0804d66d: into; add cl, byte ptr [ecx - 0x9fbdb8c]; ret 0xfbf; 
0x080c447d: into; cld; inc eax; into; cld; jmp eax; 
0x080c4481: into; cld; jmp eax; 
0x080c43cd: into; cld; push dword ptr [eax]; iretd; cld; call dword ptr [eax - 0x31]; 
0x080ce21d: into; cli; call dword ptr [esi + 3]; 
0x0806aca3: into; jmp ebx; 
0x08092210: into; jne 0x4a216; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x08073a3e: into; mov dl, 0xff; dec dword ptr [ebx - 0x72e7dba4]; add dword ptr [eax], 0x61; std; call dword ptr [eax + 0x68]; 
0x080adffd: into; sti; call dword ptr [esi]; 
0x080ae04d: into; sti; call eax; 
0x0809047e: into; stosb byte ptr es:[edi], al; std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080a37e9: iretd; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x62], -2; call dword ptr [eax - 0x18]; 
0x080c43d1: iretd; cld; call dword ptr [eax - 0x31]; 
0x080d420d: iretd; cld; call dword ptr [ecx]; 
0x080d41bd: iretd; cld; jmp dword ptr [esi]; 
0x080bfab3: iretd; dec ebx; ret 0xde9e; 
0x0806c372: iretd; inc ebx; std; call dword ptr [eax - 0x18]; 
0x0806f630: iretd; jmp edi; 
0x080c0b41: iretd; movsb byte ptr es:[edi], byte ptr [esi]; in eax, 0x24; outsd dx, dword ptr es:[esi]; ret 0x5ae4; 
0x080ab670: iretd; pop ebx; pop esi; pop edi; ret; 
0x080c1f49: iretd; ret 0x8b36; 
0x080ac3b4: iretd; stc; idiv bh; ret 0xf6f9; 
0x08076c7d: iretd; sub edi, ebp; dec dword ptr [ebx - 0x72c7dba4]; sub eax, 0x5d; std; call dword ptr [eax - 0x73]; 
0x0805d8f7: ja 0x15a30; mov ecx, dword ptr [ebx + eax*4 - 0x2c680]; add ecx, ebx; jmp ecx; 
0x080608f5: ja 0x188f9; neg eax; ret; 
0x08060ab5: ja 0x18ab9; neg eax; ret; 
0x08060c6d: ja 0x18c71; neg eax; ret; 
0x080622e6: ja 0x1a2ea; neg eax; ret; 
0x08062385: ja 0x1a389; neg eax; ret; 
0x08062e6c: ja 0x1ae70; neg eax; ret; 
0x08067012: ja 0x1f020; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0806a385: ja 0x22389; neg eax; add esp, 4; pop ebx; ret; 
0x0806a705: ja 0x22709; neg eax; pop edi; pop ebx; ret; 
0x0806c5c6: ja 0x24860; mov eax, dword ptr [ebx + esi*4 - 0x2bacc]; add eax, ebx; jmp eax; 
0x0806c93a: ja 0x24940; pop ebx; ret; 
0x0806c96a: ja 0x24970; pop ebx; ret; 
0x0806c9c3: ja 0x24a30; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0806ca78: ja 0x24a90; add esp, 4; pop ebx; pop esi; ret; 
0x0806cacc: ja 0x24b20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cb5e: ja 0x24b68; pop ebx; ret; 
0x0806cb9c: ja 0x24bf0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cc2e: ja 0x24c38; pop ebx; ret; 
0x0806cd56: ja 0x24d78; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cdf6: ja 0x24e10; add esp, 8; pop ebx; ret; 
0x0806ce44: ja 0x24e88; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806ceb6: ja 0x24ec0; pop ebx; ret; 
0x0806d70a: ja 0x25710; pop ebx; ret; 
0x0806d889: ja 0x25895; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0806ee7e: ja 0x26e61; mov dword ptr [eax + 0x18], ebx; mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x0806f626: ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x08070391: ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x08070317: ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aaf8]; add ecx, ebx; jmp ecx; 
0x0807c26a: ja 0x3426c; add byte ptr [eax], al; int 0x80; 
0x0808312b: ja 0x3b110; mov eax, ebx; pop ebx; pop esi; ret; 
0x0808d465: ja 0x4548f; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x0809337a: ja 0x4b380; pop ebx; ret; 
0x08093422: ja 0x4b488; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080934d7: ja 0x4b4f0; add esp, 4; pop ebx; pop esi; ret; 
0x08093549: ja 0x4b5a8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080935fd: ja 0x4b610; add esp, 4; pop ebx; pop esi; ret; 
0x0809381f: ja 0x4b828; xor eax, eax; pop ebx; ret; 
0x0809a7c3: ja 0x52c1e; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08099eb3: ja 0x52c1e; mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x08099769: ja 0x52c1e; mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x0809a3fb: ja 0x52c1e; mov edx, dword ptr [ebp - 0x64]; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x08099d53: ja 0x52c2f; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x080a11ab: ja 0x59277; mov eax, dword ptr [esi + 8]; mov ecx, dword ptr [ebx + eax*4 - 0x165c0]; add ecx, ebx; jmp ecx; 
0x080a173e: ja 0x59748; pop ebx; ret; 
0x080a6dec: ja 0x5f5b1; mov edi, dword ptr [ebp - 0x38]; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x080a7efe: ja 0x5fd2b; mov eax, dword ptr [esp + 0x10]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x0804d952: ja 0x602e; mov ecx, dword ptr [edi + eax*4 - 0x2db80]; add ecx, edi; jmp ecx; 
0x080a885e: ja 0x60864; push dword ptr [edi]; push ecx; push 1; call eax; 
0x080a8e16: ja 0x60e1c; push dword ptr [edi]; push 1; push 1; call eax; 
0x080c1f3d: ja 0x79f6c; pop es; inc esi; pcmpeqw mm5, qword ptr [ebp - 0x5f]; mov cs, edi; ret 0x8b36; 
0x080c2440: ja 0x7a3c5; ret 0x48f; 
0x080c3a40: ja 0x7bab4; cld; jmp eax; 
0x080c3a4c: ja 0x7bac0; cld; inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x080c3a5c: ja 0x7bad0; cld; push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x080c3a60: ja 0x7bad4; cld; jmp dword ptr [eax + 0x72]; 
0x080c4cd6: ja 0x7cce6; or al, 0x41; ret; 
0x080c5445: ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080cc9ee: ja 0x849fa; ret; 
0x080cf935: ja 0x87941; ret; 
0x080d037c: ja 0x88388; push cs; adc al, 0x41; ret; 
0x080d1522: ja 0x8952e; push cs; or al, 0x41; ret; 
0x0805eac0: jae 0x16a80; call 0x780; add ebx, 0x4ef61; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080626d9: jae 0x1a6e2; add byte ptr [eax], al; pop ebx; ret; 
0x08066c99: jae 0x1ec9d; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0806b058: jae 0x2305c; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0806ee9d: jae 0x26e5a; pop ebx; ret; 
0x0806c8b1: jae 0x290c0; ret; 
0x0808fbd0: jae 0x47c02; add esp, 4; pop ebx; pop esi; ret; 
0x0808fbef: jae 0x47c21; add esp, 4; pop ebx; pop esi; ret; 
0x0809d40f: jae 0x553cf; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x080a52a6: jae 0x558fc38e; mov al, 1; ret 0xd739; 
0x0809e8b6: jae 0x568bc; call 0x4fdd0; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0809e8f8: jae 0x568fe; call 0x4fdd0; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x080a1790: jae 0x5979d; mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080a4560: jae 0x5c540; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x080a61cf: jae 0x5e1d5; call 0x4fdd0; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x080a8915: jae 0x6091b; push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x080aa064: jae 0x6206a; push ebp; call edi; 
0x080c0a02: jae 0x789db; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x080c189a: jae 0x7986f; push esi; pop edx; je 0x79864; ret 0xacfc; 
0x080c3a3d: jae 0x7bab3; add byte ptr [edi + 0x72], dh; cld; jmp eax; 
0x080c68b0: jae 0x7e8bc; push cs; adc al, 0x43; ret; 
0x080c9224: jae 0x81230; push cs; adc al, 0x41; ret; 
0x080cbc3d: jae 0x83c3f; add byte ptr [eax], al; xor bh, dl; jmp dword ptr [ecx]; 
0x080cbca1: jae 0x83ca3; add byte ptr [edx + esi - 6], bl; jmp dword ptr [eax]; 
0x080cbcb5: jae 0x83cb7; add byte ptr [eax + 0x32], ch; cli; jmp dword ptr [esi]; 
0x080504a9: jae 0x84af; push ebp; push ecx; push edi; call dword ptr [edi + 0xc]; 
0x080cde15: jae 0x85e21; push cs; adc al, 0x41; ret; 
0x080d36bb: jae 0x8b6c7; ret; 
0x08050f81: jae 0x9520; push 0; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x0807fcdc: jae 0xb6036dc8; dec esp; idiv edi; call dword ptr [ecx - 1]; 
0x08053f38: jae 0xbf48; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08056bdb: jae 0xec0d; add esp, 4; pop ebx; pop esi; ret; 
0x08056bf4: jae 0xec26; add esp, 4; pop ebx; pop esi; ret; 
0x0805703c: jae 0xf060; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x080623a0: jb 0x1a3b0; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x08067553: jb 0x1f590; lea eax, [edi + 0xa]; pop edi; ret; 
0x08067495: jb 0x1f590; lea eax, [edi + 0xb]; pop edi; ret; 
0x08067563: jb 0x1f590; lea eax, [edi + 0xc]; pop edi; ret; 
0x08067573: jb 0x1f590; lea eax, [edi + 0xd]; pop edi; ret; 
0x08067583: jb 0x1f590; lea eax, [edi + 0xe]; pop edi; ret; 
0x080674be: jb 0x1f590; lea eax, [edi + 0xf]; pop edi; ret; 
0x080674e3: jb 0x1f590; lea eax, [edi + 1]; pop edi; ret; 
0x080674f3: jb 0x1f590; lea eax, [edi + 2]; pop edi; ret; 
0x0806742a: jb 0x1f590; lea eax, [edi + 3]; pop edi; ret; 
0x08067503: jb 0x1f590; lea eax, [edi + 4]; pop edi; ret; 
0x08067513: jb 0x1f590; lea eax, [edi + 5]; pop edi; ret; 
0x08067523: jb 0x1f590; lea eax, [edi + 6]; pop edi; ret; 
0x0806745b: jb 0x1f590; lea eax, [edi + 7]; pop edi; ret; 
0x08067533: jb 0x1f590; lea eax, [edi + 8]; pop edi; ret; 
0x08067543: jb 0x1f590; lea eax, [edi + 9]; pop edi; ret; 
0x0806de14: jb 0x25d9f; ret; 
0x08091d53: jb 0x49d90; lea eax, [eax + 0xa]; pop edi; ret; 
0x08091ca5: jb 0x49d90; lea eax, [eax + 0xb]; pop edi; ret; 
0x08091d63: jb 0x49d90; lea eax, [eax + 0xc]; pop edi; ret; 
0x08091d73: jb 0x49d90; lea eax, [eax + 0xd]; pop edi; ret; 
0x08091d83: jb 0x49d90; lea eax, [eax + 0xe]; pop edi; ret; 
0x08091cce: jb 0x49d90; lea eax, [eax + 0xf]; pop edi; ret; 
0x08091ce3: jb 0x49d90; lea eax, [eax + 1]; pop edi; ret; 
0x08091cf3: jb 0x49d90; lea eax, [eax + 2]; pop edi; ret; 
0x08091c3b: jb 0x49d90; lea eax, [eax + 3]; pop edi; ret; 
0x08091d03: jb 0x49d90; lea eax, [eax + 4]; pop edi; ret; 
0x08091d13: jb 0x49d90; lea eax, [eax + 5]; pop edi; ret; 
0x08091d23: jb 0x49d90; lea eax, [eax + 6]; pop edi; ret; 
0x08091c6e: jb 0x49d90; lea eax, [eax + 7]; pop edi; ret; 
0x08091d33: jb 0x49d90; lea eax, [eax + 8]; pop edi; ret; 
0x08091d43: jb 0x49d90; lea eax, [eax + 9]; pop edi; ret; 
0x080a174a: jb 0x59745; cld; jmp dword ptr [esi - 0x70]; 
0x080c3a41: jb 0x7ba3f; jmp eax; 
0x080c3a4d: jb 0x7ba4b; inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x080c3a51: jb 0x7ba4f; jmp dword ptr [eax]; 
0x080c3a59: jb 0x7ba57; push dword ptr [edi + 0x72]; cld; push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x080c3a5d: jb 0x7ba5b; push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x080c3a61: jb 0x7ba5f; jmp dword ptr [eax + 0x72]; 
0x080c3a38: jb 0x7ba9f; jno 0x7bab1; jae 0x7bab3; add byte ptr [edi + 0x72], dh; cld; jmp eax; 
0x080c7c4e: jb 0x7fc5a; ret; 
0x080c85bd: jb 0x805c0; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08050472: jb 0x83f7; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080cfeea: jb 0x87ef6; push cs; or al, 0x41; ret; 
0x080d480e: jb 0x8c81a; push cs; adc al, 0x43; ret; 
0x080d564d: jb 0x8d65d; add al, 0x54; add byte ptr [eax], al; add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x080645ce: jbe 0x1c5d0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08065c8e: jbe 0x1dc90; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x080675de: jbe 0x1f610; add eax, ecx; ret; 
0x080678b5: jbe 0x1f8f0; add eax, edi; pop edi; ret; 
0x080678c8: jbe 0x1f8f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x080678d8: jbe 0x1f8f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080678e8: jbe 0x1f8f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067e07: jbe 0x1fe09; lea edi, [edi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0806cdfe: jbe 0x24e00; mov eax, dword ptr [esp + 0x10]; call 0x24cb0; add esp, 8; pop ebx; ret; 
0x080701ae: jbe 0x281b0; call 0x910; add eax, 0x69e4b; lea eax, [eax + 0xaa0]; ret; 
0x080710a3: jbe 0x290a2; inc dword ptr [ecx + 0x68f5ac3]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x08071724: jbe 0x2972a; call edi; 
0x080792ae: jbe 0x312b0; call 0x910; add eax, 0x60d4b; mov eax, dword ptr [eax + 0x1974]; ret; 
0x0807f0f2: jbe 0x37ae0; sub esp, 4; push esi; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08081767: jbe 0x39769; lea edi, [edi]; jmp eax; 
0x08082c87: jbe 0x3ad38; sub esp, 4; push ebp; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x08089e2b: jbe 0x42637; sub esp, 4; push esi; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808eb36: jbe 0x46b64; sub esp, 4; push ebx; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x0808edde: jbe 0x46e0c; sub esp, 4; push ebx; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x0808f3ad: jbe 0x473e0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0808fa8f: jbe 0x47ac0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0808fd37: jbe 0x47d39; lea edi, [edi]; xor eax, eax; ret; 
0x08090684: jbe 0x48681; dec dword ptr [ebp - 0x48fdf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0809159e: jbe 0x495a0; and eax, 3; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915ae: jbe 0x495b0; and eax, 7; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915be: jbe 0x495c0; and eax, 0x1f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915ce: jbe 0x495d0; and eax, 0x3f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915de: jbe 0x495e0; and eax, 0x7f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915ee: jbe 0x495f0; and eax, 0x1ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809181e: jbe 0x49820; xor eax, eax; pop edi; ret; 
0x08092bd7: jbe 0x4abd9; lea edi, [edi]; mov eax, 2; ret; 
0x08092be7: jbe 0x4abe9; lea edi, [edi]; mov eax, 3; ret; 
0x08092bf7: jbe 0x4abf9; lea edi, [edi]; mov eax, 4; ret; 
0x08092c07: jbe 0x4ac09; lea edi, [edi]; mov eax, 5; ret; 
0x08092c17: jbe 0x4ac19; lea edi, [edi]; mov eax, 6; ret; 
0x08092c27: jbe 0x4ac29; lea edi, [edi]; mov eax, 7; ret; 
0x0809977e: jbe 0x51780; mov esi, dword ptr [ebp - 0x6c]; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x0809d6e1: jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0809dee2: jbe 0x55e6f; inc esp; ret; 
0x080a0fc9: jbe 0x58f56; mov bl, 0xa8; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x38728a0a], al; ret 0; 
0x080a1ade: jbe 0x59ae0; call eax; 
0x080a631e: jbe 0x5e320; call eax; 
0x080bfaae: jbe 0x77b03; sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x0804fc84: jbe 0x7e08; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x080c71f5: jbe 0x7f201; push cs; adc al, 0x41; ret; 
0x0804fec7: jbe 0x7f30; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x080c8bb7: jbe 0x80bc3; push cs; adc al, 0x43; ret; 
0x080cb1c6: jbe 0x831d2; push cs; or al, 0x41; ret; 
0x08050328: jbe 0x83b0; sub esp, 4; push esi; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x080cbf31: jbe 0x83f33; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080cce91: jbe 0x84e9d; push cs; adc al, 0x41; ret; 
0x080cd3a9: jbe 0x853b5; push cs; adc al, 0x41; ret; 
0x080cd605: jbe 0x85611; push cs; adc al, 0x41; ret; 
0x080d1be4: jbe 0x89bf0; push cs; adc al, 0x41; ret; 
0x08051664: jbe 0x966e; push ecx; push eax; push edi; call dword ptr [edi + 0xc]; 
0x08051c70: jbe 0x9c7a; push dword ptr [esi + 0xc]; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x08051c73: jbe 0x9c81; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x080524b7: jbe 0xa4e0; push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08052e5d: jbe 0xaf90; sub esp, 8; lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08053af0: jbe 0xbb08; sub esp, 4; push dword ptr [esp + 0x3c]; push edi; push ebp; call dword ptr [eax + 0x20]; 
0x08054306: jbe 0xc378; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x080544c4: jbe 0xc5f0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08054b6a: jbe 0xcbb0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0805588f: jbe 0xd821; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08055afa: jbe 0xdb30; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x08055b7d: jbe 0xdba0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x08055e24: jbe 0xdef0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x08056300: jbe 0xe330; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x08056e9e: jbe 0xeea0; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08056eb7: jbe 0xeeb9; lea edi, [edi]; mov eax, 0xffffffff; ret; 
0x08056ec7: jbe 0xeec9; lea edi, [edi]; xor eax, eax; ret; 
0x0804909e: je 0x10c4; or al, 0xc7; ret 0xbf88; 
0x08058cfc: je 0x10d10; mov dword ptr [eax + 0x1898], 0; ret; 
0x0805975b: je 0x11786; ret 0x448b; 
0x0805b8d1: je 0x138f7; sbb byte ptr [ebp - 0x2c6a77a], cl; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0805c1e3: je 0x141f0; lea eax, [ebx + 0x18a4]; call 0x26b90; pop ebx; ret; 
0x0805c48d: je 0x144b5; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x0805c494: je 0x144ba; and al, 0x56; call eax; 
0x0805c7ed: je 0x14815; add byte ptr [ebx + 0x525104ec], al; push ebx; call eax; 
0x0805c9a4: je 0x149ca; and al, 0x53; call eax; 
0x0805cbd4: je 0x14bfa; xor byte ptr [esi + 0x53], dl; call eax; 
0x0805d0a4: je 0x150ca; xor al, 0x55; call eax; 
0x0805e896: je 0x1689d; cmp cl, dl; je 0x1689d; inc eax; pop edi; ret; 
0x0805e89a: je 0x1689d; inc eax; pop edi; ret; 
0x0805f0fc: je 0x17100; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806083d: je 0x18865; add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0806088d: je 0x188b5; add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x08060c66: je 0x18c80; mov eax, 1; ja 0x18c71; neg eax; ret; 
0x0806237d: je 0x1a390; pop ebx; mov eax, 1; ja 0x1a389; neg eax; ret; 
0x0806443d: je 0x1c465; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x080481bf: je 0x1c6; call 0xf7fb8000; add esp, 8; pop ebx; ret; 
0x08066e46: je 0x1ee6e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08066e56: je 0x1ee7e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x08066e66: je 0x1ee8e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08066e76: je 0x1ee9e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08066e86: je 0x1eeae; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08066e96: je 0x1eebe; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x08066ea6: je 0x1eece; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x08066eb6: je 0x1eede; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ec6: je 0x1eeee; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ed6: je 0x1eefe; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066ee6: je 0x1ef0e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066ef6: je 0x1ef1e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066f06: je 0x1ef2e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08067356: je 0x1f37e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x08067366: je 0x1f38e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08067376: je 0x1f39e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 5]; pop edi; ret; 
0x08067386: je 0x1f3ae; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 6]; pop edi; ret; 
0x08067396: je 0x1f3be; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 8]; pop edi; ret; 
0x080673a6: je 0x1f3ce; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 9]; pop edi; ret; 
0x080673b6: je 0x1f3de; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x080673c6: je 0x1f3ee; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x080673d6: je 0x1f3fe; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x080673e6: je 0x1f40e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x080675d7: je 0x1f5f0; bsf ecx, ecx; sub edx, ecx; jbe 0x1f610; add eax, ecx; ret; 
0x080677a9: je 0x1f7fa; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0806785b: je 0x1f8ac; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x08067c4f: je 0x1fc60; bsf ecx, ecx; add eax, ecx; ret; 
0x08067c98: je 0x1fcb0; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x08067dd8: je 0x1fe24; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x08067e80: je 0x1fe60; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0806a973: je 0x228f8; ret 0x6610; 
0x0806aab1: je 0x22ab4; inc eax; pop edi; ret; 
0x0806ac55: je 0x22c58; inc eax; pop edi; pop esi; ret; 
0x0806b003: je 0x23013; call ecx; 
0x0806b4a3: je 0x234a6; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0806bb5f: je 0x23b68; xor eax, eax; ret; 
0x0806bb5a: je 0x23b70; cmp edx, 2; je 0x23b68; xor eax, eax; ret; 
0x0806bff3: je 0x24000; pop ebx; pop esi; pop edi; ret; 
0x0806ca5c: je 0x24a80; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806cddf: je 0x24e00; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806cf79: je 0x24f22; mov dword ptr [esp], esi; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x0806d7d9: je 0x257e0; add esp, 8; pop ebx; ret; 
0x0806d9e0: je 0x25a20; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0806e195: je 0x261bd; add byte ptr [ebx + 0x418b084f], cl; add al, 0x89; ret 0xe283; 
0x0806eb07: je 0x26b09; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806ebf4: je 0x26c04; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0806ee95: je 0x26ebd; add byte ptr [edi + eax*8 + 0x3b], bh; pop eax; or byte ptr [ebx - 0x45], dh; pop ebx; ret; 
0x0806f07d: je 0x270a5; add byte ptr [ebx - 0x397cfe39], al; sub al, 0x83; call dword ptr [esi]; 
0x0806f4a5: je 0x274cd; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0806f5b1: je 0x275d7; cmp dh, al; inc esp; and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x0806f76f: je 0x277cc; pop esi; pop edi; pop ebp; ret; 
0x080701ea: je 0x281f8; add esp, 4; pop ebx; pop esi; ret; 
0x0807020b: je 0x28220; mov dword ptr [ebx - 0x254], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080716b8: je 0x296de; xor byte ptr [ebx - 0xa3dbbc], cl; jo 0x296c6; call edi; 
0x080718fd: je 0x29912; sub esp, 0xc; push edi; call 0x28270; mov dword ptr [esp], esi; call edi; 
0x080738bc: je 0x2b8e2; dec esp; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x080738c0: je 0x2b8e6; dec eax; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x080738c4: je 0x2b8ea; dec eax; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x08073998: je 0x2b9be; dec eax; push dword ptr [esp + 0x48]; call esi; 
0x0807399c: je 0x2b9c2; dec eax; call esi; 
0x08073c25: je 0x2bc4b; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08073c29: je 0x2bc4f; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08073c2d: je 0x2bc53; pop eax; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08073e88: je 0x2beae; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08073e8c: je 0x2beb2; pop eax; call edi; 
0x08074238: je 0x2c25e; dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x0807423c: je 0x2c262; dec esp; call esi; 
0x080744c8: je 0x2c4ee; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080744cc: je 0x2c4f2; pop esp; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08074748: je 0x2c76e; pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x0807474c: je 0x2c772; pop esp; call edi; 
0x080749b0: je 0x2c9d6; push eax; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x080749b4: je 0x2c9da; push eax; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074b26: je 0x2cb4c; push eax; push dword ptr [esp + 0x50]; call edi; 
0x08074b2a: je 0x2cb50; push eax; call edi; 
0x08074d17: je 0x2cd3d; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08074d1b: je 0x2cd41; push esp; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08074e98: je 0x2cebe; cmp al, 1; ret; 
0x080750fc: je 0x2d122; push esp; push dword ptr [esp + 0x54]; call edi; 
0x08075100: je 0x2d126; push esp; call edi; 
0x080755ca: je 0x2d5f0; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080755ce: je 0x2d5f4; push esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080758a6: je 0x2d8cc; add al, 0x89; ret 0xe183; 
0x080759cd: je 0x2d9f3; push esp; push dword ptr [esp + 0x54]; call edi; 
0x080759d1: je 0x2d9f7; push esp; call edi; 
0x080766cb: je 0x2e6f1; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call edi; 
0x080766cf: je 0x2e6f5; insb byte ptr es:[edi], dx; call edi; 
0x08076fd8: je 0x2effe; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08076fdc: je 0x2f002; pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080772f8: je 0x2f31e; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x080772fc: je 0x2f322; pop eax; call edi; 
0x08077639: je 0x2f65f; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0807763d: je 0x2f663; pop eax; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080777bb: je 0x2f7e1; and byte ptr [ecx], al; ret 0xd539; 
0x08077a2c: je 0x2fa52; pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08077a30: je 0x2fa56; pop eax; call edi; 
0x08077f08: je 0x2ff2e; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08077f0c: je 0x2ff32; push esp; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08078228: je 0x3024e; push esp; push dword ptr [esp + 0x54]; call edi; 
0x0807822c: je 0x30252; push esp; call edi; 
0x08078559: je 0x3057f; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807855d: je 0x30583; pushal; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807891d: je 0x30943; pushal; push dword ptr [esp + 0x60]; call edi; 
0x08078921: je 0x30947; pushal; call edi; 
0x08078f22: je 0x30f48; push esp; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08078f26: je 0x30f4c; dec esp; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08078f2a: je 0x30f50; dec esp; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0807900b: je 0x31031; dec esp; push dword ptr [esp + 0x4c]; call edi; 
0x0807900f: je 0x31035; dec esp; call edi; 
0x080792bc: je 0x312d7; add byte ptr [eax], al; ret; 
0x08079a5b: je 0x31a68; add esp, 4; pop ebx; pop esi; ret; 
0x0807a245: je 0x32251; mov dword ptr [esp + 8], eax; call edx; 
0x0807a45e: je 0x32462; call edx; 
0x0807b399: je 0x333a4; sub esp, 0xc; push esi; call eax; 
0x0807c3cd: je 0x343f5; add byte ptr [ebx - 0x17fbdbbc], cl; or eax, 0x81fffd3d; ret 0xdc27; 
0x0807c6ac: je 0x346d2; or byte ptr [ecx], bh; ret; 
0x0807c87b: je 0x348a1; and byte ptr [ecx], bh; ret 0x4e8d; 
0x0807cf7f: je 0x34fa5; sbb al, 0xe8; or dword ptr [edi*8 + 0x10c483ff], ebx; add esp, 8; pop ebx; ret; 
0x0807d003: je 0x35029; sub al, 0xe8; add eax, 0x83000000; les ebp, ptr [eax]; pop ebx; ret; 
0x0807fcda: je 0x37d00; jae 0xb6036dc8; dec esp; idiv edi; call dword ptr [ecx - 1]; 
0x08081a35: je 0x39a5d; add byte ptr [ebx - 0x4837b], cl; jmp dword ptr [ebp - 0x39]; 
0x08081cfd: je 0x39d25; add byte ptr [eax - 0x4ab43], al; jmp dword ptr [eax]; 
0x0808618b: je 0x3e1b1; adc al, 0x89; ret; 
0x08086cdd: je 0x3ed05; add dh, dh; ret 0xf08; 
0x080874c1: je 0x3f4e7; add al, 0xf; mov esi, 0xc75f2444; ret 0xfff0; 
0x0808c385: je 0x443ad; add byte ptr [ebx - 0x49f43], al; jmp dword ptr [eax]; 
0x0808dfbd: je 0x45fe5; add dh, dh; ret 0x7504; 
0x0808e1d5: je 0x461fd; add al, ch; ret; 
0x0808eac5: je 0x46aed; add byte ptr [ebx + 0x106a04ec], al; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x0808eace: je 0x46af4; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x0808ed6d: je 0x46d95; add byte ptr [ebx + 0x106a04ec], al; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x0808ed76: je 0x46d9c; adc al, 0x55; call dword ptr [ebx + 0x1c]; 
0x0808f570: je 0x47580; add esp, 8; pop ebx; ret; 
0x0808f790: je 0x477b6; adc byte ptr [ebx + 0x5e5b1447], cl; pop edi; jmp eax; 
0x0808f8e0: je 0x47906; adc byte ptr [ebx + 0x5e5b1047], cl; pop edi; jmp eax; 
0x0808f8ed: je 0x47915; add byte ptr [ebx - 0x75], bl; add bl, byte ptr [esi + 0x5f]; ret; 
0x0808fa9f: je 0x47aa4; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0808faf9: je 0x47afe; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0808fb05: je 0x47b2d; add byte ptr [ebx + 0x94b3], cl; add bh, al; ret 0xafc0; 
0x080913e6: je 0x4940e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xe]; pop edi; ret; 
0x080913f6: je 0x4941e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xd]; pop edi; ret; 
0x08091406: je 0x4942e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xb]; pop edi; ret; 
0x08091416: je 0x4943e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 0xa]; pop edi; ret; 
0x08091426: je 0x4944e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 9]; pop edi; ret; 
0x08091436: je 0x4945e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 7]; pop edi; ret; 
0x08091446: je 0x4946e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 6]; pop edi; ret; 
0x08091456: je 0x4947e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 5]; pop edi; ret; 
0x08091466: je 0x4948e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 3]; pop edi; ret; 
0x08091476: je 0x4949e; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 2]; pop edi; ret; 
0x08091486: je 0x494ae; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edi - 1]; pop edi; ret; 
0x08091496: je 0x494be; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x080916bf: je 0x49820; bsr eax, eax; add eax, edi; pop edi; ret; 
0x08091de7: je 0x49eea; mov eax, 4; pop edi; ret; 
0x08091e40: je 0x49efe; mov eax, 8; pop edi; ret; 
0x08091e90: je 0x49f12; mov eax, 0xc; pop edi; ret; 
0x08091ec2: je 0x49f26; cmp byte ptr [edx + 0xf], 0; je 0x49f26; mov eax, 0x10; pop edi; ret; 
0x08091ec8: je 0x49f26; mov eax, 0x10; pop edi; ret; 
0x08091fa5: je 0x49fcd; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x08092050: je 0x4a030; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0809226c: je 0x4a292; sbb al, 0xe8; fmul qword ptr [ebp + edi*8 + 0x18c483ff]; pop ebx; ret; 
0x08092b77: je 0x4ab90; mov cl, dl; and cl, 0xf; je 0x4aba0; ret; 
0x08092b7e: je 0x4aba0; ret; 
0x08092b95: je 0x4abb0; add eax, 2; ret; 
0x08092ebd: je 0x4aee5; add byte ptr [ebx - 0x18], dl; mov edx, 0x81fffb58; ret; 
0x080933a4: je 0x4b3ca; sbb al, 0x75; pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080934bc: je 0x4b4e0; mov ecx, dword ptr [esp + 0x14]; mov eax, 0x127; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x08093559: je 0x4b57f; sub al, 0xeb; ret 0x9066; 
0x08093737: je 0x4b75d; inc esp; lea edx, [esp + 8]; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x08098a83: je 0x50aa9; adc al, 0xc7; ret 0; 
0x08098ee0: je 0x50f00; sub esp, 0xc; mov eax, 0x80daa24; push ebx; call dword ptr [eax]; 
0x08098fd1: je 0x50ff7; adc bh, al; ret 0xa9f0; 
0x08099d3b: je 0x52a98; lea esi, [esi]; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0809b82d: je 0x53855; add bh, al; inc esp; ret; 
0x0809c91d: je 0x54945; add byte ptr [ebx - 0x26b73], cl; jmp dword ptr [ebp - 0x7d]; 
0x0809cca5: je 0x54ccd; add bl, dh; ret; 
0x0809d16e: je 0x55194; add al, 0x8b; je 0x55198; and al, 0xc7; ret 0xbce0; 
0x0809d172: je 0x55198; and al, 0xc7; ret 0xbce0; 
0x0809d6da: je 0x55720; mov eax, dword ptr [esi]; cmp eax, 0x31; jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0804d670: je 0x5696; add al, 0xf6; ret 0xfbf; 
0x0809e9a1: je 0x569c7; sbb byte ptr [ebp - 0x1b9bf7d], cl; call dword ptr [eax + 0x56]; 
0x080a0c44: je 0x58c52; lea eax, [ebx + 0x1aac]; mov dword ptr [ebx + 0x1aa8], eax; add esp, 8; pop ebx; ret; 
0x080a1a67: je 0x59a8d; or bh, al; ret 0xbf40; 
0x080a21ed: je 0x5a215; add byte ptr [ebp - 0x162e77d], cl; call dword ptr [eax + 0x68]; 
0x080a2b8d: je 0x5abb5; add byte ptr [ebx + 0x4c8b01e8], al; ret 0x850c; 
0x080a3031: je 0x5b03a; mov eax, dword ptr [esi]; add eax, dword ptr [edx + 4]; call eax; 
0x080a388c: je 0x5ba65; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x080a3dc2: je 0x5bdd0; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x080a4159: je 0x5c160; add esp, 8; pop ebx; ret; 
0x080a5828: je 0x5d84e; xor al, 0x56; push ebx; call eax; 
0x080a5864: je 0x5d88a; xor al, 0x57; push esi; call dword ptr [ebx]; 
0x080a598d: je 0x5d9b5; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080a59d6: je 0x5d9fc; inc eax; call dword ptr [ebx]; 
0x080a5d35: je 0x5dd5d; add byte ptr [ebp - 0x15cb37d], cl; call dword ptr [eax - 0x73]; 
0x080a66e5: je 0x5e70b; or al, 0xb; je 0x5e70f; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080a66e9: je 0x5e70f; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080a6831: je 0x5e857; or al, 0xb; je 0x5e85b; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080a6835: je 0x5e85b; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080a8b85: je 0x60b65; add esp, 8; pop ebx; ret; 
0x080a8bf5: je 0x60bd2; mov ecx, dword ptr [esp + 0x18]; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080a8c4d: je 0x60c75; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x080a8f41: je 0x60f4e; mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a911c: je 0x61129; sub esp, 8; push edx; push 1; call eax; 
0x080a9207: je 0x6122d; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x080a9254: je 0x6127a; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x080aa1a5: je 0x621cd; add byte ptr [ecx - 0x7cf769b4], cl; ret 0x8301; 
0x080abaee: je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x080abdbd: je 0x63dcc; sub esp, 0xc; push eax; call edx; 
0x0804e59b: je 0x65c1; sbb al, 0xff; aaa; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080adc60: je 0x65c75; sti; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x0804e5e7: je 0x660d; sbb al, 0x55; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e6e4: je 0x670a; sbb al, 0x55; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e793: je 0x67b9; sbb al, 0x57; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e7ff: je 0x6825; sbb al, 0x57; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804ea95: je 0x6abd; add bh, al; ret 0xffe0; 
0x0804f133: je 0x7159; sub al, 0xe8; add eax, 0x83000000; les ebp, ptr [eax]; pop ebx; ret; 
0x080c0b68: je 0x78b2f; xor al, 0xd8; ret; 
0x080c0c73: je 0x78c8f; or eax, 0x381e4bdc; shl dword ptr [edi - 0x3ad6d59f], cl; fcomp qword ptr [edi - 0x4a]; dec esi; ret 0x474c; 
0x080c189e: je 0x79864; ret 0xacfc; 
0x080c3a3e: je 0x7ba40; ja 0x7bab4; cld; jmp eax; 
0x080487a3: je 0x7c0; push ebp; mov ebp, esp; sub esp, 0x14; push 0x80daf80; call eax; 
0x080c8e8c: je 0x80ed3; add byte ptr [eax], al; xor byte ptr [ecx + edi*8], ch; call dword ptr [edx]; 
0x080c958c: je 0x815da; add byte ptr [eax], al; and byte ptr [ecx - 7], al; jmp edi; 
0x08048805: je 0x82d; add bl, dh; ret; 
0x080caf8c: je 0x82ff4; add byte ptr [eax], al; nop; sbb edx, edi; jmp dword ptr [esi]; 
0x080cb62c: je 0x83651; cli; jmp dword ptr [esi]; 
0x080cba8c: je 0x83abe; cli; jmp dword ptr [eax]; 
0x080cbb50: je 0x83b5c; push cs; adc al, 0x41; ret; 
0x080cbe60: je 0x83e6c; push cs; adc al, 0x41; ret; 
0x080cc4b8: je 0x844c4; push cs; adc al, 0x41; ret; 
0x080cf9ec: je 0x879f8; push cs; adc al, 0x41; ret; 
0x080d3d08: je 0x8bd14; ret; 
0x080515cc: je 0x95f2; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x08051c3f: je 0x9cd2; mov ebp, dword ptr [esi + 0x54]; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x0805223d: je 0xa265; add byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x080523b7: je 0xa3be; add esp, 8; pop ebx; ret; 
0x080524ba: je 0xa4e0; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08052660: je 0xa686; adc al, 0xff; je 0xa68a; adc al, 0x57; call dword ptr [ebx + 0x3c]; 
0x08052664: je 0xa68a; adc al, 0x57; call dword ptr [ebx + 0x3c]; 
0x08053acd: je 0xbaf5; add byte ptr [ebx + 0x9485], cl; add bh, al; ret 0xafc0; 
0x08053ae3: je 0xbb09; add al, 0x89; ret; 
0x08053af6: je 0xbb1c; cmp al, 0x57; push ebp; call dword ptr [eax + 0x20]; 
0x08053bec: je 0xbc12; cmp al, 0x56; call dword ptr [ebx + 0x38]; 
0x08055cf2: je 0xdd18; and bh, al; ret 0xafc0; 
0x08055f4d: je 0xdf73; cmp byte ptr [edx], ch; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08056ead: je 0xeed5; add byte ptr [eax - 1], bh; ret; 
0x08057ebb: je 0xfed0; sub edx, 1; mov dword ptr [eax + 0x450], edx; add esp, 8; pop ebx; ret; 
0x0805e8c7: jecxz 0x168b9; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805e9b9: jecxz 0x16948; mov dh, 0; add byte ptr [eax], al; add al, ch; mov ebx, 0x81fffe9d; ret; 
0x0806287f: jecxz 0x1a886; add byte ptr [eax], al; pop ebx; ret; 
0x08067a5e: jecxz 0x1f9e3; ret 0x6640; 
0x0806aeff: jecxz 0x22e84; ret 0x8304; 
0x08080021: jecxz 0x38022; dec dword ptr [ecx - 0x87f73]; call dword ptr [ecx + 0x51]; 
0x0808007e: jecxz 0x3807f; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0808312c: jecxz 0x3b0b7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0809ac3b: jecxz 0x52c3c; jmp dword ptr [esi - 0x70]; 
0x0809c054: jecxz 0x53fe1; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0809f2f0: jecxz 0x5727b; pop ds; pop ebx; pop esi; pop edi; ret; 
0x080a0654: jecxz 0x585df; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x080a09d6: jecxz 0x589d4; jmp dword ptr [esi - 0x70]; 
0x080a4773: jecxz 0x5c75d; xchg eax, edi; movsd dword ptr es:[edi], dword ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x080ab902: jecxz 0x6395f; pop esi; pop edi; ret; 
0x080ae018: jecxz 0x65fe7; sti; jmp dword ptr [edx - 0x32]; 
0x080bf7ed: jecxz 0x77845; ret; 
0x080c48a9: jecxz 0x7c8a7; jmp dword ptr [eax - 0x1c]; 
0x080c7839: jecxz 0x7f833; call dword ptr [edi]; 
0x080ce5dd: jecxz 0x865d9; call dword ptr [ebx + 3]; 
0x0805eb18: jg 0x16b5c; jo 0x16a9d; ret 0x80; 
0x0805ebe0: jg 0x16c24; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec10: jg 0x16c54; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec70: jg 0x16cb4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805eccb: jg 0x16d0f; fisub dword ptr [esi + 0xf]; jg 0x16d14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805ecd0: jg 0x16d14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805ed40: jg 0x16d84; call 0x42d77cad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ee66: jg 0x16eaa; ret; 
0x0805eea6: jg 0x16eea; ret 0xf66; 
0x0805f160: jg 0x171a4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805f190: jg 0x171d4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805f1f0: jg 0x17234; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805f24b: jg 0x1728f; fisub dword ptr [esi + 0xf]; jg 0x17294; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805f250: jg 0x17294; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0805f2c0: jg 0x17304; call 0x42d7822d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805f3e6: jg 0x1742a; ret; 
0x0805f426: jg 0x1746a; ret 0xf66; 
0x08064436: jg 0x1c43a; mov eax, edi; pop edi; ret; 
0x080646c6: jg 0x1c6ca; mov eax, edx; ret; 
0x08065c86: jg 0x1dc8a; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f36: jg 0x1df3a; lea eax, [edx + 0xf]; ret; 
0x0806b56f: jg 0x235aa; ret 0x2c77; 
0x08070dea: jg 0x28dd5; xor ch, 0xff; dec dword ptr [ebp - 0x2acd47d]; call dword ptr [edx + 0x6a]; 
0x08076065: jg 0x2dff0; ret; 
0x08076598: jg 0x2e610; aad 0x2d; ret 0; 
0x0807e0bd: jg 0x360ea; push ebp; adc byte ptr [ecx], bh; ret 0x820f; 
0x0807e130: jg 0x3615d; inc ebp; adc byte ptr [ecx], bh; ret 0x8f0f; 
0x08080df0: jg 0x38e1d; test dword ptr [eax + 0x39fffffb], edx; ret 0x870f; 
0x08081a24: jg 0x39a51; test dword ptr [eax + 0x39fffffb], edx; ret 0x860f; 
0x080824ee: jg 0x3a519; ret 0xd639; 
0x0808859d: jg 0x405ca; push ebp; adc byte ptr [ecx], bh; ret 0x820f; 
0x08088616: jg 0x40643; inc ebp; adc byte ptr [ecx], bh; ret 0x8f0f; 
0x08088ec8: jg 0x40e90; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0808b432: jg 0x4345f; test dword ptr [eax + 0x39fffffb], esp; ret 0x870f; 
0x0808c5fc: jg 0x44629; test dword ptr [eax + 0x39fffffb], esp; ret 0x870f; 
0x0808cc3f: jg 0x44c6a; ret 0xd639; 
0x0809df53: jg 0x55ee0; inc esp; ret; 
0x0809dfdf: jg 0x55f6e; pop esp; ret; 
0x080a124d: jg 0x592be; cli; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x080c76f5: jg 0x7f701; ret; 
0x080c7749: jg 0x7f755; ret; 
0x080d0107: jg 0x88113; ret; 
0x080d3ce2: jg 0x8bcee; ret; 
0x080d608d: jg 0x8e099; push cs; adc al, 0x41; ret; 
0x08051efd: jg 0x9ecb; add eax, dword ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0806d97e: jge 0x25980; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0809135f: jge 0x49361; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x08092228: jge 0x4a22e; add byte ptr [ebx - 0x39], dl; ret; 
0x08099381: jge 0x5131f; mov edx, dword ptr [edi + esi*4 - 0x1c4c0]; add edx, edi; jmp edx; 
0x08099784: jge 0x5178e; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x080998c9: jge 0x518d3; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edi]; call eax; 
0x0809a469: jge 0x523ff; mov ecx, dword ptr [ebp + 8]; add esi, 8; mov eax, dword ptr [edi]; add eax, dword ptr [ecx]; call eax; 
0x080a2751: jge 0x5a71a; add byte ptr [ecx - 0x74ed8b07], cl; inc ebp; aam 0xc7; ret 0xbee8; 
0x080a6df3: jge 0x5edbd; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x080a8e4b: jge 0x60e49; leave; ret; 
0x080a8e5c: jge 0x60e5a; leave; ret; 
0x080a8ede: jge 0x60edc; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a8f4a: jge 0x60f48; leave; ret; 
0x080a8f81: jge 0x60f7f; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a9036: jge 0x61034; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a90bd: jge 0x610bb; leave; ret; 
0x080a90fe: jge 0x610fc; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080cc61d: jge 0x8461f; add byte ptr [eax], dl; std; jmp dword ptr [esi]; 
0x080cc699: jge 0x8469b; add ah, dh; push ecx; cli; call dword ptr [ecx]; 
0x080cc6ad: jge 0x846af; add byte ptr [eax], al; push edx; cli; call dword ptr [ecx]; 
0x080d12cf: jge 0x892df; or al, 0x41; ret; 
0x080d15ae: jge 0x895ba; push cs; or al, 0x41; ret; 
0x080d3699: jge 0x8b6e6; ret; 
0x080d3ed1: jge 0x8bedd; push cs; or al, 0x41; ret; 
0x080d5422: jge 0x8d42e; push cs; adc al, 0x41; ret; 
0x0805a344: jl 0x1236a; and al, 0x29; ret 0xc701; 
0x080492d1: jl 0x132e; pop esi; pop edi; pop ebp; ret; 
0x0805d409: jl 0x1542f; adc al, 0x8d; xchg dword ptr [eax + 0x38], esp; std; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x0806ee98: jl 0x26e61; cmp ebx, dword ptr [eax + 8]; jae 0x26e5a; pop ebx; ret; 
0x0806ee5d: jl 0x26e80; jle 0x26e7b; pop ebx; ret; 
0x08070149: jl 0x2819c; std; call dword ptr [eax - 0x18]; 
0x08074d8f: jl 0x2cdec; pop esi; pop edi; pop ebp; ret; 
0x080775cd: jl 0x2f62a; pop esi; pop edi; pop ebp; ret; 
0x080784ed: jl 0x3054a; pop esi; pop edi; pop ebp; ret; 
0x08078e78: jl 0x30ed5; pop esi; pop edi; pop ebp; ret; 
0x08079416: jl 0x31473; pop esi; pop edi; pop ebp; ret; 
0x08079cf2: jl 0x31d0d; add byte ptr [eax], al; call 0x26370; add esp, 0x18; pop ebx; ret; 
0x0807a6b8: jl 0x326de; add al, 0x89; fisttp word ptr [edi]; xchg eax, esp; ret; 
0x0808e14e: jl 0x461ab; pop esi; pop edi; pop ebp; ret; 
0x0808edff: jl 0x46e5c; pop esi; pop edi; pop ebp; ret; 
0x08091e92: jl 0x49e94; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x08096f23: jl 0x4ef25; add byte ptr [ebp - 0x1c9bb7d], cl; call dword ptr [eax - 0x73]; 
0x080980e6: jl 0x5010c; sbb bh, al; ret 0x9da4; 
0x0809810b: jl 0x50131; xor al, 0x8d; xchg eax, edx; cmp dh, bh; call dword ptr [eax - 0x18]; 
0x08098459: jl 0x5047f; sbb bh, al; ret 0x9da4; 
0x080a44fe: jl 0x5c524; adc bh, al; ret 0x9da4; 
0x080a7c3c: jl 0x5fc62; adc byte ptr [edi], cl; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x080a8b81: jl 0x60b94; insb byte ptr es:[edi], dx; add byte ptr [esi + ebx*8 - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x080c1fe3: jl 0x79f6d; outsd dx, dword ptr [esi]; aad 8; stosd dword ptr es:[edi], eax; ret; 
0x080c5cbc: jl 0x7dcc8; push cs; adc al, 0x41; ret; 
0x080cc5e5: jl 0x845e7; add al, bl; std; jmp dword ptr [ebx]; 
0x080cc809: jl 0x84815; push cs; adc al, 0x41; ret; 
0x080ce6a5: jl 0x866b1; push cs; adc al, 0x41; ret; 
0x080ce7dc: jl 0x867e8; push cs; adc al, 0x41; ret; 
0x080d3d59: jl 0x8bd65; push cs; adc al, 0x46; ret; 
0x080d56f4: jl 0x8d70c; std; jmp dword ptr [edx + 8]; 
0x080d6204: jl 0x8e206; add byte ptr [eax], al; lock sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x08053b5d: jl 0xbb83; cmp byte ptr [edi], cl; xchg dl, ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x38fbdbac], cl; ret; 
0x0805403d: jl 0xc063; cmp byte ptr [ebx + 0x94ae], cl; add bh, al; ret 0xafc0; 
0x08049092: jle 0x1096; add byte ptr [ebp + 0x5880fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db8c], cl; ret 0xbf88; 
0x0806ee5f: jle 0x26e7b; pop ebx; ret; 
0x0806ee58: jle 0x26e98; cmp edx, dword ptr [eax + 0x14]; jl 0x26e80; jle 0x26e7b; pop ebx; ret; 
0x08073219: jle 0x2b21a; jmp dword ptr [esi - 0x77]; 
0x08077cce: jle 0x2fceb; std; dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08082e58: jle 0x3ad73; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0808f34e: jle 0x473b0; cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080aa282: jle 0x62283; push dword ptr [esp + 0xc]; push dword ptr [ebx]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x080adffc: jle 0x65fcc; sti; call dword ptr [esi]; 
0x080c1eb6: jle 0x79e51; mov edi, 0x99b51319; in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x080c205f: jle 0x79fea; xor eax, ebx; repne scasd eax, dword ptr es:[edi]; daa; push esp; syscall; 
0x0804fc86: jle 0x7c89; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x080c5ad2: jle 0x7dade; push cs; adc al, 0x43; ret; 
0x080c8ff1: jle 0x80ffd; ret; 
0x080cbe4a: jle 0x83e56; push cs; adc al, 0x41; ret; 
0x080cc741: jle 0x84743; add ah, bh; pop esp; cli; call dword ptr [edi]; 
0x080d0cdc: jle 0x88ce8; ret; 
0x080d19c9: jle 0x899d5; push cs; adc al, 0x41; ret; 
0x080d5fc4: jle 0x8dfd0; push cs; adc al, 0x43; ret; 
0x08051897: jle 0x981c; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080ae0a3: jmp dword ptr [eax + 0x16]; 
0x080ae5d7: jmp dword ptr [eax + 0x28]; 
0x080bc927: jmp dword ptr [eax + 0x35]; 
0x080bcadb: jmp dword ptr [eax + 0x37]; 
0x080bcb5f: jmp dword ptr [eax + 0x3b]; 
0x080bcc3f: jmp dword ptr [eax + 0x3c]; 
0x080aee57: jmp dword ptr [eax + 0x58]; 
0x080c3a63: jmp dword ptr [eax + 0x72]; 
0x080b035f: jmp dword ptr [eax + 0xf]; 
0x080c48ab: jmp dword ptr [eax - 0x1c]; 
0x080c44bb: jmp dword ptr [eax - 0x21]; 
0x080c43f7: jmp dword ptr [eax - 0x2f]; 
0x080c43bb: jmp dword ptr [eax - 0x34]; 
0x080c48b7: jmp dword ptr [eax - 0xc]; 
0x080c48af: jmp dword ptr [eax - 0xd]; 
0x0807e21f: jmp dword ptr [eax]; 
0x080722c6: jmp dword ptr [ebp + 0x33]; 
0x0807c02f: jmp dword ptr [ebp + 3]; 
0x0804f182: jmp dword ptr [ebp - 0x39]; 
0x080801e1: jmp dword ptr [ebp - 0x5f]; 
0x08049f25: jmp dword ptr [ebp - 0x75]; 
0x0805499a: jmp dword ptr [ebp - 0x77]; 
0x080492dc: jmp dword ptr [ebp - 0x7d]; 
0x0805d0ff: jmp dword ptr [ebp - 0x80]; 
0x0804f0e4: jmp dword ptr [ebp - 1]; 
0x080c76a3: jmp dword ptr [ebp]; 
0x080bcc07: jmp dword ptr [ebx + 0x3d]; 
0x080c5447: jmp dword ptr [ebx + 1]; 
0x080bf592: jmp dword ptr [ebx - 0x40]; 
0x08052bd0: jmp dword ptr [ebx]; 
0x080ad9eb: jmp dword ptr [ecx + 0xf]; 
0x080c4cef: jmp dword ptr [ecx + 1]; 
0x080ae023: jmp dword ptr [ecx - 0x33]; 
0x080bfee3: jmp dword ptr [ecx - 0x69]; 
0x0806c84d: jmp dword ptr [ecx]; 
0x080adb3b: jmp dword ptr [edi + 0x12]; 
0x080addbb: jmp dword ptr [edi + 0x15]; 
0x0809c39c: jmp dword ptr [edi + 0x6d]; 
0x080855f9: jmp dword ptr [edi + 0x75]; 
0x080845fb: jmp dword ptr [edi + 0xf]; 
0x080c7c67: jmp dword ptr [edi + 2]; 
0x080d4a17: jmp dword ptr [edi + 7]; 
0x080bdc9f: jmp dword ptr [edi]; 
0x080adb7b: jmp dword ptr [edx + 0x12]; 
0x080addfb: jmp dword ptr [edx + 0x15]; 
0x080adee3: jmp dword ptr [edx + 0x47]; 
0x080d56f7: jmp dword ptr [edx + 8]; 
0x080ae01b: jmp dword ptr [edx - 0x32]; 
0x080bff30: jmp dword ptr [edx - 0x71]; 
0x080c204f: jmp dword ptr [edx - 0x78]; 
0x080c5b7f: jmp dword ptr [edx]; 
0x080ae597: jmp dword ptr [esi + 0x27]; 
0x0804da7e: jmp dword ptr [esi + 0x39]; 
0x080ac4af: jmp dword ptr [esi + 0x3d]; 
0x080adf43: jmp dword ptr [esi + 0x49]; 
0x080adf57: jmp dword ptr [esi + 0x4c]; 
0x080d20e3: jmp dword ptr [esi + 0xa]; 
0x0806249e: jmp dword ptr [esi + 0xf]; 
0x080c49ab: jmp dword ptr [esi + 2]; 
0x080d38e7: jmp dword ptr [esi + 3]; 
0x080c57e3: jmp dword ptr [esi + 8]; 
0x08049889: jmp dword ptr [esi - 0x70]; 
0x0807321b: jmp dword ptr [esi - 0x77]; 
0x0804cba4: jmp dword ptr [esi - 0x7b]; 
0x0806d479: jmp dword ptr [esi - 0x7d]; 
0x080a7b01: jmp dword ptr [esi - 0x7f]; 
0x080ac3bf: jmp dword ptr [esi]; 
0x080515d7: jmp eax; 
0x0805e8d0: jmp ebx; 
0x0804d961: jmp ecx; 
0x0806b5d1: jmp edi; 
0x0804dc6f: jmp edx; 
0x080499b3: jmp esi; 
0x080af52f: jmp esp; 
0x0805804e: jne 0x1005a; add esp, 8; pop ebx; ret; 
0x08048dce: jne 0x105e; call dword ptr [esi]; 
0x08058831: jne 0x10839; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805c173: jne 0x14150; pop ebx; pop esi; pop edi; ret; 
0x080496cd: jne 0x16c0; call 0x64228; add esp, 4; pop ebx; pop esi; ret; 
0x0806082e: jne 0x188a0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08062099: jne 0x1a2c0; pop ebx; ret; 
0x08062156: jne 0x1a2e0; pop ebx; ret; 
0x080626d7: jne 0x1ae50; pop ebx; ret; 
0x08062510: jne 0x1ae66; pop ebx; ret; 
0x08066dbe: jne 0x1ee80; test al, 0x40; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x08066dc6: jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x08066c8e: jne 0x1ee90; test dl, 0x40; jne 0x1ef10; lea eax, [edi + 7]; pop edi; ret; 
0x08066e19: jne 0x1ef00; lea eax, [edi + 0xf]; pop edi; ret; 
0x08066d80: jne 0x1ef10; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066d3a: jne 0x1ef10; lea eax, [edi + 0xf]; pop edi; ret; 
0x08066cdd: jne 0x1ef10; lea eax, [edi + 3]; pop edi; ret; 
0x08066c97: jne 0x1ef10; lea eax, [edi + 7]; pop edi; ret; 
0x0806723f: jne 0x1f360; lea eax, [edi + 3]; pop edi; ret; 
0x08067262: jne 0x1f390; lea eax, [edi + 7]; pop edi; ret; 
0x08067283: jne 0x1f3b0; test ah, 4; jne 0x1f3c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x0806728c: jne 0x1f3c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x080672ac: jne 0x1f3e0; test ah, 0x40; jne 0x1f3f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x080672b5: jne 0x1f3f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08067332: jne 0x1f400; xor eax, eax; pop edi; ret; 
0x08067421: jne 0x1f4f0; sub edx, 4; jb 0x1f590; lea eax, [edi + 3]; pop edi; ret; 
0x08067452: jne 0x1f520; sub edx, 8; jb 0x1f590; lea eax, [edi + 7]; pop edi; ret; 
0x0806748c: jne 0x1f550; sub edx, 0xc; jb 0x1f590; lea eax, [edi + 0xb]; pop edi; ret; 
0x080677b2: jne 0x1f8a0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067864: jne 0x1f8c0; xor eax, eax; pop edi; ret; 
0x0806782a: jne 0x1f8e0; xor eax, eax; pop edi; ret; 
0x08067ac7: jne 0x1fb60; test al, 4; jne 0x1fb70; lea eax, [edx + 3]; ret; 
0x08067acf: jne 0x1fb70; lea eax, [edx + 3]; ret; 
0x08067aea: jne 0x1fb90; test al, 0x40; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x08067af2: jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x08067b13: jne 0x1fbc0; test ah, 4; jne 0x1fbd0; lea eax, [edx + 0xb]; ret; 
0x08067b1c: jne 0x1fbd0; lea eax, [edx + 0xb]; ret; 
0x08067b3c: jne 0x1fbf0; test ah, 0x40; jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x08067b45: jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x08067de1: jne 0x1fe20; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0806ac77: jne 0x22c7d; xor eax, eax; pop ebx; ret; 
0x0806ad0c: jne 0x22f17; pop esi; xor eax, eax; pop ebx; ret; 
0x0806ad80: jne 0x22f2b; pop esi; xor eax, eax; pop ebx; ret; 
0x0806b322: jne 0x23318; xor eax, eax; ret; 
0x0806bc9e: jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806c623: jne 0x245c0; lea ecx, [esp + 0x14]; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0806c8fd: jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806c9a7: jne 0x249e0; mov eax, 0x127; mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806cab9: jne 0x24ad8; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb89: jne 0x24ba8; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806cc8e: jne 0x24ca7; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0806ccf4: jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0806cd3f: jne 0x24d80; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806ce31: jne 0x24e50; mov eax, 6; call dword ptr gs:[0x10]; 
0x0806d841: jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x0806d871: jne 0x25890; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0806da25: jne 0x259e2; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0806d9f4: jne 0x25a40; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0806da07: jne 0x25a50; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0806da7f: jne 0x25aa0; sub esp, 0xc; push dword ptr [esi]; call edi; 
0x0806de40: jne 0x25e0a; mov dword ptr [ebp - 0x30], edx; mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x0806e5c7: jne 0x265c0; pop ebx; pop esi; pop edi; ret; 
0x0806eb87: jne 0x26b75; pop esi; pop ebx; pop edx; ret; 
0x0806eb73: jne 0x26b81; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08072a10: jne 0x2a9f7; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0807c15b: jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0807c446: jne 0x34488; mov ecx, esi; mov eax, 0xaf; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0807c477: jne 0x344b7; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0808e28f: jne 0x46299; push esi; call dword ptr [eax + 0x1c]; 
0x0808e471: jne 0x4647b; push esi; call dword ptr [eax + 0x1c]; 
0x0808ec19: jne 0x46bff; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0808ec3d: jne 0x46c23; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0808ec1c: jne 0x46c2a; push esi; call dword ptr [eax + 0x2c]; 
0x0808ec40: jne 0x46c4e; push esi; call dword ptr [eax + 0x2c]; 
0x0808f583: jne 0x4759d; sub esp, 0xc; mov eax, dword ptr [eax + 0xb0]; push ebx; call dword ptr [eax + 0x34]; 
0x0808f7bf: jne 0x4771f; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0808f90f: jne 0x4786f; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0808fb7a: jne 0x47b70; add eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0808fd1c: jne 0x47d30; mov ecx, dword ptr [edx + 0x24]; cmp ecx, dword ptr [edx + 0x28]; cmove eax, ecx; ret; 
0x08090099: jne 0x4806f; push eax; push esi; push ecx; call edi; 
0x080914dd: jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809135d: jne 0x493e0; lea eax, [edi - 0x10]; pop edi; ret; 
0x08091382: jne 0x49410; lea eax, [edi - 0xc]; pop edi; ret; 
0x080913ac: jne 0x49440; lea eax, [edi - 8]; pop edi; ret; 
0x080913d5: jne 0x49470; lea eax, [edi - 4]; pop edi; ret; 
0x080914d4: jne 0x495b0; and eax, 0xf; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08091c00: jne 0x49c10; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08091c32: jne 0x49cf0; sub edi, 4; jb 0x49d90; lea eax, [eax + 3]; pop edi; ret; 
0x08091b1f: jne 0x49ee5; add eax, 3; pop edi; ret; 
0x08091b45: jne 0x49ef9; add eax, 7; pop edi; ret; 
0x08091b63: jne 0x49f08; test dh, 4; jne 0x49f0d; add eax, 0xb; pop edi; ret; 
0x08091b6c: jne 0x49f0d; add eax, 0xb; pop edi; ret; 
0x08091b95: jne 0x49f21; add eax, 0xf; pop edi; ret; 
0x08092211: jne 0x4a216; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x080923bb: jne 0x4a3bd; call edi; 
0x08092477: jne 0x4a479; call esi; 
0x08092585: jne 0x4a58f; call esi; 
0x080925ef: jne 0x4a5f9; call esi; 
0x080929fa: jne 0x4a9c0; mov eax, edx; pop ebx; ret; 
0x08092c8a: jne 0x4ac60; pop ebx; ret; 
0x08092e33: jne 0x4ae64; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x080932bd: jne 0x4b2f9; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x080933a7: jne 0x4b3c8; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x08093407: jne 0x4b440; mov eax, 0x127; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0809352e: jne 0x4b560; mov eax, 0x127; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0809370c: jne 0x4b716; add esp, 0x48; movzx eax, al; pop ebx; ret; 
0x080937dd: jne 0x4b7f2; add esp, 0x34; pop ebx; pop esi; ret; 
0x08095852: jne 0x4d86c; call dword ptr [eax]; 
0x08098f4b: jne 0x50f53; add esp, 4; pop ebx; pop esi; ret; 
0x08099781: jne 0x51717; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x08099bf6: jne 0x51762; call eax; 
0x08099be8: jne 0x51762; mov edx, dword ptr [ebp - 0x84]; test edx, edx; jne 0x51762; call eax; 
0x0809a20e: jne 0x51eac; call eax; 
0x0809a200: jne 0x51eac; mov edx, dword ptr [ebp - 0x84]; test edx, edx; jne 0x51eac; call eax; 
0x0809b0ac: jne 0x530b6; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x0809bb1b: jne 0x53a70; lea ecx, [ebp - 0x218]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x248]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0809c053: jne 0x54038; mov eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x0809ce43: jne 0x54e50; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x0809ce86: jne 0x54e60; pop ebx; ret; 
0x0809ce7f: jne 0x54e70; mov ecx, dword ptr [ecx + 4]; test ecx, ecx; jne 0x54e60; pop ebx; ret; 
0x0809d734: jne 0x55774; mov eax, 0x80dbf2c; mov esi, 1; call dword ptr [eax]; 
0x0809e644: jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d9: jne 0x566e4; add esp, 0x2c; ret; 
0x0809e7c6: jne 0x567d4; add esp, 0x34; pop ebx; pop esi; ret; 
0x0809e879: jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0809e979: jne 0x56984; add esp, 0x2c; ret; 
0x0809ea5d: jne 0x56a6c; add esp, 0x2c; ret; 
0x0809eca2: jne 0x56d00; sub esp, 0xc; push dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x0809eced: jne 0x56d17; add esp, 0xd4; pop ebx; pop esi; ret; 
0x0809ed71: jne 0x56d7a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080a0066: jne 0x580b9; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x080a014f: jne 0x58100; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x080a0613: jne 0x58600; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080a0653: jne 0x58638; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080a067b: jne 0x58668; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080a06a3: jne 0x58690; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x080a0946: jne 0x58954; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a09c6: jne 0x589d4; add esp, 0x34; pop ebx; pop esi; ret; 
0x080a0eb1: jne 0x58ec0; pop ebx; pop esi; pop edi; ret; 
0x080a1313: jne 0x59319; add esp, 0x2c; ret; 
0x080a140a: jne 0x59414; add esp, 0x2c; ret; 
0x080a18e6: jne 0x5994f; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x080a2015: jne 0x5a01d; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080a3018: jne 0x5afea; mov esi, ebx; mov ebx, eax; nop; call dword ptr [esi]; 
0x080a3886: jne 0x5b892; cmp byte ptr [ebp - 0x57], 0; je 0x5ba65; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x080a461f: jne 0x5c5d0; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x080a4762: jne 0x5c774; add esp, 0x2c; ret; 
0x080a488a: jne 0x5c892; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a4972: jne 0x5c97a; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a64c1: jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x080a6d0d: jne 0x5ed09; call dword ptr [ebx - 0x18]; 
0x080a6d46: jne 0x5ed68; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080a6d36: jne 0x5ed68; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x080a8b6d: jne 0x60b8c; mov eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x080a8e42: jne 0x60e00; mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8e13: jne 0x60e1d; push dword ptr [edi + 4]; push dword ptr [edi]; push 1; push 1; call eax; 
0x080a8e48: jne 0x60e42; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8e59: jne 0x60e53; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8edb: jne 0x60ed5; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a8f47: jne 0x60f41; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8f7e: jne 0x60f78; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a9033: jne 0x6102d; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a90ba: jne 0x610b4; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a90fb: jne 0x610f5; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a9164: jne 0x61172; push ebx; call dword ptr [ebp + 8]; 
0x080a95b2: jne 0x615ca; add esp, 8; mov eax, 4; pop ebx; ret; 
0x080a959e: jne 0x615ca; add esp, 8; mov eax, 8; pop ebx; ret; 
0x080a95ea: jne 0x61620; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080a95fe: jne 0x61624; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080aa3ca: jne 0x62400; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080aa3de: jne 0x62404; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080aaa98: jne 0x62aa0; add esp, 4; pop ebx; pop esi; ret; 
0x080aafc6: jne 0x62ff9; add esp, 8; xor eax, eax; pop ebx; ret; 
0x080ab66f: jne 0x63640; pop ebx; pop esi; pop edi; ret; 
0x080ab7e1: jne 0x637c8; add esp, 4; pop ebx; pop esi; ret; 
0x080ab901: jne 0x638e6; pop ebx; pop esi; pop edi; ret; 
0x0804e5a1: jne 0x65a3; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804ed90: jne 0x6cf0; mov dword ptr [esp + 8], edx; mov eax, dword ptr [ecx - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080c3a3b: jne 0x7baa2; jae 0x7bab3; add byte ptr [edi + 0x72], dh; cld; jmp eax; 
0x080c6f81: jne 0x7ef8d; push cs; adc al, 0x43; ret; 
0x080c779a: jne 0x7f7a6; push cs; or al, 0x41; ret; 
0x080c7eac: jne 0x7feb8; push cs; adc al, 0x41; ret; 
0x08050067: jne 0x8070; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080c93a8: jne 0x813b4; push cs; adc al, 0x41; ret; 
0x08050333: jne 0x833d; push ecx; call dword ptr [ebx + 0x1c]; 
0x080cbee1: jne 0x83ee3; add ah, cl; inc edx; cli; call dword ptr [ecx]; 
0x080cbef5: jne 0x83ef7; add al, bl; inc edx; cli; jmp dword ptr [ebp]; 
0x080cca85: jne 0x84a91; ret; 
0x080507d1: jne 0x877b; push dword ptr [ebp - 0x44]; push ebx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x080507d4: jne 0x8792; push ebx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x080d110a: jne 0x89116; push cs; adc al, 0x43; ret; 
0x080d2278: jne 0x8a284; push cs; adc al, 0x43; ret; 
0x080d2c5c: jne 0x8ac68; ret; 
0x080d3d85: jne 0x8bd91; push cs; adc al, 0x46; ret; 
0x08050d8b: jne 0x8d95; push dword ptr [ebp + 0xc]; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x08050d8e: jne 0x8d9c; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x08051146: jne 0x9154; lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 0x18]; 
0x08051105: jne 0x915b; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0805626a: jne 0xe298; add esp, 4; pop ebx; pop esi; ret; 
0x0805639b: jne 0xe366; add esp, 4; pop ebx; pop esi; ret; 
0x080563da: jne 0xe3d0; mov eax, dword ptr [esp + 8]; add eax, ebx; pop ebx; ret; 
0x08056c74: jne 0xec80; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x08079cbf: jno 0x31d22; std; call dword ptr [eax - 0x18]; 
0x080bf645: jno 0x77643; out 0x95, eax; push es; cld; ret; 
0x080c09f9: jno 0x7898f; mov ah, 0x5e; sar byte ptr [0x733db8a1], 0xd7; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x080c3a49: jno 0x7ba47; push dword ptr [edi + 0x72]; cld; inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x080c3a3a: jno 0x7bab1; jae 0x7bab3; add byte ptr [edi + 0x72], dh; cld; jmp eax; 
0x080c605a: jno 0x7e066; push cs; adc al, 0x41; ret; 
0x080c933a: jno 0x81346; push cs; or al, 0x41; ret; 
0x080cba89: jno 0x83a8b; add byte ptr [eax + esi - 6], dh; jmp dword ptr [eax]; 
0x080cfcb4: jno 0x87cc0; push cs; adc al, 0x41; ret; 
0x080d5518: jno 0x8d524; push cs; adc al, 0x41; ret; 
0x0805e9af: jnp 0x169a1; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0806b738: jnp 0x2377a; std; call dword ptr [eax - 0x18]; 
0x08071891: jnp 0x29903; std; inc dword ptr [0x6876b]; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x0809d898: jnp 0x5589e; mov dword ptr [ebx], eax; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080a023c: jnp 0x58242; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080c0885: jnp 0x78840; ret; 
0x080c211a: jnp 0x7a132; mov dl, 0x9f; sub edi, esi; int 0x6b; ret; 
0x080cb5c9: jnp 0x835d5; push cs; adc al, 0x41; ret; 
0x0805042c: jnp 0x8482; mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x08056f8e: jnp 0xef91; add byte ptr [ecx + 0x18609a], cl; add byte ptr [ebx + 0x185c82], al; add byte ptr [ecx], al; pop ebx; ret; 
0x08056fda: jnp 0xefdd; add bl, dh; ret; 
0x08075ed3: jns 0x2df0e; std; dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax + 0x68]; 
0x080a2aff: jns 0x5aa99; cld; call dword ptr [eax - 0x75]; 
0x080a4893: jns 0x5c839; cld; jmp dword ptr [esi - 0x70]; 
0x080bf992: jns 0x77926; ret 0xf869; 
0x080c54a9: jns 0x7d4a3; jmp edi; 
0x080c9504: jns 0x81510; push cs; adc al, 0x41; ret; 
0x080cdcd8: jns 0x85ce4; push cs; adc al, 0x41; ret; 
0x080cfda8: jns 0x87db4; push cs; adc al, 0x41; ret; 
0x080d1368: jns 0x89374; push cs; adc al, 0x43; ret; 
0x080d3f10: jns 0x8bf1c; push cs; or al, 0x41; ret; 
0x080d4708: jns 0x8c714; push cs; adc al, 0x41; ret; 
0x0805e976: jo 0x16938; add bh, dh; ret 0xf; 
0x0805eab3: jo 0x16a36; ret 0x80; 
0x0805eb1a: jo 0x16a9d; ret 0x80; 
0x0805eb6c: jo 0x16aef; ret 0x80; 
0x0805efe6: jo 0x16fa8; add bh, dh; ret 0xf; 
0x0806082f: jo 0x18840; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x080716c0: jo 0x296c6; call edi; 
0x08071892: jo 0x29891; inc dword ptr [0x6876b]; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080718b2: jo 0x298b1; inc dword ptr [0x6874b]; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x080755c7: jo 0x2d619; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08087b00: jo 0x3fb00; inc dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x0809068a: jo 0x48687; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x08092e37: jo 0x4ae94; pop esi; pop edi; ret; 
0x080932c1: jo 0x4b31e; pop esi; pop edi; ret; 
0x0809e57c: jo 0x565d8; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0809ee31: jo 0x56e37; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080ae658: jo 0x66681; stc; lcall [esi]; daa; stc; call esp; 
0x080aee20: jo 0x66e7b; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x080af5b0: jo 0x67615; stc; ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x080b035c: jo 0x6836d; cli; jmp dword ptr [eax + 0xf]; 
0x080bc91c: jo 0x74953; sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080bcb64: jo 0x74ba1; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb68: jo 0x74ba5; sti; call dword ptr [eax + 0x3b]; 
0x080bcb90: jo 0x74bcd; sti; jmp dword ptr [eax]; 
0x080bcb98: jo 0x74bd5; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcb9c: jo 0x74bd9; sti; call dword ptr [eax]; 
0x080bcc00: jo 0x74c3d; sti; push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x080bdc78: jo 0x75c73; sti; call dword ptr [eax - 7]; 
0x080bdc78: jo 0x75c73; sti; call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x080be080: jo 0x76087; cld; ljmp [eax]; push es; cld; jmp edi; 
0x080c0108: jo 0x78170; salc; retf; ret 0x5508; 
0x080c0a04: jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x080c43b8: jo 0x7c386; cld; jmp dword ptr [eax - 0x34]; 
0x080c6375: jo 0x7e3c3; push cs; pushal; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c71f3: jo 0x7f1f7; jbe 0x7f201; push cs; adc al, 0x41; ret; 
0x080c765a: jo 0x7f666; push cs; or al, 0x41; ret; 
0x080c800b: jo 0x80017; ret; 
0x080c8c70: jo 0x80c8b; stc; jmp dword ptr [eax + 0xf]; 
0x080c9c01: jo 0x81bfc; ljmp [ebx + 0x16]; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080ca588: jo 0x825e6; add byte ptr [eax], al; xor al, 0xd9; stc; call edx; 
0x080ca688: jo 0x826e7; add byte ptr [eax], al; adc al, 2; cli; call dword ptr [eax + 1]; 
0x080cba88: jo 0x83afb; add byte ptr [eax], al; je 0x83abe; cli; jmp dword ptr [eax]; 
0x080cbcd9: jo 0x83cdc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ccc3b: jo 0x84c3f; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080ccdc3: jo 0x84dc7; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cd3a7: jo 0x853ab; jbe 0x853b5; push cs; adc al, 0x41; ret; 
0x080cd603: jo 0x85607; jbe 0x85611; push cs; adc al, 0x41; ret; 
0x080d013a: jo 0x88146; push cs; or al, 0x41; ret; 
0x080d214d: jo 0x8a151; dec ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d2191: jo 0x8a1e8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2276: jo 0x8a27a; jne 0x8a284; push cs; adc al, 0x43; ret; 
0x080d5583: jo 0x8d587; sti; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d55a6: jo 0x8d5ef; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d6186: jo 0x8e1cd; push cs; pushal; or cl, byte ptr fs:[esi]; adc al, 0x45; ret; 
0x080d66d2: jo 0x8e72a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08052514: jo 0xa54e; call 0x24ea0; add esp, 0x18; pop ebx; ret; 
0x08048b9f: jo 0xb68; ret 0; 
0x08054307: jo 0xc373; add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x08054e47: jo 0xcde2; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x08091e2a: jp 0x49e32; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08091e8d: jp 0x49e9a; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08091ec5: jp 0x49ed6; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08093307: jp 0x4b309; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080a1a65: jp 0x599f2; je 0x59a8d; or bh, al; ret 0xbf40; 
0x080adc40: jp 0x65c55; sti; lcall [edx + 0x37fffb13]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x080ae5cc: jp 0x665f5; stc; push edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080c06c5: jp 0x78720; cmp byte ptr [ebx + edi*2], bh; push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x080c6b44: jp 0x7eb50; ret; 
0x080c7192: jp 0x7f1a2; and byte ptr [ebx + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080c748d: jp 0x7f499; push cs; adc al, 0x41; ret; 
0x080c7900: jp 0x7f90c; push cs; adc al, 0x41; ret; 
0x080cf978: jp 0x87984; ret; 
0x080cfc72: jp 0x87c7e; push cs; or al, 0x41; ret; 
0x080d1290: jp 0x8929c; push cs; adc al, 0x43; ret; 
0x080d5904: jp 0x8d910; ret; 
0x08062432: js 0x1a3ee; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x080719ca: js 0x299c5; call dword ptr [eax - 0x77]; 
0x080721fd: js 0x2a1f8; call dword ptr [eax - 0x77]; 
0x08072c26: js 0x2ac21; call dword ptr [eax - 0x73]; 
0x08072daf: js 0x2adaa; call dword ptr [eax - 0x73]; 
0x0804bac7: js 0x3ad1; dec dword ptr [edi]; xchg eax, ebp; ret 0xd284; 
0x0804bb93: js 0x3b9d; dec dword ptr [edi]; xchg eax, ebp; ret 0x2fe9; 
0x08098087: js 0x500ba; inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x08099009: js 0x51011; add esp, 4; pop ebx; pop esi; ret; 
0x0809ee34: js 0x56e3e; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080a7871: js 0x5f878; int 0x80; 
0x080a7b04: js 0x5fb0c; int 0x80; 
0x080bcc80: js 0x74cbf; sti; lcall [eax]; cmp al, 0xfb; call dword ptr [eax + 0x3d]; 
0x080c49a8: js 0x7c9e9; clc; jmp dword ptr [esi + 2]; 
0x080cab55: js 0x82b61; push cs; adc al, 0x41; ret; 
0x080cb042: js 0x8304e; push cs; or al, 0x41; ret; 
0x080cb478: js 0x8349c; cli; jmp dword ptr [esi]; 
0x080cb57d: js 0x83589; ret; 
0x080ced4f: js 0x86d5b; push cs; or al, 0x43; ret; 
0x080d17bd: js 0x897c9; ret; 
0x080d2f9f: js 0x8afab; push cs; adc al, 0x41; ret; 
0x080d3d38: js 0x8bcff; cld; call dword ptr [edi]; 
0x080d3e38: js 0x8be44; ret; 
0x080d4222: js 0x8c22e; push cs; or al, 0x41; ret; 
0x080d4a7b: js 0x8ca87; push cs; adc al, 0x46; ret; 
0x080488cc: js 0x8ce; add byte ptr [ebx - 0x746ffb3c], al; pop ebp; cld; leave; ret; 
0x0809ea6d: lahf; add bh, ch; jmp dword ptr [esi - 0x70]; 
0x08074b4d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x5c; std; call dword ptr [eax - 0x18]; 
0x08073a4e: lahf; add dword ptr [eax], eax; add byte ptr [ebp - 0x2a3dd7d], cl; call dword ptr [eax - 0x73]; 
0x080c5ead: lahf; clc; jmp dword ptr [ebx]; 
0x080c1ebf: lahf; mov dh, 0xc7; ret 0xe71f; 
0x080bf725: lahf; ret 0x871e; 
0x0806b568: lahf; ret 0xea81; 
0x08092f38: lahf; std; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x080c211d: lahf; sub edi, esi; int 0x6b; ret; 
0x080a4472: lcall 0x2444:0x8bfffffe; sbb al, 0x3b; add cl, byte ptr [ebx + 0xf082444]; inc edi; ret 0x4489; 
0x08056f92: lcall 0x8283:0x1860; pop esp; sbb byte ptr [eax], al; add byte ptr [ecx], al; pop ebx; ret; 
0x08093290: lcall 0x8310:0xc483fffd; clc; push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x0806ae8d: lcall 0xc031:0x5e000000; pop ebx; ret; 
0x080adc44: lcall 0xfb13:0x37fffb13; call dword ptr [edi + 0x13]; 
0x080bcd8b: lcall [eax + 0x3e]; sti; inc eax; sti; call eax; 
0x080c44b3: lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c4417: lcall [eax]; aam 0xfc; call dword ptr [eax - 0x2b]; 
0x080bcc83: lcall [eax]; cmp al, 0xfb; call dword ptr [eax + 0x3d]; 
0x080bcc3b: lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc97: lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcc37: lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc93: lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcb03: lcall [eax]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb03: lcall [eax]; cmp bl, bh; call dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcb2f: lcall [eax]; cmp bl, bh; inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcad7: lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcad3: lcall [eax]; cmp bl, bh; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcafb: lcall [eax]; cmp bl, bh; ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080aee23: lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x080aee6b: lcall [ebx + 0x56]; stc; call dword ptr [eax]; 
0x080aee67: lcall [ebx + 0x56]; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax]; 
0x08051a49: lcall [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x08055fe7: lcall [ebx + 0x5e]; pop edi; ret; 
0x080515e7: lcall [ebx + 0x5e]; ret; 
0x08057344: lcall [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x080ae0fb: lcall [edi - 0x120006ea]; push ss; stc; call dword ptr [edi]; 
0x080ae6e3: lcall [edi - 7]; jmp dword ptr [esi + 0x27]; 
0x08091621: lcall [edi]; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080adc43: lcall [edx + 0x37fffb13]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x0806af2f: lcall [esi + 0x5b]; ret; 
0x0808e3bd: lcall [esi + 0x5f]; ret; 
0x080ae65b: lcall [esi]; daa; stc; call esp; 
0x080bddff: lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdeab: lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be027: lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf47: lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080bdf3b: lcall [esi]; or al, 0xfc; call eax; 
0x080bdc8b: lcall [esi]; or al, 0xfc; jmp eax; 
0x080bddfb: lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdea7: lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be023: lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf37: lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call eax; 
0x080bdc87: lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; jmp eax; 
0x080bdc73: lcall [esi]; or al, 0xfc; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x0806c952: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08055b36: lds ecx, ptr [ecx + 0x27bc8df6]; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0806bc37: lds ecx, ptr [edi + edi*8]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0807719f: lds ecx, ptr [edi]; xchg eax, edi; ret; 
0x080c9515: lds ecx, ptr [esi]; add al, 0x41; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x44; ret; 
0x080d309f: lds ecx, ptr [esi]; add al, 0x41; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080d5bf7: lds ecx, ptr [esi]; add al, 0x41; or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x080c843e: lds ecx, ptr [esi]; add al, 0x41; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080cf2a2: lds ecx, ptr [esi]; add al, 0x41; or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080cf2f6: lds ecx, ptr [esi]; add al, 0x41; or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080cc337: lds ecx, ptr [esi]; add al, 0x41; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080cfe21: lds ecx, ptr [esi]; add al, 0x42; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8ed6: lds ecx, ptr [esi]; add al, 0x42; or eax, dword ptr [ebx]; xor eax, 0x140e0a01; inc ebx; ret; 
0x080d3d96: lds ecx, ptr [esi]; add al, 0x42; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d5a63: lds ecx, ptr [esi]; add al, 0x42; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d623f: lds ecx, ptr [esi]; add al, 0x42; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080ca6be: lds ecx, ptr [esi]; add al, 0x42; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080cb7a1: lds ecx, ptr [esi]; add al, 0x43; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x45; ret; 
0x080d553f: lds ecx, ptr [esi]; add al, 0x43; or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d65f5: lds ecx, ptr [esi]; add al, 0x43; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3dea: lds ecx, ptr [esi]; add al, 0x43; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080d5a79: lds ecx, ptr [esi]; add al, 0x43; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080d3089: lds ecx, ptr [esi]; add al, 0x44; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d16d6: lds ecx, ptr [esi]; add al, 0x44; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c8dd9: lds ecx, ptr [esi]; add al, 0x44; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4480: lds ecx, ptr [esi]; add al, 0x44; or ebx, dword ptr [esi + 0xa]; ret; 
0x080d2d43: lds ecx, ptr [esi]; add al, 0x44; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4a76: lds ecx, ptr [esi]; add al, 0x44; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3d6a: lds ecx, ptr [esi]; add al, 0x44; or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3d80: lds ecx, ptr [esi]; add al, 0x44; or esi, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080cbe5b: lds ecx, ptr [esi]; add al, 0x44; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c77ed: lds ecx, ptr [esi]; add al, 0x44; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080cc4c9: lds ecx, ptr [esi]; add al, 0x45; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d2acf: lds ecx, ptr [esi]; add al, 0x45; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080d57bb: lds ecx, ptr [esi]; add al, 0x45; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d568a: lds ecx, ptr [esi]; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6ea6: lds ecx, ptr [esi]; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080c93b9: lds ecx, ptr [esi]; add al, 0x45; or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x080c952b: lds ecx, ptr [esi]; add al, 0x46; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5ae3: lds ecx, ptr [esi]; add al, 0x46; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080ce116: lds ecx, ptr [esi]; add al, 0x46; or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080d2587: lds ecx, ptr [esi]; add al, 0x46; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cd8ef: lds ecx, ptr [esi]; add al, 0x46; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d561a: lds ecx, ptr [esi]; add al, 0x47; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c6505: lds ecx, ptr [esi]; add al, 0x47; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x080cf23e: lds ecx, ptr [esi]; add al, 0x47; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080d0621: lds ecx, ptr [esi]; add al, 0x48; or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080c70f7: lds ecx, ptr [esi]; add al, 0x48; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8dc3: lds ecx, ptr [esi]; add al, 0x48; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c78bd: lds ecx, ptr [esi]; add al, 0x49; or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cdce9: lds ecx, ptr [esi]; add al, 0x49; or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8a40: lds ecx, ptr [esi]; add al, 0x4a; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cb5da: lds ecx, ptr [esi]; add al, 0x4a; or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080d3cf0: lds ecx, ptr [esi]; add al, 0x4a; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d048e: lds ecx, ptr [esi]; add al, 0x4a; or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080c63ff: lds ecx, ptr [esi]; add al, 0x4a; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080c813a: lds ecx, ptr [esi]; add al, 0x4b; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d5529: lds ecx, ptr [esi]; add al, 0x4b; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d6088: lds ecx, ptr [esi]; add al, 0x4b; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080ce1cb: lds ecx, ptr [esi]; add al, 0x4b; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x080ca6d4: lds ecx, ptr [esi]; add al, 0x4c; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4493: lds ecx, ptr [esi]; add al, 0x4f; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d2702: lds ecx, ptr [esp + eax]; add al, 0x41; or eax, dword ptr [ebx]; xlatb; add ecx, dword ptr [edx]; ret; 
0x080cf93d: lds ecx, ptr [esp + eax]; add al, 0x42; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6915: lds ecx, ptr [esp + eax]; add al, 0x44; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed5: lds ecx, ptr [esp + eax]; add al, 0x44; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c6923: lds ecx, ptr [esp + eax]; add al, 0x46; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c60b9: lds ecx, ptr [esp + eax]; add al, 0x49; or eax, dword ptr [ebx]; xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x0806d877: lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x080c0b69: lds esi, ptr [eax + ebx*8]; ret; 
0x08091bfb: lea eax, [eax + 0x10]; test edx, edx; jne 0x49c10; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0807e646: lea eax, [eax + 0x29fffff7]; ret; 
0x0807ff44: lea eax, [eax + 0x6afffff7]; sub ecx, dword ptr [ebx - 0x88763]; call dword ptr [esi - 0x18]; 
0x08091d55: lea eax, [eax + 0xa]; pop edi; ret; 
0x080701ba: lea eax, [eax + 0xaa0]; ret; 
0x08091cab: lea eax, [eax + 0xb]; pop edi; ret; 
0x08091d65: lea eax, [eax + 0xc]; pop edi; ret; 
0x08091d75: lea eax, [eax + 0xd]; pop edi; ret; 
0x08091d85: lea eax, [eax + 0xe]; pop edi; ret; 
0x08091cd4: lea eax, [eax + 0xf]; pop edi; ret; 
0x08091ce9: lea eax, [eax + 1]; pop edi; ret; 
0x08091cf9: lea eax, [eax + 2]; pop edi; ret; 
0x08091c41: lea eax, [eax + 3]; pop edi; ret; 
0x08091d09: lea eax, [eax + 4]; pop edi; ret; 
0x08091d15: lea eax, [eax + 5]; pop edi; ret; 
0x08091d25: lea eax, [eax + 6]; pop edi; ret; 
0x08091c74: lea eax, [eax + 7]; pop edi; ret; 
0x08091d35: lea eax, [eax + 8]; pop edi; ret; 
0x08091d45: lea eax, [eax + 9]; pop edi; ret; 
0x080a45bb: lea eax, [eax + eax*8 + 6]; call 0x5c580; jmp eax; 
0x080a00f0: lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x08067893: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x080678a3: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x08067873: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08067e13: lea eax, [eax + edx + 0x10]; ret; 
0x08067e23: lea eax, [eax + edx + 0x20]; ret; 
0x08067df3: lea eax, [eax + edx - 0x10]; ret; 
0x0807dbc4: lea eax, [eax - 0x17000009]; ret 0x126; 
0x0806b9c3: lea eax, [eax - 3]; call dword ptr [eax - 0x18]; 
0x08051c41: lea eax, [eax]; add byte ptr [eax], al; mov ebp, dword ptr [esi + 0x54]; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x080930c9: lea eax, [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0805c1e5: lea eax, [ebx + 0x18a4]; call 0x26b90; pop ebx; ret; 
0x080a0c46: lea eax, [ebx + 0x1aac]; mov dword ptr [ebx + 0x1aa8], eax; add esp, 8; pop ebx; ret; 
0x080a1cf8: lea eax, [ebx - 0x16564]; push eax; call 0x1850; lea esi, [esi]; lea edi, [edi]; ret 4; 
0x0806c370: lea eax, [ebx - 0x2bc31]; push eax; call 0x1850; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x080cd462: lea eax, [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0808fdec: lea eax, [edi + 0x28]; push eax; push ebp; call esi; 
0x0808ffac: lea eax, [edi + 0x50]; push eax; push ebp; call esi; 
0x08066ec0: lea eax, [edi + 0xa]; pop edi; ret; 
0x08066d86: lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ee0: lea eax, [edi + 0xc]; pop edi; ret; 
0x08066ef0: lea eax, [edi + 0xd]; pop edi; ret; 
0x08066f00: lea eax, [edi + 0xe]; pop edi; ret; 
0x08066d40: lea eax, [edi + 0xf]; pop edi; ret; 
0x08066e40: lea eax, [edi + 1]; pop edi; ret; 
0x08066e50: lea eax, [edi + 2]; pop edi; ret; 
0x08066ce3: lea eax, [edi + 3]; pop edi; ret; 
0x08066e70: lea eax, [edi + 4]; pop edi; ret; 
0x08066e80: lea eax, [edi + 5]; pop edi; ret; 
0x08066e90: lea eax, [edi + 6]; pop edi; ret; 
0x08066c9d: lea eax, [edi + 7]; pop edi; ret; 
0x08066ea0: lea eax, [edi + 8]; pop edi; ret; 
0x08066eb0: lea eax, [edi + 9]; pop edi; ret; 
0x080678ca: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x080678da: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080677bf: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08091363: lea eax, [edi - 0x10]; pop edi; ret; 
0x08091420: lea eax, [edi - 0xa]; pop edi; ret; 
0x08091410: lea eax, [edi - 0xb]; pop edi; ret; 
0x08091388: lea eax, [edi - 0xc]; pop edi; ret; 
0x08091400: lea eax, [edi - 0xd]; pop edi; ret; 
0x080913f0: lea eax, [edi - 0xe]; pop edi; ret; 
0x080913e0: lea eax, [edi - 0xf]; pop edi; ret; 
0x08091490: lea eax, [edi - 1]; pop edi; ret; 
0x08091480: lea eax, [edi - 2]; pop edi; ret; 
0x08091470: lea eax, [edi - 3]; pop edi; ret; 
0x080913db: lea eax, [edi - 4]; pop edi; ret; 
0x08091460: lea eax, [edi - 5]; pop edi; ret; 
0x08091450: lea eax, [edi - 6]; pop edi; ret; 
0x08091440: lea eax, [edi - 7]; pop edi; ret; 
0x080913b2: lea eax, [edi - 8]; pop edi; ret; 
0x08091430: lea eax, [edi - 9]; pop edi; ret; 
0x08066e30: lea eax, [edi]; pop edi; ret; 
0x08065d5e: lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e9e: lea eax, [edx + 0xa]; ret; 
0x08065c4e: lea eax, [edx + 0xb]; pop edi; ret; 
0x08065ebe: lea eax, [edx + 0xb]; ret; 
0x08065d82: lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ee2: lea eax, [edx + 0xc]; ret; 
0x08065da2: lea eax, [edx + 0xd]; pop edi; ret; 
0x08065f02: lea eax, [edx + 0xd]; ret; 
0x08065dc2: lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f22: lea eax, [edx + 0xe]; ret; 
0x08065c88: lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f38: lea eax, [edx + 0xf]; ret; 
0x08065ca6: lea eax, [edx + 1]; pop edi; ret; 
0x08065de6: lea eax, [edx + 1]; ret; 
0x08065cbc: lea eax, [edx + 2]; pop edi; ret; 
0x08065dfc: lea eax, [edx + 2]; ret; 
0x08065bd4: lea eax, [edx + 3]; pop edi; ret; 
0x08065e04: lea eax, [edx + 3]; ret; 
0x08092c85: lea eax, [edx + 3]; test ebx, ebx; jne 0x4ac60; pop ebx; ret; 
0x08065cda: lea eax, [edx + 4]; pop edi; ret; 
0x08065e1a: lea eax, [edx + 4]; ret; 
0x08065cec: lea eax, [edx + 5]; pop edi; ret; 
0x08065e2c: lea eax, [edx + 5]; ret; 
0x08065d0a: lea eax, [edx + 6]; pop edi; ret; 
0x08065e3a: lea eax, [edx + 6]; ret; 
0x08065c08: lea eax, [edx + 7]; pop edi; ret; 
0x08065e48: lea eax, [edx + 7]; ret; 
0x08065d1e: lea eax, [edx + 8]; pop edi; ret; 
0x08065e5e: lea eax, [edx + 8]; ret; 
0x08065d40: lea eax, [edx + 9]; pop edi; ret; 
0x08065e80: lea eax, [edx + 9]; ret; 
0x08067dea: lea eax, [edx + eax + 0x30]; ret; 
0x08065c94: lea eax, [edx]; pop edi; ret; 
0x08065dd4: lea eax, [edx]; ret; 
0x0808dee1: lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x08092213: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x08059f3d: lea eax, [esi + edi*8 + 0x548dffff]; das; adc cl, byte ptr [ecx + 0x21d8f7f8]; ret 0xd539; 
0x0807b60d: lea eax, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1af6b]; call dword ptr [eax - 1]; 
0x0808e0e3: lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08052e66: lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0809257f: lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x08052ac9: lea eax, [esp + 0x34]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08050c7a: lea eax, [esp + 0x3c]; push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x08092471: lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x080531d9: lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x08051148: lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 0x18]; 
0x080514e7: lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 4]; 
0x080678c9: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x0808d008: lea ebp, [ebx + edi*8 - 1]; call dword ptr [eax + 0x50]; 
0x0808072d: lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x57]; 
0x080808ed: lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08082367: lea ebp, [ebx + edi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x08081e24: lea ebp, [ebx + edi*8 - 1]; dec dword ptr [ecx - 0x4976b]; call dword ptr [ecx + 0x6a]; 
0x0807038b: lea ebp, [esi + 1]; cmp eax, 0x17; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x08055c33: lea ebx, [ecx + 1]; push eax; push ebp; call dword ptr [esi + 0xc]; 
0x08089924: lea ebx, [edi + esi*8 - 1]; call dword ptr [edx + 0x6a]; 
0x0809b40e: lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0809d533: lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x080bffd1: lea ebx, [esi - 0x3271f33]; test al, 0x97; xchg eax, esp; ret; 
0x0809bb21: lea ecx, [ebp - 0x218]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x248]; mov edx, edi; call dword ptr gs:[0x10]; 
0x08057392: lea ecx, [ebx + 0x1042454]; rol dword ptr [ebx - 0xcefb14], 0x29; ret 0x6a52; 
0x0808a280: lea ecx, [edi + esi*8 - 1]; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x0809d52f: lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0806c625: lea ecx, [esp + 0x14]; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0807c1d2: lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x0808c524: lea edi, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x0808b1fb: lea edi, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x0808cd9a: lea edi, [ebx + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x08080034: lea edi, [edi + esi*8 - 1]; call dword ptr [eax + 0x50]; 
0x0807fe6b: lea edi, [edi + esi*8 - 1]; call dword ptr [eax + 0x53]; 
0x0807f7fb: lea edi, [edi + esi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08092baa: lea edi, [edi]; add eax, 3; ret; 
0x08067e09: lea edi, [edi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08081769: lea edi, [edi]; jmp eax; 
0x08066eb9: lea edi, [edi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ec9: lea edi, [edi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ed9: lea edi, [edi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066ee9: lea edi, [edi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066ef9: lea edi, [edi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066e3a: lea edi, [edi]; lea eax, [edi + 1]; pop edi; ret; 
0x08066e49: lea edi, [edi]; lea eax, [edi + 2]; pop edi; ret; 
0x08066e59: lea edi, [edi]; lea eax, [edi + 3]; pop edi; ret; 
0x08066e69: lea edi, [edi]; lea eax, [edi + 4]; pop edi; ret; 
0x08066e79: lea edi, [edi]; lea eax, [edi + 5]; pop edi; ret; 
0x08066e89: lea edi, [edi]; lea eax, [edi + 6]; pop edi; ret; 
0x08066e99: lea edi, [edi]; lea eax, [edi + 8]; pop edi; ret; 
0x08066ea9: lea edi, [edi]; lea eax, [edi + 9]; pop edi; ret; 
0x08091419: lea edi, [edi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x08091409: lea edi, [edi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x080913f9: lea edi, [edi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913e9: lea edi, [edi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x08091489: lea edi, [edi]; lea eax, [edi - 1]; pop edi; ret; 
0x08091479: lea edi, [edi]; lea eax, [edi - 2]; pop edi; ret; 
0x08091469: lea edi, [edi]; lea eax, [edi - 3]; pop edi; ret; 
0x08091459: lea edi, [edi]; lea eax, [edi - 5]; pop edi; ret; 
0x08091449: lea edi, [edi]; lea eax, [edi - 6]; pop edi; ret; 
0x08091439: lea edi, [edi]; lea eax, [edi - 7]; pop edi; ret; 
0x08091429: lea edi, [edi]; lea eax, [edi - 9]; pop edi; ret; 
0x08066e2a: lea edi, [edi]; lea eax, [edi]; pop edi; ret; 
0x08067bca: lea edi, [edi]; lea eax, [edx + 0xa]; ret; 
0x08067bda: lea edi, [edi]; lea eax, [edx + 0xc]; ret; 
0x08067bea: lea edi, [edi]; lea eax, [edx + 0xd]; ret; 
0x08067bfa: lea edi, [edi]; lea eax, [edx + 0xe]; ret; 
0x08067b59: lea edi, [edi]; lea eax, [edx + 1]; ret; 
0x08067b6a: lea edi, [edi]; lea eax, [edx + 2]; ret; 
0x08067b7a: lea edi, [edi]; lea eax, [edx + 4]; ret; 
0x08067b8a: lea edi, [edi]; lea eax, [edx + 5]; ret; 
0x08067b9a: lea edi, [edi]; lea eax, [edx + 6]; ret; 
0x08067baa: lea edi, [edi]; lea eax, [edx + 8]; ret; 
0x08067bba: lea edi, [edi]; lea eax, [edx + 9]; ret; 
0x080562aa: lea edi, [edi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08055b39: lea edi, [edi]; mov eax, 0xffffffff; ret; 
0x080608ea: lea edi, [edi]; mov eax, 1; ja 0x188f9; neg eax; ret; 
0x08092bc9: lea edi, [edi]; mov eax, 1; ret; 
0x08092bd9: lea edi, [edi]; mov eax, 2; ret; 
0x08092be9: lea edi, [edi]; mov eax, 3; ret; 
0x08092bf9: lea edi, [edi]; mov eax, 4; ret; 
0x08092c09: lea edi, [edi]; mov eax, 5; ret; 
0x08092c19: lea edi, [edi]; mov eax, 6; ret; 
0x08092c29: lea edi, [edi]; mov eax, 7; ret; 
0x0809e51a: lea edi, [edi]; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x08056f29: lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ca9: lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c3a: lea edi, [edi]; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x080a1d0a: lea edi, [edi]; ret 4; 
0x08066f09: lea edi, [edi]; xor eax, eax; pop edi; ret; 
0x080561f9: lea edi, [edi]; xor eax, eax; ret; 
0x080aa281: lea edi, [esi - 1]; push dword ptr [esp + 0xc]; push dword ptr [ebx]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x08056c40: lea edx, [eax + 0x30]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x0805c2d6: lea edx, [eax - 0x7e140]; mov dword ptr [eax + 0x504], edx; lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x0805c2e2: lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x0806ee08: lea edx, [ecx - 0x6b250]; mov dword ptr [eax + 8], edx; pop ebx; pop esi; ret; 
0x08088208: lea edx, [edi + esi*8 - 1]; call dword ptr [ebx - 0x7d]; 
0x08088208: lea edx, [edi + esi*8 - 1]; call dword ptr [ebx - 0x7d]; ret; 
0x0809390c: lea edx, [edx + ebx*4]; add eax, dword ptr [edx + ecx]; pop ebx; pop esi; ret; 
0x0808d8a5: lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x0804c7d9: lea edx, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x0806ccc7: lea edx, [esp + 4]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0809373a: lea edx, [esp + 8]; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x08087aff: lea esi, [eax - 2]; inc dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x0804ee68: lea esi, [ecx + eax*4 + 4]; lea esi, [esi]; call dword ptr [edi]; 
0x08092b9c: lea esi, [esi]; add eax, 1; ret; 
0x0805da82: lea esi, [esi]; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x080915bd: lea esi, [esi]; and eax, 0x1f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915ed: lea esi, [esi]; and eax, 0x1ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915cd: lea esi, [esi]; and eax, 0x3f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915dd: lea esi, [esi]; and eax, 0x7f; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809159d: lea esi, [esi]; and eax, 3; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915ad: lea esi, [esi]; and eax, 7; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08067df9: lea esi, [esi]; bsf eax, eax; add eax, edx; ret; 
0x0806786a: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x08067e19: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0806ce4c: lea esi, [esi]; call 0x26bc0; mov esi, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x080792ad: lea esi, [esi]; call 0x910; add eax, 0x60d4b; mov eax, dword ptr [eax + 0x1974]; ret; 
0x080701ad: lea esi, [esi]; call 0x910; add eax, 0x69e4b; lea eax, [eax + 0xaa0]; ret; 
0x0804ee6c: lea esi, [esi]; call dword ptr [edi]; 
0x080592da: lea esi, [esi]; call eax; 
0x0806ee94: lea esi, [esi]; jl 0x26e61; cmp ebx, dword ptr [eax + 8]; jae 0x26e5a; pop ebx; ret; 
0x0808bdbc: lea esi, [esi]; jmp eax; 
0x08092ba4: lea esi, [esi]; lea edi, [edi]; add eax, 3; ret; 
0x08067e06: lea esi, [esi]; lea edi, [edi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x08081766: lea esi, [esi]; lea edi, [edi]; jmp eax; 
0x08066eb5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x08066ec5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x08066ed5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x08066ee5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x08066ef5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x08066e34: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 1]; pop edi; ret; 
0x08066e45: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 2]; pop edi; ret; 
0x08066e55: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 3]; pop edi; ret; 
0x08066e65: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 4]; pop edi; ret; 
0x08066e75: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 5]; pop edi; ret; 
0x08066e85: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 6]; pop edi; ret; 
0x08066e95: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 8]; pop edi; ret; 
0x08066ea5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi + 9]; pop edi; ret; 
0x08091415: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x08091405: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x080913f5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x080913e5: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x08091485: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 1]; pop edi; ret; 
0x08091475: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 2]; pop edi; ret; 
0x08091465: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 3]; pop edi; ret; 
0x08091455: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 5]; pop edi; ret; 
0x08091445: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 6]; pop edi; ret; 
0x08091435: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 7]; pop edi; ret; 
0x08091425: lea esi, [esi]; lea edi, [edi]; lea eax, [edi - 9]; pop edi; ret; 
0x08066e24: lea esi, [esi]; lea edi, [edi]; lea eax, [edi]; pop edi; ret; 
0x08067bc4: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 0xa]; ret; 
0x08067bd4: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 0xc]; ret; 
0x08067be4: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 0xd]; ret; 
0x08067bf4: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 0xe]; ret; 
0x08067b53: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 1]; ret; 
0x08067b64: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 2]; ret; 
0x08067b74: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 4]; ret; 
0x08067b84: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 5]; ret; 
0x08067b94: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 6]; ret; 
0x08067ba4: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 8]; ret; 
0x08067bb4: lea esi, [esi]; lea edi, [edi]; lea eax, [edx + 9]; ret; 
0x080562a4: lea esi, [esi]; lea edi, [edi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08056eb6: lea esi, [esi]; lea edi, [edi]; mov eax, 0xffffffff; ret; 
0x08092bc3: lea esi, [esi]; lea edi, [edi]; mov eax, 1; ret; 
0x08092bd6: lea esi, [esi]; lea edi, [edi]; mov eax, 2; ret; 
0x08092be6: lea esi, [esi]; lea edi, [edi]; mov eax, 3; ret; 
0x08092bf6: lea esi, [esi]; lea edi, [edi]; mov eax, 4; ret; 
0x08092c06: lea esi, [esi]; lea edi, [edi]; mov eax, 5; ret; 
0x08092c16: lea esi, [esi]; lea edi, [edi]; mov eax, 6; ret; 
0x08092c26: lea esi, [esi]; lea edi, [edi]; mov eax, 7; ret; 
0x0809e514: lea esi, [esi]; lea edi, [edi]; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x080a1d04: lea esi, [esi]; lea edi, [edi]; ret 4; 
0x08066f05: lea esi, [esi]; lea edi, [edi]; xor eax, eax; pop edi; ret; 
0x080561f2: lea esi, [esi]; lea edi, [edi]; xor eax, eax; ret; 
0x08065c8d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0806443c: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0806ee8c: lea esi, [esi]; mov dword ptr [eax + 0x18], edx; ret; 
0x0805223c: lea esi, [esi]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0807c3ec: lea esi, [esi]; mov eax, 0xffffffe0; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x08056e9d: lea esi, [esi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08056eac: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0809a7b2: lea esi, [esi]; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x08099d41: lea esi, [esi]; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0806cdfd: lea esi, [esi]; mov eax, dword ptr [esp + 0x10]; call 0x24cb0; add esp, 8; pop ebx; ret; 
0x08091d8a: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080a8c09: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8c4c: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x080a8cb9: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8c59: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08056f39: lea esi, [esi]; mov eax, dword ptr [esp + 4]; ret; 
0x0806733c: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x0804903c: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x08092c94: lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x08050d52: lea esi, [esi]; mov ebx, dword ptr [ebp + 0x54]; sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x0809a1a4: lea esi, [esi]; mov edx, dword ptr [ebp + 8]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edx]; call eax; 
0x0809977d: lea esi, [esi]; mov esi, dword ptr [ebp - 0x6c]; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x080645cd: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806085c: lea esi, [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0806086c: lea esi, [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0806087c: lea esi, [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0806088c: lea esi, [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0806083c: lea esi, [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0808f8ec: lea esi, [esi]; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0806f4a4: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x080aaa44: lea esi, [esi]; pop ebx; ret; 
0x080a456c: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0806238a: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x080a8dac: lea esi, [esi]; ret; 
0x080563e4: lea esi, [esi]; sub eax, edx; sub eax, 1; pop ebx; ret; 
0x0808eac4: lea esi, [esi]; sub esp, 4; push 0x10; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x0805c7ec: lea esi, [esi]; sub esp, 4; push ecx; push edx; push ebx; call eax; 
0x0805c48c: lea esi, [esi]; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x080933d4: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x0806701c: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x080623ac: lea esi, [esi]; xor eax, eax; ret; 
0x08087f9d: lea esp, [eax]; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x08049d1a: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a0068: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0808cfc6: lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0808b0b8: lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x0809b057: lea esp, [edi + edi*8 - 1]; call dword ptr [ecx + 0x51]; 
0x0807dd20: lea esp, [edi + esi*8 - 1]; call dword ptr [ebx - 0x7d]; 
0x0807dd20: lea esp, [edi + esi*8 - 1]; call dword ptr [ebx - 0x7d]; ret; 
0x08048db0: lea esp, [edx]; std; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x080a1346: leave; add byte ptr [eax], al; add byte ptr [eax + 0x440fd285], al; rol edi, cl; ret; 
0x08093331: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x08067c53: leave; add eax, ecx; ret; 
0x0805639c: leave; add esp, 4; pop ebx; pop esi; ret; 
0x0806ef52: leave; int 0x80; 
0x08067c4e: leave; je 0x1fc60; bsf ecx, ecx; add eax, ecx; ret; 
0x0809ce85: leave; jne 0x54e60; pop ebx; ret; 
0x0809b40d: leave; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x080c4848: leave; loope 0x7c847; call edi; 
0x080c4848: leave; loope 0x7c847; call edi; loope 0x7c84b; jmp eax; 
0x080d319c: leave; mov bl, 0xfc; jmp dword ptr [eax]; 
0x0809de9c: leave; mov dword ptr [ebp - 0x58], eax; mov dword ptr [ebp - 0x54], edx; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0808afc7: leave; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x080487b5: leave; ret; 
0x080c0181: leave; retf 0x6ee8; sahf; ret 0x38ae; 
0x080ca225: leave; stc; call esp; 
0x080675db: leave; sub edx, ecx; jbe 0x1f610; add eax, ecx; ret; 
0x08090283: leave; xchg eax, ebp; sti; jmp dword ptr [esi - 0x70]; 
0x0805dae9: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x080488d0: les eax, ptr [eax + edx*4]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x080d0d51: les eax, ptr [eax]; add ah, cl; adc al, 0xfc; jmp dword ptr [edi]; 
0x080c9588: les eax, ptr [eax]; add byte ptr [eax], al; je 0x815da; add byte ptr [eax], al; and byte ptr [ecx - 7], al; jmp edi; 
0x08066dc8: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x08093362: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08067d0d: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x080adec8: les eax, ptr [ebp - 5]; inc dword ptr [eax + 0x46]; sti; call eax; 
0x0805b67c: les eax, ptr [ebx + ebx*2]; pop edi; ret; 
0x080515d3: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x080496d5: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0806a38a: les eax, ptr [ebx + ebx*2]; ret; 
0x0806e1b8: les eax, ptr [ebx - 0x76fe33bb]; ret 0xe083; 
0x0806c353: les eax, ptr [ebx - 3]; call dword ptr [eax - 0x18]; 
0x0809dd94: les eax, ptr [ecx + ebp]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x08085b86: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0809b71e: les eax, ptr [ecx]; ret 0x4589; 
0x0805dbf8: les eax, ptr [edi]; add byte ptr [ebx - 0x39], dl; ret; 
0x08067b11: les eax, ptr [edx]; jne 0x1fbc0; test ah, 4; jne 0x1fbd0; lea eax, [edx + 0xb]; ret; 
0x080913aa: les eax, ptr [edx]; jne 0x49440; lea eax, [edi - 8]; pop edi; ret; 
0x08050d21: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0804f0fe: les ebp, ptr [eax]; pop ebx; ret; 
0x0805d87b: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080a1c46: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 8; 
0x0804d254: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0806c1eb: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0804d18f: les ebp, ptr [ecx + ecx*4]; call 0x5d5faff2; ret; 
0x0806dd55: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080a1e5d: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0807d82e: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x08052b66: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0804c6c8: les ebx, ptr [eax]; pop ebx; ret; 
0x08054685: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0809624f: les ebx, ptr [ebx + ebx*2]; mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0808d78a: les ebx, ptr [ebx + ebx*2]; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x08087d19: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x080530e9: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x08049685: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08053cf6: les ebx, ptr [ebx + ebx*2]; pop esi; sub eax, ebp; pop edi; pop ebp; ret; 
0x0804cd0d: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x08058661: les ebx, ptr [ecx + ecx*4]; ret 0x895b; 
0x0804d4bc: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080a47b3: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x0809370f: les ecx, ptr [eax + 0xf]; mov dh, 0xc0; pop ebx; ret; 
0x080488ff: les ecx, ptr [eax]; call 0x8a5; mov eax, 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0805da89: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x0808f601: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x080a95c1: les ecx, ptr [eax]; mov eax, 2; pop ebx; ret; 
0x080a95b5: les ecx, ptr [eax]; mov eax, 4; pop ebx; ret; 
0x080a95a1: les ecx, ptr [eax]; mov eax, 8; pop ebx; ret; 
0x0806ebf7: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x08057b06: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080481c7: les ecx, ptr [eax]; pop ebx; ret; 
0x0807cf91: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x080723b0: les ecx, ptr [ebp + 0x7d03171c]; ror byte ptr [ecx + 0x27bc8df6], 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cacf314], al; ret; 
0x0809b9fb: les ecx, ptr [ebp - 0x1be937d]; call dword ptr [eax - 0x73]; 
0x0809b95d: les ecx, ptr [ebp - 0x1becc7d]; call dword ptr [eax + 0x6a]; 
0x08052238: les ecx, ptr [ebx + 0x748dc84d]; add byte ptr es:[eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x0804aee3: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x08055d29: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0804ef79: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08051ce1: les ecx, ptr [ebx + ebx*2]; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x080d54dc: les ecx, ptr [ebx]; add dword ptr [eax], eax; and byte ptr [eax], dl; std; call dword ptr [esi]; 
0x080a375c: les ecx, ptr [ecx + 0xfc839c2]; xchg eax, esp; ret; 
0x0808d332: les ecx, ptr [ecx + eax*4 + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0807c7d2: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806ddc6: les ecx, ptr [ecx + ecx*4]; call 0x5d61bc29; ret; 
0x08054400: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0804ad27: les ecx, ptr [ecx + ecx*4]; inc ebp; mov ah, 0x83; ret 0x5201; 
0x08072da7: les ecx, ptr [ecx + ecx*4]; inc esi; add al, 0x8d; and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x0805c700: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0804efbd: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08072c21: les ecx, ptr [ecx*4 - 0x687df7d]; call dword ptr [eax - 0x73]; 
0x080c690d: les ecx, ptr [edx]; ret; 
0x0805dfb0: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0809b406: les edi, ptr [eax + 0x21]; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x080492d0: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x08059f00: les edi, ptr [ebx + ebx*2]; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0805d68d: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x08048347: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a97f2: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080a9844: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0807c47a: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x080a4cc0: les edx, ptr [eax - 0x73]; adc dword ptr [eax], -0x56; cld; call dword ptr [eax + 0x56]; 
0x0805c9ab: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a9127: les edx, ptr [eax]; add esp, 0xc; ret; 
0x0804d753: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x08053fcf: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x080487b3: les edx, ptr [eax]; leave; ret; 
0x0804883b: les edx, ptr [eax]; mov byte ptr [0x80db320], 1; leave; ret; 
0x08055fe1: les edx, ptr [eax]; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0808f5f4: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x08055fb6: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0806ce78: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cb10: les edx, ptr [eax]; mov eax, dword ptr [esp + 8]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805c44d: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0809d6c6: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080a90b4: les edx, ptr [eax]; mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x0809ea50: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a13fd: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a4755: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x0805dd25: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08054b82: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08057e1a: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08052a7b: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x08086188: les edx, ptr [ebx + ecx*4]; je 0x3e1b1; adc al, 0x89; ret; 
0x080aaab3: les edx, ptr [ecx + ecx*4]; ret 0x895b; 
0x08092e36: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0806f76e: les esi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x080937e0: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a18e9: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0809bee4: les esp, ptr [eax - 0x77]; clc; pop ebx; pop esi; pop edi; ret; 
0x08067b3a: les esp, ptr [eax]; jne 0x1fbf0; test ah, 0x40; jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x080913d3: les esp, ptr [eax]; jne 0x49470; lea eax, [edi - 4]; pop edi; ret; 
0x0809a7b0: les esp, ptr [eax]; lea esi, [esi]; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x0809b07e: les esp, ptr [eax]; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x6c]; call eax; 
0x0809b142: les esp, ptr [eax]; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x70]; call eax; 
0x080a6bb3: les esp, ptr [eax]; ret; 
0x0809cc63: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a0949: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x08049ff2: les esp, ptr [ebx]; std; call dword ptr [eax - 0x18]; 
0x080a0fa4: les esp, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0805ecd2: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0808e364: ljmp 0x450f:0x107f602; ret 0xec83; 
0x08067511: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x080577cc: ljmp 0x5b14:0xc483ffff; pop esi; ret; 
0x0805f0fa: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a8af5: ljmp 0x5f5e:0x5b2cc483; pop ebp; ret; 
0x08067521: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x08067531: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x08067541: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x08067551: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x0806fcda: ljmp 0xb886:0x8b000003; add byte ptr [eax], al; add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x080678c1: ljmp 0xc229:0xc0bc0f10; jbe 0x1f8f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x080678d1: ljmp 0xc229:0xc0bc0f20; jbe 0x1f8f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080678e1: ljmp 0xc229:0xc0bc0f30; jbe 0x1f8f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067561: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x08067571: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x08067581: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x080627aa: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x080bcaff: ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb17: ljmp [eax + 0x18fffb37]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x08050b2b: ljmp [eax + 0x23]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + ebp], -3; call dword ptr [eax - 0x18]; 
0x080a5739: ljmp [eax + 0x25]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [eax - 0x5f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08095617: ljmp [eax + 0x3f]; add al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [esp + esi], -2; call dword ptr [eax - 0x18]; 
0x08093e88: ljmp [eax + 0x75]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [esi + 0x2f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807bf37: ljmp [eax + 0x78]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb ecx, 0x69; std; call dword ptr [eax - 0x18]; 
0x080bdf43: ljmp [eax + 4]; cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x08073a2a: ljmp [eax + 9]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [edx + 0x5c], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08073151: ljmp [eax - 0x11]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x56], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08071943: ljmp [eax - 0x1e]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ebx], 0x56; std; call dword ptr [eax - 0x18]; 
0x0805732c: ljmp [eax - 0x20]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and esp, 0x29; std; call dword ptr [eax - 0x18]; 
0x08075314: ljmp [eax - 0x30]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x5d; std; call dword ptr [eax - 0x18]; 
0x080a37e7: ljmp [eax - 0x31]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x62], -2; call dword ptr [eax - 0x18]; 
0x0809ba08: ljmp [eax - 0x36]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x41], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807536c: ljmp [eax - 0x42]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x0807bf56: ljmp [eax - 0x46]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp esp, 0x69; std; call dword ptr [eax - 0x18]; 
0x08098a52: ljmp [eax - 0x49]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [ecx + edi], -2; call dword ptr [eax - 0x18]; 
0x0807bf75: ljmp [eax - 0x4e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and edi, 0x69; std; call dword ptr [eax - 0x18]; 
0x0806b72f: ljmp [eax - 0x4f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x40], edi; std; call dword ptr [eax - 0x18]; 
0x08079acc: ljmp [eax - 0x56]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [eax + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080bcb13: ljmp [eax - 0x570004c9]; aaa; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080a3975: ljmp [eax - 0x5b]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [ebp - 0x63], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08074b4b: ljmp [eax - 0x61]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [esi], 0x5c; std; call dword ptr [eax - 0x18]; 
0x0806c211: ljmp [eax - 0x67]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x080747ec: ljmp [eax - 0x6c]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [ebp + 0x5c], -3; call dword ptr [eax - 0x18]; 
0x0807b006: ljmp [eax - 0x70]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx], 0x63; std; call dword ptr [eax - 0x18]; 
0x0806c369: ljmp [eax - 0x72]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or edi, 0x43; std; call dword ptr [eax - 0x18]; 
0x0806c34a: ljmp [eax - 0x73]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add esp, 0x43; std; call dword ptr [eax - 0x18]; 
0x080927aa: ljmp [eax - 0x7a]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x0807017b: ljmp [eax - 0x7c]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; 
0x0807017b: ljmp [eax - 0x7c]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x080aee4f: ljmp [eax - 0x7f0006a8]; pop eax; stc; jmp dword ptr [eax + 0x58]; 
0x080753b2: ljmp [eax - 0x80]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x0807312d: ljmp [eax - 0xb]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x56], -3; call dword ptr [eax - 0x18]; 
0x080a28d5: ljmp [eax - 0xe]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [edx - 0x65], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080ae5e3: ljmp [eax]; daa; stc; call dword ptr [edi]; stc; call eax; 
0x080c48b3: ljmp [eax]; hlt; cld; jmp dword ptr [eax - 0xc]; 
0x080be083: ljmp [eax]; push es; cld; jmp edi; 
0x080c9c03: ljmp [ebx + 0x16]; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080c48cf: ljmp [ebx - 0xc]; cld; call eax; 
0x080c48cb: ljmp [ebx - 0xc]; cld; ljmp [ebx - 0xc]; cld; call eax; 
0x0805c65d: ljmp [ecx]; fdivr dword ptr [ecx]; ret 0x870f; 
0x080642c8: ljmp [ecx]; ret 0x280f; 
0x08081cab: ljmp [ecx]; ret 0x4de9; 
0x0805739d: ljmp [ecx]; ret 0x6a52; 
0x0809bd69: ljmp [ecx]; ret 0xbd83; 
0x0808249b: ljmp [ecx]; ret 0xd639; 
0x0809f187: ljmp [ecx]; ret 0xddf7; 
0x0807e64a: ljmp [ecx]; ret; 
0x08089576: ljmp [ecx]; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x080af5a3: ljmp [edi + 0x65]; stc; jmp dword ptr [eax]; 
0x080ae013: ljmp [edi - 0x33]; sti; jmp ebx; 
0x080bdd1f: ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdc97: ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdc97: ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bdbdf: ljmp [edi]; or al, 0xfc; call eax; 
0x080bdb4f: ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x080bdd1b: ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdbdb: ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; call eax; 
0x080bdb4b: ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x0809a3f9: ljmp [edx]; ja 0x52c1e; mov edx, dword ptr [ebp - 0x64]; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x080af5b3: ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x080a7c37: lock add byte ptr [eax], al; add byte ptr [ebx + 0xf10247c], cl; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x08098699: lock add byte ptr [eax], al; add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0804fb46: lock add dword ptr [eax], eax; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x080d5a13: lock add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x080d596b: lock add dword ptr [edx], eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5184: lock add dword ptr [edx], eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x08058f93: lock dec dword ptr [ebp + 0x50030076]; or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x08058419: lock dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x080c985e: lock or byte ptr [esi + ecx - 0x20], cl; or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x080d6208: lock sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x080d04f0: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add ah, bl; mov ebx, 0xff980000; sti; call dword ptr [ecx + 1]; 
0x080c6a74: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0x21], ah; add byte ptr [eax], al; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0805114b: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 0x18]; 
0x080514ea: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 4]; 
0x080d0ab4: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x6bffff3f], ah; or edi, esp; jmp esi; 
0x08050d22: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0805c640: lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0ef05], al; ret; 
0x0804902b: lodsb al, byte ptr [esi]; and bh, ch; call dword ptr [eax - 0x18]; 
0x080c8464: lodsb al, byte ptr [esi]; clc; clc; call dword ptr [ecx]; 
0x080ae5a4: lodsb al, byte ptr [esi]; daa; stc; call eax; 
0x080d4a14: lodsb al, byte ptr [esi]; frndint; jmp dword ptr [edi + 7]; 
0x080ced24: lodsb al, byte ptr [esi]; insd dword ptr es:[edi], dx; sti; jmp dword ptr [ebx]; 
0x0809dea2: lodsb al, byte ptr [esi]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x080c2659: lodsb al, byte ptr [esi]; or byte ptr [edi + 0x26], al; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x080c4c33: lodsb al, byte ptr [esi]; push cs; adc al, 0x41; ret; 
0x080d0cc4: lodsb al, byte ptr [esi]; ret; 
0x080c6f54: lodsb al, byte ptr [esi]; sar al, 1; jmp edx; 
0x080c0106: lodsb al, byte ptr [esi]; xchg eax, edi; jo 0x78170; salc; retf; ret 0x5508; 
0x08080d27: lodsd eax, dword ptr [esi]; adc al, byte ptr [eax]; add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x08080d1f: lodsd eax, dword ptr [esi]; adc dword ptr [eax], eax; add byte ptr [ebp - 0x527af02e], al; adc al, byte ptr [eax]; add byte ptr [eax - 0x49343], al; call dword ptr [ebx + 0xf]; 
0x080bf587: lodsd eax, dword ptr [esi]; and al, 0x36; adc eax, 0x42d35a1d; cmp al, 0xe; push esp; jmp dword ptr [ebx - 0x40]; 
0x0809f322: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0807ab34: lodsd eax, dword ptr [esi]; inc ebx; std; call dword ptr [edx + 0x50]; 
0x0808cb7f: lodsd eax, dword ptr [esi]; loope 0x44b81; dec dword ptr [ebx - 0x4db7b]; jmp dword ptr [ebp - 0x75]; 
0x080d6140: lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x08095844: lodsd eax, dword ptr [esi]; or eax, 0xcec8308; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x0809f33e: lodsd eax, dword ptr [esi]; ret; 
0x08066e1b: loope 0x1ee1d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08067d06: loope 0x1fc8b; ret 0x6640; 
0x0806ee7f: loope 0x26e0a; pop eax; sbb byte ptr [ecx + 0x40c61c50], cl; and byte ptr [ecx], al; pop ebx; ret; 
0x0807016b: loope 0x28103; std; dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x0808a01e: loope 0x42009; mov esp, 0xf6fffff3; ret 0xf10; 
0x0808a6d8: loope 0x426d9; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0808cb80: loope 0x44b81; dec dword ptr [ebx - 0x4db7b]; jmp dword ptr [ebp - 0x75]; 
0x08092b7c: loope 0x4ab8d; je 0x4aba0; ret; 
0x080a0c04: loope 0x58c02; jmp dword ptr [esi - 0x70]; 
0x080adab0: loope 0x65ac3; sti; call dword ptr [ecx]; 
0x080add30: loope 0x65d46; sti; call dword ptr [ecx]; 
0x080c4845: loope 0x7c843; dec ecx; loope 0x7c847; call edi; 
0x080c4845: loope 0x7c843; dec ecx; loope 0x7c847; call edi; loope 0x7c84b; jmp eax; 
0x080c4849: loope 0x7c847; call edi; 
0x080c4849: loope 0x7c847; call edi; loope 0x7c84b; jmp eax; 
0x080c484d: loope 0x7c84b; jmp eax; 
0x080d2a61: loope 0x8aa63; add byte ptr [esp], ch; cld; jmp dword ptr [edi]; 
0x080cfd41: mov ah, 0; add byte ptr [esi + esi*8], bh; sti; jmp dword ptr [edi]; 
0x080bf9ee: mov ah, 0x13; ret; 
0x0809093b: mov ah, 0x24; pushal; add al, 0; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x08067dfa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x08067e1a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x080561f3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea edi, [edi]; xor eax, eax; ret; 
0x0808fd2a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08099d42: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x080a8c0a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8cba: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8c5a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08056f3a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; ret; 
0x080674ca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x08067c6a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x080cbb0c: mov ah, 0x30; cli; jmp dword ptr [ebx]; 
0x080c83cc: mov ah, 0x3a; add byte ptr [eax], al; mov al, 0xf6; clc; call dword ptr [edx]; 
0x08050573: mov ah, 0x52; push eax; push ebx; call dword ptr [ebx + 0xc]; 
0x08073123: mov ah, 0x57; std; call dword ptr [eax - 0x73]; 
0x080c09fb: mov ah, 0x5e; sar byte ptr [0x733db8a1], 0xd7; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x0807affc: mov ah, 0x69; std; call dword ptr [eax - 0x73]; 
0x0804ad2b: mov ah, 0x83; ret 0x5201; 
0x080a8f59: mov ah, 0x89; ret 0x5050; 
0x08050952: mov ah, 0x8b; pop ebp; rcl byte ptr [edx + 0x51], 0x50; call dword ptr [eax + 0xc]; 
0x0807b6ab: mov ah, 0x8d; adc dword ptr [eax], 0x14; cli; dec dword ptr [ebx - 0x1ab43]; call dword ptr [eax - 0x73]; 
0x080bfe90: mov ah, 0xa5; ret; 
0x080bf334: mov ah, 0xb5; mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x080d01cc: mov ah, 0xb8; add byte ptr [eax], al; inc eax; sti; sti; jmp dword ptr [esi]; 
0x080ce5dc: mov ah, 0xe3; cli; call dword ptr [ebx + 3]; 
0x0806ffde: mov ah, 0xff; inc edi; ret 0xbf24; 
0x08049c5b: mov ah, 1; rol byte ptr [ecx], 1; sar dword ptr [ecx], cl; push ebp; mov esp, 0x89c3470f; ret 0x73e9; 
0x080c4fcc: mov ah, 6; add byte ptr [eax], al; inc eax; pop esi; clc; call edx; 
0x080d514c: mov ah, 7; std; call dword ptr [edx + 1]; 
0x08085a72: mov ah, bh; call dword ptr [edx - 0x77]; 
0x080bf7ec: mov ah, bl; push esi; ret; 
0x080a310e: mov al, 0; add byte ptr [eax], al; push dword ptr [ebx + edx - 0x7d]; ret; 
0x0808f58a: mov al, 0; add byte ptr [eax], al; push ebx; call dword ptr [eax + 0x34]; 
0x0806782c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0805e6a9: mov al, 0x14; stc; dec dword ptr [ebp - 0x7592f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x08057982: mov al, 0x18; add byte ptr [eax], al; ret; 
0x080d2d7c: mov al, 0x20; dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2d30: mov al, 0x20; pushal; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x08067f3c: mov al, 0x3f; std; jmp dword ptr [esi + 0xf]; 
0x080c4f70: mov al, 0x4b; clc; call dword ptr [ebx]; 
0x0806ee0a: mov al, 0x4d; stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x08077bfe: mov al, 0x5d; std; call dword ptr [eax - 0x73]; 
0x08048d07: mov al, 0x62; stc; call dword ptr [eax - 0x73]; 
0x080cf637: mov al, 0x83; add cl, byte ptr [eax + 0xe]; mov al, byte ptr [0xa580283]; push cs; adc al, 0x41; ret; 
0x0807e08a: mov al, 0x83; in al, dx; add al, 0x53; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x080840ce: mov al, 0x83; ret; 
0x080a55a4: mov al, 0x89; ret 0x870f; 
0x080c93fd: mov al, 0xa; push cs; adc al, 0x43; ret; 
0x080d54c8: mov al, 0xb; add dword ptr [eax], eax; add al, 0x10; std; jmp dword ptr [ecx]; 
0x080a63a6: mov al, 0xc1; cld; call dword ptr [eax - 0x73]; 
0x080c447c: mov al, 0xce; cld; inc eax; into; cld; jmp eax; 
0x080c44a8: mov al, 0xdc; cld; call dword ptr [eax - 0x24]; 
0x080c451c: mov al, 0xde; cld; jmp eax; 
0x080cf730: mov al, 0xe2; sti; call dword ptr [esi]; 
0x080c83d0: mov al, 0xf6; clc; call dword ptr [edx]; 
0x080c84f0: mov al, 0xf9; clc; call dword ptr [eax]; 
0x0804a85c: mov al, 0xf; xchg eax, edi; ret 0x920f; 
0x080a3b23: mov al, 0xff; jmp dword ptr [esi - 0x70]; 
0x080c69bb: mov al, 1; add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080a52ac: mov al, 1; ret 0xd739; 
0x080ce457: mov al, 2; add al, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cee3a: mov al, 3; dec esp; push cs; mov al, byte ptr [0xe0a6803]; adc al, 0x41; ret; 
0x0806b592: mov al, byte ptr [0x1fffd40]; clc; jmp eax; 
0x080c8c9a: mov al, byte ptr [0x30b5201]; out 2, al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0807bc21: mov al, byte ptr [0x31000019]; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x0808b435: mov al, byte ptr [0x39fffffb]; ret 0x870f; 
0x0808bfa0: mov al, byte ptr [0x39fffffb]; ret 0x8f0f; 
0x0809b0f4: mov al, byte ptr [0x4203008b]; add al, 0x89; ret 0x458b; 
0x0809e59c: mov al, byte ptr [0x5a00005b]; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a18ea: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x0805c1ec: mov al, byte ptr [0x5b000129]; ret; 
0x080d41b8: mov al, byte ptr [0x640000f8]; iretd; cld; jmp dword ptr [esi]; 
0x080bdfec: mov al, byte ptr [0x68fffc05]; add al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080ccc37: mov al, byte ptr [0x700e4901]; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x080aaadc: mov al, byte ptr [0x81fff9dc]; ret; 
0x08093c5c: mov al, byte ptr [0x83000000]; rol byte ptr [ecx], 0x88; or cl, byte ptr [edi]; mov dh, 0x4d; in al, 0x83; ret 0x8401; 
0x0807a451: mov al, byte ptr [0x8b00000e]; xchg eax, esp; sbb eax, 0xfffffe80; test edx, edx; je 0x32462; call edx; 
0x08056f0d: mov al, byte ptr [0x8b080d]; ret; 
0x0809b02d: mov al, byte ptr [0x8b34568b]; add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x458b; 
0x0808b5e8: mov al, byte ptr [0x8bfffe28]; test byte ptr [ebx - 0x1080], al; jmp eax; 
0x0808c8dd: mov al, byte ptr [0x8bfffe28]; test byte ptr [ebx - 0x1100], al; jmp eax; 
0x0809dfdc: mov al, byte ptr [0x8d7f048d]; pop esp; ret; 
0x0805e663: mov al, byte ptr [0x8dfff848]; xchg eax, edx; adc byte ptr [edi - 8], cl; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080cfb49: mov al, byte ptr [0x900e4601]; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c4b93: mov al, byte ptr [0x900e4801]; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080c5809: mov al, byte ptr [0x900e4a0a]; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0804823b: mov al, byte ptr [0x9066080d]; ret; 
0x080d0ab8: mov al, byte ptr [0x940000c1]; or edi, esp; jmp esi; 
0x080c83b8: mov al, byte ptr [0xa400003a]; idiv al; call dword ptr [edi]; 
0x080c6aab: mov al, byte ptr [0xa470201]; push cs; adc al, 0x41; ret; 
0x080cf63c: mov al, byte ptr [0xa580283]; push cs; adc al, 0x41; ret; 
0x08067aec: mov al, byte ptr [0xa8000000]; inc eax; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x080cd275: mov al, byte ptr [0xa830201]; push cs; adc al, 0x41; ret; 
0x0808b000: mov al, byte ptr [0xb9fffe28]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0808ac28: mov al, byte ptr [0xbffffe28]; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808af78: mov al, byte ptr [0xbffffe28]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x08052586: mov al, byte ptr [0xc7000011]; ret 0xb080; 
0x080ac0ca: mov al, byte ptr [0xc708478b]; ret 0xaa28; 
0x080c8fb8: mov al, byte ptr [0xd4000046]; xor ecx, edi; jmp dword ptr [edx]; 
0x0804a7f5: mov al, byte ptr [0xe0838d50]; and edi, ebp; call dword ptr [eax - 0x73]; 
0x080cee3e: mov al, byte ptr [0xe0a6803]; adc al, 0x41; ret; 
0x0806c848: mov al, byte ptr [0xe8fffffd]; jmp dword ptr [ecx]; 
0x0808cb7a: mov al, byte ptr [0xe9fffffb]; lodsd eax, dword ptr [esi]; loope 0x44b81; dec dword ptr [ebx - 0x4db7b]; jmp dword ptr [ebp - 0x75]; 
0x080ce9d1: mov al, byte ptr [0xefcc0000]; cli; call edi; 
0x080c2650: mov al, byte ptr [0xfc87aa3c]; adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x0808a771: mov al, byte ptr [0xfe4599e8]; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0809b8fc: mov al, byte ptr [0xfffff8ba]; call ebx; 
0x08065cb6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x08065df6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x08064466: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x08064586: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x08065e14: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x080645a4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x080668ea: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08066a4a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080662da: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0806643a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065e54: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080645e4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08066d82: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08065c90: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x08065dd0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x08064440: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x08064560: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x08048dd0: mov al, byte ptr [edx]; add byte ptr [eax], al; call dword ptr [esi]; 
0x08065ce4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x08065e24: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x08064484: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x080645b4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0806690a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08066a6a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080662fa: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806645a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08065e74: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x08064604: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08065ca0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x08065de0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x08065df0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x08064580: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x08064450: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x08064570: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0806cf7f: mov bh, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x080d00f1: mov bh, 0; add byte ptr [edx + edi*8 - 5], cl; call dword ptr [ebp]; 
0x08057a4a: mov bh, 0x25; or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x08099385: mov bh, 0x40; cmp edi, esi; inc dword ptr [ecx]; cli; jmp edx; 
0x0806f841: mov bh, 0x42; add al, 0x83; ret 0xc608; 
0x0807b35d: mov bh, 0x44; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x080a7cc1: mov bh, 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x0806b591: mov bh, 0xa0; inc eax; std; inc dword ptr [ecx]; clc; jmp eax; 
0x080d5be6: mov bh, 0xa; push cs; adc al, 0x43; ret; 
0x080c0cc4: mov bh, 0xb4; mov edi, dword ptr [edx]; ret; 
0x080bf337: mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x080735d7: mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x080c49ca: mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c23cf: mov bh, 6; movsd dword ptr es:[edi], dword ptr [esi]; int1; dec ebx; ret 0x5803; 
0x08095307: mov bl, 0x60; xor dh, bh; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x080c1d9f: mov bl, 0x8e; dec ebp; ret 0xdcd9; 
0x080562e7: mov bl, 0x94; add byte ptr [eax], al; add bh, al; mov eax, 0xc7080daf; ret 0xb314; 
0x0805304a: mov bl, 0x94; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0807bc20: mov bl, 0xa0; sbb dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x080a0fcb: mov bl, 0xa8; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x38728a0a], al; ret 0; 
0x080bf333: mov bl, 0xb4; mov ch, 0xb6; mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x08067f33: mov bl, 0xc0; aas; std; jmp dword ptr [esi + 0xf]; 
0x08053adf: mov bl, 0xd; or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x08082c76: mov bl, 0xd; or byte ptr [ecx + 0x290c2444], cl; ret 0xc889; 
0x080536cf: mov bl, 0xd; or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x08048840: mov bl, 0xd; or byte ptr [ecx], al; leave; ret; 
0x080d3141: mov bl, 0xfc; call dword ptr [edi]; 
0x080d3179: mov bl, 0xfc; jmp dword ptr [eax]; 
0x0806ecf9: mov bl, 6; add byte ptr [ebx - 0x7c72eb14], al; xchg eax, esi; dec edx; std; call dword ptr [eax - 0x18]; 
0x080c6a28: mov bl, al; clc; call dword ptr [eax]; 
0x080cf375: mov bl, bh; call dword ptr [esi]; 
0x08075645: mov bl, ch; add al, byte ptr [eax]; add bh, dh; ret 0xf800; 
0x080ceb29: mov byte ptr [0x42340000], al; sti; call dword ptr [eax]; 
0x0804883d: mov byte ptr [0x80db320], 1; leave; ret; 
0x0805e9da: mov byte ptr [0x81fffe9d], al; ret; 
0x0806ba52: mov byte ptr [0x8247c83], al; add dword ptr [ecx - 0x76ebdbac], ecx; ret 0x4c89; 
0x08048950: mov byte ptr [0x89145589], al; ret 0x4d89; 
0x08049098: mov byte ptr [0x8b000001], al; je 0x10c4; or al, 0xc7; ret 0xbf88; 
0x08061d5a: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x0806ee86: mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x08066d38: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08091b93: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x08048759: mov byte ptr [eax + ecx], al; push eax; call 0xb90; hlt; mov ebx, dword ptr [esp]; ret; 
0x0808e0bb: mov byte ptr [eax - 0x75000000], bl; sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x08091e2f: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08091384: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x08079005: mov byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call edi; 
0x080d05a8: mov byte ptr [eax], al; cld; jmp dword ptr [edi]; 
0x080d6008: mov byte ptr [eax], bh; std; call dword ptr [esi]; 
0x080d085c: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08cb: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08ba: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0898: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d08a9: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d0887: mov byte ptr [ebp + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080972ca: mov byte ptr [ebp - 0x1c6bb7d], cl; call dword ptr [eax - 0x73]; 
0x080caea0: mov byte ptr [ebp], ah; add byte ptr [esi + edx], ch; cli; call eax; 
0x08083c82: mov byte ptr [ebx + 0x478b8c75], cl; add al, 0xc7; ret 0xfff0; 
0x080ca786: mov byte ptr [ebx + 0xe], 4; ret; 
0x08067db9: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0809f736: mov byte ptr [ebx + eax*4], 0xfa; add dword ptr [ecx - 0x7cbb81f9], ecx; ret; 
0x0809b049: mov byte ptr [ebx - 0x7aff7500], cl; ror byte ptr [edi], 0x84; pushfd; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x08053de2: mov byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x94b5], cl; add bh, al; ret 0xafc0; 
0x080cbca0: mov byte ptr [ebx], dh; add byte ptr [edx + esi - 6], bl; jmp dword ptr [eax]; 
0x080c9dab: mov byte ptr [ecx + 0xe], 4; ret; 
0x080cbacf: mov byte ptr [ecx + 0xe], 8; ret; 
0x080cf939: mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x42; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6911: mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x44; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed1: mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x44; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c691f: mov byte ptr [ecx - 0x39], 0x41; lds ecx, ptr [esp + eax]; add al, 0x46; or ebp, dword ptr [eax + 0xa]; ret; 
0x08073626: mov byte ptr [ecx], 0x83; dec byte ptr [esi*2 + 0x8838ddb]; pop esp; std; call dword ptr [eax - 0x73]; 
0x0804a39a: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x0807bb86: mov byte ptr [ecx], 0x83; ret 0x8910; 
0x080cbd77: mov byte ptr [ecx], al; add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x08066d7e: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0806b2fd: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0806b533: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0805f0fe: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080832ba: mov byte ptr [edi], cl; push eax; ret; 
0x080d090f: mov byte ptr [edx + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0920: mov byte ptr [edx + 0xe], 0xc; add dword ptr [ebx], 0xe; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x08065cb9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x08065df9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x08064469: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x08064589: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x08065cd7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x08065e17: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x08064477: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x080645a7: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x08065d1b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08065e5b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080644ab: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x080645eb: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08061d55: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x0805e915: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0809be00: mov byte ptr [edx], 0x83; ret; 
0x08065c92: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x08065dd2: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x08064442: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x08064562: mov byte ptr [edx], al; mov eax, edx; ret; 
0x08088c9d: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x6274f314], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x08088149: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x8a343], cl; call dword ptr [eax + 1]; 
0x08067b47: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x080bf7ea: mov ch, 0x31; mov ah, bl; push esi; ret; 
0x080c0b23: mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x080896b9: mov ch, 0x3c; idiv edi; call dword ptr [esi - 1]; 
0x0807f1a6: mov ch, 0x40; idiv edi; call dword ptr [ebx + 0x50]; 
0x0807f2b6: mov ch, 0x40; idiv edi; call dword ptr [ebx - 1]; 
0x0808a395: mov ch, 0x44; idiv edi; inc esi; test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x0807fce1: mov ch, 0x4c; idiv edi; call dword ptr [ecx - 1]; 
0x0807f1db: mov ch, 0x50; idiv edi; call dword ptr [esi - 0x77]; 
0x08070dc9: mov ch, 0x53; std; call dword ptr [ecx + 0x6a]; 
0x08089c1c: mov ch, 0x70; idiv edi; call dword ptr [edx - 0x77]; 
0x0807f961: mov ch, 0x70; idiv edi; ljmp [ecx]; ret; 
0x0807f728: mov ch, 0x80; idiv edi; call dword ptr [eax + 0x56]; 
0x0807eaf4: mov ch, 0x80; idiv edi; call dword ptr [esi - 0x18]; 
0x0807fce8: mov ch, 0x80; idiv edi; call dword ptr [esi - 0x77]; 
0x08053de8: mov ch, 0x94; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080c1ebb: mov ch, 0x99; in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x0807fca1: mov ch, 0x9c; idiv edi; call dword ptr [ecx - 0x77]; 
0x080d4472: mov ch, 0xa; ret; 
0x080c2866: mov ch, 0xab; ret; 
0x080bf335: mov ch, 0xb6; mov bh, 0xb8; mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x080d3451: mov ch, 0xfc; call dword ptr [ebp]; 
0x08093718: mov ch, 0xfd; jmp dword ptr [esi - 0x70]; 
0x080625ad: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x0809adf0: mov ch, ch; cmp bh, dh; call dword ptr [edi - 0x7b]; 
0x08092b90: mov ch, dh; and ch, 0xf; je 0x4abb0; add eax, 2; ret; 
0x080cfa39: mov cl, 0; add ah, al; out dx, eax; sti; jmp dword ptr [edx]; 
0x080cfb01: mov cl, 0; add ah, cl; int1; sti; call dword ptr [eax + 1]; 
0x080adaac: mov cl, 0x11; sti; jmp ecx; 
0x080add2c: mov cl, 0x14; sti; jmp ecx; 
0x08054b06: mov cl, 0x29; std; call dword ptr [eax - 0x18]; 
0x0805c754: mov cl, 0x4d; add byte ptr [eax + ecx - 0x73], dh; dec ebp; add al, ch; jmp dword ptr [ebx]; 
0x080c60b1: mov cl, 0xa; ret; 
0x080c4478: mov cl, 0xd5; cld; push dword ptr [eax - 0x3f000332]; into; cld; jmp eax; 
0x08090631: mov cl, 0xfa; sti; inc dword ptr [ecx + 0x499cbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08093b47: mov cl, 0xfd; jmp dword ptr [esi - 0x70]; 
0x08092b79: mov cl, dl; and cl, 0xf; je 0x4aba0; ret; 
0x080c1f48: mov cs, edi; ret 0x8b36; 
0x0804cd2b: mov cs, word ptr [ecx + 0x15f093]; add byte ptr [ecx], ch; ret 0x97e8; 
0x0805e9bb: mov dh, 0; add byte ptr [eax], al; add al, ch; mov ebx, 0x81fffe9d; ret; 
0x080a2bf3: mov dh, 0; add byte ptr [eax], al; add bh, al; ret 0xbcc8; 
0x08056d33: mov dh, 0; add byte ptr [eax], al; add bl, dh; ret; 
0x08067b54: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x08056ed4: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x08092bc4: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; mov eax, 1; ret; 
0x08056f14: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x27bc], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x080562a5: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x0809e515: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0xbf], cl; add byte ptr [ebx + 0x2b650440], cl; add eax, 0; ret; 
0x08091d8b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x08050d53: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x137caba3], cl; or al, 0x53; call dword ptr [ebx + 0x10]; 
0x08093553: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x14d3db8c], cl; ret 0x9066; 
0x080a1743: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; jb 0x59745; cld; jmp dword ptr [esi - 0x70]; 
0x0808f5bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov edx, 0x81fffb91; ret; 
0x080942c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x4c7243bb], cl; imul ebp, dword ptr [edi], -2; jmp dword ptr [ebp - 0x75]; 
0x080a7c5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x70f0c003], al; ret 0; 
0x080786eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cc3dbbc], cl; ret 0xc704; 
0x0807b133: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x08091fb3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x08081a4b: mov dh, 0; add byte ptr [eax], al; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08091b2b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x080a954b: mov dh, 0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08055b98: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x080623a3: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x08053f3b: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x080ada6c: mov dh, 0x11; sti; jmp esi; 
0x080623a6: mov dh, 0x12; sub eax, edx; ret; 
0x080adcec: mov dh, 0x14; sti; jmp esi; 
0x08056363: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x08060835: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x080608a5: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x08080f8b: mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808219b: mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08080cdc: mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08080621: mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x08081077: mov dh, 0x44; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08061d82: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08060891: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x08077189: mov dh, 0x48; dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x08060831: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x080608a1: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x080adf54: mov dh, 0x4b; sti; jmp dword ptr [esi + 0x4c]; 
0x08093c66: mov dh, 0x4d; in al, 0x83; ret 0x8401; 
0x0809b8fa: mov dh, 0x4d; mov al, byte ptr [0xfffff8ba]; call ebx; 
0x080c0c82: mov dh, 0x4e; ret 0x474c; 
0x08085f5d: mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x08061df5: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08061d86: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0808ddd1: mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x08061db5: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08088800: mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x080a7ce1: mov dh, 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x0808b5e5: mov dh, 0x84; add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1080], al; jmp eax; 
0x0808c8da: mov dh, 0x84; add esp, dword ptr [eax - 0x740001d8]; test byte ptr [ebx - 0x1100], al; jmp eax; 
0x0808af75: mov dh, 0x84; xor esp, dword ptr [eax - 0x400001d8]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x0808affd: mov dh, 0x84; xor esp, dword ptr [eax - 0x460001d8]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0807b243: mov dh, 0x8c; adc esi, eax; popal; std; dec dword ptr [ebx - 0x976b]; call dword ptr [edx - 1]; 
0x080d28ec: mov dh, 0xa; push cs; adc al, 0x45; ret; 
0x080d570e: mov dh, 0xa; ret; 
0x080bf336: mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0808d50e: mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x1d63c]; add ecx, ebx; jmp ecx; 
0x0808d468: mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x080a7c40: mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x08054453: mov dh, 0xc0; neg eax; add esp, 8; pop ebx; ret; 
0x080a47b6: mov dh, 0xc0; neg eax; ret; 
0x080a0fa7: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x08093712: mov dh, 0xc0; pop ebx; ret; 
0x080736b7: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x080c1ec0: mov dh, 0xc7; ret 0xe71f; 
0x08060a8a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x080a7f09: mov dh, 0xd2; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x080a6be9: mov dh, 0xd2; mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x0804dc64: mov dh, 0xd2; mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x080b7dd0: mov dh, 0xd; add byte ptr [eax], al; mov ecx, 0xbc00000d; or eax, 0xdbf0000; add byte ptr [eax], al; ret 0xd; 
0x080c29f3: mov dh, 0xdd; in eax, 0xe2; dec esp; add ch, byte ptr [si + 0x6d]; pop ebx; ret 0x6f9; 
0x080923b7: mov dh, 0xf0; push esi; push dword ptr [ebp]; call edi; 
0x08060c38: mov dh, 0xfb; sub eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080936c6: mov dh, 0xfd; jmp dword ptr [esi - 0x70]; 
0x08055c2e: mov dh, 1; sub esp, 8; lea ebx, [ecx + 1]; push eax; push ebp; call dword ptr [esi + 0xc]; 
0x0806a244: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x0805703f: mov dh, 2; pop ebx; pop esi; ret; 
0x08060844: mov dh, 2; sub eax, ecx; ret; 
0x0806ac73: mov dh, 8; cmp cl, byte ptr [edx]; jne 0x22c7d; xor eax, eax; pop ebx; ret; 
0x08060841: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x08092684: mov dh, al; std; jmp dword ptr [esi - 0x70]; 
0x080aaffa: mov dl, 0x32; cli; jmp dword ptr [esi - 0x70]; 
0x08095acc: mov dl, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080c211c: mov dl, 0x9f; sub edi, esi; int 0x6b; ret; 
0x080c8a85: mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x080c5fd5: mov dl, 0xa; ret; 
0x080bf332: mov dl, 0xb3; mov ah, 0xb5; mov dh, 0xb7; mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0807c4b6: mov dl, 0xe8; push esp; sub bh, bh; jmp dword ptr [esi - 0x70]; 
0x08073a3f: mov dl, 0xff; dec dword ptr [ebx - 0x72e7dba4]; add dword ptr [eax], 0x61; std; call dword ptr [eax + 0x68]; 
0x0806ed17: mov dl, 6; add byte ptr [ebx - 0x7f72eb14], al; scasd eax, dword ptr es:[edi]; dec edx; std; call dword ptr [eax + 0x6a]; 
0x0807d9c3: mov ds, word ptr [eax - 0x39000000]; ret 0xafc0; 
0x080a6bef: mov dword ptr [0xdf01fffe], eax; jmp edi; 
0x080a7cbc: mov dword ptr [0xf00768d], eax; mov bh, 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x080a6df9: mov dword ptr [0xf901fffe], eax; jmp ecx; 
0x080a00b8: mov dword ptr [0xfcec52e8], eax; jmp dword ptr [esi - 0x70]; 
0x08056ff4: mov dword ptr [eax + 0x185c], 0; mov dword ptr [eax + 0x1860], 0; ret; 
0x08056ffe: mov dword ptr [eax + 0x1860], 0; ret; 
0x08058cfe: mov dword ptr [eax + 0x1898], 0; ret; 
0x0806ee80: mov dword ptr [eax + 0x18], ebx; mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x0806ee90: mov dword ptr [eax + 0x18], edx; ret; 
0x08057980: mov dword ptr [eax + 0x18b0], edx; ret; 
0x0806ee83: mov dword ptr [eax + 0x1c], edx; mov byte ptr [eax + 0x20], 1; pop ebx; ret; 
0x0808f0d5: mov dword ptr [eax + 0x20], ecx; pop ebx; ret; 
0x0808f0a4: mov dword ptr [eax + 0x20], ecx; ret; 
0x0808f6da: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0805562c: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x08055660: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x08057ec0: mov dword ptr [eax + 0x450], edx; add esp, 8; pop ebx; ret; 
0x080579aa: mov dword ptr [eax + 0x4c0], edx; ret; 
0x0805795a: mov dword ptr [eax + 0x4c4], edx; ret; 
0x080a8c48: mov dword ptr [eax + 0x4c], edx; ret; 
0x080579f0: mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579d0: mov dword ptr [eax + 0x4d0], edx; ret; 
0x0805792a: mov dword ptr [eax + 0x4d8], edx; ret; 
0x080579a0: mov dword ptr [eax + 0x4e0], 1; mov dword ptr [eax + 0x4c0], edx; ret; 
0x08057950: mov dword ptr [eax + 0x4e0], 1; mov dword ptr [eax + 0x4c4], edx; ret; 
0x08057920: mov dword ptr [eax + 0x4e0], 1; mov dword ptr [eax + 0x4d8], edx; ret; 
0x08057a50: mov dword ptr [eax + 0x4f8], edx; ret; 
0x08057a70: mov dword ptr [eax + 0x4fc], edx; ret; 
0x0805c2e8: mov dword ptr [eax + 0x500], edx; ret; 
0x0805c2dc: mov dword ptr [eax + 0x504], edx; lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x0805562f: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0808f099: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x08056cd5: mov dword ptr [eax + 4], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0808f0cd: mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; pop ebx; ret; 
0x08055663: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x08055632: mov dword ptr [eax + 4], edx; ret; 
0x0808f0d2: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; pop ebx; ret; 
0x0808f0a1: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0806ee0e: mov dword ptr [eax + 8], edx; pop ebx; pop esi; ret; 
0x0806eb95: mov dword ptr [eax], 0; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0807cd87: mov dword ptr [eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0807c3f7: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x0805b9cf: mov dword ptr [eax], 0x16; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x080d10c1: mov dword ptr [eax], 0xfc1bec00; call dword ptr [ebx]; 
0x08093321: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x08092eaf: mov dword ptr [eax], 2; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0808f7a3: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0809e9dd: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080a10dc: mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x0808f0d0: mov dword ptr [eax], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; pop ebx; ret; 
0x0808f09f: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0807bffa: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0809ceb4: mov dword ptr [eax], edx; ret; 
0x0808fc9a: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0807a44e: mov dword ptr [ebp + ebx + 0xea0], edx; mov edx, dword ptr [ebp + ebx - 0x180]; test edx, edx; je 0x32462; call edx; 
0x0806de42: mov dword ptr [ebp - 0x30], edx; mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x080a3017: mov dword ptr [ebp - 0x30], esi; mov esi, ebx; mov ebx, eax; nop; call dword ptr [esi]; 
0x08050753: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0808a8f9: mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x0808c8d3: mov dword ptr [ebp - 0x468], esi; movzx eax, byte ptr [ebx + eax - 0x1d760]; mov eax, dword ptr [ebx + eax*4 - 0x1100]; jmp eax; 
0x080802d7: mov dword ptr [ebp - 0x470], edi; call dword ptr [edx + 0x1c]; 
0x08082194: mov dword ptr [ebp - 0x478], edi; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08071a76: mov dword ptr [ebp - 0x48], eax; push eax; call 0x28270; mov dword ptr [esp], esi; mov eax, dword ptr [ebp - 0x48]; call eax; 
0x0807201a: mov dword ptr [ebp - 0x48], ecx; push ecx; call 0x28270; mov dword ptr [esp], esi; mov ecx, dword ptr [ebp - 0x48]; call ecx; 
0x0808ab3c: mov dword ptr [ebp - 0x48c], 0; jmp eax; 
0x0808ac76: mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808ac31: mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808b54c: mov dword ptr [ebp - 0x498], 1; mov dword ptr [ebp - 0x4a0], 0x20; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x08080547: mov dword ptr [ebp - 0x49c], 0; mov dword ptr [ebp - 0x4d0], ecx; jmp eax; 
0x0808ab36: mov dword ptr [ebp - 0x49c], edx; mov dword ptr [ebp - 0x48c], 0; jmp eax; 
0x0808b556: mov dword ptr [ebp - 0x4a0], 0x20; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808b59c: mov dword ptr [ebp - 0x4a4], 1; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808b504: mov dword ptr [ebp - 0x4ac], 1; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808bd29: mov dword ptr [ebp - 0x4b0], 1; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808b16c: mov dword ptr [ebp - 0x4bc], 1; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808afbc: mov dword ptr [ebp - 0x4c0], 1; xor ecx, ecx; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x08080551: mov dword ptr [ebp - 0x4d0], ecx; jmp eax; 
0x0809dea0: mov dword ptr [ebp - 0x54], edx; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0809de9d: mov dword ptr [ebp - 0x58], eax; mov dword ptr [ebp - 0x54], edx; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0809b0ae: mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x0809b080: mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x6c]; call eax; 
0x0809b144: mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x70]; call eax; 
0x080a4a44: mov dword ptr [ebx + 0x14], eax; add esp, 0x28; pop ebx; ret; 
0x080a0c4c: mov dword ptr [ebx + 0x1aa8], eax; add esp, 8; pop ebx; ret; 
0x08056bda: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0806eaaa: mov dword ptr [ebx + 0x9a8], eax; pop ebx; pop esi; pop edi; ret; 
0x0809e5e5: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x080a023b: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809e8bd: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x08052e05: mov dword ptr [ebx + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0807020d: mov dword ptr [ebx - 0x254], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080a61d6: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x08082e39: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0809d89a: mov dword ptr [ebx], eax; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x0807bff7: mov dword ptr [ebx], ecx; mov dword ptr gs:[eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0808f661: mov dword ptr [ebx], ecx; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x080556dd: mov dword ptr [ebx], edx; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x080d0b48: mov dword ptr [ecx + 0xe], 0xe028708; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0b26: mov dword ptr [ecx + 0xe], 0xe028708; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x08082e12: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080cf93b: mov dword ptr [ecx - 0x3b], 0x4204040c; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6913: mov dword ptr [ecx - 0x3b], 0x4404040c; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed3: mov dword ptr [ecx - 0x3b], 0x4404040c; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c6921: mov dword ptr [ecx - 0x3b], 0x4604040c; or ebp, dword ptr [eax + 0xa]; ret; 
0x0809b873: mov dword ptr [ecx], 0x83047b01; ret; 
0x0806f081: mov dword ptr [ecx], 0x832cc683; call dword ptr [esi]; 
0x0804d465: mov dword ptr [ecx], 0x83ff4788; ret 0x3901; 
0x0806b531: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x080a8c2e: mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x0807c0c9: mov dword ptr [ecx], eax; pop ebx; ret; 
0x080c2060: mov dword ptr [ecx], esi; fdiv st(2); scasd eax, dword ptr es:[edi]; daa; push esp; syscall; 
0x0809cd07: mov dword ptr [edi + 4], edx; pop ebx; pop esi; pop edi; ret; 
0x0809d732: mov dword ptr [edi], eax; jne 0x55774; mov eax, 0x80dbf2c; mov esi, 1; call dword ptr [eax]; 
0x0809f2e8: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x080a3e16: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0809f2f1: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x08057fae: mov dword ptr [edi], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0804e29c: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x08056f91: mov dword ptr [edx + 0x1860], ebx; add dword ptr [edx + 0x185c], 1; pop ebx; ret; 
0x0804e2a2: mov dword ptr [edx + 0x18], eax; ret; 
0x08093819: mov dword ptr [edx + 0x1a60], eax; ja 0x4b828; xor eax, eax; pop ebx; ret; 
0x0804e29f: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x08065d07: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x08065e37: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x08064497: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x080645c7: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x08065ce9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x08065e29: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x080667e8: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x08066a37: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x080668e7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08066a47: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080662d7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x08066437: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08066a67: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x08066457: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08066947: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08066aa7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08066337: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x08066497: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08064489: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x080645b9: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08065d5b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e9b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x080644eb: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806462b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065c4b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08065ebb: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08065d3d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x08065e7d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x080643fb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806460d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0809230e: mov dword ptr [edx + 8], ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a8bfb: mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x080abae9: mov dword ptr [edx + ebp*4], ecx; test eax, eax; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x0805e92f: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e936: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e956: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e8f2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e912: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e932: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e8ef: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e90f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080a11d3: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080a8be3: mov dword ptr [edx], eax; add esp, 8; pop ebx; ret; 
0x08065ca4: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x08065de4: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x08065bd2: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x08065e02: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x08065cb4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x08065df4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x08064464: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x08064584: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x08065e12: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x080645a2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x08065e22: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x080645b2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x080710d4: mov dword ptr [edx], eax; mov eax, 0xffffffff; ret; 
0x08065d02: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x08065e32: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x08064492: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x080645c2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x08066422: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08064382: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x08064574: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x08056c45: mov dword ptr [edx], eax; ret; 
0x0805da79: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0808f3c8: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0809ceac: mov dword ptr [edx], ecx; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x080c637a: mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080a48c4: mov dword ptr [esi + 0x10], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0809edf7: mov dword ptr [esi + 0x18], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0805575b: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0805421e: mov dword ptr [esi + 0x38], 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0808f124: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080a87ef: mov dword ptr [esi + 0x4c], eax; pop esi; pop edi; ret; 
0x080a47e1: mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a1373: mov dword ptr [esi + 0xc], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x08079ab7: mov dword ptr [esi + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0809dc99: mov dword ptr [esi + 8], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a46c3: mov dword ptr [esi + 8], eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x0805255b: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x08055a70: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x08056bd8: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x080a1536: mov dword ptr [esi], eax; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080a924e: mov dword ptr [esp + 0x10], edx; push eax; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x080515cb: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0808f8df: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [edi + 0x10]; pop ebx; pop esi; pop edi; jmp eax; 
0x0808f78f: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [edi + 0x14]; pop ebx; pop esi; pop edi; jmp eax; 
0x08053e0b: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x08050434: mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x08053e0f: mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x0805a555: mov dword ptr [esp + 0x1c], edx; call eax; 
0x08051100: mov dword ptr [esp + 0x20], eax; mov esi, dword ptr [ebp + 0x54]; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0805a551: mov dword ptr [esp + 0x24], ecx; mov dword ptr [esp + 0x1c], edx; call eax; 
0x0804952b: mov dword ptr [esp + 0x3c], 0x51; int 0x80; 
0x08093657: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806ccc1: mov dword ptr [esp + 0xc], eax; xor eax, eax; lea edx, [esp + 4]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0805a505: mov dword ptr [esp + 4], ecx; call eax; 
0x0807a247: mov dword ptr [esp + 8], eax; call edx; 
0x080abaf0: mov dword ptr [esp + 8], edx; call eax; 
0x0804ed96: mov dword ptr [esp + 8], edx; mov eax, dword ptr [ecx - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080aad32: mov dword ptr [esp], eax; call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809d86b: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d824: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x080ab850: mov dword ptr [esp], ebp; call edi; 
0x08079279: mov dword ptr [esp], ecx; call esi; 
0x08071908: mov dword ptr [esp], esi; call edi; 
0x0806cf7b: mov dword ptr [esp], esi; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x08071a7f: mov dword ptr [esp], esi; mov eax, dword ptr [ebp - 0x48]; call eax; 
0x08072023: mov dword ptr [esp], esi; mov ecx, dword ptr [ebp - 0x48]; call ecx; 
0x0807cd86: mov dword ptr gs:[eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0807c3f6: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0805b9ce: mov dword ptr gs:[eax], 0x16; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x08092eae: mov dword ptr gs:[eax], 2; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0807bff9: mov dword ptr gs:[eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0807bff6: mov dword ptr gs:[ebx], ecx; mov dword ptr gs:[eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0807c0c8: mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x08057fad: mov dword ptr gs:[edi], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080710d3: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x08062094: mov eax, 0; jne 0x1a2c0; pop ebx; ret; 
0x08062151: mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x080626d2: mov eax, 0; jne 0x1ae50; pop ebx; ret; 
0x0806250b: mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x08048906: mov eax, 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x08091eca: mov eax, 0x10; pop edi; ret; 
0x0806c629: mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0807c203: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0806c9f8: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806ca62: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806c9a9: mov eax, 0x127; mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x080934c2: mov eax, 0x127; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x08093409: mov eax, 0x127; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x08093453: mov eax, 0x127; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080933a9: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0807c1e0: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a1750: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0805daeb: mov eax, 0x16; pop ebx; pop esi; ret; 
0x0805da8b: mov eax, 0x16; pop ebx; ret; 
0x0804dc69: mov eax, 0x1fffd24; cli; jmp edx; 
0x0809dea3: mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0809b407: mov eax, 0x21; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x08085488: mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x08050b1e: mov eax, 0x2930838d; std; call dword ptr [eax - 0x73]; 
0x080c71d0: mov eax, 0x2c000028; aam 0xf8; call dword ptr [eax]; 
0x08093801: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0809373e: mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x080c79d0: mov eax, 0x3c000030; in eax, 0xf8; call dword ptr [edi]; 
0x080d1653: mov eax, 0x410c0e0a; ret; 
0x0806c204: mov eax, 0x44b8838d; std; call dword ptr [eax - 0x73]; 
0x080bfddb: mov eax, 0x45155e93; ret 0x591c; 
0x0806d94a: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x080a3da4: mov eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x080a498d: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806eb06: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0807c269: mov eax, 0x77; int 0x80; 
0x080a7863: mov eax, 0x78811a75; add dword ptr [ebp + 0x75000000], ebp; adc dword ptr [esi - 0x7f], esp; js 0x5f878; int 0x80; 
0x08093306: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806d97d: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x08056f0a: mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x08098ee5: mov eax, 0x80daa24; push ebx; call dword ptr [eax]; 
0x08095841: mov eax, 0x80dad0c; sub esp, 0xc; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x0809ce45: mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x0809d6e3: mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0809d736: mov eax, 0x80dbf2c; mov esi, 1; call dword ptr [eax]; 
0x080a196a: mov eax, 0x80dbf64; mov eax, dword ptr [eax]; ret; 
0x0806ea5f: mov eax, 0x80dbf64; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x0806bbca: mov eax, 0x85000018; ror byte ptr [edi], 0x44; ret 0xff65; 
0x0806e2fa: mov eax, 0x89c85d89; ret; 
0x0809bb2e: mov eax, 0x89fffffd; cli; call dword ptr gs:[0x10]; 
0x080941c2: mov eax, 0x8bcc4589; inc ebp; aam 0x89; ret 0xc083; 
0x08048bd9: mov eax, 0x8c8b080d; and al, 0x98; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x0809365b: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080930c8: mov eax, 0x8d; mov edx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08052240: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0809bb27: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x248]; mov edx, edi; call dword ptr gs:[0x10]; 
0x080cfdd0: mov eax, 0x9c0000b4; idiv bl; jmp esi; 
0x0806c8a0: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0806ead7: mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0807c260: mov eax, 0xad; int 0x80; 
0x0807c301: mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0807c44a: mov eax, 0xaf; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x080a310d: mov eax, 0xb0; push dword ptr [ebx + edx - 0x7d]; ret; 
0x0806cf7e: mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x08091e42: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x080bf338: mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0806d6f1: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806d878: mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0806c921: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08093361: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c951: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080562ed: mov eax, 0xc7080daf; ret 0xb314; 
0x08093320: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x08093320: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x08093340: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x08093340: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x08093330: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x08093330: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x08091e96: mov eax, 0xc; pop edi; ret; 
0x08093350: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x08093350: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x080ce9d0: mov eax, 0xcc0000a0; out dx, eax; cli; call edi; 
0x08092cb1: mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092cb1: mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0806d9ad: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080a1721: mov eax, 0xdc; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806cccb: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0806cde1: mov eax, 0xdd; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806cd41: mov eax, 0xdd; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806cd97: mov eax, 0xdd; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0807c1ee: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x08048c50: mov eax, 0xec83080d; or al, 0xff; xor al, ch; ret; 
0x08098698: mov eax, 0xf0; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eb75: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080d01cd: mov eax, 0xfb400000; sti; jmp dword ptr [esi]; 
0x0806c380: mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x0806c380: mov eax, 0xfc; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x0809a7ce: mov eax, 0xfffe3ff4; jmp eax; 
0x0807c00e: mov eax, 0xffffffd4; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0807c3f0: mov eax, 0xffffffe0; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x08092ea8: mov eax, 0xffffffe0; mov dword ptr gs:[eax], 2; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0807c06a: mov eax, 0xfffffff0; add eax, dword ptr gs:[0]; ret; 
0x0807c04a: mov eax, 0xfffffff4; add eax, dword ptr gs:[0]; ret; 
0x0807c02a: mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x080562b0: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x08051a45: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08055fe3: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x080515e3: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0808f603: mov eax, 0xffffffff; pop ebx; ret; 
0x0808e3b9: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x08055b40: mov eax, 0xffffffff; ret; 
0x0808f5f6: mov eax, 1; add esp, 8; pop ebx; ret; 
0x0806c38c: mov eax, 1; int 0x80; 
0x080608f0: mov eax, 1; ja 0x188f9; neg eax; ret; 
0x08060ab0: mov eax, 1; ja 0x18ab9; neg eax; ret; 
0x08060c68: mov eax, 1; ja 0x18c71; neg eax; ret; 
0x080622e1: mov eax, 1; ja 0x1a2ea; neg eax; ret; 
0x08062380: mov eax, 1; ja 0x1a389; neg eax; ret; 
0x08062e67: mov eax, 1; ja 0x1ae70; neg eax; ret; 
0x0806b327: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x08055fb8: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x08092a04: mov eax, 1; pop ebx; ret; 
0x08096252: mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x08072a21: mov eax, 1; pop esi; pop edi; ret; 
0x08092bd0: mov eax, 1; ret; 
0x08092a0b: mov eax, 2; pop ebx; ret; 
0x080a03be: mov eax, 2; pop esi; pop edi; pop ebp; ret; 
0x08092be0: mov eax, 2; ret; 
0x0806cabb: mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb41: mov eax, 3; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092bf0: mov eax, 3; ret; 
0x0806cb8b: mov eax, 4; call dword ptr gs:[0x10]; 
0x0806cc11: mov eax, 4; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a95b7: mov eax, 4; pop ebx; ret; 
0x08091ded: mov eax, 4; pop edi; ret; 
0x08092c00: mov eax, 4; ret; 
0x08092c10: mov eax, 5; ret; 
0x0806ce33: mov eax, 6; call dword ptr gs:[0x10]; 
0x0806cea1: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092c20: mov eax, 6; ret; 
0x08092c30: mov eax, 7; ret; 
0x080a95a3: mov eax, 8; pop ebx; ret; 
0x08091e46: mov eax, 8; pop edi; ret; 
0x080d295d: mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0805042f: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x0806bb41: mov eax, dword ptr [0x81fffe45]; ret 0xe4bb; 
0x0805e641: mov eax, dword ptr [0x81ffff1a]; ret 0xb9bb; 
0x0809331b: mov eax, dword ptr [0xc3fffddd]; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0806cab2: mov eax, dword ptr [0xc]; test eax, eax; jne 0x24ad8; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb82: mov eax, dword ptr [0xc]; test eax, eax; jne 0x24ba8; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806ce2a: mov eax, dword ptr [0xc]; test eax, eax; jne 0x24e50; mov eax, 6; call dword ptr gs:[0x10]; 
0x080c087f: mov eax, dword ptr [0xd11e901c]; stc; jnp 0x78840; ret; 
0x080adac0: mov eax, dword ptr [0xd1fffb12]; adc bh, bl; call dword ptr [ecx]; 
0x080c09ff: mov eax, dword ptr [0xd7733db8]; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x080515cf: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x080792ba: mov eax, dword ptr [eax + 0x1974]; ret; 
0x0807189a: mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080718ba: mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x0808fd54: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x0808fd57: mov eax, dword ptr [eax + 0x28]; ret; 
0x08056f34: mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ba4: mov eax, dword ptr [eax + 0x48]; ret; 
0x080a8c14: mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8c54: mov eax, dword ptr [eax + 0x50]; ret; 
0x080a8cc4: mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8cb4: mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c64: mov eax, dword ptr [eax + 0x5c]; ret; 
0x0808f588: mov eax, dword ptr [eax + 0xb0]; push ebx; call dword ptr [eax + 0x34]; 
0x0809e510: mov eax, dword ptr [eax + 4]; ret; 
0x0809e520: mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x080510fd: mov eax, dword ptr [eax + 8]; mov dword ptr [esp + 0x20], eax; mov esi, dword ptr [ebp + 0x54]; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x08056c58: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807c017: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0807e088: mov eax, dword ptr [eax + esi*4]; sub esp, 4; push ebx; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x08088568: mov eax, dword ptr [eax + esi]; sub esp, 4; push ebx; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x080a8b6f: mov eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x0809bf34: mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x0808f3c6: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0807c015: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x08056f10: mov eax, dword ptr [eax]; ret; 
0x0807b418: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0806ea65: mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x0806d7d5: mov eax, dword ptr [eax]; test eax, eax; je 0x257e0; add esp, 8; pop ebx; ret; 
0x080a3892: mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0806de45: mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x08071a82: mov eax, dword ptr [ebp - 0x48]; call eax; 
0x08050950: mov eax, dword ptr [ebp - 0x4c]; mov ebx, dword ptr [ebp - 0x40]; push edx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x0809a7c9: mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08099d59: mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x08099eb9: mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x0809976f: mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x0809b083: mov eax, dword ptr [ebp - 0x6c]; call eax; 
0x0809b147: mov eax, dword ptr [ebp - 0x70]; call eax; 
0x0809a7b8: mov eax, dword ptr [ebp - 0x74]; call eax; 
0x08099d48: mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0809d8a2: mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x0808b176: mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808c8e1: mov eax, dword ptr [ebx + eax*4 - 0x1100]; jmp eax; 
0x0808b009: mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0808ac3b: mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808af81: mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x08080f8f: mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808219f: mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08080ce0: mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08080625: mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x0808107b: mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x0806a235: mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x080abae2: mov eax, dword ptr [ebx + ebp*4 - 0x180]; mov dword ptr [edx + ebp*4], ecx; test eax, eax; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x080929f5: mov eax, dword ptr [ebx + edx*4]; test eax, eax; jne 0x4a9c0; mov eax, edx; pop ebx; ret; 
0x0806c5cc: mov eax, dword ptr [ebx + esi*4 - 0x2bacc]; add eax, ebx; jmp eax; 
0x080a14c8: mov eax, dword ptr [ebx]; add byte ptr [ebx - 0x39], dl; ret; 
0x0809b0a6: mov eax, dword ptr [ebx]; add eax, dword ptr [esi]; test edx, edx; jne 0x530b6; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x08065d04: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x08065e34: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x08064494: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x080645c4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x08066a44: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x08066aa4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08066424: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08065ce5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x08065e25: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x08064485: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x080645b5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0806692a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08066a8a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806631a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806647a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065e94: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08064624: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0806694a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08066aaa: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0806633a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0806649a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0806690b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08066a6b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080662fb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806645b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08065eb4: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08064644: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08065e75: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x08064605: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0808fc2e: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x08056c79: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0809be36: mov eax, dword ptr [ecx - 2]; call dword ptr [eax - 0x18]; 
0x0804ed9a: mov eax, dword ptr [ecx - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08065bd0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x08065e00: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x08065e10: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x080645a0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x08065e20: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x080645b0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x08065e30: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x080645c0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x08066420: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x08064380: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x08064590: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x08056c43: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x08065ca1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x08065de1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x08065df1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x08064581: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x08064451: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x08064571: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0809c055: mov eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x0806ac9f: mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x08053f88: mov eax, dword ptr [edi + 0x10]; pop ebx; pop esi; pop edi; jmp eax; 
0x0805597e: mov eax, dword ptr [edi + 0x14]; pop ebx; pop esi; pop edi; jmp eax; 
0x0806b58f: mov eax, dword ptr [edi + esi*4 - 0x2bf60]; add eax, edi; jmp eax; 
0x0809a471: mov eax, dword ptr [edi]; add eax, dword ptr [ecx]; call eax; 
0x080578c4: mov eax, dword ptr [edx + 0x14]; cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x0807c0c0: mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x080a8c30: mov eax, dword ptr [edx + 0x4c]; ret; 
0x080a6d60: mov eax, dword ptr [edx + 0x54]; add esp, 8; pop ebx; ret; 
0x080a6d38: mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x080a6d50: mov eax, dword ptr [edx + 0x5c]; add esp, 8; pop ebx; ret; 
0x080a8c28: mov eax, dword ptr [edx + 0x60]; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x080a9610: mov eax, dword ptr [edx + 4]; add esp, 8; pop ebx; ret; 
0x080a95ec: mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080a87ec: mov eax, dword ptr [edx]; pop ebx; mov dword ptr [esi + 0x4c], eax; pop esi; pop edi; ret; 
0x0808f7a5: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0808f8f1: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x08053069: mov eax, dword ptr [esi + 0x10]; pop ebx; pop esi; pop edi; jmp eax; 
0x0807b394: mov eax, dword ptr [esi + 0x10]; test eax, eax; je 0x333a4; sub esp, 0xc; push esi; call eax; 
0x080a11f0: mov eax, dword ptr [esi + 0xc]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080557b8: mov eax, dword ptr [esi + 0xc]; pop esi; pop edi; jmp eax; 
0x080998cb: mov eax, dword ptr [esi + 8]; add eax, dword ptr [edi]; call eax; 
0x0809a1ab: mov eax, dword ptr [esi + 8]; add eax, dword ptr [edx]; call eax; 
0x080a11b1: mov eax, dword ptr [esi + 8]; mov ecx, dword ptr [ebx + eax*4 - 0x165c0]; add ecx, ebx; jmp ecx; 
0x0806da7a: mov eax, dword ptr [esi + 8]; test eax, eax; jne 0x25aa0; sub esp, 0xc; push dword ptr [esi]; call edi; 
0x08099786: mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x080a3033: mov eax, dword ptr [esi]; add eax, dword ptr [edx + 4]; call eax; 
0x0809d6dc: mov eax, dword ptr [esi]; cmp eax, 0x31; jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0806eaa8: mov eax, dword ptr [esi]; mov dword ptr [ebx + 0x9a8], eax; pop ebx; pop esi; pop edi; ret; 
0x0806ce00: mov eax, dword ptr [esp + 0x10]; call 0x24cb0; add esp, 8; pop ebx; ret; 
0x080a7f04: mov eax, dword ptr [esp + 0x10]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x0806b2ff: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x080a920a: mov eax, dword ptr [esp + 0x14]; call eax; 
0x0807d9f5: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a8bdf: mov eax, dword ptr [esp + 0x18]; mov dword ptr [edx], eax; add esp, 8; pop ebx; ret; 
0x0809bf81: mov eax, dword ptr [esp + 0x20]; call 0x53a20; add esp, 0x1c; ret; 
0x080aa28e: mov eax, dword ptr [esp + 0x20]; call eax; 
0x0804e5a3: mov eax, dword ptr [esp + 0x24]; call eax; 
0x080a88f7: mov eax, dword ptr [esp + 0x28]; call eax; 
0x080517ea: mov eax, dword ptr [esp + 0x28]; push eax; call dword ptr [eax + 4]; 
0x08078f2d: mov eax, dword ptr [esp + 0x38]; call eax; 
0x0808fec1: mov eax, dword ptr [esp + 0x38]; push eax; call esi; 
0x080738c7: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x08073c30: mov eax, dword ptr [esp + 0x40]; call eax; 
0x080744cf: mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755d1: mov eax, dword ptr [esp + 0x48]; call eax; 
0x08078560: mov eax, dword ptr [esp + 0x50]; call eax; 
0x080716bb: mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x0806ce7a: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x08091c02: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0808fd50: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + 0x28]; ret; 
0x08056f30: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x080a8ba0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x080a8c10: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8c50: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x080a8cc0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8cb0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x080a8c60: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x080a8c40: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x08056c50: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b410: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0809d86e: mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d827: mov eax, dword ptr [esp + 4]; ret 0xc; 
0x08056f40: mov eax, dword ptr [esp + 4]; ret; 
0x080563dc: mov eax, dword ptr [esp + 8]; add eax, ebx; pop ebx; ret; 
0x0806cb12: mov eax, dword ptr [esp + 8]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806b021: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0809ceb0: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x0809ee39: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0805e8f5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806aff7: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08048910: mov eax, dword ptr [esp]; ret; 
0x0805042e: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x0806cab1: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x24ad8; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb81: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x24ba8; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806ce29: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x24e50; mov eax, 6; call dword ptr gs:[0x10]; 
0x0807c014: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0806da79: mov eax, dword ptr ss:[esi + 8]; test eax, eax; jne 0x25aa0; sub esp, 0xc; push dword ptr [esi]; call edi; 
0x0806ec8d: mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0809f6d2: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0804d191: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080a1cb5: mov eax, ebp; pop esi; pop edi; pop ebp; ret 8; 
0x0806eec0: mov eax, ebx; call 0x26e40; add esp, 0x18; pop ebx; ret; 
0x0806f49d: mov eax, ebx; pop ebx; pop esi; pop edi; jmp eax; 
0x08054402: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08093bca: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0808312d: mov eax, ebx; pop ebx; pop esi; ret; 
0x08092c90: mov eax, ebx; pop ebx; ret; 
0x0808ec16: mov eax, ebx; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x08049912: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08049976: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0804fb4a: mov eax, ecx; pop esi; pop edi; ret; 
0x0809cd05: mov eax, edi; mov dword ptr [edi + 4], edx; pop ebx; pop esi; pop edi; ret; 
0x08049b10: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08050069: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x08064384: mov eax, edi; pop edi; ret; 
0x08057346: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x08049040: mov eax, edx; call dword ptr gs:[0x10]; 
0x0804cd0f: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0805c44f: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x08085b88: mov eax, edx; pop ebx; pop esi; ret; 
0x0806ebf9: mov eax, edx; pop ebx; ret; 
0x08054130: mov eax, edx; pop edi; pop ebp; ret; 
0x08058666: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0805c486: mov eax, edx; pop esi; pop edi; ret; 
0x08064564: mov eax, edx; ret; 
0x0805255e: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x080a4888: mov eax, esi; jne 0x5c892; add esp, 0x24; pop ebx; pop esi; ret; 
0x080a4970: mov eax, esi; jne 0x5c97a; add esp, 0x24; pop ebx; pop esi; ret; 
0x0804ec64: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08057fb0: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x080923b3: mov eax, esi; pop ecx; movzx esi, al; push esi; push dword ptr [ebp]; call edi; 
0x0804ec76: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0805ea6d: mov ebp, 0x30004ef; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x080d06d9: mov ebp, 0x4a40000; cld; jmp esi; 
0x080916c6: mov ebp, 0x5ff801c0; ret; 
0x080b8084: mov ebp, 0xc000000f; sldt word ptr [eax]; ret; 
0x080bf33d: mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0806ec86: mov ebp, 0xf0; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080c0a06: mov ebp, 0xfb67d10d; ret; 
0x08082195: mov ebp, 0xfffffb88; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x080802d8: mov ebp, 0xfffffb90; call dword ptr [edx + 0x1c]; 
0x080848f7: mov ebp, 0xffffff48; sub esp, 4; push edi; push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x0809ee36: mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080a8ee0: mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x080a62bb: mov ebp, dword ptr [ecx + eax]; add byte ptr [ebp - 0x7e0b8a37], al; ret; 
0x08051c45: mov ebp, dword ptr [esi + 0x54]; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x08049292: mov ebp, dword ptr [esp]; ret; 
0x0806d876: mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0806dda5: mov ebp, ebx; push edi; call esi; 
0x0805f01f: mov ebp, esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080487f2: mov ebp, esp; sub esp, 0x10; push eax; push 0x80daf80; call edx; 
0x080487a6: mov ebp, esp; sub esp, 0x14; push 0x80daf80; call eax; 
0x08059d0a: mov ebx, 0x4a0; add byte ptr [edi], cl; xchg eax, ebp; ret 0x72e9; 
0x0806da26: mov ebx, 0x5104ec83; push 3; push ebx; call edx; 
0x0806ebf0: mov ebx, 0x740af983; push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0805e9c1: mov ebx, 0x81fffe9d; ret; 
0x0805e8c1: mov ebx, 0x81fffe9e; ret; 
0x08073142: mov ebx, 0x838dffff; mov ah, 0x57; std; call dword ptr [eax - 0x73]; 
0x080bf33b: mov ebx, 0xbfbebdbc; rol cl, 0xc2; ret; 
0x080d0429: mov ebx, 0xff340000; sti; call ecx; 
0x080d04f5: mov ebx, 0xff980000; sti; call dword ptr [ecx + 1]; 
0x0806ca67: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806c9ae: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806c62e: mov ebx, 1; call dword ptr gs:[0x10]; 
0x0807c21d: mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x08050d58: mov ebx, dword ptr [ebp + 0x54]; sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x0809bb2c: mov ebx, dword ptr [ebp - 0x248]; mov edx, edi; call dword ptr gs:[0x10]; 
0x08052233: mov ebx, dword ptr [ebp - 0x40]; mov edx, dword ptr [ebp - 0x3c]; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x08050953: mov ebx, dword ptr [ebp - 0x40]; push edx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x08050571: mov ebx, dword ptr [ebp - 0x4c]; push edx; push eax; push ebx; call dword ptr [ebx + 0xc]; 
0x080a8e44: mov ebx, dword ptr [ebp - 0xc]; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080488d3: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x08092c81: mov ebx, dword ptr [ecx + edx*4 + 0xc]; lea eax, [edx + 3]; test ebx, ebx; jne 0x4ac60; pop ebx; ret; 
0x08062e33: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x1ae50; pop ebx; ret; 
0x0806cde6: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806ead3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080935e6: mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806cd46: mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0809340e: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0806cc61: mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0809ecab: mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x080930d1: mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08093743: mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x0807c454: mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0806c92a: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806d946: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806eb02: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x08093302: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806c37c: mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08093806: mov ebx, dword ptr [esp + 8]; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0806cb4e: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092cb6: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; pop ebx; ret; 
0x080a4989: mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d979: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a9: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0806cf83: mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x08048763: mov ebx, dword ptr [esp]; ret; 
0x0806eb93: mov ebx, eax; mov dword ptr [eax], 0; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0807c1ec: mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x080a301c: mov ebx, eax; nop; call dword ptr [esi]; 
0x0807c1d0: mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x0806d956: mov ebx, edx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x080ae048: mov ecx, 0x38fffbcd; into; sti; call eax; 
0x080cf291: mov ecx, 0x41140e0a; ret; 
0x0806ec8f: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0806eb6c: mov ecx, 0x80; cmp eax, edx; jne 0x26b81; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080986a0: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eb9b: mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x080a47c3: mov ecx, 0x81fffa3f; ret; 
0x0809edc3: mov ecx, 0x81fffa99; ret; 
0x08098fc3: mov ecx, 0x81fffaf7; ret; 
0x0805eac3: mov ecx, 0x81fffe9c; ret; 
0x08048249: mov ecx, 0x8300091d; in al, dx; adc byte ptr [ebp - 0x1bcbb7d], cl; call dword ptr [eax + 0x6a]; 
0x080b7dd4: mov ecx, 0xbc00000d; or eax, 0xdbf0000; add byte ptr [eax], al; ret 0xd; 
0x080bf339: mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x0806c843: mov ecx, 0xe900000f; mov al, byte ptr [0xe8fffffd]; jmp dword ptr [ecx]; 
0x080932f8: mov ecx, 0xfdba12e8; jmp dword ptr [esi - 0x70]; 
0x0809a561: mov ecx, 0xfffe3f48; add edx, ecx; jmp edx; 
0x0807c0ba: mov ecx, 0xfffffff0; mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0806b32c: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0808b004: mov ecx, 1; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x08055626: mov ecx, dword ptr [eax + 0xc]; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0808f09c: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x08099ebc: mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x08099772: mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x0809a46b: mov ecx, dword ptr [ebp + 8]; add esi, 8; mov eax, dword ptr [edi]; add eax, dword ptr [ecx]; call eax; 
0x08079276: mov ecx, dword ptr [ebp - 0x2c]; mov dword ptr [esp], ecx; call esi; 
0x08052239: mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x08072026: mov ecx, dword ptr [ebp - 0x48]; call ecx; 
0x0809a55c: mov ecx, dword ptr [ebp - 0x64]; mov edx, dword ptr [ecx + edi*4 - 0x1c0b8]; add edx, ecx; jmp edx; 
0x0809b077: mov ecx, dword ptr [ebp - 0x9c]; add esp, 0x20; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x6c]; call eax; 
0x0809b13b: mov ecx, dword ptr [ebp - 0x9c]; add esp, 0x20; mov dword ptr [ebp - 0x60], ecx; mov eax, dword ptr [ebp - 0x70]; call eax; 
0x0809d89f: mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080a11b4: mov ecx, dword ptr [ebx + eax*4 - 0x165c0]; add ecx, ebx; jmp ecx; 
0x0808d510: mov ecx, dword ptr [ebx + eax*4 - 0x1d63c]; add ecx, ebx; jmp ecx; 
0x0808d46a: mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x08070393: mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x08070319: mov ecx, dword ptr [ebx + eax*4 - 0x2aaf8]; add ecx, ebx; jmp ecx; 
0x0805d8fd: mov ecx, dword ptr [ebx + eax*4 - 0x2c680]; add ecx, ebx; jmp ecx; 
0x0806a22e: mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x0806a6d4: mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0808a018: mov ecx, dword ptr [ecx + 0x750689d1]; loope 0x42009; mov esp, 0xf6fffff3; ret 0xf10; 
0x0809ce81: mov ecx, dword ptr [ecx + 4]; test ecx, ecx; jne 0x54e60; pop ebx; ret; 
0x080a7c42: mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x080a6df5: mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x0804d958: mov ecx, dword ptr [edi + eax*4 - 0x2db80]; add ecx, edi; jmp ecx; 
0x0808fd1e: mov ecx, dword ptr [edx + 0x24]; cmp ecx, dword ptr [edx + 0x28]; cmove eax, ecx; ret; 
0x0806ca5e: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0806c926: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080934be: mov ecx, dword ptr [esp + 0x14]; mov eax, 0x127; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0806eacf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080935e2: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x080a8bf7: mov ecx, dword ptr [esp + 0x18]; mov dword ptr [edx + eax*4], ecx; add esp, 8; pop ebx; ret; 
0x0809e6ce: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e96e: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea52: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a1308: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a13ff: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a4757: mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x0806c9b3: mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806c9ee: mov ecx, dword ptr [esp + 0x20]; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08093412: mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0809344f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0809bf7d: mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x20]; call 0x53a20; add esp, 0x1c; ret; 
0x0806cc5d: mov ecx, dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0806cd9c: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080499af: mov ecx, dword ptr [esp + 0xc]; jmp esi; 
0x0806d6f6: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a4985: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d975: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0806cb46: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806d942: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806cae5: mov ecx, dword ptr [esp + 8]; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbb5: mov ecx, dword ptr [esp + 8]; mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0809d868: mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d821: mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x08054eca: mov ecx, dword ptr [esp]; ret; 
0x0807c1fa: mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0807c229: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0806b0a9: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x080930d5: mov ecx, esi; call dword ptr gs:[0x10]; 
0x0807c448: mov ecx, esi; mov eax, 0xaf; mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x08092bab: mov edi, 0; add eax, 3; ret; 
0x08066e3b: mov edi, 0; lea eax, [edi + 1]; pop edi; ret; 
0x08066e2b: mov edi, 0; lea eax, [edi]; pop edi; ret; 
0x08067bcb: mov edi, 0; lea eax, [edx + 0xa]; ret; 
0x08067bdb: mov edi, 0; lea eax, [edx + 0xc]; ret; 
0x08067beb: mov edi, 0; lea eax, [edx + 0xd]; ret; 
0x08067bfb: mov edi, 0; lea eax, [edx + 0xe]; ret; 
0x08067b6b: mov edi, 0; lea eax, [edx + 2]; ret; 
0x08067b7b: mov edi, 0; lea eax, [edx + 4]; ret; 
0x08067b8b: mov edi, 0; lea eax, [edx + 5]; ret; 
0x08067b9b: mov edi, 0; lea eax, [edx + 6]; ret; 
0x08067bab: mov edi, 0; lea eax, [edx + 8]; ret; 
0x08067bbb: mov edi, 0; lea eax, [edx + 9]; ret; 
0x080562ab: mov edi, 0; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x080608eb: mov edi, 0; mov eax, 1; ja 0x188f9; neg eax; ret; 
0x0809e51b: mov edi, 0; mov eax, dword ptr [eax + 4]; sub eax, dword ptr gs:[0]; ret; 
0x080a8c3b: mov edi, 0; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x080a1d0b: mov edi, 0; ret 4; 
0x08067c0b: mov edi, 0; xor eax, eax; ret; 
0x0806fa0c: mov edi, 0x440f080d; ret 0xc931; 
0x080a5112: mov edi, 0x5ba080d; add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x0809cd23: mov edi, 0x81fffb33; ret 0xd2d9; 
0x080960dd: mov edi, 0x89fffffd; ret 0x8d90; 
0x0806d6f2: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a6dee: mov edi, 0x8b000007; jge 0x5edbd; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x080a196d: mov edi, 0x8b080d; ret; 
0x0806ea62: mov edi, 0x8b080d; test eax, eax; cmove eax, edx; ret; 
0x0807178d: mov edi, 0x8dfffd80; adc dword ptr [eax], 0x56; std; call dword ptr [eax - 0x73]; 
0x08048dab: mov edi, 0x918d080d; lea esp, [edx]; std; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x0806fe07: mov edi, 0x940f080d; ret 0x1089; 
0x0806fe2a: mov edi, 0x950f080d; ret 0x1089; 
0x080c1eb8: mov edi, 0x99b51319; in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x080a3883: mov edi, 0xa75080d; cmp byte ptr [ebp - 0x57], 0; je 0x5ba65; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x08095dd0: mov edi, 0xec83080d; or al, 0xba; add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x0807c258: mov edi, 0xff2ab2e8; jmp dword ptr [esi - 0x70]; 
0x080700a8: mov edi, 0xfffa47e9; jmp dword ptr [esi - 0x70]; 
0x0808ac2c: mov edi, 1; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808af7c: mov edi, 1; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x0809ee33: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x080998c8: mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edi]; call eax; 
0x08099783: mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x080a6df2: mov edi, dword ptr [ebp - 0x38]; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x08099380: mov edi, dword ptr [ebp - 0x64]; mov edx, dword ptr [edi + esi*4 - 0x1c4c0]; add edx, edi; jmp edx; 
0x0809a468: mov edi, dword ptr [ebp - 0x6c]; mov ecx, dword ptr [ebp + 8]; add esi, 8; mov eax, dword ptr [edi]; add eax, dword ptr [ecx]; call eax; 
0x080848f6: mov edi, dword ptr [ebp - 0xb8]; sub esp, 4; push edi; push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x080a8e4a: mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8edd: mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x0805042b: mov edi, dword ptr [ebx + 0x54]; mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x0809d897: mov edi, dword ptr [ebx + 4]; mov dword ptr [ebx], eax; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x080a6beb: mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x0806f628: mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x080c0cc6: mov edi, dword ptr [edx]; ret; 
0x080a7c3b: mov edi, dword ptr [esp + 0x10]; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x0806cc65: mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x080a7efa: mov edi, dword ptr [esp + ebp*4 + 0x30]; ja 0x5fd2b; mov eax, dword ptr [esp + 0x10]; movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x0804cdd3: mov edi, dword ptr [esp]; ret; 
0x0809344d: mov edi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c9f2: mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806af9d: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0808a8f1: mov edi, eax; push dword ptr [ebp - 0x45c]; mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x080848d2: mov edi, es; ret 0xafc0; 
0x080c7c64: mov edi, fs; clc; jmp dword ptr [edi + 2]; 
0x0809ce92: mov edx, 0x6b05fffa; rol dword ptr [ebx], 1; add bh, al; ret 0xa068; 
0x0805c3d2: mov edx, 0x768dffff; add byte ptr [ebx - 0x77c0f20], al; fisttp word ptr [edi]; xchg eax, edi; ret 0x50e9; 
0x0809ce3a: mov edx, 0x80dbee4; cmp byte ptr [edx], 0; jne 0x54e50; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x08092ec2: mov edx, 0x81fffb58; ret; 
0x0808f5c2: mov edx, 0x81fffb91; ret; 
0x0806ebc2: mov edx, 0x81fffd9b; ret; 
0x0806d7c2: mov edx, 0x81fffdaf; ret; 
0x0806c8c2: mov edx, 0x81fffdbe; ret; 
0x0805cdc2: mov edx, 0x81fffeb9; ret; 
0x080932fb: mov edx, 0x9066fffd; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x080a0ec6: mov edx, 0xc483fffb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080930a1: mov edx, 0xc483fffd; adc al, 0x5b; pop esi; ret; 
0x0809ce32: mov edx, 0xcb05fffa; rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x0809a406: mov edx, 0xfffe3e9c; jmp edx; 
0x080710cd: mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x080736b9: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0809bf5f: mov edx, 0xffffffff; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x080562b5: mov edx, 0xffffffff; ret; 
0x080986a5: mov edx, 1; call dword ptr gs:[0x10]; 
0x0806eba0: mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0809bf2f: mov edx, 1; mov eax, dword ptr [eax]; call 0x53a20; add esp, 0x1c; ret; 
0x0808106e: mov edx, 1; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08049035: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x080abdb8: mov edx, dword ptr [eax + 0x10]; test edx, edx; je 0x63dcc; sub esp, 0xc; push eax; call edx; 
0x0808f56b: mov edx, dword ptr [eax + 0x18]; test edx, edx; je 0x47580; add esp, 8; pop ebx; ret; 
0x08055629: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x08056c71: mov edx, dword ptr [eax + 4]; jne 0xec80; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0809ceae: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; ret; 
0x0809a1a8: mov edx, dword ptr [ebp + 8]; mov eax, dword ptr [esi + 8]; add eax, dword ptr [edx]; call eax; 
0x0807a455: mov edx, dword ptr [ebp + ebx - 0x180]; test edx, edx; je 0x32462; call edx; 
0x0809b404: mov edx, dword ptr [ebp - 0x3c]; mov eax, 0x21; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x08052236: mov edx, dword ptr [ebp - 0x3c]; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0809a401: mov edx, dword ptr [ebp - 0x64]; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x08099bee: mov edx, dword ptr [ebp - 0x84]; test edx, edx; jne 0x51762; call eax; 
0x0809a206: mov edx, dword ptr [ebp - 0x84]; test edx, edx; jne 0x51eac; call eax; 
0x0809d89c: mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x0809e538: mov edx, dword ptr [ebx + 4]; call 0x5be20; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0809e598: mov edx, dword ptr [ebx + 4]; call 0x5c140; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080ada60: mov edx, dword ptr [ebx + edi*8]; dec ebx; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080a1792: mov edx, dword ptr [ecx + 0x1b68]; add word ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x0809a55f: mov edx, dword ptr [ecx + edi*4 - 0x1c0b8]; add edx, ecx; jmp edx; 
0x0804dc66: mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x08099383: mov edx, dword ptr [edi + esi*4 - 0x1c4c0]; add edx, edi; jmp edx; 
0x080a11e3: mov edx, dword ptr [edx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0805797e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x080579ee: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579ce: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x08057a4e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x08057a6e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4fc], edx; ret; 
0x080a11d0: mov edx, dword ptr [esi + 0xc]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x080a11a8: mov edx, dword ptr [esi + 4]; ja 0x59277; mov eax, dword ptr [esi + 8]; mov ecx, dword ptr [ebx + eax*4 - 0x165c0]; add ecx, ebx; jmp ecx; 
0x0806cb4a: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a4981: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d971: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0807c1fc: mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0806d906: mov edx, dword ptr [esp + 0x14]; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0806eacb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0809339f: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; jne 0x4b3c8; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080ab849: mov edx, dword ptr [esp + 0x1c]; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0806cc59: mov edx, dword ptr [esp + 0x24]; mov ecx, dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x080930cd: mov edx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08093458: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c9f4: mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806caeb: mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbbb: mov edx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0807c00a: mov edx, dword ptr [esp + 4]; mov eax, 0xffffffd4; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x080a8c44: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0806cd93: mov edx, dword ptr [esp + 8]; mov eax, 0xdd; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08056c54: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b414: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x080500e6: mov edx, dword ptr [esp]; ret; 
0x0809352c: mov edx, eax; jne 0x4b560; mov eax, 0x127; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x080935ea: mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0807c1ce: mov edx, ebp; mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x0806eb00: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x08093300: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806d940: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08053e86: mov edx, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809bb32: mov edx, edi; call dword ptr gs:[0x10]; 
0x08057533: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0809c216: mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x080913ae: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x080cbd7a: mov es, word ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0804da78: mov esi, 0x26e007b4; std; jmp dword ptr [esi + 0x39]; 
0x0809ce3d: mov esi, 0x3a80080d; add byte ptr [ebp + 0xb], dh; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x08080fd9: mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cd9: mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08081074: mov esi, 0x44b60fc0; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08070128: mov esi, 0x4c70002; and al, 0x7f; add byte ptr [eax], al; add al, ch; inc ebp; ret 0xffff; 
0x0809f869: mov esi, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0809d410: mov esi, 0x5ec0315b; pop edi; ret; 
0x080c1cb6: mov esi, 0x5fd2fe07; insd dword ptr es:[edi], dx; test eax, 0x7d4c8c5d; ret 0xd8f; 
0x080d0741: mov esi, 0x72c0000; cld; jmp edx; 
0x0804f705: mov esi, 0x83da2900; rol byte ptr [ecx], 0x39; ret 0x4774; 
0x080bbc7c: mov esi, 0xc0000006; push es; add byte ptr [eax], al; ret 6; 
0x080bbe7c: mov esi, 0xc0000007; pop es; add byte ptr [eax], al; ret 7; 
0x080bf33e: mov esi, 0xc2c1c0bf; ret; 
0x080874c5: mov esi, 0xc75f2444; ret 0xfff0; 
0x0809dd05: mov esi, 0xd8f75bc2; pop esi; pop edi; pop ebp; ret; 
0x0806b563: mov esi, 0xf000000; lahf; ret 0xea81; 
0x080bfb2a: mov esi, 0xfa1fb992; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x0805eac1: mov esi, 0xfe9cb9e8; inc dword ptr [ecx + 0x4ef61c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0807b358: mov esi, 0xffffffd; mov bh, 0x44; push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x0809d73c: mov esi, 1; call dword ptr [eax]; 
0x0807c2f9: mov esi, 8; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0807c44f: mov esi, 8; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0807c224: mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0807c1c9: mov esi, 8; mov edx, ebp; mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x0809ee30: mov esi, dword ptr [eax + 4]; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x08051104: mov esi, dword ptr [ebp + 0x54]; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0808b8b6: mov esi, dword ptr [ebp - 0x4b0]; sub esp, 4; push esi; push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x0808218e: mov esi, dword ptr [ebp - 0x4c4]; mov dword ptr [ebp - 0x478], edi; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08081068: mov esi, dword ptr [ebp - 0x4c4]; mov edx, 1; movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08099780: mov esi, dword ptr [ebp - 0x6c]; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x080a8e47: mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a8eda: mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; mov ebp, dword ptr [ebp]; mov esp, ecx; ret; 
0x08048dcc: mov esi, dword ptr [ebx]; jne 0x105e; call dword ptr [esi]; 
0x080933a3: mov esi, dword ptr [esp + 0x1c]; jne 0x4b3c8; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x08093736: mov esi, dword ptr [esp + 0x44]; lea edx, [esp + 8]; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x080495e9: mov esi, dword ptr [esp]; ret; 
0x0806ce55: mov esi, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0806cae9: mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbb9: mov esi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806cd91: mov esi, eax; mov edx, dword ptr [esp + 8]; mov eax, 0xdd; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a301a: mov esi, ebx; mov ebx, eax; nop; call dword ptr [esi]; 
0x080807fd: mov esi, edi; push eax; push edi; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x0808ad9d: mov esi, edi; sar eax, 2; push eax; push edi; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x0806af9f: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0806b01f: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0806aff5: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0806b05f: mov esi, edx; ret; 
0x08055b37: mov esi, esi; lea edi, [edi]; mov eax, 0xffffffff; ret; 
0x080a8b66: mov esp, 0x1b7413; add byte ptr [esi*2 - 0x7cff74e3], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0806bb3a: mov esp, 0x27; add al, ch; mov eax, dword ptr [0x81fffe45]; ret 0xe4bb; 
0x080487ba: mov esp, 0x27; add bl, dh; ret; 
0x08066caa: mov esp, 0x27; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x08092bca: mov esp, 0x27; add byte ptr [eax + 1], bh; ret; 
0x08092bda: mov esp, 0x27; add byte ptr [eax + 2], bh; ret; 
0x08092bea: mov esp, 0x27; add byte ptr [eax + 3], bh; ret; 
0x08092bfa: mov esp, 0x27; add byte ptr [eax + 4], bh; ret; 
0x08092c0a: mov esp, 0x27; add byte ptr [eax + 5], bh; ret; 
0x08092c1a: mov esp, 0x27; add byte ptr [eax + 6], bh; ret; 
0x08092c2a: mov esp, 0x27; add byte ptr [eax + 7], bh; ret; 
0x0808db2a: mov esp, 0x27; add byte ptr [eax - 0x14bff3b2], al; ret 0x768d; 
0x08055b3a: mov esp, 0x27; add byte ptr [eax - 1], bh; ret; 
0x08057d9a: mov esp, 0x27; add byte ptr [ebx + 0x408b0450], cl; or al, 0x83; ret; 
0x0808c03a: mov esp, 0x27; add byte ptr [ebx - 0x4737b], cl; jmp dword ptr [ebp - 0x39]; 
0x080a8caa: mov esp, 0x27; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; pop eax; ret; 
0x080723ba: mov esp, 0x27; add byte ptr [ebx - 0x7cacf314], al; ret; 
0x0804d45a: mov esp, 0x27; add byte ptr [ebx - 0x7cff7abc], cl; mov dword ptr [ecx], 0x83ff4788; ret 0x3901; 
0x080a5dba: mov esp, 0x27; add byte ptr [ecx], al; ret 0xb70f; 
0x0805e96a: mov esp, 0x27; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x08091c4a: mov esp, 0x27; add dh, dh; ret 0xf10; 
0x080c8fd4: mov esp, 0x28000046; xor bh, cl; call dword ptr [edi]; 
0x0809bd66: mov esp, 0x29fffffd; ret 0xbd83; 
0x080c63c9: mov esp, 0x41140e0a; ret; 
0x08050755: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x08067881: mov esp, 0x5ff801c0; ret; 
0x080678b1: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x080678c4: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x080678e4: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x080678d4: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080d05a5: mov esp, 0x880000; cld; jmp dword ptr [edi]; 
0x08049c62: mov esp, 0x89c3470f; ret 0x73e9; 
0x0807bc1b: mov esp, 0x89fffffe; mov bl, 0xa0; sbb dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x0809ce48: mov esp, 0x8b080d; ret; 
0x080a8e43: mov esp, 0x8bf45d8b; jne 0x60e42; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a6128: mov esp, 0x8dfffffd; cmp dword ptr [ebx], -2; call dword ptr [eax - 0x73]; 
0x080a8a13: mov esp, 0x950ff685; ret 0xc985; 
0x08066dc0: mov esp, 0xa8000000; inc eax; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x080bba78: mov esp, 0xbe000005; add eax, 0x5c00000; add byte ptr [eax], al; ret 5; 
0x0808a020: mov esp, 0xf6fffff3; ret 0xf10; 
0x0806f629: mov esp, 0xfd4e2081; inc dword ptr [ecx]; iretd; jmp edi; 
0x0809ee3d: mov esp, ecx; jmp edx; 
0x080a8ee3: mov esp, ecx; ret; 
0x080a640d: mov esp, edi; call dword ptr [ebx + 0x31]; 
0x080ab76e: mov ss, word ptr [ecx]; sti; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x08048bdd: mov word ptr [eax + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x08099ebd: mov word ptr [eax - 0x1c210], ss; add ecx, eax; jmp ecx; 
0x08099773: mov word ptr [eax - 0x1c414], ss; add ecx, eax; jmp ecx; 
0x080c8a64: mov word ptr [eax], cs; stc; call dword ptr [ecx + 0xa]; 
0x0807c1d5: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080c49a4: mov word ptr [eax], es; add byte ptr [eax], al; js 0x7c9e9; clc; jmp dword ptr [esi + 2]; 
0x0809365c: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a11b5: mov word ptr [ebx - 0x165c0], es; add ecx, ebx; jmp ecx; 
0x0808d511: mov word ptr [ebx - 0x1d63c], es; add ecx, ebx; jmp ecx; 
0x0808d46b: mov word ptr [ebx - 0x1d6e4], es; add ecx, ebx; jmp ecx; 
0x0806a22f: mov word ptr [ebx - 0x28ca0], cs; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x0806a6d5: mov word ptr [ebx - 0x28ca0], cs; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x08070394: mov word ptr [ebx - 0x2aa9c], es; add ecx, ebx; jmp ecx; 
0x0807031a: mov word ptr [ebx - 0x2aaf8], es; add ecx, ebx; jmp ecx; 
0x0805d8fe: mov word ptr [ebx - 0x2c680], es; add ecx, ebx; jmp ecx; 
0x0809b10d: mov word ptr [ebx - 0x7aff7500], cs; ror byte ptr [edi], 0x84; pop ss; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x08085a39: mov word ptr [ebx - 0xc763], cs; call dword ptr [ecx + 0x6a]; 
0x0806b9b0: mov word ptr [ebx - 3], es; call dword ptr [eax + 0x68]; 
0x080ccb24: mov word ptr [ebx - 6], gs; call dword ptr [edx]; 
0x080c54a4: mov word ptr [ebx], cs; add byte ptr [eax], al; cmp byte ptr [ecx - 8], bh; jmp edi; 
0x0808d333: mov word ptr [ecx + 0x5e5b0000], es; pop edi; pop ebp; ret; 
0x08084455: mov word ptr [ecx - 0x8f6b], cs; call dword ptr [ecx + 0x57]; 
0x08084e4b: mov word ptr [ecx - 0xb76b], cs; call dword ptr [ecx + 0x57]; 
0x080c5d79: mov word ptr [ecx], es; push cs; adc al, 0x41; ret; 
0x08085a7a: mov word ptr [ecx], gs; ret 0xc783; 
0x080a7c43: mov word ptr [edi - 0x15b78], es; add ecx, edi; jmp ecx; 
0x080a6df6: mov word ptr [edi - 0x15c38], es; add ecx, edi; jmp ecx; 
0x0804d959: mov word ptr [edi - 0x2db80], es; add ecx, edi; jmp ecx; 
0x080adeb4: mov word ptr [edi - 5], es; call edx; 
0x0809a7c2: mov word ptr [edi], cs; xchg dword ptr [ebp + 4], edx; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08065ce8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x08065e28: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x08064488: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x080645b8: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x08065d3c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08065e7c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080644cc: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0806460c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0805e935: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805e955: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08065ca3: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x08065de3: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x08065cb3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x08065df3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x08064463: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x08064583: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x08064453: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x08064573: mov word ptr [edx], ax; mov eax, edx; ret; 
0x0805ebae: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ebde: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec0e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec6e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec9e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ecce: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed3e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed6e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805edae: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805eba9: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805eba4: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08065c80: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f30: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x08064430: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080646c0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x08065c84: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f34: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x08064434: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080646c4: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0806696d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066acd: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806635d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664bd: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08065d7d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065edd: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806450d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806466d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806698d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066aed: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806637d: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664dd: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08065d9d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065efd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806452d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806468d: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x080669ad: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b0d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806639d: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664fd: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08065dbd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f1d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806454d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x080646ad: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806683c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b2d: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806624c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806651d: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065c04: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x08065e44: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x08065d17: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08065e57: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080644a7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x080645e7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065d57: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e97: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x080644e7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x08064627: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065c47: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08065eb7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x080643f7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x08064647: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x080643b4: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080645d4: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08065d38: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08065e78: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080644c8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x08064608: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08065d79: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ed9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064509: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x08064669: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065d99: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065ef9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064529: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x08064689: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065db9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f19: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x08064549: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x080646a9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08066964: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ac4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x08066354: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664b4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066984: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066ae4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x08066374: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664d4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x08066394: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664f4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066833: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066243: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x08066514: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08066968: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ac8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x08066358: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664b8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066988: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066ae8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x08066378: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664d8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669a8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b08: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x08066398: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664f8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066837: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b28: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066247: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x08066518: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065e50: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080645e0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065e90: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08064620: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065eb0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08064640: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08065c00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x08065e40: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x080643b0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080645d0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08066ac0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x080664b0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066ae0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x080664d0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08066b00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x080664f0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066b20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066510: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065ed0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064660: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064680: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f10: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08065d74: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ed4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064504: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x08064664: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064684: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f14: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806696e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ace: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0806635e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664be: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08065d7e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ede: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806450e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806466e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0806698e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066aee: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806637e: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664de: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08065d9e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065efe: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806452e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806468e: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x080669ae: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b0e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806639e: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664fe: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08065dbe: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f1e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806454e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x080646ae: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0806683d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b2e: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x0806624d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x0806651e: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065c05: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x08065e45: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x08065d18: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08065e58: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080644a8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x080645e8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065d58: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e98: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x080644e8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x08064628: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065c48: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08065eb8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x080643f8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x08064648: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x080643b5: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080645d5: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08065d39: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08065e79: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080644c9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x08064609: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x08065d7a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065eda: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0806450a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0806466a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065d9a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065efa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0806452a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0806468a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065dba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f1a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0806454a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x080646aa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08066965: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ac5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x08066355: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664b5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066985: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066ae5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x08066375: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664d5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x08066395: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664f5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066834: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066244: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x08066515: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08066969: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x08066ac9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x08066359: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x080664b9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066989: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066ae9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x08066379: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664d9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x080669a9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b09: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x08066399: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664f9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066838: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b29: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066248: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x08066519: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065e51: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080645e1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065e91: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x08064621: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065eb1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x08064641: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08065c01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x08065e41: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x080643b1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080645d1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x08066ac1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x080664b1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x08066ae1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x080664d1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08066b01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x080664f1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08066b21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x08066511: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x08065ed1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064661: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064681: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f11: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08065d75: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x08065ed5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x08064505: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x08064665: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x08065ef5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064685: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x08065f15: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x080646a5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08065c81: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f31: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x08064431: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x080646c1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0805ebaf: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ebdf: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec0f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec6f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ec9f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805eccf: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed3f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed6f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805edaf: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ebaa: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805eba5: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805edb3: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed43: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805ed73: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08065c85: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f35: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x08064435: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x080646c5: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x080d06dc: movsb byte ptr es:[edi], byte ptr [esi]; add al, 0xfc; jmp esi; 
0x080ced21: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; lodsb al, byte ptr [esi]; insd dword ptr es:[edi], dx; sti; jmp dword ptr [ebx]; 
0x08052a77: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080cf595: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [edx], ecx; ret; 
0x080d31bc: movsb byte ptr es:[edi], byte ptr [esi]; call 0xb3cdb1c2; cld; jmp dword ptr [eax]; 
0x0809b0b0: movsb byte ptr es:[edi], byte ptr [esi]; call eax; 
0x080d2a65: movsb byte ptr es:[edi], byte ptr [esi]; cld; jmp dword ptr [edi]; 
0x080a4894: movsb byte ptr es:[edi], byte ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x080adf0c: movsb byte ptr es:[edi], byte ptr [esi]; dec edx; sti; push dword ptr [ebx + ecx*2]; sti; call esp; 
0x080c83bc: movsb byte ptr es:[edi], byte ptr [esi]; idiv al; call dword ptr [edi]; 
0x080c0b42: movsb byte ptr es:[edi], byte ptr [esi]; in eax, 0x24; outsd dx, dword ptr es:[esi]; ret 0x5ae4; 
0x080c5eac: movsb byte ptr es:[edi], byte ptr [esi]; lahf; clc; jmp dword ptr [ebx]; 
0x080c97e5: movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080488ef: movsb byte ptr es:[edi], byte ptr [esi]; or eax, 0x6a128b08; add byte ptr [edx - 0x77], dl; ret; 
0x080718bc: movsb byte ptr es:[edi], byte ptr [esi]; pop ds; add byte ptr [eax], al; ret; 
0x0806af9b: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x080d222c: movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; cld; call edi; 
0x08076c77: movsb byte ptr es:[edi], byte ptr [esi]; pop esp; std; call dword ptr [eax - 0x18]; 
0x08079ac2: movsb byte ptr es:[edi], byte ptr [esi]; popal; std; call dword ptr [eax - 0x73]; 
0x080c6a7c: movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0805c1e7: movsb byte ptr es:[edi], byte ptr [esi]; sbb byte ptr [eax], al; add al, ch; mov al, byte ptr [0x5b000129]; ret; 
0x080d5a9c: movsb byte ptr es:[edi], byte ptr [esi]; xor ch, bh; call dword ptr [ecx]; 
0x08052a76: movsb byte ptr es:[edi], byte ptr es:[esi]; add dword ptr [eax], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a3977: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [ebp - 0x63], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080c4fb9: movsd dword ptr es:[edi], dword ptr [esi]; add ecx, dword ptr [edx]; ret; 
0x080a4776: movsd dword ptr es:[edi], dword ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x080c23d1: movsd dword ptr es:[edi], dword ptr [esi]; int1; dec ebx; ret 0x5803; 
0x0806b01e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0806aff4: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0805eb85: movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0806fdc1: movsd dword ptr es:[edi], dword ptr [esi]; push ecx; std; inc dword ptr [ebx - 0x4c72f314]; fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x0806aff2: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0806b05b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0809f2de: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x080ac1e7: movsd dword ptr es:[edi], dword ptr [esi]; sub esp, edi; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0806b05d: movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0806aff1: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0806b05a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x08080fd8: movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cd8: movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08081073: movsx eax, al; movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x0808d50d: movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d63c]; add ecx, ebx; jmp ecx; 
0x0808d467: movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x080a7c3f: movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x15b78]; add ecx, edi; jmp ecx; 
0x08054452: movzx eax, al; neg eax; add esp, 8; pop ebx; ret; 
0x080a47b5: movzx eax, al; neg eax; ret; 
0x080a0fa6: movzx eax, al; pop ebx; pop esi; ret; 
0x08093711: movzx eax, al; pop ebx; ret; 
0x08080f8a: movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808219a: movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08080cdb: movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08080620: movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x08081076: movzx eax, byte ptr [eax + esi - 0x20]; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08056362: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x080622a7: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x0806264d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x080a954a: movzx eax, byte ptr [eax]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08055b97: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x080623a2: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x08053f3a: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0808b5e4: movzx eax, byte ptr [ebx + eax - 0x1d760]; mov eax, dword ptr [ebx + eax*4 - 0x1080]; jmp eax; 
0x0808c8d9: movzx eax, byte ptr [ebx + eax - 0x1d760]; mov eax, dword ptr [ebx + eax*4 - 0x1100]; jmp eax; 
0x0808affc: movzx eax, byte ptr [ebx + esi - 0x1d760]; mov ecx, 1; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0808af74: movzx eax, byte ptr [ebx + esi - 0x1d760]; mov edi, 1; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x08055c2d: movzx eax, byte ptr [ecx]; sub esp, 8; lea ebx, [ecx + 1]; push eax; push ebp; call dword ptr [esi + 0xc]; 
0x08060a85: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0806a264: movzx eax, byte ptr [edx + 1]; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x08060854: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0806a284: movzx eax, byte ptr [edx + 2]; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x08060864: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0806a2a4: movzx eax, byte ptr [edx + 3]; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x08060874: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08060884: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0806a2e4: movzx eax, byte ptr [edx + 5]; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x08060894: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x080608a4: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08060834: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0806a243: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x0805703e: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x08060843: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x080736b6: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x08060850: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x08060860: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x08060870: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x08060880: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x08060890: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x080608a0: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08060830: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0806214a: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x08062504: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x0806ac72: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0x22c7d; xor eax, eax; pop ebx; ret; 
0x08060840: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x08060a89: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x08060c37: movzx edi, bl; sub eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080623a5: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x08061d94: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08061df4: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08061dc4: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08061db4: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x08061d85: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x080a7f08: movzx edx, dl; add eax, dword ptr [eax + edx*4 - 0x157bc]; jmp eax; 
0x080a6be8: movzx edx, dl; mov edi, dword ptr [ebx + edx*4 - 0x15c6c]; add edi, ebx; jmp edi; 
0x0804dc63: movzx edx, dl; mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x080923b6: movzx esi, al; push esi; push dword ptr [ebp]; call edi; 
0x0805edb7: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806e5c8: neg dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0806a387: neg eax; add esp, 4; pop ebx; ret; 
0x08054455: neg eax; add esp, 8; pop ebx; ret; 
0x080a1415: neg eax; cld; jmp dword ptr [esi - 0x70]; 
0x080a1306: neg eax; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080710cb: neg eax; mov edx, 0xffffffe0; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0806a707: neg eax; pop edi; pop ebx; ret; 
0x0809dd08: neg eax; pop esi; pop edi; pop ebp; ret; 
0x080a0153: neg eax; pop esi; pop edi; ret; 
0x080608f7: neg eax; ret; 
0x0805c2dd: nop; add al, 5; add byte ptr [eax], al; lea edx, [eax - 0x7e710]; mov dword ptr [eax + 0x500], edx; ret; 
0x0807b008: nop; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx], 0x63; std; call dword ptr [eax - 0x18]; 
0x080ceb24: nop; add byte ptr [eax], al; add byte ptr [eax], dl; mov byte ptr [0x42340000], al; sti; call dword ptr [eax]; 
0x0807c47b: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080817f4: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x080d58c4: nop; add cl, byte ptr [eax + 0xe]; add byte ptr [edx], 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5a0f: nop; add cl, byte ptr [ecx + 0xe]; lock add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x080cb2c4: nop; add dl, byte ptr [eax + 0xe]; add byte ptr [edx], 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0804c903: nop; add dword ptr [eax], eax; add byte ptr [esi - 0x18], dl; ret; 
0x0805390e: nop; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x080cda20: nop; add dword ptr [ebx + 0xa], esp; push cs; adc al, 0x41; ret; 
0x080cd45f: nop; add dword ptr [ebx], eax; lea eax, [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf84c: nop; add dword ptr [ecx + 0xa], ebx; push cs; adc al, 0x41; ret; 
0x080ccb7b: nop; add dword ptr [ecx + 0xe], ecx; pushal; add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c9634: nop; add dword ptr [edi + 0xe], ecx; add byte ptr [ecx], 0x53; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4b97: nop; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080cfb4d: nop; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x08091edf: nop; add eax, 1; pop edi; ret; 
0x080a457f: nop; add eax, dword ptr [esp]; ret; 
0x080d0f8d: nop; add ecx, dword ptr [eax + 0xb]; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x080a95bf: nop; add esp, 8; mov eax, 2; pop ebx; ret; 
0x0807cf8f: nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0807af1a: nop; and al, 0x83; ret 0x3901; 
0x0809161f: nop; and eax, 0x1fff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080915ff: nop; and eax, 0x3ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809162f: nop; and eax, 0x3fff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809160f: nop; and eax, 0x7ff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809163f: nop; and eax, 0x7fff; jne 0x49340; xor eax, eax; pop edi; ret; 
0x08067def: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x0809360f: nop; call 0x290c0; add esp, 4; pop ebx; pop esi; ret; 
0x0807c01f: nop; call 0x910; add eax, 0x5dfdb; mov eax, 0xfffffff8; add eax, dword ptr gs:[0]; ret; 
0x080718af: nop; call 0x910; add eax, 0x6874b; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x0807188f: nop; call 0x910; add eax, 0x6876b; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080a301f: nop; call dword ptr [esi]; 
0x0809b149: nop; call eax; 
0x080d4f60: nop; clc; cld; jmp dword ptr [edi]; 
0x08098877: nop; cmp dh, bh; call dword ptr [eax - 0x18]; 
0x080bcd54: nop; cmp eax, 0x3d90fffb; sti; call dword ptr [eax - 0x3f0004c3]; sti; call eax; 
0x080bcd58: nop; cmp eax, 0x3d90fffb; sti; inc eax; sti; call eax; 
0x080bcd5c: nop; cmp eax, 0x3ec0fffb; sti; call eax; 
0x0806c5bf: nop; cmp esi, 0xf6; ja 0x24860; mov eax, dword ptr [ebx + esi*4 - 0x2bacc]; add eax, ebx; jmp eax; 
0x0809adfd: nop; dec eax; cmp bh, dh; call dword ptr [edx + 0x6a]; 
0x08048748: nop; div dh; call dword ptr [eax - 0x73]; 
0x0807c019: nop; inc eax; ret; 
0x080c9760: nop; inc esp; stc; jmp dword ptr [edi]; 
0x0806f4bf: nop; int 0x80; 
0x0806f4bf: nop; int 0x80; ret; 
0x08092b9b: nop; lea esi, [esi]; add eax, 1; ret; 
0x08067df8: nop; lea esi, [esi]; bsf eax, eax; add eax, edx; ret; 
0x08067e18: nop; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x08056eab: nop; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x080a8c08: nop; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x080a8cb8: nop; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x080a8c58: nop; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x08056f38: nop; lea esi, [esi]; mov eax, dword ptr [esp + 4]; ret; 
0x0806085b: nop; lea esi, [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0806086b: nop; lea esi, [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0806087b: nop; lea esi, [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0806088b: nop; lea esi, [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0806083b: nop; lea esi, [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0805c48b: nop; lea esi, [esi]; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x0806701b: nop; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x080623ab: nop; lea esi, [esi]; xor eax, eax; ret; 
0x08057981: nop; mov al, 0x18; add byte ptr [eax], al; ret; 
0x08092b8f: nop; mov ch, dh; and ch, 0xf; je 0x4abb0; add eax, 2; ret; 
0x0805c2ef: nop; mov dword ptr [eax + 0x1898], 0; ret; 
0x080a174f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x080a174f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0807c25f: nop; mov eax, 0xad; int 0x80; 
0x0809333f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x0809333f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x0809332f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0809332f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x0809334f: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0809334f: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0809e50f: nop; mov eax, dword ptr [eax + 4]; ret; 
0x0806688f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x0806458f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x080a6d4f: nop; mov eax, dword ptr [edx + 0x5c]; add esp, 8; pop ebx; ret; 
0x080a8b9f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0807b40f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x08092c8f: nop; mov eax, ebx; pop ebx; ret; 
0x08067b4f: nop; mov eax, edx; ret; 
0x080488d2: nop; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0804877f: nop; mov ebx, dword ptr [esp]; ret; 
0x0806eaff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x080932ff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806d93f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x08065e3f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x08055890: nop; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x08091ede: nop; nop; add eax, 1; pop edi; ret; 
0x080a457d: nop; nop; add eax, dword ptr [esp]; ret; 
0x080718ae: nop; nop; call 0x910; add eax, 0x6874b; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x0806f4be: nop; nop; int 0x80; 
0x0806f4be: nop; nop; int 0x80; ret; 
0x0809333e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x0809333e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x0809332e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0809332e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x0809334e: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0809334e: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x080a8b9e: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0804877d: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0806eafd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x08091edd: nop; nop; nop; add eax, 1; pop edi; ret; 
0x080a457b: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x0806f4bc: nop; nop; nop; int 0x80; 
0x0806f4bc: nop; nop; nop; int 0x80; ret; 
0x080a8b9d: nop; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0804877b: nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080a4579: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x08048779: nop; nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0806a6ee: nop; nop; xor eax, eax; pop edi; pop ebx; ret; 
0x080c580d: nop; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080ce96c: nop; or dword ptr [eax + 0xe], ecx; or byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d4af0: nop; out dx, eax; cld; jmp dword ptr [esi]; 
0x0807c267: nop; pop eax; mov eax, 0x77; int 0x80; 
0x08075f02: nop; pop ebp; std; call dword ptr [eax - 0x18]; 
0x0809116f: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x0807c3a4: nop; push 0x8dfffa22; and byte ptr [eax + 0x22], 0xfa; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x080aba6c: nop; push cs; sti; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080c0881: nop; push ds; sar ecx, 1; jnp 0x78840; ret; 
0x0806d6ef: nop; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806c91f: nop; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0809335f: nop; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c94f: nop; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08092caf: nop; push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0805db9a: nop; push esp; clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080ae0a0: nop; push ss; stc; jmp dword ptr [eax + 0x16]; 
0x0804823f: nop; ret; 
0x080579ab: nop; rol byte ptr [eax + eax], 0; ret; 
0x080caf90: nop; sbb edx, edi; jmp dword ptr [esi]; 
0x080c84a0: nop; stc; clc; jmp dword ptr [ebp]; 
0x08091cef: nop; sub edi, 3; jb 0x49d90; lea eax, [eax + 2]; pop edi; ret; 
0x08091cff: nop; sub edi, 5; jb 0x49d90; lea eax, [eax + 4]; pop edi; ret; 
0x08091d0f: nop; sub edi, 6; jb 0x49d90; lea eax, [eax + 5]; pop edi; ret; 
0x080674ef: nop; sub edx, 3; jb 0x1f590; lea eax, [edi + 2]; pop edi; ret; 
0x080674ff: nop; sub edx, 5; jb 0x1f590; lea eax, [edi + 4]; pop edi; ret; 
0x0806750f: nop; sub edx, 6; jb 0x1f590; lea eax, [edi + 5]; pop edi; ret; 
0x08056c7f: nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x080a585f: nop; sub esp, 4; push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebx]; 
0x080a59cf: nop; sub esp, 4; push edi; push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x0806a6ef: nop; xor eax, eax; pop edi; pop ebx; ret; 
0x0804ee61: not edx; add eax, edx; shr eax, 2; lea esi, [ecx + eax*4 + 4]; lea esi, [esi]; call dword ptr [edi]; 
0x080674bf: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x080935df: or ah, 0x80; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806b024: or ah, bh; pop edi; ret; 
0x080ae6e0: or ah, byte ptr [edi]; stc; lcall [edi - 7]; jmp dword ptr [esi + 0x27]; 
0x080a8608: or ah, byte ptr [esi + 0x3d]; syscall; 
0x0809cfc8: or al, 0; add byte ptr [eax], al; add bh, al; ret 0xbee0; 
0x08091e97: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x0806cab3: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x24ad8; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb83: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x24ba8; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806ce2b: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x24e50; mov eax, 6; call dword ptr gs:[0x10]; 
0x080a1370: or al, 0; add byte ptr [ecx - 0x3b7cf3ba], cl; and al, 0x5b; pop esi; ret; 
0x080d13f4: or al, 0x1f; cld; jmp dword ptr [eax]; 
0x080c6a24: or al, 0x21; add byte ptr [eax], al; mov bl, al; clc; call dword ptr [eax]; 
0x0807927a: or al, 0x24; call esi; 
0x0809d869: or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d822: or al, 0x24; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x08054ecb: or al, 0x24; ret; 
0x0808f9f7: or al, 0x29; fild word ptr [ecx]; ret 0xc501; 
0x08082c7c: or al, 0x29; ret 0xc889; 
0x080500ba: or al, 0x31; call dword ptr [esi - 0x18]; 
0x0804efbe: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08062e35: or al, 0x39; fnstcw word ptr [eax]; jne 0x1ae50; pop ebx; ret; 
0x08082c84: or al, 0x39; ret 0x860f; 
0x08059e7d: or al, 0x39; ret 0x870f; 
0x0805e067: or al, 0x39; ret; 
0x080c4cd8: or al, 0x41; ret; 
0x080cbf34: or al, 0x43; cli; jmp dword ptr [ecx]; 
0x080c7b8c: or al, 0x43; ret; 
0x080d4102: or al, 0x44; ret; 
0x080c8d42: or al, 0x45; ret; 
0x080c62a4: or al, 0x46; ret; 
0x080ab9c5: or al, 0x50; call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080abdc1: or al, 0x50; call edx; 
0x0809bf7b: or al, 0x50; mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x20]; call 0x53a20; add esp, 0x1c; ret; 
0x08050d8f: or al, 0x50; push ebx; call dword ptr [ebx + 0x18]; 
0x08051c74: or al, 0x51; push ebp; call dword ptr [ebp + 0x18]; 
0x080aafd2: or al, 0x52; call 0x60c60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aafaa: or al, 0x52; call 0x60cb0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aafea: or al, 0x52; call 0x60cc0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a9165: or al, 0x53; call dword ptr [ebp + 8]; 
0x08050d5d: or al, 0x53; call dword ptr [ebx + 0x10]; 
0x08055b81: or al, 0x53; call dword ptr [esi + 0x10]; 
0x08070101: or al, 0x53; std; call dword ptr [eax - 0x73]; 
0x08051c4a: or al, 0x55; call dword ptr [ebp + 0x10]; 
0x0807b3c4: or al, 0x56; call 0x14900; add esp, 0x14; pop ebx; pop esi; ret; 
0x0807926f: or al, 0x56; call 0x28270; mov ecx, dword ptr [ebp - 0x2c]; mov dword ptr [esp], ecx; call esi; 
0x0808f34b: or al, 0x56; call 0xd3d0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0808ec1d: or al, 0x56; call dword ptr [eax + 0x2c]; 
0x08055e2c: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0804fecb: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x08055afe: or al, 0x56; call dword ptr [edi + 0x34]; 
0x080544cc: or al, 0x56; call dword ptr [edi + 0x44]; 
0x08051109: or al, 0x56; call dword ptr [esi + 0x10]; 
0x0807b39d: or al, 0x56; call eax; 
0x08071901: or al, 0x57; call 0x28270; mov dword ptr [esp], esi; call edi; 
0x080a3dc3: or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x08055d2a: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0804ef7a: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0808fb7f: or al, 0x5b; pop esi; ret; 
0x08051ce2: or al, 0x5b; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x080557ba: or al, 0x5e; pop edi; jmp eax; 
0x08065d84: or al, 0x5f; ret; 
0x0806c92d: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24940; pop ebx; ret; 
0x0806c95d: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x24970; pop ebx; ret; 
0x0809336d: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x4b380; pop ebx; ret; 
0x0807c153: or al, 0x65; xor eax, dword ptr [0x14]; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0806bc96: or al, 0x65; xor ecx, dword ptr [0x14]; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806ccec: or al, 0x65; xor ecx, dword ptr [0x14]; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0806c8f5: or al, 0x65; xor edx, dword ptr [0x14]; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806d839: or al, 0x65; xor edx, dword ptr [0x14]; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x080543e2: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0807362a: or al, 0x75; fisttp dword ptr [ebp - 0x2a3f77d]; call dword ptr [eax - 0x73]; 
0x0806ee57: or al, 0x7e; cmp edx, dword ptr ds:[eax + 0x14]; jl 0x26e80; jle 0x26e7b; pop ebx; ret; 
0x080a8bfc: or al, 0x82; add esp, 8; pop ebx; ret; 
0x080cb03c: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080d0134: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d15a8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7de0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x080c9334: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ecx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d151c: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cb234: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb074: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080cb1c0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d1708: or al, 0x83; add eax, dword ptr [edx]; inc ecx; ret; 
0x080d0cd8: or al, 0x83; add eax, dword ptr [edx]; jle 0x88ce8; ret; 
0x080d148c: or al, 0x83; add ebp, dword ptr [ebx + 0xa]; ret; 
0x080cecb0: or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x080d164c: or al, 0x83; add ecx, dword ptr [eax + 0xe]; inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080d421c: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080cdc3c: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [eax + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d6318: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [ebp + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7794: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [ebp + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d00cc: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x080cbf08: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edi + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c4cd0: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x080cfc6c: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7c08: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080c8d38: or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx], al; or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080d085f: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08ce: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08bd: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0923: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x080d089b: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d0b2d: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d08ac: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d088a: or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080d0104: or al, 0x83; add edi, dword ptr [edi + 0xa]; ret; 
0x080c8008: or al, 0x83; add esi, dword ptr [eax + 0xa]; ret; 
0x080d36b8: or al, 0x83; add esi, dword ptr [ebx + 0xa]; ret; 
0x08079ab3: or al, 0x83; call 0x449a3bb; add esp, 4; pop ebx; pop esi; ret; 
0x0804bac5: or al, 0x83; js 0x3ad1; dec dword ptr [edi]; xchg eax, ebp; ret 0xd284; 
0x0804bb91: or al, 0x83; js 0x3b9d; dec dword ptr [edi]; xchg eax, ebp; ret 0x2fe9; 
0x080701eb: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0809e5e7: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0805cb60: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0808f437: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0809d478: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0806ca1e: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0806ce7d: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0809e7c7: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a0947: or al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x08067013: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0807e074: or al, 0x83; ret 0x3904; 
0x080922e5: or al, 0x83; ret 0x3910; 
0x08079853: or al, 0x83; ret 0x8501; 
0x08057da5: or al, 0x83; ret; 
0x0808e959: or al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x080c8884: or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa70: or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b4: or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080d4dd4: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76b0: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d019c: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd14: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e20: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76ec: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e04: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff48: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e34: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e14: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c852c: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba70: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080cf374: or al, 0x88; sti; call dword ptr [esi]; 
0x080a11f2: or al, 0x89; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x080a11d2: or al, 0x89; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0806ddc7: or al, 0x89; call 0x5d61bc29; ret; 
0x0805565f: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x08054401: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0804ad28: or al, 0x89; inc ebp; mov ah, 0x83; ret 0x5201; 
0x08094ed7: or al, 0x89; inc edx; add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x08072da8: or al, 0x89; inc esi; add al, 0x8d; and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x0806d875: or al, 0x89; lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x0808b1f9: or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x0808cd98: or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x0808cfc4: or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x18]; 
0x0808b0b6: or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x0805c701: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x080a78a8: or al, 0x89; ret 0x74ff; 
0x08085d56: or al, 0x89; ret 0xc031; 
0x08057722: or al, 0x89; ret 0xf989; 
0x0808e516: or al, 0x89; ret; 
0x0805b27b: or al, 0x8b; adc bh, byte ptr [ecx]; ret 0x5489; 
0x0809b36b: or al, 0x8b; inc ecx; adc al, 0x39; ret; 
0x08053154: or al, 0x8b; inc esi; adc byte ptr [ebx - 0x7bf0ebaa], cl; sgdt [eax]; add byte ptr [ecx], bh; ret 0x44c7; 
0x080a9209: or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0809ee38: or al, 0x8b; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0809e99f: or al, 0x8b; je 0x569c7; sbb byte ptr [ebp - 0x1b9bf7d], cl; call dword ptr [eax + 0x56]; 
0x08055cf0: or al, 0x8b; je 0xdd18; and bh, al; ret 0xafc0; 
0x0806d6f9: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x080a4988: or al, 0x8b; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d978: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0808870f: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x08088dfa: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x08088ca4: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x08088480: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x08089c66: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88f6b]; call dword ptr [edx - 0x18]; 
0x08050ece: or al, 0x8b; popfd; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080a11e2: or al, 0x8b; push edx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0806cb49: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806d905: or al, 0x8b; push esp; and al, 0x14; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x080530bc: or al, 0x8b; stosd dword ptr es:[edi], eax; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0807dd9b: or al, 0x8d; add dword ptr [eax + 0x26], -2; call dword ptr [eax - 0x18]; 
0x0804c6ae: or al, 0x8d; add dword ptr [eax - 1], -1; call dword ptr [eax - 0x75]; 
0x08049fef: or al, 0x8d; add esp, 0x23; std; call dword ptr [eax - 0x18]; 
0x08072c22: or al, 0x8d; and dword ptr [eax], 0x78; stc; call dword ptr [eax - 0x73]; 
0x08092c84: or al, 0x8d; inc edx; add eax, dword ptr [ebp + 0x5bd475db]; ret; 
0x0809eb21: or al, 0x8d; stosd dword ptr es:[edi], eax; push edx; and edi, ebp; call dword ptr [edx + 0x68]; 
0x08051147: or al, 0x8d; test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 0x18]; 
0x080abaea: or al, 0xaa; test eax, eax; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x08095843: or al, 0xad; or eax, 0xcec8308; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x0806cbbe: or al, 0xb8; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806caee: or al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0809365a: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a66e7: or al, 0xb; je 0x5e70f; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080a6833: or al, 0xb; je 0x5e85b; or byte ptr [edi], cl; xchg eax, esp; ret; 
0x08095dd5: or al, 0xba; add eax, 0x83000000; cmp dword ptr [0x3911430f], eax; ret 0x430f; 
0x080d38e4: or al, 0xbf; cld; jmp dword ptr [esi + 3]; 
0x08048cbc: or al, 0xc7; ret 0xb900; 
0x080490a0: or al, 0xc7; ret 0xbf88; 
0x08048db9: or al, 0xc7; ret; 
0x080bc5ab: or al, 0xc; ret; 
0x08060a8b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0805633c: or al, 0xeb; ret; 
0x08085f5f: or al, 0xf6; ret 0xf01; 
0x08088802: or al, 0xf6; ret 0xf08; 
0x0805e625: or al, 0xf9; dec dword ptr [ebp - 0x793bf6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x08091ca4: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x08067494: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x080bde01: or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdead: or al, 0xfc; call dword ptr [eax + 4]; 
0x080bdb41: or al, 0xfc; call dword ptr [eax - 8]; 
0x080bdb41: or al, 0xfc; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080bdd21: or al, 0xfc; call dword ptr [eax]; 
0x080be029: or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf49: or al, 0xfc; call dword ptr [ecx]; 
0x080bdc99: or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdc99: or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bdbe1: or al, 0xfc; call eax; 
0x080bdd39: or al, 0xfc; inc dword ptr [eax - 0x7f000406]; idiv ebx; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdb51: or al, 0xfc; jmp dword ptr [eax]; 
0x080bdc8d: or al, 0xfc; jmp eax; 
0x080bddfd: or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdea9: or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be025: or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf39: or al, 0xfc; lcall [esi]; or al, 0xfc; call eax; 
0x080bdc89: or al, 0xfc; lcall [esi]; or al, 0xfc; jmp eax; 
0x080bdec9: or al, 0xfc; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be021: or al, 0xfc; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdc71: or al, 0xfc; lcall [esi]; or al, 0xfc; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x080bdd1d: or al, 0xfc; ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdbdd: or al, 0xfc; ljmp [edi]; or al, 0xfc; call eax; 
0x080bdb4d: or al, 0xfc; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x080bdd19: or al, 0xfc; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; call dword ptr [eax]; 
0x080bdb6d: or al, 0xfc; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x080bdc75: or al, 0xfc; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x080bdc75: or al, 0xfc; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x08078b51: or al, 0xfd; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x5e], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0806bc38: or al, 0xff; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x08048c55: or al, 0xff; xor al, ch; ret; 
0x08099d7f: or al, 1; ret; 
0x080d2703: or al, 4; add al, 0x41; or eax, dword ptr [ebx]; xlatb; add ecx, dword ptr [edx]; ret; 
0x080cf93e: or al, 4; add al, 0x42; or ecx, dword ptr [eax + 0xa]; ret; 
0x080c6916: or al, 4; add al, 0x44; or eax, dword ptr [edi + 0xa]; ret; 
0x080c5ed6: or al, 4; add al, 0x44; or ecx, dword ptr [edi + 0xa]; ret; 
0x080c6924: or al, 4; add al, 0x46; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c60ba: or al, 4; add al, 0x49; or eax, dword ptr [ebx]; xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x08062756: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x08048833: or al, 8; call 0x62bd0; add esp, 0x10; mov byte ptr [0x80db320], 1; leave; ret; 
0x080c7608: or al, ah; clc; jmp dword ptr [esi]; 
0x080c5345: or al, byte ptr [eax]; add byte ptr [eax], bh; arpl si, di; call dword ptr [edx]; 
0x0808f3c9: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x080ab175: or al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x080c5806: or al, byte ptr [ecx + 0xe]; mov al, byte ptr [0x900e4a0a]; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0806c62a: or al, byte ptr [ecx]; add byte ptr [eax], al; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0809d7e0: or al, byte ptr [ecx]; pop ebx; pop esi; pop edi; ret; 
0x0804dc5f: or al, byte ptr [edx]; add byte ptr [eax], al; movzx edx, dl; mov edx, dword ptr [edi + edx*4 - 0x2db48]; add edx, edi; jmp edx; 
0x080710ae: or al, ch; cld; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x08048834: or al, ch; xchg eax, esi; and eax, dword ptr [esi]; add byte ptr [ebx + 0x5c610c4], al; and byte ptr [ebx - 0x36fef7f3], dh; ret; 
0x08053adb: or bh, al; rcl dword ptr [ebx + esi*4], 0xd; or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x08071075: or bh, al; ret 0xa9e4; 
0x080ac0cd: or bh, al; ret 0xaa28; 
0x08051c97: or bh, al; ret 0xb314; 
0x080a2bda: or bh, al; ret 0xbcc8; 
0x080a1a69: or bh, al; ret 0xbf40; 
0x080a8e14: or bh, bh; ja 0x60e1c; push dword ptr [edi]; push 1; push 1; call eax; 
0x08051c71: or bh, bh; jbe 0x9c81; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x0805c492: or bh, bh; je 0x144ba; and al, 0x56; call eax; 
0x0805c9a2: or bh, bh; je 0x149ca; and al, 0x53; call eax; 
0x0805d0a2: or bh, bh; je 0x150ca; xor al, 0x55; call eax; 
0x080a9162: or bh, bh; jne 0x61172; push ebx; call dword ptr [ebp + 8]; 
0x08050d8c: or bh, bh; jne 0x8d9c; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x0806de3c: or bh, bh; xor bh, bh; jne 0x25e0a; mov dword ptr [ebp - 0x30], edx; mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x080a394f: or bh, byte ptr [ecx]; ret; 
0x080ac0a7: or bl, bh; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0806d88a: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x08093911: or bl, byte ptr [ebx + 0x5e]; ret; 
0x080c580e: or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0805da8a: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0809373d: or byte ptr [eax + 0x36], bh; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x08056304: or byte ptr [eax + 0x53], dl; call dword ptr [esi + 0x18]; 
0x080a498c: or byte ptr [eax + 0x68], bh; call dword ptr gs:[0x10]; 
0x0806d97c: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x080cf4ac: or byte ptr [eax + 0xa], bl; push cs; adc al, 0x41; ret; 
0x0809ce3f: or byte ptr [eax + 0xb75003a], al; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x0806d9ac: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x0806cd96: or byte ptr [eax + 0xdd], bh; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a95c2: or byte ptr [eax + 2], bh; pop ebx; ret; 
0x080a95b6: or byte ptr [eax + 4], bh; pop ebx; ret; 
0x080a95a2: or byte ptr [eax + 8], bh; pop ebx; ret; 
0x080ced20: or byte ptr [eax + eax - 0x4925400], ah; jmp dword ptr [ebx]; 
0x0804875b: or byte ptr [eax - 0x18], dl; add al, 0; add ah, dh; mov ebx, dword ptr [esp]; ret; 
0x0806643c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x080662dc: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x08093c31: or byte ptr [eax - 0x7bf0c507], al; adc eax, 0x83000001; ret 0x8320; 
0x0808f602: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x080560da: or byte ptr [eax], al; add byte ptr [eax], al; add bl, dh; ret; 
0x0809dc9b: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0808dba0: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x79f0f608], al; ret 0; 
0x0804f4a3: or byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x0807c2fa: or byte ptr [eax], al; add byte ptr [eax], al; cmovne edx, eax; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0807c450: or byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0807c225: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0807c1ca: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x080a95a4: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x08091e47: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08080090: or byte ptr [eax], al; add byte ptr [ebp - 0x1da017d], cl; call dword ptr [eax - 0x73]; 
0x08089e2e: or byte ptr [eax], al; add byte ptr [ebx + 0x525604ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0809a3fe: or byte ptr [eax], al; add byte ptr [ebx - 0x6bfc63ab], cl; mov edx, 0xfffe3e9c; jmp edx; 
0x08049032: or byte ptr [eax], al; add byte ptr [edx + 1], bh; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x08056f08: or byte ptr [eax], al; mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x0805797c: or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x080579ec: or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579cc: or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x08057a4c: or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4f8], edx; ret; 
0x08057a6c: or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4fc], edx; ret; 
0x080bca38: or byte ptr [eax], bh; sti; jmp eax; 
0x0806e783: or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx + 0x4589d845], cl; fmul qword ptr [ebp - 0x2b5da7d]; call dword ptr [eax - 0x18]; 
0x0808e0e2: or byte ptr [ebp + 0x50142444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x08052e65: or byte ptr [ebp + 0x50242444], cl; push esi; call dword ptr [edi + 0x48]; 
0x08052ac8: or byte ptr [ebp + 0x50342444], cl; push esi; call dword ptr [edi + 0x48]; 
0x08050c79: or byte ptr [ebp + 0x503c2444], cl; push ebp; call dword ptr [ebx + 0x48]; 
0x080531d8: or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [edx + 0x48]; 
0x080ce227: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d1973: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc417: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d272b: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d1903: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb93f: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacaf: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cb3: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea77: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66c7: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5e7: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf587: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080d1933: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a4f: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d2917: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080c4fab: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a1f: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080d50bb: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc71f: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf557: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea47: or byte ptr [ebp + 0x50d4202], al; inc ebx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x080d26eb: or byte ptr [ebp + 0x50d4202], al; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x080c541f: or byte ptr [ebp + 0x50d4502], al; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080d26bb: or byte ptr [ebp + 0x50d4c02], al; dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080cecdb: or byte ptr [ebp + 0x50d4c02], al; dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x080d30cb: or byte ptr [ebp + 0x50d4c02], al; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080c4f7b: or byte ptr [ebp + 0x50d4c02], al; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080ccaa7: or byte ptr [ebp + 0x50d4c02], al; inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x08055c32: or byte ptr [ebp + 0x55500159], cl; call dword ptr [esi + 0xc]; 
0x0807929f: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x08058ef1: or byte ptr [ebp + 0x66840fd2], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x080a3885: or byte ptr [ebp + 0xa], dh; cmp byte ptr [ebp - 0x57], 0; je 0x5ba65; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x08050066: or byte ptr [ebp + 7], dh; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080a2ae8: or byte ptr [ebp - 0x1632f7d], cl; call dword ptr [eax + 0x6a]; 
0x080a1ae7: or byte ptr [ebp - 0x1651b7d], cl; call dword ptr [eax - 0x73]; 
0x080719dd: or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x080a133e: or byte ptr [ebp - 0x1b82668], cl; inc dword ptr [ecx + 0xc9]; add byte ptr [ebp - 0x2cbbf02e], 0xc7; ret; 
0x0809e375: or byte ptr [ebp - 0x1ba117a], cl; call dword ptr [eax - 0x73]; 
0x080a2262: or byte ptr [ebp - 0x1d00867], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret; 
0x080a5a2a: or byte ptr [ebp - 0x1d00869], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x080a60fa: or byte ptr [ebp - 0x1d0086d], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0x938d; 
0x080a60bb: or byte ptr [ebp - 0x1d0086d], cl; dec dword ptr [ebx - 0x7aff7500]; ror byte ptr [edi], 0x44; ret 0xec83; 
0x08048dad: or byte ptr [ebp - 0x2dd726f], cl; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x08082c60: or byte ptr [ebp - 0x38be8113], al; ret 0xafc0; 
0x080aaa57: or byte ptr [ebp - 0x74f98b40], al; or byte ptr [ebp - 0xcf98a37], al; ret; 
0x0804af04: or byte ptr [ebp - 0x7c398a40], al; ret; 
0x080523b4: or byte ptr [ebp - 0x7cfa8b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0808daf3: or byte ptr [ebp - 0x7cffd98c], cl; ret 0x8b04; 
0x080aaa5d: or byte ptr [ebp - 0xcf98a37], al; ret; 
0x0806cb51: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24b68; pop ebx; ret; 
0x0806cc21: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24c38; pop ebx; ret; 
0x0806cea9: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x24ec0; pop ebx; ret; 
0x0806d6fd: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x25710; pop ebx; ret; 
0x080a1731: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x59748; pop ebx; ret; 
0x08092cb9: or byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x080cb1ff: or byte ptr [ebx + 0x100e4302], al; or cl, byte ptr [0x4108]; ret; 
0x080ce41f: or byte ptr [ebx + 0x200e4e02], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x0809a1aa: or byte ptr [ebx + 0x2030846], cl; call eax; 
0x08059e5a: or byte ptr [ebx + 0x2548d00], cl; push edi; fsub dword ptr [ecx]; ror byte ptr [ebx + 0x1242454], 1; ret 0xfa81; 
0x0808f9f3: or byte ptr [ebx + 0x290c244c], cl; fild word ptr [ecx]; ret 0xc501; 
0x080ca770: or byte ptr [ebx + 0x40e4602], al; ret; 
0x080c9e79: or byte ptr [ebx + 0x40e4702], al; ret; 
0x080c9c0b: or byte ptr [ebx + 0x40e4902], al; ret; 
0x080ca5bc: or byte ptr [ebx + 0x40e5702], al; ret; 
0x080ca5c5: or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca767: or byte ptr [ebx + 0x40e5b02], al; ret; 
0x080c99de: or byte ptr [ebx + 0x40e6002], al; ret; 
0x080c99d5: or byte ptr [ebx + 0x40e6202], al; ret; 
0x080ca57b: or byte ptr [ebx + 0x40e6302], al; ret; 
0x080c9f35: or byte ptr [ebx + 0x40e6602], al; ret; 
0x080c9e53: or byte ptr [ebx + 0x40e6a02], al; ret; 
0x080c9a16: or byte ptr [ebx + 0x40e6b02], al; ret; 
0x080c9a04: or byte ptr [ebx + 0x40e7002], al; ret; 
0x080c9add: or byte ptr [ebx + 0x40e7102], al; ret; 
0x080c99fb: or byte ptr [ebx + 0x40e7202], al; ret; 
0x080c9f2c: or byte ptr [ebx + 0x40e7302], al; ret; 
0x080c9a3a: or byte ptr [ebx + 0x40e7a02], al; ret; 
0x080c9a60: or byte ptr [ebx + 0x40e7b02], al; ret; 
0x0809ee35: or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x0808fa93: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x08095dd2: or byte ptr [ebx + 0x5ba0cec], al; add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x0806cb15: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080571d7: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0809cc61: or byte ptr [ebx + 0x5e5b24c4], al; pop edi; pop ebp; ret; 
0x080a46c5: or byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x080a687f: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x080492ce: or byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x08057b07: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806ee10: or byte ptr [ebx + 0x5e], bl; ret; 
0x0808f7a4: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x080998ca: or byte ptr [ebx + 0x7030846], cl; call eax; 
0x080a2a17: or byte ptr [ebx + 0x70ff08ec], al; adc al, 0x6a; add al, ch; wait; ret; 
0x0806d7d4: or byte ptr [ebx + 0x74c08500], cl; add eax, 0x5b08c483; ret; 
0x0809a46d: or byte ptr [ebx + 0x78b08c6], al; add eax, dword ptr [ecx]; call eax; 
0x080ce177: or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d108f: or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1037: or byte ptr [ebx + 0xa6e0202], al; ret; 
0x08053f37: or byte ptr [ebx + 0xe], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0806ea64: or byte ptr [ebx + 0xfc08500], cl; inc esp; ret 0x66c3; 
0x080490a6: or byte ptr [ebx + 0xfd28512], cl; test esp, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x080a05e5: or byte ptr [ebx + eax*2 - 0x7d], dh; call dword ptr [eax]; 
0x080a8c27: or byte ptr [ebx - 0x173e9fbe], cl; pop ds; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x0808d2bc: or byte ptr [ebx - 0x23efb14], al; add dl, byte ptr [ebp + 0x50]; push esi; call dword ptr [ecx + 0x1c]; 
0x08056c82: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x0804ed99: or byte ptr [ebx - 0x373e03bf], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0809d40e: or byte ptr [ebx - 0x42], dh; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0806ee9c: or byte ptr [ebx - 0x45], dh; pop ebx; ret; 
0x0809370d: or byte ptr [ebx - 0x49f0b73c], al; rcr byte ptr [ebx - 0x3d], 0xe8; cmc; mov ch, 0xfd; jmp dword ptr [esi - 0x70]; 
0x08079849: or byte ptr [ebx - 0x74c7dbb4], cl; adc byte ptr [ecx - 0x7cf3dbac], cl; ret 0x8501; 
0x0805ce35: or byte ptr [ebx - 0x74e3dbb4], cl; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x080935e1: or byte ptr [ebx - 0x74ebdbb4], 0x5c; and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0804fea8: or byte ptr [ebx - 0x74fefbbe], al; sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x08097b8a: or byte ptr [ebx - 0x76dfdbb4], cl; dec eax; or byte ptr [ebx - 0x76ebdbb4], cl; dec eax; or al, 0x83; ret; 
0x08097b91: or byte ptr [ebx - 0x76ebdbb4], cl; dec eax; or al, 0x83; ret; 
0x08053ae1: or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x0804fd39: or byte ptr [ebx - 0x76fefbbe], al; ret 0xe281; 
0x0805d8f3: or byte ptr [ebx - 0x78f0f608], al; xor eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [ebx + eax*4 - 0x2c680]; add ecx, ebx; jmp ecx; 
0x0807e176: or byte ptr [ebx - 0x7ce976ee], cl; ret; 
0x0807f9b1: or byte ptr [ebx - 0x88763], cl; dec dword ptr [ecx - 0x8936b]; call dword ptr [ecx + 0x56]; 
0x0807fdfa: or byte ptr [ebx - 0x88763], cl; dec dword ptr [ecx - 0x8a76b]; call dword ptr [eax + 0x51]; 
0x0807e6ba: or byte ptr [ebx - 0x88763], cl; dec dword ptr [ecx - 0x8a76b]; call dword ptr [ecx + 0x57]; 
0x08088c7c: or byte ptr [ebx - 0x89363], cl; call dword ptr [eax + 0x52]; 
0x0808a6a4: or byte ptr [ebx - 0x89363], cl; call dword ptr [eax - 1]; 
0x0805da48: or byte ptr [ebx - 0x9ebdba4], cl; ret; 
0x08094ece: or byte ptr [ebx], ah; test dword ptr [edi + edi*8 - 1], edi; dec dword ptr [ecx + 0x42890c4a]; add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x08058f9a: or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x080998cd: or byte ptr [ebx], al; pop es; call eax; 
0x080d06b9: or byte ptr [ebx], al; push ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0808f0cc: or byte ptr [ecx + 0x10890450], cl; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; pop ebx; ret; 
0x0806cbb8: or byte ptr [ecx + 0x24548bc6], cl; or al, 0xb8; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cae8: or byte ptr [ecx + 0x24548bc6], cl; or al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x08082c78: or byte ptr [ecx + 0x290c2444], cl; ret 0xc889; 
0x080536d1: or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x0806e0cc: or byte ptr [ecx + 0x418b0446], cl; add al, 0x89; ret 0xe083; 
0x0805255d: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x08051665: or byte ptr [ecx + 0x50], dl; push edi; call dword ptr [edi + 0xc]; 
0x0808f09e: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x080c985b: or byte ptr [ecx + 0xe], al; lock or byte ptr [esi + ecx - 0x20], cl; or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x08097369: or byte ptr [ecx - 0x16cbdbbc], cl; ret 0; 
0x0807b60b: or byte ptr [ecx - 0x1bb73], cl; dec dword ptr [ecx - 0x1af6b]; call dword ptr [eax - 1]; 
0x0806649c: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x08050752: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x080c5f5b: or byte ptr [ecx - 0x39], al; push cs; add al, 0x42; or ebx, dword ptr [edi + 0xa]; ret; 
0x080d590c: or byte ptr [ecx - 0x39], al; push cs; add al, 0x44; or edx, dword ptr [ecx + 0xa]; ret; 
0x080c8e25: or byte ptr [ecx - 0x39], al; push cs; add al, 0x45; or ecx, dword ptr [ebp + 0xa]; ret; 
0x080cbd25: or byte ptr [ecx - 0x39], al; push cs; add al, 0x46; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d3e31: or byte ptr [ecx - 0x39], al; push cs; add al, 0x46; or edi, dword ptr [eax + 0xa]; ret; 
0x080d3e40: or byte ptr [ecx - 0x39], al; push cs; add al, 0x46; or esp, dword ptr [eax + 0xa]; ret; 
0x080cffd1: or byte ptr [ecx - 0x39], al; push cs; add al, 0x47; or eax, dword ptr [ecx + 0xa]; ret; 
0x080cff59: or byte ptr [ecx - 0x39], al; push cs; add al, 0x47; or ecx, dword ptr [eax + 0xa]; ret; 
0x080ceba1: or byte ptr [ecx - 0x39], al; push cs; add al, 0x48; or ebx, dword ptr [ecx + 0xa]; ret; 
0x080d48a5: or byte ptr [ecx - 0x39], al; push cs; add al, 0x48; or ecx, dword ptr [edx + 0xa]; ret; 
0x080c8e34: or byte ptr [ecx - 0x39], al; push cs; add al, 0x49; or ecx, dword ptr [esi + 0xa]; ret; 
0x080d2e2f: or byte ptr [ecx - 0x39], al; push cs; add al, 0x4b; or eax, dword ptr [ecx + 0xa]; ret; 
0x080c7751: or byte ptr [ecx - 0x39], al; push cs; add al, 0x4c; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c76fd: or byte ptr [ecx - 0x39], al; push cs; add al, 0x4c; or esp, dword ptr [ebp + 0xa]; ret; 
0x080cb049: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x41; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d1529: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x42; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d15b5: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x44; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d0ce0: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x47; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d4299: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x47; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080c629b: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x49; or eax, dword ptr [ebx + 0xe]; or al, 0x46; ret; 
0x080ce644: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x49; or edx, dword ptr [eax + 0xe]; or al, 0x46; ret; 
0x080d0141: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x49; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080d1493: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x4a; or eax, dword ptr [ecx + 0xa]; ret; 
0x080c8d46: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x4c; or edx, dword ptr [eax + 0xe]; or al, 0x43; ret; 
0x080d309d: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080d5bf5: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x080cf2a0: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080cf2f4: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080d3d94: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x42; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d3de8: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x43; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080d16d4: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x44; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080d447e: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x44; or ebx, dword ptr [esi + 0xa]; ret; 
0x080cbe59: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x44; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080d2acd: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x45; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080d5688: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6ea4: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080c93b7: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x45; or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x080c5ae1: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x46; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080cd8ed: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x46; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d061f: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x48; or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080cb5d8: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x4a; or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080d3cee: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x4a; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d048c: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x4a; or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080d4491: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x4f; or eax, dword ptr [ecx + 0xa]; ret; 
0x080a54a5: or byte ptr [ecx - 0x4016f7bf], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x08076e60: or byte ptr [ecx - 0x72dfdbb4], cl; dec edi; and dh, dh; ret; 
0x08077d90: or byte ptr [ecx - 0x72e7dbb4], cl; dec eax; cmp al, 0xf6; ret; 
0x080510ff: or byte ptr [ecx - 0x74dfdbbc], cl; jne 0x915b; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0806633c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x080867b3: or byte ptr [ecx - 0x7cd3dbac], cl; ret 0x3917; 
0x0807fe69: or byte ptr [ecx - 0x88373], cl; call dword ptr [eax + 0x53]; 
0x0807b0ae: or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x080ce970: or byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806bf61: or byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x08048842: or byte ptr [ecx], al; leave; ret; 
0x08057bd7: or byte ptr [ecx], bh; ret; 
0x080ca220: or byte ptr [ecx], bl; add byte ptr [ecx + ecx*8], bl; stc; call esp; 
0x0804d697: or byte ptr [ecx], ch; ret 0x5052; 
0x08099448: or byte ptr [ecx], ch; ret 0x5789; 
0x08095188: or byte ptr [ecx], ch; ret 0x76ff; 
0x0805924e: or byte ptr [ecx], ch; ret 0x98b; 
0x08052e07: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0809aa22: or byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0d601], cl; ret 0xff83; 
0x080c265a: or byte ptr [edi + 0x26], al; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x080c8fe3: or byte ptr [edi + 0xc0e4102], al; xchg byte ptr [ebx], al; dec esp; push cs; adc byte ptr [ebx + 0xa7e0204], al; ret; 
0x080d5057: or byte ptr [edi + 0xc0e4302], al; xchg byte ptr [ebx], al; inc esp; push cs; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080d0b4b: or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0b29: or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x08076503: or byte ptr [edi], 0x85; sbb eax, 0x83000002; ret; 
0x080d1458: or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x080a447f: or byte ptr [edi], cl; inc edi; ret 0x4489; 
0x0807c3b2: or byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0806fa0e: or byte ptr [edi], cl; inc esp; ret 0xc931; 
0x08085f5b: or byte ptr [edi], cl; mov dh, 0x52; or al, 0xf6; ret 0xf01; 
0x08060842: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x0806745a: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0806fcd7: or byte ptr [edi], cl; test edx, ebp; add eax, dword ptr [eax]; add byte ptr [ebx + 0xb886], cl; add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x0806fe2c: or byte ptr [edi], cl; xchg eax, ebp; ret 0x1089; 
0x0806fe09: or byte ptr [edi], cl; xchg eax, esp; ret 0x1089; 
0x08049005: or byte ptr [edi], cl; xchg eax, esp; ret 0xd284; 
0x080a66eb: or byte ptr [edi], cl; xchg eax, esp; ret; 
0x080ccb20: or byte ptr [edx + 0x6b8c0000], al; cli; call dword ptr [edx]; 
0x0805dd83: or byte ptr [edx + ebx - 0x7d], dh; ret; 
0x080c9863: or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x080d6129: or byte ptr [edx], 0xe; adc al, 0x43; ret; 
0x0806ac74: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0804fc8c: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x080c9320: or byte ptr [edx], cl; add byte ptr [edx + edi], ch; stc; call dword ptr [edi]; 
0x080cf566: or byte ptr [edx], cl; ret; 
0x080d45ef: or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x71; ret; 
0x0806683b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x08066b2c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x0806624b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0806651c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x08065d16: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x08065e56: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x080644a6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x080645e6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x08065c46: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x08065eb6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x080643f6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x08064646: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x08065d37: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x08065e77: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x080644c7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x08064607: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0809d73b: or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x080c985f: or byte ptr [esi + ecx - 0x20], cl; or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x0804823d: or byte ptr [esi - 0x70], ah; ret; 
0x0805797b: or byte ptr es:[eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x080579eb: or byte ptr es:[eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579cb: or byte ptr es:[eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x080a15f5: or ch, byte ptr [ecx]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x080890d9: or ch, byte ptr [ecx]; ret; 
0x080a891a: or ch, byte ptr [edx + 1]; call eax; 
0x080a88f4: or ch, byte ptr [edx + 1]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080ae010: or ch, cl; sti; ljmp [edi - 0x33]; sti; jmp ebx; 
0x080c8a65: or cl, bh; call dword ptr [ecx + 0xa]; 
0x080cb205: or cl, byte ptr [0x4108]; ret; 
0x080d5a7e: or cl, byte ptr [0x4114]; ret; 
0x080c5bbf: or cl, byte ptr [0x4314]; ret; 
0x080523b3: or cl, byte ptr [eax]; test eax, eax; je 0xa3be; add esp, 8; pop ebx; ret; 
0x0807e626: or cl, byte ptr [ebp - 0x7276fe8f]; xor bh, 0xff; call dword ptr [ebx - 1]; 
0x0807f939: or cl, byte ptr [ecx - 0x87f73]; call dword ptr [ebx + 0x50]; 
0x08093c64: or cl, byte ptr [edi]; mov dh, 0x4d; in al, 0x83; ret 0x8401; 
0x0809a54c: or cl, byte ptr [edi]; test ch, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x78f0d501], al; ret 6; 
0x080c580a: or cl, byte ptr [edx + 0xe]; nop; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080cea56: or cl, byte ptr [edx]; ret; 
0x080c49cc: or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e2e: or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c951b: or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x080c6e96: or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080c6405: or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c5740: or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c8e7a: or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080c8d40: or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080c96ea: or cl, byte ptr [esi]; or al, 0x46; ret; 
0x080c5187: or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080d618a: or cl, byte ptr fs:[esi]; adc al, 0x45; ret; 
0x080cb23a: or cl, byte ptr fs:[esi]; or al, 0x41; ret; 
0x080c64f4: or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x080984c2: or cl, ch; imul edi, edx, -1; dec dword ptr [ebx + 0x20497]; add dh, dh; ret 0x7508; 
0x0805e580: or cl, ch; ret 0xfffc; 
0x0805afaa: or dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x08060c65: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18c71; neg eax; ret; 
0x0806ac76: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x080a94a5: or dh, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x08091d42: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x08067542: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x080a1a63: or dh, byte ptr [edx + edi*2 - 0x75]; je 0x59a8d; or bh, al; ret 0xbf40; 
0x0806ebf3: or dh, byte ptr [esi + ecx - 0x7d]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0809cdca: or dl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x080488b8: or dword ptr [eax + 0x22], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x0806e8ef: or dword ptr [eax + 0x4a], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080ce96d: or dword ptr [eax + 0xe], ecx; or byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a5741: or dword ptr [eax - 0x5f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0807362e: or dword ptr [eax], 0x5c; std; call dword ptr [eax - 0x73]; 
0x08059158: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0806eaad: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0807f48f: or dword ptr [eax], eax; add byte ptr [ebx - 0x6a76fb14], al; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x080591e4: or dword ptr [eax], eax; add byte ptr [ecx - 0x72afaf05], cl; xchg eax, ebx; das; std; call dword ptr [eax - 1]; 
0x08048315: or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf10], cl; ret 0x8789; 
0x080482e6: or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf28], cl; ret 0x8789; 
0x0804ed10: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x080a7cdc: or dword ptr [ebp - 0x49f0ff8a], 0x7b; add dword ptr [ebx - 0x7cf3db94], ecx; ret; 
0x080a2bd4: or dword ptr [ebx + 0x4a8901c1], eax; or bh, al; ret 0xbcc8; 
0x080a1446: or dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x08070100: or dword ptr [ebx + edx*2], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x0809584a: or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x080a28d2: or dword ptr [ebx - 0xd970002], ebx; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [edx - 0x65], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080578b3: or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x0806b31d: or dword ptr [ecx + 0x42], eax; test al, al; jne 0x23318; xor eax, eax; ret; 
0x0806c8b2: or dword ptr [ecx], 0x48; add byte ptr [eax], al; ret; 
0x080c94a1: or dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0809279f: or dword ptr [edi + ebp], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x0806cdde: or dword ptr [edi + ebx - 0x48], esi; fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0807cf83: or dword ptr [edi*8 + 0x10c483ff], ebx; add esp, 8; pop ebx; ret; 
0x08091d32: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x08067532: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x08073a32: or dword ptr [edx + 0x5c], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080ce971: or dword ptr [edx + ecx + 0xe], ebx; adc al, 0x41; ret; 
0x080ccc3d: or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0809d7df: or dword ptr [edx], 1; pop ebx; pop esi; pop edi; ret; 
0x080d1992: or dword ptr [edx], ecx; ret; 
0x08093e90: or dword ptr [esi + 0x2f], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x0806bc99: or eax, 0x14; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806ccef: or eax, 0x14; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0809e63f: or eax, 0x14; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d4: or eax, 0x14; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e974: or eax, 0x14; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea58: or eax, 0x14; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a130e: or eax, 0x14; jne 0x59319; add esp, 0x2c; ret; 
0x080a1405: or eax, 0x14; jne 0x59414; add esp, 0x2c; ret; 
0x080a475d: or eax, 0x14; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64bc: or eax, 0x14; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x08053ada: or eax, 0x14c1c708; mov bl, 0xd; or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x080536ca: or eax, 0x14c2c708; mov bl, 0xd; or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x080d5655: or eax, 0x15680001; std; call dword ptr [eax + 1]; 
0x080d56f1: or eax, 0x167c0001; std; jmp dword ptr [edx + 8]; 
0x0809d73a: or eax, 0x1be08; add byte ptr [eax], al; call dword ptr [eax]; 
0x08082c77: or eax, 0x24448908; or al, 0x29; ret 0xc889; 
0x08097368: or eax, 0x24448908; xor al, 0xe9; ret 0; 
0x0805ce34: or eax, 0x244c8b08; sbb al, 0x8b; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x08053ae0: or eax, 0x24748b08; add al, 0x89; ret; 
0x08048bda: or eax, 0x248c8b08; cwde; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x08054acf: or eax, 0x29; std; call dword ptr [eax - 0x73]; 
0x080536d0: or eax, 0x29cb8908; ret 0xc329; 
0x080c0c75: or eax, 0x381e4bdc; shl dword ptr [edi - 0x3ad6d59f], cl; fcomp qword ptr [edi - 0x4a]; dec esi; ret 0x474c; 
0x080cfadb: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf927: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c6007: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce22b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d1977: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc41b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d272f: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d1907: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb943: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacb3: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cb7: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea7b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66cb: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5eb: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf58b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080d1937: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a53: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d291b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080c4faf: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a23: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080d50bf: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc723: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf55b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea4b: or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x080d30cf: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080c4f7f: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080c5423: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080ccaab: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x080d26ef: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x080d26bf: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080cecdf: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x0809ce3e: or eax, 0x3a8008; jne 0x54e50; mov eax, 0x80dbcc8; mov eax, dword ptr [eax]; ret; 
0x08091d62: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x08099eb6: or eax, 0x458b0000; pushfd; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x08067562: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x080abdbe: or eax, 0x500cec83; call edx; 
0x0806ec72: or eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x080488f0: or eax, 0x6a128b08; add byte ptr [edx - 0x77], dl; ret; 
0x080894c0: or eax, 0x6c9d8bef; idiv edi; call dword ptr [eax + 0x57]; 
0x080c2a69: or eax, 0x73950000; ret 0x48; 
0x0807ee64: or eax, 0x789d8bef; idiv edi; call dword ptr [eax + 0x57]; 
0x080792b7: or eax, 0x808b0006; je 0x312d7; add byte ptr [eax], al; ret; 
0x0807c3d5: or eax, 0x81fffd3d; ret 0xdc27; 
0x0804e087: or eax, 0x83000000; ret 0xc702; 
0x0809d465: or eax, 0x83108b08; ret 0x8b01; 
0x080487ae: or eax, 0x83d0ff08; les edx, ptr [eax]; leave; ret; 
0x080487fb: or eax, 0x83d2ff08; les edx, ptr [eax]; leave; ret; 
0x0806ea63: or eax, 0x85008b08; ror byte ptr [edi], 0x44; ret 0x66c3; 
0x080490a5: or eax, 0x85128b08; ror byte ptr [edi], cl; test esp, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x0809dfd6: or eax, 0x89008b08; inc ebp; mov al, byte ptr [0x8d7f048d]; pop esp; ret; 
0x08092cb2: or eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x08092cb2: or eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; pop ebx; ret; 
0x08048dac: or eax, 0x8d918d08; and bh, ch; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x08099d3e: or eax, 0xb48d0000; add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0809a183: or eax, 0xc483fffd; adc cl, ch; ret 0xfffe; 
0x08095845: or eax, 0xcec8308; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x080b7dd9: or eax, 0xdbf0000; add byte ptr [eax], al; ret 0xd; 
0x080bc91a: or eax, 0xfb357000; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x08048234: or eax, 0xff906608; and eax, 0x80da040; nop; ret; 
0x080c5441: or eax, dword ptr [eax]; add ah, ch; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x080d06d1: or eax, dword ptr [eax]; add byte ptr [eax + eax], ah; add al, al; mov ebp, 0x4a40000; cld; jmp esi; 
0x080c86dd: or eax, dword ptr [eax]; add byte ptr [eax - 0x34000000], cl; cmp eax, 0xfe980000; clc; call dword ptr [edi + 1]; 
0x0807eacd: or eax, dword ptr [eax]; add byte ptr [eax - 0x89343], al; call dword ptr [ebx + 0xf]; 
0x080c54a5: or eax, dword ptr [eax]; add byte ptr [eax], bh; jns 0x7d4a3; jmp edi; 
0x080d289a: or eax, dword ptr [eax]; add byte ptr fs:[eax], al; add byte ptr [eax - 0x23ffff21], cl; xchg eax, edi; cld; call edx; 
0x08091e8e: or eax, dword ptr [eax]; je 0x49f12; mov eax, 0xc; pop edi; ret; 
0x08079a5c: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08055aac: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x080c8102: or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c9519: or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x44; ret; 
0x080cb7a5: or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x45; ret; 
0x080c813e: or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080cb09e: or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080cfd70: or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x46; ret; 
0x080d1041: or eax, dword ptr [ebx + 0xa]; ret; 
0x080cb5de: or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080c5ae7: or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080d30a3: or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080c62a1: or eax, dword ptr [ebx + 0xe]; or al, 0x46; ret; 
0x080c81b7: or eax, dword ptr [ebx]; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x080c5d77: or eax, dword ptr [ebx]; mov word ptr [ecx], es; push cs; adc al, 0x41; ret; 
0x080c8c9d: or eax, dword ptr [ebx]; out 2, al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d372d: or eax, dword ptr [ebx]; pop ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080c5cd1: or eax, dword ptr [ebx]; retf 0xa01; push cs; adc al, 0x41; ret; 
0x080c60be: or eax, dword ptr [ebx]; xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x080d2707: or eax, dword ptr [ebx]; xlatb; add ecx, dword ptr [edx]; ret; 
0x080c8eda: or eax, dword ptr [ebx]; xor eax, 0x140e0a01; inc ebx; ret; 
0x080cbd2b: or eax, dword ptr [ecx + 0xa]; ret; 
0x080d54c9: or eax, dword ptr [ecx]; add byte ptr [eax + edx], al; std; jmp dword ptr [ecx]; 
0x080d54dd: or eax, dword ptr [ecx]; add byte ptr [eax], ah; adc ch, bh; call dword ptr [esi]; 
0x080c691a: or eax, dword ptr [edi + 0xa]; ret; 
0x080d4792: or eax, dword ptr [edx]; bound ecx, qword ptr [edx]; push cs; adc al, 0x43; ret; 
0x080d2097: or eax, dword ptr [edx]; inc esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cf6ef: or eax, dword ptr [edx]; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5516: or eax, dword ptr [edx]; jno 0x8d524; push cs; adc al, 0x41; ret; 
0x080d613e: or eax, dword ptr [edx]; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080c927a: or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080d5607: or eax, dword ptr [edx]; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e42: or eax, dword ptr [edx]; push ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080ccb06: or eax, dword ptr [edx]; push edi; push cs; adc al, 0x41; ret; 
0x080d3076: or eax, dword ptr [edx]; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x080d1048: or eax, dword ptr [esi + 0xa]; ret; 
0x080d5bfb: or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x0805dbf7: or eax, esp; pop es; add byte ptr [ebx - 0x39], dl; ret; 
0x080ce11a: or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080c6928: or ebp, dword ptr [eax + 0xa]; ret; 
0x080c8442: or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080c78c1: or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cf2a6: or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x08096f41: or ebp, dword ptr [ecx]; sti; dec dword ptr [ebp - 0x1c9bb7d]; call dword ptr [eax - 0x73]; 
0x080cf2fa: or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080ca6d8: or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c91bc: or ebp, dword ptr [esi + 0xa]; push cs; or al, 0x43; ret; 
0x080cb04f: or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d9a: or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0806bff4: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x080c8ddd: or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080ceba7: or ebx, dword ptr [ecx + 0xa]; ret; 
0x080c5f61: or ebx, dword ptr [edi + 0xa]; ret; 
0x080cbf1b: or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x080d4484: or ebx, dword ptr [esi + 0xa]; ret; 
0x080abf2b: or ebx, edi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080d423d: or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x080cf942: or ecx, dword ptr [eax + 0xa]; ret; 
0x080578b4: or ecx, dword ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0805c1e4: or ecx, dword ptr [ebp + 0x18a483]; add al, ch; mov al, byte ptr [0x5b000129]; ret; 
0x080d5543: or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8e2b: or ecx, dword ptr [ebp + 0xa]; ret; 
0x080d0625: or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080a1791: or ecx, dword ptr [ebx + 0x1b6891]; add byte ptr [esi - 0x7d], ah; add al, 0x42; add dword ptr [ebx + 0x5e], ebx; ret; 
0x080a8f42: or ecx, dword ptr [ebx + 0x758bf45d]; clc; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080d2d47: or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d422f: or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d552d: or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c70fb: or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d57bf: or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d561e: or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c6509: or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x080c5eda: or ecx, dword ptr [edi + 0xa]; ret; 
0x080d258b: or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d65f9: or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d48ab: or ecx, dword ptr [edx + 0xa]; ret; 
0x080d3dee: or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080c8e3a: or ecx, dword ptr [esi + 0xa]; ret; 
0x080d0492: or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080c90ba: or ecx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x080c43b4: or ecx, ebp; cld; push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080a0c03: or ecx, esp; cld; jmp dword ptr [esi - 0x70]; 
0x0806eaec: or edi, 0x25; add byte ptr [eax], al; ret; 
0x0806c371: or edi, 0x43; std; call dword ptr [eax - 0x18]; 
0x080d4a7a: or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3e37: or edi, dword ptr [eax + 0xa]; ret; 
0x080d608c: or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0808e1e4: or edi, esi; jmp dword ptr [esi - 0x70]; 
0x080d0abd: or edi, esp; jmp esi; 
0x080ce1cf: or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x080cc33b: or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080d15bb: or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080c8d4c: or edx, dword ptr [eax + 0xe]; or al, 0x43; ret; 
0x080ce64a: or edx, dword ptr [eax + 0xe]; or al, 0x46; ret; 
0x08085b81: or edx, dword ptr [eax - 0x3b7c0002]; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x080d6243: or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080cf242: or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080c6403: or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080cd8f3: or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080d3d6e: or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080c7df3: or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d5912: or edx, dword ptr [ecx + 0xa]; ret; 
0x080cdced: or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c90f5: or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d568e: or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6eaa: or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080d0147: or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080cfef7: or esi, dword ptr [eax + eax]; add byte ptr [eax], al; in al, 0xb5; add byte ptr [eax], al; xor bh, 0xfb; jmp dword ptr [ebp]; 
0x080d3d84: or esi, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x08091d52: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x08067552: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x080cbe5f: or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080773a6: or esp, 0x5d; std; call dword ptr [eax - 0x73]; 
0x080ca6c2: or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080d3e46: or esp, dword ptr [eax + 0xa]; ret; 
0x080c93bd: or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x080d0f90: or esp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080c7703: or esp, dword ptr [ebp + 0xa]; ret; 
0x0807bff8: or esp, dword ptr [ebp - 0x77]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x080c77f1: or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080af5a0: or esp, dword ptr [ecx + edi*8 - 1]; outsd dx, dword ptr [esi]; stc; jmp dword ptr [eax]; 
0x080d5a7d: or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080c8e78: or esp, dword ptr [edx + 0xa]; push cs; or al, 0x43; ret; 
0x080c8dc7: or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x08058416: out 0, al; add al, dh; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x08062d7b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x080ada70: out 0x11, al; sti; call dword ptr [esi]; 
0x080adcf0: out 0x14, al; sti; call dword ptr [esi]; 
0x080ac560: out 0x3f, al; idiv edi; ret 0xf73f; 
0x0805eb6a: out 0x42, eax; jo 0x16aef; ret 0x80; 
0x080adf38: out 0x47, al; sti; call dword ptr [esi + 0x48]; 
0x080adf38: out 0x47, al; sti; call dword ptr [esi + 0x48]; sti; call esi; 
0x0807bf7e: out 0x69, eax; std; call dword ptr [eax - 0x18]; 
0x080ab611: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080bf647: out 0x95, eax; push es; cld; ret; 
0x080c0b40: out 0xcf, eax; movsb byte ptr es:[edi], byte ptr [esi]; in eax, 0x24; outsd dx, dword ptr es:[esi]; ret 0x5ae4; 
0x0807bf65: out 0xd8, eax; cld; dec dword ptr [ebp - 0x295bb7d]; call dword ptr [eax - 0x73]; 
0x0809ea6b: out 0xe8, al; lahf; add bh, ch; jmp dword ptr [esi - 0x70]; 
0x080a09d3: out 0xe8, eax; aaa; jecxz 0x589d4; jmp dword ptr [esi - 0x70]; 
0x080c2864: out 0xf5, eax; mov ch, 0xab; ret; 
0x080c7af9: out 0xf8, al; jmp dword ptr [edx]; 
0x080c7c65: out 0xf8, eax; jmp dword ptr [edi + 2]; 
0x0809061e: out 0xfd, al; jmp dword ptr [esi - 0x70]; 
0x08085a6a: out 0xff, al; dec dword ptr [ebx + 0x3be88c5d]; mov ah, bh; call dword ptr [edx - 0x77]; 
0x080825c9: out 0xff, al; dec dword ptr [ebx - 0x4af7b]; push dword ptr [ecx]; rol dh, cl; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08082a67: out 0xff, eax; dec dword ptr [ebp - 0x1d9077d]; call dword ptr [eax + 0x68]; 
0x0807fc4b: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x080c8c9f: out 2, al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0805eb86: out dx, al; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x080920ce: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x080920d1: out dx, al; add al, 0xf7; ret 0; 
0x0806778e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x080d3781: out dx, al; add byte ptr [eax], al; sbb al, 0xbb; cld; call dword ptr [edi]; 
0x0808fc3f: out dx, al; mov eax, 0xffffffff; pop ebx; ret; 
0x0805ec12: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805646e: out dx, al; xchg byte ptr [ecx], al; add byte ptr [ecx + 0x186093], cl; add bh, al; ret 0xa078; 
0x08067015: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x08091ccc: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0805ea6e: out dx, eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0805ca4f: out dx, eax; add al, byte ptr [eax]; add dh, dh; ret; 
0x080d38e1: out dx, eax; add byte ptr [eax], al; or al, 0xbf; cld; jmp dword ptr [esi + 3]; 
0x08073153: out dx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x56], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080d1941: out dx, eax; add dword ptr [edx], ecx; ret; 
0x08091d01: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x08056314: out dx, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08056368: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x080c7fb5: out dx, eax; clc; call dword ptr [eax]; 
0x080c7f65: out dx, eax; clc; call dword ptr [ebx]; 
0x080d4af1: out dx, eax; cld; jmp dword ptr [esi]; 
0x080ce9d5: out dx, eax; cli; call edi; 
0x0805ebe2: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0809ce80: out dx, eax; mov ecx, dword ptr [ecx + 4]; test ecx, ecx; jne 0x54e60; pop ebx; ret; 
0x08091d41: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x08091d31: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x08091d61: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x08091d51: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x0809061d: out dx, eax; out 0xfd, al; jmp dword ptr [esi - 0x70]; 
0x0808faa3: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x08091d21: out dx, eax; pop es; jb 0x49d90; lea eax, [eax + 6]; pop edi; ret; 
0x08091d71: out dx, eax; push cs; jb 0x49d90; lea eax, [eax + 0xd]; pop edi; ret; 
0x08091d11: out dx, eax; push es; jb 0x49d90; lea eax, [eax + 5]; pop edi; ret; 
0x0807684f: out dx, eax; ret 0; 
0x080a47dd: out dx, eax; sbb al, 0; add byte ptr [ecx - 0x3b7cf3ba], cl; adc al, 0x5b; pop esi; ret; 
0x08062414: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x08062dd5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x080623ff: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x08062dbb: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x080623ea: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x080623d5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x08062da1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x080624a1: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x080cfa3d: out dx, eax; sti; jmp dword ptr [edx]; 
0x0806aef3: out dx, eax; xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x080cb739: outsb dx, byte ptr [esi]; add byte ptr [eax], al; in al, 0x24; cli; call dword ptr [edx + 1]; 
0x0807038c: outsb dx, byte ptr [esi]; add dword ptr [ebx - 0x2288e808], eax; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x080c06cc: outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x080c243f: outsb dx, byte ptr [esi]; ja 0x7a3c5; ret 0x48f; 
0x080571d6: outsb dx, byte ptr [esi]; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x080cb4c5: outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c91bd: outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080bdb3a: outsb dx, byte ptr [esi]; push 0xc2f0000; cld; call dword ptr [eax - 8]; 
0x080bdb3a: outsb dx, byte ptr [esi]; push 0xc2f0000; cld; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080c83f1: outsb dx, byte ptr [esi]; push cs; adc al, 0x41; ret; 
0x08051c46: outsb dx, byte ptr [esi]; push esp; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x0809bfae: outsb dx, byte ptr [esi]; ret 0xfffa; 
0x080c0184: outsb dx, byte ptr [esi]; sahf; ret 0x38ae; 
0x0805e972: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x080af5b4: outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi]; 
0x0809294f: outsb dx, byte ptr [esi]; sti; dec dword ptr [ebp - 0x1d0f37d]; call dword ptr [eax - 0x73]; 
0x08092987: outsb dx, byte ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x080c1fe5: outsd dx, dword ptr [esi]; aad 8; stosd dword ptr es:[edi], eax; ret; 
0x080623d1: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x080cb839: outsd dx, dword ptr [esi]; add byte ptr [eax], al; xor al, 0x2b; cli; jmp dword ptr [edx]; 
0x08065c82: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x08065f32: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x08064432: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x080646c2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x080a1962: outsd dx, dword ptr [esi]; cli; inc dword ptr [0x3869b]; mov eax, 0x80dbf64; mov eax, dword ptr [eax]; ret; 
0x080a124e: outsd dx, dword ptr [esi]; cli; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x08062c22: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x08062b82: outsd dx, dword ptr [esi]; dec eax; ret; 
0x080ae014: outsd dx, dword ptr [esi]; int 0xfb; jmp ebx; 
0x08067f32: outsd dx, dword ptr [esi]; mov bl, 0xc0; aas; std; jmp dword ptr [esi + 0xf]; 
0x080c5799: outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c6e47: outsd dx, dword ptr [esi]; push cs; adc al, 0x41; ret; 
0x080cf2fb: outsd dx, dword ptr [esi]; push cs; adc al, 0x46; ret; 
0x080627a8: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x08062c27: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x08062b87: outsd dx, dword ptr [esi]; push edx; ret; 
0x08073136: outsd dx, dword ptr [esi]; push esi; std; call dword ptr [eax - 0x18]; 
0x080c0b46: outsd dx, dword ptr [esi]; ret 0x5ae4; 
0x0806d1c2: outsd dx, dword ptr [esi]; ret 0xf66; 
0x0806d3b8: outsd dx, dword ptr [esi]; ret; 
0x080af5a4: outsd dx, dword ptr [esi]; stc; jmp dword ptr [eax]; 
0x080c0b45: outsd dx, dword ptr es:[esi]; ret 0x5ae4; 
0x08077cab: paddd mm7, mm7; dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x08092b94: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x08092b7d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x080c1f42: pcmpeqw mm5, qword ptr [ebp - 0x5f]; mov cs, edi; ret 0x8b36; 
0x080677b9: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067de4: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0806732d: pmovmskb eax, mm1; test eax, eax; jne 0x1f400; xor eax, eax; pop edi; ret; 
0x0806785f: pmovmskb eax, mm1; test eax, eax; jne 0x1f8c0; xor eax, eax; pop edi; ret; 
0x08067825: pmovmskb eax, mm1; test eax, eax; jne 0x1f8e0; xor eax, eax; pop edi; ret; 
0x080677b8: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08067de3: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0806732c: pmovmskb eax, xmm1; test eax, eax; jne 0x1f400; xor eax, eax; pop edi; ret; 
0x0806785e: pmovmskb eax, xmm1; test eax, eax; jne 0x1f8c0; xor eax, eax; pop edi; ret; 
0x08067824: pmovmskb eax, xmm1; test eax, eax; jne 0x1f8e0; xor eax, eax; pop edi; ret; 
0x08067c4a: pmovmskb ecx, mm0; test ecx, ecx; je 0x1fc60; bsf ecx, ecx; add eax, ecx; ret; 
0x08067c49: pmovmskb ecx, xmm0; test ecx, ecx; je 0x1fc60; bsf ecx, ecx; add eax, ecx; ret; 
0x08085fbe: pop ds; add al, 0; add dh, dh; ret 0xf50; 
0x08091622: pop ds; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0807189d: pop ds; add byte ptr [eax], al; ret; 
0x0809bcef: pop ds; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x08075652: pop ds; add eax, dword ptr [eax]; add bh, dh; ret 0; 
0x080d13f5: pop ds; cld; jmp dword ptr [eax]; 
0x080d1459: pop ds; cld; jmp dword ptr [esi]; 
0x080bfb2d: pop ds; cli; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x080915c2: pop ds; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080a8c2d: pop ds; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x08093656: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080933a8: pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0806cde0: pop ds; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0809f2f2: pop ds; pop ebx; pop esi; pop edi; ret; 
0x0806da80: pop ds; sub esp, 0xc; push dword ptr [esi]; call edi; 
0x080710c8: pop dword ptr [esi]; add bh, dh; fadd st(7); ret 0xffe0; 
0x080710a9: pop dword ptr [esi]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0809e53d: pop eax; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080a6d3a: pop eax; add esp, 8; pop ebx; ret; 
0x08073e8e: pop eax; call edi; 
0x0805b8d6: pop eax; cmp ebp, edi; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x08080044: pop eax; idiv edi; call dword ptr [eax + 0x50]; 
0x0807fe03: pop eax; idiv edi; call dword ptr [eax + 0x51]; 
0x0807e6c3: pop eax; idiv edi; call dword ptr [ecx + 0x57]; 
0x0809e542: pop eax; jmp dword ptr [eax]; 
0x0807c268: pop eax; mov eax, 0x77; int 0x80; 
0x08073c2f: pop eax; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fde: pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807763f: pop eax; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0806af9c: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x08067c67: pop eax; nop; lea esi, [esi]; xor eax, eax; ret; 
0x0806ee9b: pop eax; or byte ptr [ebx - 0x45], dh; pop ebx; ret; 
0x080c7d2e: pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c6294: pop eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c7af8: pop eax; out 0xf8, al; jmp dword ptr [edx]; 
0x0809f2ea: pop eax; pop ebx; pop esi; pop edi; ret; 
0x08056114: pop eax; pop edx; pop ebx; ret; 
0x080cb050: pop eax; push cs; or al, 0x41; ret; 
0x08073e8a: pop eax; push dword ptr [esp + 0x58]; call edi; 
0x08073c2b: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fda: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807763b: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08073c27: pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x080716b5: pop eax; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x080a8cb6: pop eax; ret; 
0x0806ee81: pop eax; sbb byte ptr [ecx + 0x40c61c50], cl; and byte ptr [ecx], al; pop ebx; ret; 
0x080aee49: pop eax; stc; call eax; 
0x080aee55: pop eax; stc; jmp dword ptr [eax + 0x58]; 
0x080aee4d: pop eax; stc; ljmp [eax - 0x7f0006a8]; pop eax; stc; jmp dword ptr [eax + 0x58]; 
0x080bcd8c: pop eax; sti; inc eax; sti; call eax; 
0x080cf370: pop eax; stosb byte ptr es:[edi], al; add byte ptr [eax], al; or al, 0x88; sti; call dword ptr [esi]; 
0x080876a9: pop eax; sub dh, bh; call dword ptr [eax - 0x73]; 
0x0806d95f: pop ebp; aaa; add byte ptr [eax], al; ret; 
0x0809f665: pop ebp; aam 0x39; ret 0x840f; 
0x080a2ae4: pop ebp; aam 0x83; in al, dx; or byte ptr [ebp - 0x1632f7d], cl; call dword ptr [eax + 0x6a]; 
0x08072c1b: pop ebp; aam 0x89; inc ebp; fadd qword ptr [ebx - 0x7c72f33c]; and byte ptr [eax - 7], bh; call dword ptr [eax - 0x73]; 
0x080a2aa1: pop ebp; aam 0x8d; xor dword ptr [ebp - 0x65], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x080489b4: pop ebp; adc bh, dh; ret; 
0x080ca689: pop ebp; add byte ptr [eax], al; adc al, 2; cli; call dword ptr [eax + 1]; 
0x080d372f: pop ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0809354a: pop ebp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080488d4: pop ebp; cld; leave; ret; 
0x080a8e45: pop ebp; hlt; mov esi, dword ptr [ebp - 8]; mov edi, dword ptr [ebp - 4]; leave; ret; 
0x080a2949: pop ebp; in al, 0x81; ret; 
0x080530ee: pop ebp; jmp eax; 
0x0809b71d: pop ebp; les eax, ptr [ecx]; ret 0x4589; 
0x0809b9fa: pop ebp; les ecx, ptr [ebp - 0x1be937d]; call dword ptr [eax - 0x73]; 
0x0809b95c: pop ebp; les ecx, ptr [ebp - 0x1becc7d]; call dword ptr [eax + 0x6a]; 
0x08050572: pop ebp; mov ah, 0x52; push eax; push ebx; call dword ptr [ebx + 0xc]; 
0x080a8f58: pop ebp; mov ah, 0x89; ret 0x5050; 
0x08050b1d: pop ebp; mov eax, 0x2930838d; std; call dword ptr [eax - 0x73]; 
0x08084454: pop ebp; mov word ptr [ecx - 0x8f6b], cs; call dword ptr [ecx + 0x57]; 
0x08084e4a: pop ebp; mov word ptr [ecx - 0xb76b], cs; call dword ptr [ecx + 0x57]; 
0x08085a79: pop ebp; mov word ptr [ecx], gs; ret 0xc783; 
0x080d1783: pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5fe9: pop ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cd8de: pop ebp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0806b24d: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0809f6d5: pop ebp; pop esi; pop edi; ret; 
0x080d3d9b: pop ebp; push cs; adc al, 0x41; ret; 
0x080c768c: pop ebp; push cs; or al, 0x41; ret; 
0x08050d59: pop ebp; push esp; sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x08050954: pop ebp; rcl byte ptr [edx + 0x51], 0x50; call dword ptr [eax + 0xc]; 
0x0805bd7f: pop ebp; ret 0xffff; 
0x0805d692: pop ebp; ret 4; 
0x080a1c4b: pop ebp; ret 8; 
0x0804834c: pop ebp; ret; 
0x08052234: pop ebp; ror byte ptr [ebx + 0x4d8bc455], 0xc8; lea esi, [esi]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0809b5e9: pop ebp; sal dh, 1; shl dword ptr [eax], 0xf; xchg eax, ebp; ret 0x940f; 
0x080489ab: pop ebp; sbb al, 0x89; dec ebp; and byte ptr [ecx + 0x5d8b2455], cl; adc bh, dh; ret; 
0x080752d8: pop ebp; std; call dword ptr [eax - 0x18]; 
0x08076af9: pop ebp; std; call dword ptr [eax - 0x73]; 
0x08073a62: pop ebp; std; dec dword ptr [ebx - 0x72e7dba4]; add dword ptr [eax], 0x61; std; call dword ptr [eax + 0x68]; 
0x0809e59d: pop ebx; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0806f5ae: pop ebx; add byte ptr [ecx - 0x39c7db8c], cl; inc esp; and al, 0x5a; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x080916c1: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x080a7ed6: pop ebx; add dword ptr [ecx], eax; ret; 
0x080bf720: pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x080d222d: pop ebx; cld; call edi; 
0x080bf71e: pop ebx; cmc; pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x0805dc12: pop ebx; cmovne eax, ecx; ret; 
0x0806d989: pop ebx; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x080792b1: pop ebx; idiv ah; inc dword ptr [0x60d4b]; mov eax, dword ptr [eax + 0x1974]; ret; 
0x08049091: pop ebx; jle 0x1096; add byte ptr [ebp + 0x5880fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x38f3db8c], cl; ret 0xbf88; 
0x080718b1: pop ebx; jo 0x298b1; inc dword ptr [0x6874b]; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x08091d34: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x08067534: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x080a87ee: pop ebx; mov dword ptr [esi + 0x4c], eax; pop esi; pop edi; ret; 
0x0808e3b8: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x080622e0: pop ebx; mov eax, 1; ja 0x1a2ea; neg eax; ret; 
0x0806237f: pop ebx; mov eax, 1; ja 0x1a389; neg eax; ret; 
0x08062e66: pop ebx; mov eax, 1; ja 0x1ae70; neg eax; ret; 
0x08096251: pop ebx; mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x08072a20: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x080a03bd: pop ebx; mov eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0808f8f0: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x080557b7: pop ebx; mov eax, dword ptr [esi + 0xc]; pop esi; pop edi; jmp eax; 
0x080a1cb4: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret 8; 
0x08049975: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0804fb49: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x08057345: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x08058665: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0805c485: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0804ec75: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0805c3d1: pop ebx; mov edx, 0x768dffff; add byte ptr [ebx - 0x77c0f20], al; fisttp word ptr [edi]; xchg eax, edi; ret 0x50e9; 
0x0809c215: pop ebx; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x0809dd07: pop ebx; neg eax; pop esi; pop edi; pop ebp; ret; 
0x080d2a0c: pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8dde: pop ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0809f6d4: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0805b67e: pop ebx; pop edi; ret; 
0x0806eb8a: pop ebx; pop edx; ret; 
0x0809d3d7: pop ebx; pop esi; cmp eax, -1; cmove eax, edx; pop edi; ret; 
0x080515d5: pop ebx; pop esi; jmp eax; 
0x080a006b: pop ebx; pop esi; pop ebp; ret; 
0x0806eae3: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0805306c: pop ebx; pop esi; pop edi; jmp eax; 
0x080530eb: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0805d68f: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x080a1c48: pop ebx; pop esi; pop edi; pop ebp; ret 8; 
0x08048349: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08049aa9: pop ebx; pop esi; pop edi; ret; 
0x08091830: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x080496d7: pop ebx; pop esi; ret; 
0x080917d9: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x08053cf8: pop ebx; pop esi; sub eax, ebp; pop edi; pop ebp; ret; 
0x08091170: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x080cb7f0: pop ebx; push cs; adc al, 0x43; ret; 
0x080aee24: pop ebx; push esi; stc; call dword ptr [eax + 0x59]; 
0x080aee6c: pop ebx; push esi; stc; call dword ptr [eax]; 
0x080aee68: pop ebx; push esi; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax]; 
0x080c29fc: pop ebx; ret 0x6f9; 
0x080481c9: pop ebx; ret; 
0x080a49f7: pop ebx; sar eax, 2; pop esi; pop edi; ret; 
0x08070f8a: pop ebx; shl eax, cl; pop esi; pop edi; pop ebp; ret; 
0x08073640: pop ebx; std; call dword ptr [eax - 0x18]; 
0x0808fc31: pop ebx; sub eax, edx; ret; 
0x0806a99c: pop ebx; sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x080701b1: pop ebx; xchg ebp, edi; inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x08051ce3: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0805b9d5: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x08062390: pop ebx; xor eax, eax; ret; 
0x08058e77: pop ecx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5189; 
0x0809e55d: pop ecx; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x080ca221: pop ecx; add byte ptr [eax], al; sbb al, 0xc9; stc; call esp; 
0x08055c34: pop ecx; add dword ptr [eax + 0x55], edx; call dword ptr [esi + 0xc]; 
0x08096f12: pop ecx; cld; dec dword ptr [ebp - 0x1cdbf7d]; call dword ptr [eax + 0x6a]; 
0x080c06c6: pop ecx; cmp byte ptr [ebx + edi*2], bh; push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x080923b5: pop ecx; movzx esi, al; push esi; push dword ptr [ebp]; call edi; 
0x080c8040: pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d047d: pop ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0809e541: pop ecx; pop eax; jmp dword ptr [eax]; 
0x0806ebb2: pop ecx; pop ebx; ret; 
0x080c6fee: pop ecx; push cs; and byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080aee41: pop ecx; stc; call dword ptr [eax]; 
0x080aee21: pop ecx; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x080aee45: pop ecx; stc; push eax; pop eax; stc; call eax; 
0x08073eff: pop ecx; std; dec dword ptr [ebx - 0x72d7dba4]; and eax, 0x60; std; call dword ptr [eax + 0x68]; 
0x080ca851: pop edi; add byte ptr [eax], al; in al, dx; pop es; cli; jmp dword ptr [edx]; 
0x0806eae5: pop edi; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x080c1cba: pop edi; insd dword ptr es:[edi], dx; test eax, 0x7d4c8c5d; ret 0xd8f; 
0x0805306e: pop edi; jmp eax; 
0x080c0c81: pop edi; mov dh, 0x4e; ret 0x474c; 
0x0805f100: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08076e5f: pop edi; or byte ptr [ecx - 0x72dfdbb4], cl; dec edi; and dh, dh; ret; 
0x08077d8f: pop edi; or byte ptr [ecx - 0x72e7dbb4], cl; dec eax; cmp al, 0xf6; ret; 
0x08057cb5: pop edi; or byte ptr [ecx], bh; ret; 
0x080c73f6: pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8a2f: pop edi; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080530ed: pop edi; pop ebp; jmp eax; 
0x0805d691: pop edi; pop ebp; ret 4; 
0x080a1c4a: pop edi; pop ebp; ret 8; 
0x0804834b: pop edi; pop ebp; ret; 
0x0806a6de: pop edi; pop ebx; ret; 
0x08061d8b: pop edi; pop esi; pop ebx; ret; 
0x0806ac58: pop edi; pop esi; ret; 
0x08049aab: pop edi; ret; 
0x0807532e: pop edi; std; call dword ptr [eax + 0x68]; 
0x08075386: pop edi; std; call dword ptr [eax - 0x73]; 
0x08091832: pop edi; xor eax, eax; ret; 
0x0808f49d: pop edx; adc al, 0x29; ret; 
0x08093908: pop edx; adc byte ptr [ecx], ah; ret; 
0x0804cbf5: pop edx; add al, 0x83; ret 0x3908; 
0x0809e57d: pop edx; add byte ptr [eax], al; pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0806f5b7: pop edx; add byte ptr [ecx - 0x38f3dba4], cl; ret; 
0x080c189d: pop edx; je 0x79864; ret 0xacfc; 
0x080c06c4: pop edx; jp 0x78720; cmp byte ptr [ebx + edi*2], bh; push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x0809d867: pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x0809d820: pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0xc; 
0x08062e34: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x1ae50; pop ebx; ret; 
0x0804fd38: pop edx; or byte ptr [ebx - 0x76fefbbe], al; ret 0xe281; 
0x080c6130: pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8812: pop edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c2863: pop edx; out 0xf5, eax; mov ch, 0xab; ret; 
0x080710a8: pop edx; pop dword ptr [esi]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x08056115: pop edx; pop ebx; ret; 
0x0809e540: pop edx; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0806ebb1: pop edx; pop ecx; pop ebx; ret; 
0x0809d866: pop edx; pop edx; mov ecx, dword ptr [esp]; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 4]; ret 0x14; 
0x080d4100: pop edx; push cs; or al, 0x44; ret; 
0x0806eb8b: pop edx; ret; 
0x080bf58c: pop edx; rol dword ptr [edx + 0x3c], cl; push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x08067865: pop edx; xor eax, eax; pop edi; ret; 
0x080adb34: pop es; adc bh, bl; push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080addb4: pop es; adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x08091612: pop es; add byte ptr [eax], al; jne 0x49340; xor eax, eax; pop edi; ret; 
0x080a6def: pop es; add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x38]; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x080bbe79: pop es; add byte ptr [eax], al; mov esi, 0xc0000007; pop es; add byte ptr [eax], al; ret 7; 
0x080626da: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x080bbe81: pop es; add byte ptr [eax], al; ret 7; 
0x0804d49b: pop es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0805dbf9: pop es; add byte ptr [ebx - 0x39], dl; ret; 
0x080d502d: pop es; add dword ptr [eax], eax; push eax; stc; cld; jmp dword ptr [esi]; 
0x0808e367: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x080ce49a: pop es; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0809a472: pop es; add eax, dword ptr [ecx]; call eax; 
0x0809ed72: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08099789: pop es; call eax; 
0x080d0745: pop es; cld; jmp edx; 
0x080ca7e9: pop es; cli; jmp dword ptr [ebp]; 
0x080ca855: pop es; cli; jmp dword ptr [edx]; 
0x080c1f40: pop es; inc esi; pcmpeqw mm5, qword ptr [ebp - 0x5f]; mov cs, edi; ret 0x8b36; 
0x08067522: pop es; jb 0x1f590; lea eax, [edi + 6]; pop edi; ret; 
0x08091d22: pop es; jb 0x49d90; lea eax, [eax + 6]; pop edi; ret; 
0x080915b2: pop es; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809d733: pop es; jne 0x55774; mov eax, 0x80dbf2c; mov esi, 1; call dword ptr [eax]; 
0x08065d5d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e9d: pop es; lea eax, [edx + 0xa]; ret; 
0x08065dc1: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f21: pop es; lea eax, [edx + 0xe]; ret; 
0x0806692c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08066a8c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0806631c: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0806647c: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x080a3032: pop es; mov eax, dword ptr [esi]; add eax, dword ptr [edx + 4]; call eax; 
0x08050068: pop es; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080644ed: pop es; mov eax, edi; pop edi; ret; 
0x0806462d: pop es; mov eax, edx; ret; 
0x0806a22d: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x080669ac: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x08066b0c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0806639c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x080664fc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x08065d56: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x08065e96: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x080644e6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x08064626: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x08065db8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x08065f18: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x08064548: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x080646a8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x08060833: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0809f2e9: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x0805f0ff: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08065c0a: pop es; pop edi; ret; 
0x08095850: pop es; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x08065e4a: pop es; ret; 
0x080d514d: pop es; std; call dword ptr [edx + 1]; 
0x08060837: pop es; sub eax, ecx; ret; 
0x080a3e17: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x08093820: pop es; xor eax, eax; pop ebx; ret; 
0x0806bb60: pop es; xor eax, eax; ret; 
0x080ca759: pop esi; add byte ptr [eax], al; add al, 5; cli; call ebx; 
0x080c8b7d: pop esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x08091812: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x080c4fd1: pop esi; clc; call edx; 
0x0809d3d8: pop esi; cmp eax, -1; cmove eax, edx; pop edi; ret; 
0x080515d6: pop esi; jmp eax; 
0x080cc326: pop esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c686a: pop esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080a006c: pop esi; pop ebp; ret; 
0x0806eb89: pop esi; pop ebx; pop edx; ret; 
0x08061d8c: pop esi; pop ebx; ret; 
0x0806eae4: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x290c0; ret; 
0x0805306d: pop esi; pop edi; jmp eax; 
0x080530ec: pop esi; pop edi; pop ebp; jmp eax; 
0x0805d690: pop esi; pop edi; pop ebp; ret 4; 
0x080a1c49: pop esi; pop edi; pop ebp; ret 8; 
0x0804834a: pop esi; pop edi; pop ebp; ret; 
0x0806a6dd: pop esi; pop edi; pop ebx; ret; 
0x08049aaa: pop esi; pop edi; ret; 
0x08091831: pop esi; pop edi; xor eax, eax; ret; 
0x080c6832: pop esi; push cs; or al, 0x41; ret; 
0x080496d8: pop esi; ret; 
0x080c09fc: pop esi; sar byte ptr [0x733db8a1], 0xd7; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x08078bcc: pop esi; std; call dword ptr [eax + 0x68]; 
0x080747e3: pop esi; std; call dword ptr [eax - 0x73]; 
0x080917da: pop esi; sub eax, 0x10; pop edi; ret; 
0x08053cf9: pop esi; sub eax, ebp; pop edi; pop ebp; ret; 
0x0805412d: pop esi; sub edx, edi; mov eax, edx; pop edi; pop ebp; ret; 
0x0806ad12: pop esi; xor eax, eax; pop ebx; ret; 
0x08091171: pop esi; xor eax, eax; pop edi; ret; 
0x080ca529: pop esp; add byte ptr [eax], al; hlt; salc; stc; call dword ptr [ebx]; 
0x080ca589: pop esp; add byte ptr [eax], al; xor al, 0xd9; stc; call edx; 
0x080a269e: pop esp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5589; 
0x0805e0ee: pop esp; add eax, 0x890b7500; ret 0x428d; 
0x080a6d52: pop esp; add esp, 8; pop ebx; ret; 
0x0806cde7: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x0806ead4: pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080935e7: pop esp; and al, 0x10; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x08053e10: pop esp; and al, 0x18; push ebp; call dword ptr [esi + 0x40]; 
0x0806cd47: pop esp; and al, 0x20; call dword ptr gs:[0x10]; 
0x0809340f: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0806cc62: pop esp; and al, 0x20; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x0809ecac: pop esp; and al, 0x28; call ebx; 
0x080930d2: pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08097baa: pop esp; and al, 0x38; dec esp; add ebx, dword ptr [esp + 0x3c]; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x08097baf: pop esp; and al, 0x3c; push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x08093744: pop esp; and al, 0x40; call dword ptr gs:[0x10]; 
0x0806c92b: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0806d947: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0806eb03: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x08093303: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0806c37d: pop esp; and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08093807: pop esp; and al, 8; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0806cb4f: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x08092cb7: pop esp; and al, 8; call dword ptr gs:[0x10]; pop ebx; ret; 
0x080a498a: pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d97a: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9aa: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080d3174: pop esp; call 0xb3d5b17a; cld; jmp dword ptr [eax]; 
0x0807474e: pop esp; call edi; 
0x080cc745: pop esp; cli; call dword ptr [edi]; 
0x080a864b: pop esp; cli; jmp dword ptr [esi - 0x70]; 
0x080ae6e4: pop esp; daa; stc; jmp dword ptr [esi + 0x27]; 
0x080c9174: pop esp; dec eax; add byte ptr [eax], al; sbb byte ptr [edi], dh; stc; jmp dword ptr [ecx]; 
0x080d6684: pop esp; dec ebp; std; jmp dword ptr [ecx + 1]; 
0x08088150: pop esp; idiv edi; call dword ptr [eax + 1]; 
0x08088c5a: pop esp; idiv edi; call dword ptr [ebx + 0xf]; 
0x08089925: pop esp; idiv edi; call dword ptr [edx + 0x6a]; 
0x080d4dc4: pop esp; idiv esp; call dword ptr [esi]; 
0x080cb474: pop esp; imul eax, dword ptr [eax], 0; js 0x8349c; cli; jmp dword ptr [esi]; 
0x080cb274: pop esp; imul eax, dword ptr [eax], 0xfa1c2800; jmp dword ptr [esi]; 
0x080d1a54: pop esp; inc ecx; cld; call dword ptr [ebx + 1]; 
0x080d62f4: pop esp; inc edi; std; jmp dword ptr [edi]; 
0x08091ec9: pop esp; mov eax, 0x10; pop edi; ret; 
0x080744ce: pop esp; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080c580f: pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7c0e: pop esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x08054686: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x080d302d: pop esp; push cs; or al, 0x41; ret; 
0x080716be: pop esp; push dword ptr [eax + 4]; call edi; 
0x0807474a: pop esp; push dword ptr [esp + 0x5c]; call edi; 
0x080744ca: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080749ad: pop esp; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0805ac78: pop esp; ret 0x8b38; 
0x0809dfe1: pop esp; ret; 
0x08056f99: pop esp; sbb byte ptr [eax], al; add byte ptr [ecx], al; pop ebx; ret; 
0x08073a34: pop esp; std; call dword ptr [eax - 0x18]; 
0x08073630: pop esp; std; call dword ptr [eax - 0x73]; 
0x0809eca3: pop esp; sub esp, 0xc; push dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x08092c82: pop esp; xchg eax, ecx; or al, 0x8d; inc edx; add eax, dword ptr [ebp + 0x5bd475db]; ret; 
0x080cbca4: pop esp; xor bh, dl; jmp dword ptr [eax]; 
0x08090650: pop ss; add al, 0x5b; cmovne eax, ecx; ret; 
0x0809a7ac: pop ss; add byte ptr [eax], al; add esp, 0x20; lea esi, [esi]; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x0809b116: pop ss; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x080d26c9: pop ss; add ecx, dword ptr [edx]; ret; 
0x0806cc8f: pop ss; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080934d8: pop ss; add esp, 4; pop ebx; pop esi; ret; 
0x080675d8: pop ss; bsf ecx, ecx; sub edx, ecx; jbe 0x1f610; add eax, ecx; ret; 
0x08070390: pop ss; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aa9c]; add ecx, ebx; jmp ecx; 
0x08092b78: pop ss; mov cl, dl; and cl, 0xf; je 0x4aba0; ret; 
0x080579ea: pop ss; or byte ptr es:[eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080ae104: pop ss; pop ss; stc; call dword ptr [edi]; 
0x08062419: pop ss; ret 0x2c73; 
0x08062dda: pop ss; ret 0x3273; 
0x08062404: pop ss; ret 0x3e73; 
0x08062dc0: pop ss; ret 0x4c73; 
0x080623ef: pop ss; ret 0x5073; 
0x080623da: pop ss; ret 0x6273; 
0x08062da6: pop ss; ret 0x6673; 
0x08060955: pop ss; ret 0x830f; 
0x080ae105: pop ss; stc; call dword ptr [edi]; 
0x080add25: pop ss; sti; inc dword ptr [ecx - 0x4e0004ec]; adc al, 0xfb; jmp ecx; 
0x080adce5: pop ss; sti; inc dword ptr [esi - 0x490004ec]; adc al, 0xfb; jmp esi; 
0x080bdb36: popal; arpl word ptr [eax + 0x69], bp; outsb dx, byte ptr [esi]; push 0xc2f0000; cld; call dword ptr [eax - 8]; 
0x080c6d5d: popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d00d2: popal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0805eac9: popal; out dx, eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0809d4eb: popal; ret; 
0x0807cf2b: popal; sbb al, 0xff; inc dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x08073a49: popal; std; call dword ptr [eax + 0x68]; 
0x080792f4: popal; std; call dword ptr [eax - 0x18]; 
0x08073a21: popal; std; call dword ptr [eax - 0x73]; 
0x0807a555: popal; std; call dword ptr [edi + 3]; 
0x0807a8e1: popal; std; dec dword ptr [ebp + 0x62000384]; std; call dword ptr [eax - 0x18]; 
0x0807b247: popal; std; dec dword ptr [ebx - 0x976b]; call dword ptr [edx - 1]; 
0x0809fd30: popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0807f19c: popfd; dec esp; idiv edi; dec dword ptr [edi]; xchg eax, esp; ret 0xff52; 
0x080a57af: popfd; inc eax; cli; dec dword ptr [ebp - 0x15e937d]; call dword ptr [eax + 0x68]; 
0x08088c7e: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x52]; 
0x080894c3: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x57]; 
0x08088711: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x0808a6a6: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 1]; 
0x08089167: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x6a]; 
0x08088dfc: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x08088ca6: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x08088bf5: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x08088482: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x08089480: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x08088b31: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x08089c68: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88f6b]; call dword ptr [edx - 0x18]; 
0x08089977: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88f73]; call dword ptr [ecx + 0x6a]; 
0x0808a0bf: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x89773]; call dword ptr [ecx + 0x6a]; 
0x0808991e: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8a373]; call dword ptr [edx + 0x6a]; 
0x0808a27a: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x8b373]; dec dword ptr [ecx - 0x88f6b]; call dword ptr [esi + 0x6a]; 
0x0809bb2d: popfd; mov eax, 0x89fffffd; cli; call dword ptr gs:[0x10]; 
0x08088096: popfd; push 0x75fffff7; ret; 
0x08050ed0: popfd; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080b0359: psubd mm7, mm7; jo 0x6836d; cli; jmp dword ptr [eax + 0xf]; 
0x080ab9c9: psubq mm7, mm7; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080c06ca: push -0x42; outsb dx, byte ptr [esi]; call dword ptr [ecx - 0x66]; 
0x0807b848: push -3; call dword ptr [eax - 0x18]; 
0x0807bf2e: push -3; call dword ptr [eax - 0x73]; 
0x0809257d: push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x0809257b: push 0; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x08073991: push 0; push 0; push 0; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x08074231: push 0; push 0; push 0; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x08074b1f: push 0; push 0; push 0; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080750f5: push 0; push 0; push 0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08073e81: push 0; push 0; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08074741: push 0; push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x08078916: push 0; push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x080766c4: push 0; push 0; push 0; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x0807171c: push 0; push 0; push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x08073993: push 0; push 0; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x08074233: push 0; push 0; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x08074b21: push 0; push 0; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080750f7: push 0; push 0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08073e83: push 0; push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08074743: push 0; push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x08078918: push 0; push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x080766c6: push 0; push 0; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x0807171e: push 0; push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x080510c2: push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x080543e7: push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0808febc: push 0; push 0; push edx; mov eax, dword ptr [esp + 0x38]; push eax; call esi; 
0x080567f1: push 0; push 0; push esi; call dword ptr [eax + 0x2c]; 
0x08053722: push 0; push 0; push esi; call dword ptr [ecx + 0x40]; 
0x0805430a: push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0805351e: push 0; push 0; push esi; call dword ptr [edx + 0x40]; 
0x08090096: push 0; push dword ptr [ebp - 0x2c]; push eax; push esi; push ecx; call edi; 
0x080536e0: push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x080aab85: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x1c; ret; 
0x0805342e: push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x0804989b: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2640; add esp, 0x2c; ret; 
0x0806c2a5: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x08073995: push 0; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x08074235: push 0; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x08074b23: push 0; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080750f9: push 0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08073e85: push 0; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08074745: push 0; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x0807891a: push 0; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x080766c8: push 0; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x08071720: push 0; push eax; push dword ptr [esi + 4]; call edi; 
0x080510c4: push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x080543e9: push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0806d9e6: push 0; push ebx; call esi; 
0x0806c141: push 0; push edi; push ebp; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x08055f50: push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08050eef: push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x40]; 
0x0808febe: push 0; push edx; mov eax, dword ptr [esp + 0x38]; push eax; call esi; 
0x08050f87: push 0; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x080567f3: push 0; push esi; call dword ptr [eax + 0x2c]; 
0x0804fc8d: push 0; push esi; call dword ptr [ebx + 8]; 
0x08053724: push 0; push esi; call dword ptr [ecx + 0x40]; 
0x0805430c: push 0; push esi; call dword ptr [edi + 0x40]; 
0x08053520: push 0; push esi; call dword ptr [edx + 0x40]; 
0x0808eacb: push 0x10; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x080a8960: push 0x1a; push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080bdf44: push 0x1efffc04; or al, 0xfc; call dword ptr [ecx]; 
0x08076fd5: push 0x2474ff50; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08077f05: push 0x2474ff50; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x080ab464: push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08089573: push 0x29fffff7; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x080bdb38: push 0x2e656e69; push 0xc2f0000; cld; call dword ptr [eax - 8]; 
0x080bdb38: push 0x2e656e69; push 0xc2f0000; cld; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080ce11b: push 0x41140e0a; ret; 
0x080cf22d: push 0x43140e0a; ret; 
0x080c7580: push 0x4c00002c; fdivp st(0); call dword ptr [edx]; 
0x080a8b23: push 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x080d6680: push 0x5c00011d; dec ebp; std; jmp dword ptr [ecx + 1]; 
0x080a1794: push 0x6600001b; add dword ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080c243e: push 0x6e; ja 0x7a3c5; ret 0x48f; 
0x08088097: push 0x75fffff7; ret; 
0x080487ab: push 0x80daf80; call eax; 
0x080487ab: push 0x80daf80; call eax; add esp, 0x10; leave; ret; 
0x080487f8: push 0x80daf80; call edx; 
0x080487f8: push 0x80daf80; call edx; add esp, 0x10; leave; ret; 
0x0805807a: push 0x81ffff80; ret 0x1f82; 
0x0804ad22: push 0x83ffffff; les ecx, ptr [ecx + ecx*4]; inc ebp; mov ah, 0x83; ret 0x5201; 
0x08071904: push 0x89ffffe9; xor al, 0x24; call edi; 
0x0806d3df: push 0x8c0950f; ret 0x850f; 
0x0807c3a5: push 0x8dfffa22; and byte ptr [eax + 0x22], 0xfa; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x08075ddc: push 0x8dffffff; add dword ptr [esi + ebx*2], -3; call dword ptr [eax - 0x73]; 
0x080a8919: push 0xa; push 1; call eax; 
0x080a88f3: push 0xa; push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080ca6d9: push 0xa; push cs; adc al, 0x43; ret; 
0x080bdb3d: push 0xc2f0000; cld; call dword ptr [eax - 8]; 
0x080bdb3d: push 0xc2f0000; cld; call dword ptr [eax - 8]; sti; jmp dword ptr [eax]; 
0x080960d6: push 0xc483fffc; adc cl, ch; mov edi, 0x89fffffd; ret 0x8d90; 
0x0804e2a0: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0806fe4c: push 0xf080dbf; xchg eax, esp; ret 0x1089; 
0x08056963: push 1; call 0xe3f0; add esp, 0x1c; ret; 
0x080a8863: push 1; call eax; 
0x080a9122: push 1; call eax; add esp, 0x10; add esp, 0xc; ret; 
0x08051cae: push 1; cdq; push edx; push edi; push esi; call dword ptr [ebp + 0x40]; 
0x080a88f5: push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080512e4: push 1; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x080543e5: push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x08053720: push 1; push 0; push 0; push esi; call dword ptr [ecx + 0x40]; 
0x080a8e1a: push 1; push 1; call eax; 
0x080500d3: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7fe0; add esp, 0x1c; ret; 
0x0806d9fa: push 1; push ebx; call esi; 
0x08054e49: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0808d8a9: push 1; push esi; call eax; 
0x0808dee5: push 1; push esi; call edx; 
0x080510c0: push 2; push 0; push 0; push ebp; call dword ptr [ebx + 0x40]; 
0x08054308: push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0805351c: push 2; push 0; push 0; push esi; call dword ptr [edx + 0x40]; 
0x0806da0d: push 2; push ebx; call esi; 
0x080543e3: push 3; push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0806da2b: push 3; push ebx; call edx; 
0x080ab84e: push 8; mov dword ptr [esp], ebp; call edi; 
0x080c7b17: push cs; adc al, 0x41; push cs; adc byte ptr [edx], al; arpl word ptr [edx], cx; ret; 
0x080c49cd: push cs; adc al, 0x41; ret; 
0x080c4e2f: push cs; adc al, 0x43; ret; 
0x080c951c: push cs; adc al, 0x44; ret; 
0x080c6e97: push cs; adc al, 0x45; ret; 
0x080c6406: push cs; adc al, 0x46; ret; 
0x080cbd71: push cs; adc al, 0x83; add eax, 0x1880e4e; add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x080c5b95: push cs; adc al, 0x83; add eax, 0x2200e4e; test eax, 0x41140e0a; ret; 
0x080cf2dd: push cs; adc al, 0x83; add eax, 0x2240e4d; test eax, 0x41140e0a; ret; 
0x080cf289: push cs; adc al, 0x83; add eax, 0x2280e4d; mov ecx, 0x41140e0a; ret; 
0x080d4a5d: push cs; adc al, 0x83; add eax, 0x2300e49; or cl, byte ptr [0x4314]; ret; 
0x080c63c1: push cs; adc al, 0x83; add eax, 0x2300e4e; mov esp, 0x41140e0a; ret; 
0x080c4c11: push cs; adc al, 0x83; add eax, 0x2500e4e; ret; 
0x080d6121: push cs; adc al, 0x83; add eax, 0x2600e4e; or byte ptr [edx], 0xe; adc al, 0x43; ret; 
0x080d57f9: push cs; adc al, 0x83; add eax, 0x2d00e53; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d5bdd: push cs; adc al, 0x83; add eax, 0x2e00e4b; add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x080d2955: push cs; adc al, 0x83; add eax, 0x3380e48; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x080c77d5: push cs; adc al, 0x83; add eax, 0x4e200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf3d9: push cs; adc al, 0x83; add eax, 0x57300e4e; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8039: push cs; adc al, 0x83; add eax, 0x59300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2a05: push cs; adc al, 0x83; add eax, 0x5b300e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfcad: push cs; adc al, 0x83; add eax, 0x71300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbb49: push cs; adc al, 0x83; add eax, 0x74200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c93a1: push cs; adc al, 0x83; add eax, 0x75200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7ea5: push cs; adc al, 0x83; add eax, 0x75300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cfda1: push cs; adc al, 0x83; add eax, 0x79200e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c94fd: push cs; adc al, 0x83; add eax, 0x79300e4e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c78f9: push cs; adc al, 0x83; add eax, 0x7a200e4d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb040: push cs; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c6292: push cs; adc byte ptr [eax + 0xa], bl; push cs; or al, 0x41; ret; 
0x080c7b71: push cs; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7658: push cs; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cdc40: push cs; adc byte ptr [eax + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d489b: push cs; adc byte ptr [eax + 0xa], dl; ret; 
0x080d00ea: push cs; adc byte ptr [eax + eax], ch; add byte ptr [eax], al; fdiv dword ptr [edi - 0x5b40000]; sti; call dword ptr [ebp]; 
0x080cc607: push cs; adc byte ptr [ebp + 0xa], al; ret; 
0x080d15ac: push cs; adc byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080d631c: push cs; adc byte ptr [ebp + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7798: push cs; adc byte ptr [ebp + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7455: push cs; adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080c96e3: push cs; adc byte ptr [ebx + 0x43028603], al; or cl, byte ptr [esi]; or al, 0x46; ret; 
0x080d11dd: push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080d4dd8: push cs; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76b4: push cs; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d01a0: push cs; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd18: push cs; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080c8888: push cs; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa74: push cs; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b8: push cs; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080c8fec: push cs; adc byte ptr [ebx + 0xa7e0204], al; ret; 
0x080c76f0: push cs; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e08: push cs; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080c573d: push cs; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080d2dcb: push cs; adc byte ptr [ebx + 0xa], al; ret; 
0x080c7de4: push cs; adc byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x080c4f0a: push cs; adc byte ptr [ebx + 0xa], cl; ret; 
0x080cff4c: push cs; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e38: push cs; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e18: push cs; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c8530: push cs; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba74: push cs; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080cac48: push cs; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d00d0: push cs; adc byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x080c6a61: push cs; adc byte ptr [ecx + 0xa], ah; ret; 
0x080c72ea: push cs; adc byte ptr [ecx + 0xa], al; ret; 
0x080d00a3: push cs; adc byte ptr [ecx + 0xa], cl; ret; 
0x080c9338: push cs; adc byte ptr [ecx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7b88: push cs; adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x080d25c9: push cs; adc byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080cad40: push cs; adc byte ptr [edi + 0xa], al; ret; 
0x080cbf0c: push cs; adc byte ptr [edi + 0xa], cl; push cs; or al, 0x41; ret; 
0x080d29b2: push cs; adc byte ptr [edi + 0xa], cl; ret; 
0x080d1520: push cs; adc byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080cdc57: push cs; adc byte ptr [edi + 0xa], dl; push cs; or al, 0x41; ret; 
0x080d3479: push cs; adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080c4cd4: push cs; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x080cfc70: push cs; adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x080cff76: push cs; adc byte ptr [edx + 0xa], cl; ret; 
0x080cfee8: push cs; adc byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c5f51: push cs; adc byte ptr [edx + 0xa], dl; ret; 
0x080c7c0c: push cs; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080c7855: push cs; adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x080c7b1a: push cs; adc byte ptr [edx], al; arpl word ptr [edx], cx; ret; 
0x080cace8: push cs; adc byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c8e68: push cs; adc byte ptr [edx], al; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080ced4c: push cs; adc byte ptr [edx], al; js 0x86d5b; push cs; or al, 0x43; ret; 
0x080c8d3c: push cs; adc byte ptr [edx], al; or cl, byte ptr [esi]; or al, 0x45; ret; 
0x080ce6d8: push cs; adc byte ptr [edx], al; pushal; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080c5b90: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2200e4e], -0x57; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf2d8: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e4d], -0x57; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf284: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e4d], -0x47; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d4a58: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e49], 0x67; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c63bc: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e4e], -0x44; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5458: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e53], -0x3a; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cf8e6: push cs; adc byte ptr [esi + 0xa], al; ret; 
0x080c6868: push cs; adc byte ptr [esi + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cc9ae: push cs; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb79: push cs; adc byte ptr [esi + 0xa], dl; ret; 
0x080d0862: push cs; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08d1: push cs; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08c0: push cs; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0926: push cs; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x080d089e: push cs; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d0b30: push cs; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d08af: push cs; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d088d: push cs; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080c6830: push cs; adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080d3667: push cs; adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080c712b: push cs; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x080c9516: push cs; add al, 0x41; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x44; ret; 
0x080cfd6d: push cs; add al, 0x41; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x46; ret; 
0x080d103e: push cs; add al, 0x41; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d30a0: push cs; add al, 0x41; or eax, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080d1045: push cs; add al, 0x41; or eax, dword ptr [esi + 0xa]; ret; 
0x080d5bf8: push cs; add al, 0x41; or eax, dword ptr [esi + 0xe]; adc al, 0x43; ret; 
0x080c843f: push cs; add al, 0x41; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080cf2a3: push cs; add al, 0x41; or ebp, dword ptr [ebx + 0xe]; adc al, 0x46; ret; 
0x080cf2f7: push cs; add al, 0x41; or ebp, dword ptr [edi + 0xe]; adc al, 0x46; ret; 
0x080cb04c: push cs; add al, 0x41; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080cc338: push cs; add al, 0x41; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080cfe22: push cs; add al, 0x42; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8ed7: push cs; add al, 0x42; or eax, dword ptr [ebx]; xor eax, 0x140e0a01; inc ebx; ret; 
0x080d152c: push cs; add al, 0x42; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d97: push cs; add al, 0x42; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080c5f5e: push cs; add al, 0x42; or ebx, dword ptr [edi + 0xa]; ret; 
0x080d5a64: push cs; add al, 0x42; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d6240: push cs; add al, 0x42; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080ca6bf: push cs; add al, 0x42; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080cb7a2: push cs; add al, 0x43; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x45; ret; 
0x080d1096: push cs; add al, 0x43; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d423a: push cs; add al, 0x43; or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x080d5540: push cs; add al, 0x43; or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d65f6: push cs; add al, 0x43; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d3deb: push cs; add al, 0x43; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080cb1d0: push cs; add al, 0x43; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d5a7a: push cs; add al, 0x43; or esp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080d308a: push cs; add al, 0x44; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d16d7: push cs; add al, 0x44; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c8dda: push cs; add al, 0x44; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4481: push cs; add al, 0x44; or ebx, dword ptr [esi + 0xa]; ret; 
0x080d2d44: push cs; add al, 0x44; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d4a77: push cs; add al, 0x44; or edi, dword ptr [eax + 0xa]; push cs; adc al, 0x46; ret; 
0x080d15b8: push cs; add al, 0x44; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x080d3d6b: push cs; add al, 0x44; or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d590f: push cs; add al, 0x44; or edx, dword ptr [ecx + 0xa]; ret; 
0x080d3d81: push cs; add al, 0x44; or esi, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080cbe5c: push cs; add al, 0x44; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c77ee: push cs; add al, 0x44; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080cc4ca: push cs; add al, 0x45; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080cb09b: push cs; add al, 0x45; or eax, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d109d: push cs; add al, 0x45; or eax, dword ptr [ebx + 0xa]; ret; 
0x080d2ad0: push cs; add al, 0x45; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080c8e28: push cs; add al, 0x45; or ecx, dword ptr [ebp + 0xa]; ret; 
0x080d57bc: push cs; add al, 0x45; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d568b: push cs; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x43; ret; 
0x080c6ea7: push cs; add al, 0x45; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x45; ret; 
0x080c93ba: push cs; add al, 0x45; or esp, dword ptr [eax + 0xe]; adc al, 0x43; ret; 
0x080c952c: push cs; add al, 0x46; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c5ae4: push cs; add al, 0x46; or eax, dword ptr [ebx + 0xe]; adc al, 0x43; ret; 
0x080cbd28: push cs; add al, 0x46; or eax, dword ptr [ecx + 0xa]; ret; 
0x080ce117: push cs; add al, 0x46; or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080c91b9: push cs; add al, 0x46; or ebp, dword ptr [esi + 0xa]; push cs; or al, 0x43; ret; 
0x080d422c: push cs; add al, 0x46; or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x080d2588: push cs; add al, 0x46; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d3e34: push cs; add al, 0x46; or edi, dword ptr [eax + 0xa]; ret; 
0x080cd8f0: push cs; add al, 0x46; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x080c7df0: push cs; add al, 0x46; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x080d3e43: push cs; add al, 0x46; or esp, dword ptr [eax + 0xa]; ret; 
0x080d120f: push cs; add al, 0x46; push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080cffd4: push cs; add al, 0x47; or eax, dword ptr [ecx + 0xa]; ret; 
0x080cbf18: push cs; add al, 0x47; or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x080cff5c: push cs; add al, 0x47; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d561b: push cs; add al, 0x47; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c6506: push cs; add al, 0x47; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x46; ret; 
0x080cf23f: push cs; add al, 0x47; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x43; ret; 
0x080d429c: push cs; add al, 0x47; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080c8e75: push cs; add al, 0x47; or esp, dword ptr [edx + 0xa]; push cs; or al, 0x43; ret; 
0x080ceba4: push cs; add al, 0x48; or ebx, dword ptr [ecx + 0xa]; ret; 
0x080d0622: push cs; add al, 0x48; or ecx, dword ptr [ebp + 0xe]; adc al, 0x43; ret; 
0x080c70f8: push cs; add al, 0x48; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d48a8: push cs; add al, 0x48; or ecx, dword ptr [edx + 0xa]; ret; 
0x080c8dc4: push cs; add al, 0x48; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x080c629e: push cs; add al, 0x49; or eax, dword ptr [ebx + 0xe]; or al, 0x46; ret; 
0x080c78be: push cs; add al, 0x49; or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8e37: push cs; add al, 0x49; or ecx, dword ptr [esi + 0xa]; ret; 
0x080ce647: push cs; add al, 0x49; or edx, dword ptr [eax + 0xe]; or al, 0x46; ret; 
0x080cdcea: push cs; add al, 0x49; or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x43; ret; 
0x080d0144: push cs; add al, 0x49; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x080d11da: push cs; add al, 0x49; push cs; adc byte ptr [ebx + 0x80e5002], al; inc ebx; ret; 
0x080c8a41: push cs; add al, 0x4a; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080cb5db: push cs; add al, 0x4a; or eax, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x080d1496: push cs; add al, 0x4a; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d3cf1: push cs; add al, 0x4a; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d048f: push cs; add al, 0x4a; or ecx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x080c90b7: push cs; add al, 0x4a; or ecx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x080c6400: push cs; add al, 0x4a; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x46; ret; 
0x080c813b: push cs; add al, 0x4b; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x46; ret; 
0x080d2e32: push cs; add al, 0x4b; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d552a: push cs; add al, 0x4b; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d6089: push cs; add al, 0x4b; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x080ce1cc: push cs; add al, 0x4b; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x43; ret; 
0x080c7754: push cs; add al, 0x4c; or ebp, dword ptr [eax + 0xa]; ret; 
0x080ca6d5: push cs; add al, 0x4c; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080c8d49: push cs; add al, 0x4c; or edx, dword ptr [eax + 0xe]; or al, 0x43; ret; 
0x080c7700: push cs; add al, 0x4c; or esp, dword ptr [ebp + 0xa]; ret; 
0x080d4494: push cs; add al, 0x4f; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d564e: push cs; add al, 0x54; add byte ptr [eax], al; add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x080ca660: push cs; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x08099d56: push cs; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x0807a452: push cs; add byte ptr [eax], al; mov edx, dword ptr [ebp + ebx - 0x180]; test edx, edx; je 0x32462; call edx; 
0x080cadc3: push cs; add byte ptr [ebx], 2; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c9637: push cs; add byte ptr [ecx], 0x53; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d523b: push cs; add byte ptr [ecx], 2; dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cd082: push cs; add byte ptr [ecx], 3; test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb2c7: push cs; add byte ptr [edx], 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d58c7: push cs; add byte ptr [edx], 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0804fc66: push cs; add dword ptr [eax], eax; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x080d26f9: push cs; add ecx, dword ptr [edx]; ret; 
0x0806ebf5: push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0808f571: push cs; add esp, 8; pop ebx; ret; 
0x080c97e2: push cs; and al, 2; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf2e2: push cs; and al, 2; test eax, 0x41140e0a; ret; 
0x080ce102: push cs; and al, 2; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c842a: push cs; and al, 2; xlatb; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cf22b: push cs; and byte ptr [eax + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080d060e: push cs; and byte ptr [eax + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c628f: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], bl; push cs; or al, 0x41; ret; 
0x080d4898: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], dl; ret; 
0x080c573a: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080d2dc8: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; ret; 
0x080c4f07: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], cl; ret; 
0x080d40b2: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080c72e7: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d25c6: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080d29af: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], cl; ret; 
0x080d3476: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080cff73: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], cl; ret; 
0x080c5f4e: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], dl; ret; 
0x080cf8e3: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], al; ret; 
0x080c6865: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cc9ab: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb76: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], dl; ret; 
0x080c682d: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080d3664: push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080c6964: push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c96d5: push cs; and byte ptr [eax + 0xe], cl; or al, 0x43; ret; 
0x080d1242: push cs; and byte ptr [eax + 0xe], dl; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080cac45: push cs; and byte ptr [eax + 0xe], dl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d6330: push cs; and byte ptr [eax + 0xe], dl; or al, 0x43; ret; 
0x080cfdc8: push cs; and byte ptr [eax], al; add byte ptr [eax + eax], ch; add byte ptr [eax - 0x63ffff4c], bh; idiv bl; jmp esi; 
0x080c79c8: push cs; and byte ptr [eax], al; add byte ptr [eax + eax], dl; add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x080c64f2: push cs; and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080c7076: push cs; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c9113: push cs; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c67c9: push cs; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080d6434: push cs; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080c93a6: push cs; and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080d1108: push cs; and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080cb688: push cs; and byte ptr [ebp + 0xe], al; adc byte ptr [ecx + 0xa], al; ret; 
0x080d12cd: push cs; and byte ptr [ebp + 0xe], bh; or al, 0x41; ret; 
0x080c768a: push cs; and byte ptr [ebp + 0xe], bl; or al, 0x41; ret; 
0x080cb6e0: push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080cad3d: push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [edi + 0xa], al; ret; 
0x080c7193: push cs; and byte ptr [ebx + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080c7359: push cs; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d6415: push cs; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c91d5: push cs; and byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080c8291: push cs; and byte ptr [ebx + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d2c25: push cs; and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080cb7ee: push cs; and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080ceb94: push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080c7452: push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080d4f49: push cs; and byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080cfda6: push cs; and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080d1366: push cs; and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080d047b: push cs; and byte ptr [ecx + 0xa], bl; push cs; adc al, 0x43; ret; 
0x080d045c: push cs; and byte ptr [ecx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c4eb2: push cs; and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x080c5bbd: push cs; and byte ptr [edi + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080ce34a: push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c4f4e: push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080cb08f: push cs; and byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080c8a2d: push cs; and byte ptr [edi + 0xa], bl; push cs; adc al, 0x46; ret; 
0x080c6d1c: push cs; and byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d0791: push cs; and byte ptr [edi + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080c7b6e: push cs; and byte ptr [edi + 0xe], cl; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080cdc54: push cs; and byte ptr [edi + 0xe], cl; adc byte ptr [edi + 0xa], dl; push cs; or al, 0x41; ret; 
0x080c6fef: push cs; and byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080c78fe: push cs; and byte ptr [edx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080d128e: push cs; and byte ptr [edx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080c8810: push cs; and byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cc604: push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080d442b: push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080cb238: push cs; and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb078: push cs; and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080c70e4: push cs; and byte ptr [edx + ecx + 0xe], cl; adc al, 0x43; ret; 
0x080cbb4e: push cs; and byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080d2c9e: push cs; and byte ptr [edx], al; dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb71a: push cs; and byte ptr [edx], al; fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x080c91ac: push cs; and byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080c9221: push cs; and byte ptr [edx], al; jae 0x81230; push cs; adc al, 0x41; ret; 
0x080d07e4: push cs; and byte ptr [edx], al; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7332: push cs; and byte ptr [edx], al; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2436: push cs; and byte ptr [edx], al; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5b9a: push cs; and byte ptr [edx], al; test eax, 0x41140e0a; ret; 
0x080ca6aa: push cs; and byte ptr [edx], al; xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x080d0768: push cs; and byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cb4c3: push cs; and byte ptr [esi + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080c77da: push cs; and byte ptr [esi + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080cb1c4: push cs; and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7c23: push cs; and byte ptr [esi + 0xe], al; adc byte ptr [eax + 0xa], cl; push cs; or al, 0x41; ret; 
0x080c7655: push cs; and byte ptr [esi + 0xe], al; adc byte ptr [eax + 0xa], dh; push cs; or al, 0x41; ret; 
0x080d00a0: push cs; and byte ptr [esi + 0xe], al; adc byte ptr [ecx + 0xa], cl; ret; 
0x080cfee5: push cs; and byte ptr [esi + 0xe], al; adc byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x080c7852: push cs; and byte ptr [esi + 0xe], al; adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x080ce0cc: push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080c6a5e: push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], ah; ret; 
0x080cc6e9: push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7b85: push cs; and byte ptr [esi + 0xe], dl; adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x080d5f78: push cs; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080d5389: push cs; and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x080d302b: push cs; and byte ptr [esi + ecx + 0xc], bl; inc ecx; ret; 
0x0806b004: push cs; call ecx; 
0x080caaf9: push cs; cli; call dword ptr [ebx + 1]; 
0x080d295a: push cs; cmp byte ptr [ebx], al; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x080d1650: push cs; inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080cb5c6: push cs; inc eax; add bh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c748a: push cs; inc eax; add bh, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x080d3dd6: push cs; inc eax; add bh, ch; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c5d5f: push cs; inc eax; add bh, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2016: push cs; inc eax; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d15ee: push cs; inc eax; add ch, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x080d328c: push cs; inc eax; add cl, bl; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c6e92: push cs; inc eax; add cl, byte ptr [ecx + 0xa]; push cs; adc al, 0x45; ret; 
0x080d480b: push cs; inc eax; add dh, byte ptr [edx + 0xa]; push cs; adc al, 0x43; ret; 
0x080d28e9: push cs; inc eax; add dh, byte ptr [esi + 0x45140e0a]; ret; 
0x080d28c2: push cs; inc eax; add dl, byte ptr [ebp + 0xa]; push cs; adc al, 0x45; ret; 
0x080d3e8a: push cs; inc eax; add dl, byte ptr [edi + 0x41140e0a]; ret; 
0x080d3f46: push cs; inc eax; add dl, byte ptr [esi + 0x41140e0a]; ret; 
0x080d5a4e: push cs; inc eax; add eax, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8dae: push cs; inc eax; add ebp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8f46: push cs; inc eax; add edi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb88e: push cs; inc eax; arpl word ptr [edx], cx; push cs; adc al, 0x43; ret; 
0x080c53b4: push cs; inc eax; dec eax; push cs; adc al, 0x41; ret; 
0x080d2512: push cs; inc eax; dec esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c55ae: push cs; inc eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8162: push cs; inc eax; inc ebp; push cs; adc al, 0x41; ret; 
0x080d4c54: push cs; inc eax; inc ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cb78e: push cs; inc eax; inc ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d3b28: push cs; inc eax; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d392c: push cs; inc eax; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7a04: push cs; inc eax; inc esi; push cs; adc al, 0x41; ret; 
0x080d024c: push cs; inc eax; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c68ae: push cs; inc eax; jae 0x7e8bc; push cs; adc al, 0x43; ret; 
0x080cbe48: push cs; inc eax; jle 0x83e56; push cs; adc al, 0x41; ret; 
0x080d3f0e: push cs; inc eax; jns 0x8bf1c; push cs; or al, 0x41; ret; 
0x080d4706: push cs; inc eax; jns 0x8c714; push cs; adc al, 0x41; ret; 
0x080c58bb: push cs; inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d60d4: push cs; inc eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080cd8dc: push cs; inc eax; pop ebp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080cc77d: push cs; inc eax; pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c75d3: push cs; inc eax; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d49e8: push cs; inc eax; push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce89c: push cs; inc eax; push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cb9b2: push cs; inc eax; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08067572: push cs; jb 0x1f590; lea eax, [edi + 0xd]; pop edi; ret; 
0x08091d72: push cs; jb 0x49d90; lea eax, [eax + 0xd]; pop edi; ret; 
0x080c6374: push cs; jo 0x7e3c3; push cs; pushal; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c71f2: push cs; jo 0x7f1f7; jbe 0x7f201; push cs; adc al, 0x41; ret; 
0x080ccc3a: push cs; jo 0x84c3f; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x080ccdc2: push cs; jo 0x84dc7; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cd3a6: push cs; jo 0x853ab; jbe 0x853b5; push cs; adc al, 0x41; ret; 
0x080cd602: push cs; jo 0x85607; jbe 0x85611; push cs; adc al, 0x41; ret; 
0x080d214c: push cs; jo 0x8a151; dec ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d2190: push cs; jo 0x8a1e8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2275: push cs; jo 0x8a27a; jne 0x8a284; push cs; adc al, 0x43; ret; 
0x080d5582: push cs; jo 0x8d587; sti; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d55a5: push cs; jo 0x8d5ef; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d66d1: push cs; jo 0x8e72a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5a12: push cs; lock add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x080d596a: push cs; lock add dword ptr [edx], eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5183: push cs; lock add dword ptr [edx], eax; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080c985d: push cs; lock or byte ptr [esi + ecx - 0x20], cl; or byte ptr [edx + ecx + 0xe], ah; adc al, 0x41; ret; 
0x080d2d7b: push cs; mov al, 0x20; dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2d2f: push cs; mov al, 0x20; pushal; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c69ba: push cs; mov al, 1; add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080ce456: push cs; mov al, 2; add al, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8c99: push cs; mov al, byte ptr [0x30b5201]; out 2, al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080ccc36: push cs; mov al, byte ptr [0x700e4901]; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x080cfb48: push cs; mov al, byte ptr [0x900e4601]; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c4b92: push cs; mov al, byte ptr [0x900e4801]; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080c5808: push cs; mov al, byte ptr [0x900e4a0a]; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c6aaa: push cs; mov al, byte ptr [0xa470201]; push cs; adc al, 0x41; ret; 
0x080cf63b: push cs; mov al, byte ptr [0xa580283]; push cs; adc al, 0x41; ret; 
0x080cd274: push cs; mov al, byte ptr [0xa830201]; push cs; adc al, 0x41; ret; 
0x080cee3d: push cs; mov al, byte ptr [0xe0a6803]; adc al, 0x41; ret; 
0x080cbd76: push cs; mov byte ptr [ecx], al; add ecx, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x08091c01: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080623a1: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x08053f39: push cs; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x080d5a0e: push cs; nop; add cl, byte ptr [ecx + 0xe]; lock add dword ptr [edi + 0xe], ecx; adc al, 0x43; ret; 
0x080cda1f: push cs; nop; add dword ptr [ebx + 0xa], esp; push cs; adc al, 0x41; ret; 
0x080cf84b: push cs; nop; add dword ptr [ecx + 0xa], ebx; push cs; adc al, 0x41; ret; 
0x080c4b96: push cs; nop; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x080cfb4c: push cs; nop; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080d0f8c: push cs; nop; add ecx, dword ptr [eax + 0xb]; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x080c580c: push cs; nop; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080c4cd7: push cs; or al, 0x41; ret; 
0x080c7b8b: push cs; or al, 0x43; ret; 
0x080d4101: push cs; or al, 0x44; ret; 
0x080c8d41: push cs; or al, 0x45; ret; 
0x080c62a3: push cs; or al, 0x46; ret; 
0x080cb233: push cs; or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], ah; or al, 0x41; ret; 
0x080cb073: push cs; or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], ch; or al, 0x41; ret; 
0x080d1707: push cs; or al, 0x83; add eax, dword ptr [edx]; inc ecx; ret; 
0x080d0cd7: push cs; or al, 0x83; add eax, dword ptr [edx]; jle 0x88ce8; ret; 
0x080d148b: push cs; or al, 0x83; add ebp, dword ptr [ebx + 0xa]; ret; 
0x080cecaf: push cs; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x080d164b: push cs; or al, 0x83; add ecx, dword ptr [eax + 0xe]; inc eax; add bh, byte ptr [eax + 0x410c0e0a]; ret; 
0x080c4ccf: push cs; or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x080c7c07: push cs; or al, 0x83; add ecx, dword ptr [esi + 0xe]; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x080d085e: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4204], al; ret; 
0x080d08cd: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4a04], al; ret; 
0x080d08bc: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0922: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4f04], al; ret; 
0x080d089a: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7104], al; ret; 
0x080d0b2c: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d08ab: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7304], al; ret; 
0x080d0889: push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7504], al; ret; 
0x080d0103: push cs; or al, 0x83; add edi, dword ptr [edi + 0xa]; ret; 
0x080c8007: push cs; or al, 0x83; add esi, dword ptr [eax + 0xa]; ret; 
0x080d36b7: push cs; or al, 0x83; add esi, dword ptr [ebx + 0xa]; ret; 
0x080c8883: push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa6f: push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b3: push cs; or al, 0x86; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080d4dd3: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76af: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d019b: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd13: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e1f: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76eb: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e03: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff47: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e33: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e13: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c852b: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba6f: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x0808008f: push cs; or byte ptr [eax], al; add byte ptr [ebp - 0x1da017d], cl; call dword ptr [eax - 0x73]; 
0x080cb1fe: push cs; or byte ptr [ebx + 0x100e4302], al; or cl, byte ptr [0x4108]; ret; 
0x080ce41e: push cs; or byte ptr [ebx + 0x200e4e02], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x080ca76f: push cs; or byte ptr [ebx + 0x40e4602], al; ret; 
0x080c9e78: push cs; or byte ptr [ebx + 0x40e4702], al; ret; 
0x080c9c0a: push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080ca5bb: push cs; or byte ptr [ebx + 0x40e5702], al; ret; 
0x080ca5c4: push cs; or byte ptr [ebx + 0x40e5902], al; ret; 
0x080ca766: push cs; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x080c99dd: push cs; or byte ptr [ebx + 0x40e6002], al; ret; 
0x080c99d4: push cs; or byte ptr [ebx + 0x40e6202], al; ret; 
0x080ca57a: push cs; or byte ptr [ebx + 0x40e6302], al; ret; 
0x080c9f34: push cs; or byte ptr [ebx + 0x40e6602], al; ret; 
0x080c9e52: push cs; or byte ptr [ebx + 0x40e6a02], al; ret; 
0x080c9a15: push cs; or byte ptr [ebx + 0x40e6b02], al; ret; 
0x080c9a03: push cs; or byte ptr [ebx + 0x40e7002], al; ret; 
0x080c9adc: push cs; or byte ptr [ebx + 0x40e7102], al; ret; 
0x080c99fa: push cs; or byte ptr [ebx + 0x40e7202], al; ret; 
0x080c9f2b: push cs; or byte ptr [ebx + 0x40e7302], al; ret; 
0x080c9a39: push cs; or byte ptr [ebx + 0x40e7a02], al; ret; 
0x080c9a5f: push cs; or byte ptr [ebx + 0x40e7b02], al; ret; 
0x080ce176: push cs; or byte ptr [ebx + 0xa4a0202], al; ret; 
0x080d108e: push cs; or byte ptr [ebx + 0xa4c0202], al; ret; 
0x080d1036: push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x080c5f5a: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x42; or ebx, dword ptr [edi + 0xa]; ret; 
0x080d590b: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x44; or edx, dword ptr [ecx + 0xa]; ret; 
0x080c8e24: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x45; or ecx, dword ptr [ebp + 0xa]; ret; 
0x080cbd24: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x46; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d3e30: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x46; or edi, dword ptr [eax + 0xa]; ret; 
0x080d3e3f: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x46; or esp, dword ptr [eax + 0xa]; ret; 
0x080cffd0: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x47; or eax, dword ptr [ecx + 0xa]; ret; 
0x080cff58: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x47; or ecx, dword ptr [eax + 0xa]; ret; 
0x080ceba0: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x48; or ebx, dword ptr [ecx + 0xa]; ret; 
0x080d48a4: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x48; or ecx, dword ptr [edx + 0xa]; ret; 
0x080c8e33: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x49; or ecx, dword ptr [esi + 0xa]; ret; 
0x080d2e2e: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x4b; or eax, dword ptr [ecx + 0xa]; ret; 
0x080c7750: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x4c; or ebp, dword ptr [eax + 0xa]; ret; 
0x080c76fc: push cs; or byte ptr [ecx - 0x39], al; push cs; add al, 0x4c; or esp, dword ptr [ebp + 0xa]; ret; 
0x080d0cdf: push cs; or byte ptr [ecx - 0x3a], al; push cs; add al, 0x47; or ecx, dword ptr [eax + 0xa]; ret; 
0x080d1492: push cs; or byte ptr [ecx - 0x3a], al; push cs; add al, 0x4a; or eax, dword ptr [ecx + 0xa]; ret; 
0x080d447d: push cs; or byte ptr [ecx - 0x3b], al; push cs; add al, 0x44; or ebx, dword ptr [esi + 0xa]; ret; 
0x080d3ced: push cs; or byte ptr [ecx - 0x3b], al; push cs; add al, 0x4a; or ecx, dword ptr [edi + 0xa]; ret; 
0x080d4490: push cs; or byte ptr [ecx - 0x3b], al; push cs; add al, 0x4f; or eax, dword ptr [ecx + 0xa]; ret; 
0x080ce96f: push cs; or byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d0b4a: push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0b28: push cs; or byte ptr [edi - 0x7cf3f1fe], al; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d45ee: push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x71; ret; 
0x08065dc4: push cs; pop edi; ret; 
0x080caba6: push cs; push eax; add ah, byte ptr [edi + 0x41140e0a]; ret; 
0x080d0718: push cs; push eax; add bh, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d6074: push cs; push eax; add bl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c956e: push cs; push eax; add bl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8a82: push cs; push eax; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x080c8bb4: push cs; push eax; add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x080d576b: push cs; push eax; add eax, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x080c8b7a: push cs; push eax; add ebx, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbcd6: push cs; push eax; add esi, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c85ba: push cs; push eax; add esi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d64ca: push cs; push eax; imul ecx, dword ptr [edx], 0xe; adc al, 0x43; ret; 
0x080d57a8: push cs; push eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d491b: push cs; push eax; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d037a: push cs; push eax; ja 0x88388; push cs; adc al, 0x41; ret; 
0x080d1be2: push cs; push eax; jbe 0x89bf0; push cs; adc al, 0x41; ret; 
0x080c5cba: push cs; push eax; jl 0x7dcc8; push cs; adc al, 0x41; ret; 
0x080cc807: push cs; push eax; jl 0x84815; push cs; adc al, 0x41; ret; 
0x080ce7da: push cs; push eax; jl 0x867e8; push cs; adc al, 0x41; ret; 
0x080d5fc2: push cs; push eax; jle 0x8dfd0; push cs; adc al, 0x43; ret; 
0x080cab53: push cs; push eax; js 0x82b61; push cs; adc al, 0x41; ret; 
0x080d5fe7: push cs; push eax; pop ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d3716: push cs; push eax; push 0x41140e0a; ret; 
0x080c7db0: push cs; push eax; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7563: push cs; push eax; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080bf590: push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x080ccd09: push cs; pushal; add ah, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x080d6126: push cs; pushal; add al, byte ptr [eax + 0x43140e0a]; ret; 
0x080cdaee: push cs; pushal; add al, byte ptr [edi + 0x41140e0a]; ret; 
0x080d3d56: push cs; pushal; add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080c6377: push cs; pushal; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080ccb7e: push cs; pushal; add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080cce8e: push cs; pushal; add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080d622a: push cs; pushal; add edx, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c59be: push cs; pushal; dec eax; push cs; adc al, 0x41; ret; 
0x080d55f0: push cs; pushal; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5032: push cs; pushal; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5420: push cs; pushal; jge 0x8d42e; push cs; adc al, 0x41; ret; 
0x080d6188: push cs; pushal; or cl, byte ptr fs:[esi]; adc al, 0x45; ret; 
0x080d0ecd: push cs; pushal; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7d2c: push cs; pushal; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1781: push cs; pushal; pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c98cc: push cs; pushal; pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7cac: push cs; pushal; push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080caeff: push cs; pushal; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c899d: push cs; rcl byte ptr [edx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08065f24: push cs; ret; 
0x080d1d7d: push cs; rol byte ptr [eax + ecx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1d27: push cs; rol byte ptr [ebx + ebx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cdf02: push cs; rol byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c6c04: push cs; rol byte ptr [ecx], 2; inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c612c: push cs; rol byte ptr [ecx], 2; pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d585b: push cs; rol byte ptr [ecx], 2; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d57fe: push cs; rol byte ptr [edx], 1; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d4895: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], dl; ret; 
0x080c72e4: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080cff70: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], cl; ret; 
0x080c5f4b: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], dl; ret; 
0x080cf8e0: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], al; ret; 
0x080cc9a8: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb73: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], dl; ret; 
0x080c823f: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c96d2: push cs; sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; or al, 0x43; ret; 
0x080cb685: push cs; sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], al; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7687: push cs; sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], bl; or al, 0x41; ret; 
0x080cad3a: push cs; sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [edi + 0xa], al; ret; 
0x080ceb91: push cs; sbb al, 0x41; push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080cc601: push cs; sbb al, 0x41; push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080d4428: push cs; sbb al, 0x41; push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080d009d: push cs; sbb al, 0x41; push cs; and byte ptr [esi + 0xe], al; adc byte ptr [ecx + 0xa], cl; ret; 
0x080cc6e6: push cs; sbb al, 0x41; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d632d: push cs; sbb al, 0x42; push cs; and byte ptr [eax + 0xe], dl; or al, 0x43; ret; 
0x080d12ca: push cs; sbb al, 0x42; push cs; and byte ptr [ebp + 0xe], bh; or al, 0x41; ret; 
0x080cb6dd: push cs; sbb al, 0x42; push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d4f46: push cs; sbb al, 0x42; push cs; and byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080c4f04: push cs; sbb al, 0x43; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], cl; ret; 
0x080c6961: push cs; sbb al, 0x43; push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c6a5b: push cs; sbb al, 0x43; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], ah; ret; 
0x080d2dc5: push cs; sbb al, 0x44; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; ret; 
0x080d2487: push cs; sbb al, 0x46; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d29ac: push cs; sbb al, 0x47; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], cl; ret; 
0x080d3028: push cs; sbb al, 0x47; push cs; and byte ptr [esi + ecx + 0xc], bl; inc ecx; ret; 
0x080c6fec: push cs; sbb al, 0x59; push cs; and byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080c83ee: push cs; sbb al, 2; outsb dx, byte ptr [esi]; push cs; adc al, 0x41; ret; 
0x080d305e: push cs; sbb byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x080aba6d: push cs; sti; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080cc3a8: push cs; sub al, 0x41; push cs; xor byte ptr [ebp + 0xe], cl; adc al, 0x41; ret; 
0x080d431d: push cs; sub al, 0x41; push cs; xor byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080cc8b5: push cs; sub al, 0x41; push cs; xor byte ptr [edi + 0xe], ah; adc al, 0x43; ret; 
0x080d40fb: push cs; sub al, 0x44; push cs; xor byte ptr [edx + 0xe], bl; or al, 0x44; ret; 
0x080d5b86: push cs; sub al, 0x48; push cs; xor byte ptr [esi + ecx + 8], dl; inc ecx; ret; 
0x080d33f5: push cs; sub al, 0x49; push cs; xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080c8482: push cs; sub byte ptr [edx], al; clc; push cs; adc al, 0x41; ret; 
0x080cf28e: push cs; sub byte ptr [edx], al; mov ecx, 0x41140e0a; ret; 
0x08060a8c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x080d2f9d: push cs; xor byte ptr [eax + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080cf6d8: push cs; xor byte ptr [eax + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c6def: push cs; xor byte ptr [eax + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d33f8: push cs; xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080c7073: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c9110: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d6431: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080d1105: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080c7356: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d6412: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c828e: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d2c22: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080d1363: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080d0478: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ecx + 0xa], bl; push cs; adc al, 0x43; ret; 
0x080d0459: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ecx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c5bba: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080d43a3: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080cb4df: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080cb08c: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080c6d19: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d128b: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080c880d: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cb4c0: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [esi + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080d5386: push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x080c9433: push cs; xor byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d3ecf: push cs; xor byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7eaa: push cs; xor byte ptr [ebp + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c6f7f: push cs; xor byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080c9155: push cs; xor byte ptr [ebp + 0xe], al; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c91d2: push cs; xor byte ptr [ebp + 0xe], al; and byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080cb7eb: push cs; xor byte ptr [ebp + 0xe], al; and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080cc3ab: push cs; xor byte ptr [ebp + 0xe], cl; adc al, 0x41; ret; 
0x080d5f75: push cs; xor byte ptr [ebp + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080c62f2: push cs; xor byte ptr [ebx + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080c63ec: push cs; xor byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c6566: push cs; xor byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d2a0a: push cs; xor byte ptr [ebx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080d2f49: push cs; xor byte ptr [ebx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080cde13: push cs; xor byte ptr [ebx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c6fa5: push cs; xor byte ptr [ebx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080cc96e: push cs; xor byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080c4f4b: push cs; xor byte ptr [ebx + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d0765: push cs; xor byte ptr [ebx + 0xe], cl; and byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080d4320: push cs; xor byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080ccb03: push cs; xor byte ptr [ebx + ecx + 2], cl; push edi; push cs; adc al, 0x41; ret; 
0x080caabe: push cs; xor byte ptr [ebx], al; add eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf79a: push cs; xor byte ptr [ebx], al; add ecx, dword ptr ss:[edx]; push cs; adc al, 0x41; ret; 
0x080c8846: push cs; xor byte ptr [ebx], al; and al, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c9502: push cs; xor byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080c803e: push cs; xor byte ptr [ecx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cfa0f: push cs; xor byte ptr [ecx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c6058: push cs; xor byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c8621: push cs; xor byte ptr [ecx + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c6427: push cs; xor byte ptr [ecx + 0xa], dl; push cs; adc al, 0x46; ret; 
0x080c9131: push cs; xor byte ptr [ecx + 0xb], dl; inc ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8a2a: push cs; xor byte ptr [ecx + 0xe], cl; and byte ptr [edi + 0xa], bl; push cs; adc al, 0x46; ret; 
0x080cf228: push cs; xor byte ptr [ecx + 0xe], dl; and byte ptr [eax + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080c92cd: push cs; xor byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c5688: push cs; xor byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c73f4: push cs; xor byte ptr [edi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080c5797: push cs; xor byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d03ea: push cs; xor byte ptr [edi + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080cf3de: push cs; xor byte ptr [edi + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c90f2: push cs; xor byte ptr [edi + 0xb], cl; push edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cc8b8: push cs; xor byte ptr [edi + 0xe], ah; adc al, 0x43; ret; 
0x080cde9e: push cs; xor byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080d1a34: push cs; xor byte ptr [edi + 0xe], al; adc al, 0x43; ret; 
0x080c6e45: push cs; xor byte ptr [edi + 0xe], ch; adc al, 0x41; ret; 
0x080d38a3: push cs; xor byte ptr [edi + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c57b6: push cs; xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080ce1ee: push cs; xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080d1318: push cs; xor byte ptr [edx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d4f92: push cs; xor byte ptr [edx + 0xa], dl; push cs; or al, 0x41; ret; 
0x080c7190: push cs; xor byte ptr [edx + 0xe], bh; and byte ptr [ebx + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080d40fe: push cs; xor byte ptr [edx + 0xe], bl; or al, 0x44; ret; 
0x080d060b: push cs; xor byte ptr [edx + 0xe], cl; and byte ptr [eax + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c64ef: push cs; xor byte ptr [edx + 0xe], cl; and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080d6030: push cs; xor byte ptr [edx + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080ce347: push cs; xor byte ptr [edx + 0xe], dl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080ce6a3: push cs; xor byte ptr [edx + ecx + 0xe], bh; adc al, 0x41; ret; 
0x080cf509: push cs; xor byte ptr [edx + ecx + 0xe], bl; adc al, 0x41; ret; 
0x080c92a8: push cs; xor byte ptr [edx + ecx + 0xe], cl; adc al, 0x41; ret; 
0x080cc4b6: push cs; xor byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080cdaae: push cs; xor byte ptr [edx + ecx + 0xe], dl; adc al, 0x41; ret; 
0x080c6b86: push cs; xor byte ptr [edx], al; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1aa8: push cs; xor byte ptr [edx], al; dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e2a: push cs; xor byte ptr [edx], al; dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1c2e: push cs; xor byte ptr [edx], al; inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbfb6: push cs; xor byte ptr [edx], al; inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d19c6: push cs; xor byte ptr [edx], al; jle 0x899d5; push cs; adc al, 0x41; ret; 
0x080c93fa: push cs; xor byte ptr [edx], al; mov al, 0xa; push cs; adc al, 0x43; ret; 
0x080c63c6: push cs; xor byte ptr [edx], al; mov esp, 0x41140e0a; ret; 
0x080d4a62: push cs; xor byte ptr [edx], al; or cl, byte ptr [0x4314]; ret; 
0x080c5668: push cs; xor byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080c6d5a: push cs; xor byte ptr [edx], al; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2a9c: push cs; xor byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d207f: push cs; xor byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8716: push cs; xor byte ptr [edx], al; push ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1a79: push cs; xor byte ptr [edx], al; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8088: push cs; xor byte ptr [edx], al; push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c56d2: push cs; xor byte ptr [edx], al; scasd eax, dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c5ad0: push cs; xor byte ptr [esi + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080cc92e: push cs; xor byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cfe0e: push cs; xor byte ptr [esi + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c78aa: push cs; xor byte ptr [esi + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c67c6: push cs; xor byte ptr [esi + 0xe], al; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c4eaf: push cs; xor byte ptr [esi + 0xe], cl; and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x080c4ca0: push cs; xor byte ptr [esi + ecx + 0x14], cl; inc ecx; ret; 
0x080d078e: push cs; xor byte ptr [esi + ecx + 0x20], cl; dec edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d5b89: push cs; xor byte ptr [esi + ecx + 8], dl; inc ecx; ret; 
0x0806e1df: push ds; add al, 0x8b; inc edx; add al, 0x89; ret 0xe283; 
0x080c67e9: push ds; add byte ptr [eax], al; adc al, 0xbd; clc; jmp dword ptr [eax]; 
0x080bfb28: push ds; and bh, byte ptr [esi - 0x5e0466e]; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x080ae65c: push ds; daa; stc; call esp; 
0x0806f625: push ds; ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x080bf9ed: push ds; mov ah, 0x13; ret; 
0x080bde00: push ds; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdeac: push ds; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be028: push ds; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf48: push ds; or al, 0xfc; call dword ptr [ecx]; 
0x080bdf3c: push ds; or al, 0xfc; call eax; 
0x080bdc8c: push ds; or al, 0xfc; jmp eax; 
0x080bddfc: push ds; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 1]; 
0x080bdea8: push ds; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [eax + 4]; 
0x080be024: push ds; or al, 0xfc; lcall [esi]; or al, 0xfc; call dword ptr [ecx + 6]; 
0x080bdf38: push ds; or al, 0xfc; lcall [esi]; or al, 0xfc; call eax; 
0x080bdc88: push ds; or al, 0xfc; lcall [esi]; or al, 0xfc; jmp eax; 
0x080bdc74: push ds; or al, 0xfc; push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x080bf60e: push ds; ret; 
0x080c0882: push ds; sar ecx, 1; jnp 0x78840; ret; 
0x08098ee1: push ds; sub esp, 0xc; mov eax, 0x80daa24; push ebx; call dword ptr [eax]; 
0x080ae657: push dword ptr [eax + 0x27]; stc; lcall [esi]; daa; stc; call esp; 
0x08052513: push dword ptr [eax + 0x38]; call 0x24ea0; add esp, 0x18; pop ebx; ret; 
0x080bcb67: push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb9b: push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcb8f: push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x080bcb63: push dword ptr [eax + 0x3b]; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb97: push dword ptr [eax + 0x3b]; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcbff: push dword ptr [eax + 0x3b]; sti; push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x080af5af: push dword ptr [eax + 0x63]; stc; ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x080b035b: push dword ptr [eax + 0xf]; cli; jmp dword ptr [eax + 0xf]; 
0x080716bf: push dword ptr [eax + 4]; call edi; 
0x080be07f: push dword ptr [eax + 5]; cld; ljmp [eax]; push es; cld; jmp edi; 
0x080c43b7: push dword ptr [eax - 0x34]; cld; jmp dword ptr [eax - 0x34]; 
0x080c447b: push dword ptr [eax - 0x3f000332]; into; cld; jmp eax; 
0x080bdc77: push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; 
0x080bdc77: push dword ptr [eax - 7]; sti; call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x0804c6c0: push dword ptr [eax]; call 0x210; add esp, 0x18; pop ebx; ret; 
0x08071839: push dword ptr [eax]; call 0x220; add esp, 0x18; pop ebx; ret; 
0x080ac4a3: push dword ptr [eax]; cmp dh, bh; call dword ptr [esi]; 
0x080ac49f: push dword ptr [eax]; cmp dh, bh; push dword ptr [eax]; cmp dh, bh; call dword ptr [esi]; 
0x080bcb8b: push dword ptr [eax]; cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x080c43cf: push dword ptr [eax]; iretd; cld; call dword ptr [eax - 0x31]; 
0x080aee3f: push dword ptr [eax]; pop ecx; stc; call dword ptr [eax]; 
0x0806de3d: push dword ptr [eax]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x08085abc: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x3b150; add esp, 0x1c; ret; 
0x08095851: push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x08051145: push dword ptr [ebp + 0xc]; lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 0x18]; 
0x08050d8d: push dword ptr [ebp + 0xc]; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x080a9163: push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x0808ec1b: push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x08092584: push dword ptr [ebp + 8]; call esi; 
0x08050d8a: push dword ptr [ebp + 8]; push dword ptr [ebp + 0xc]; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x080a8e12: push dword ptr [ebp + 8]; push dword ptr [edi + 4]; push dword ptr [edi]; push 1; push 1; call eax; 
0x08050332: push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x0808e28e: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0808ec18: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x080ab900: push dword ptr [ebp - 0x1d]; pop ebx; pop esi; pop edi; ret; 
0x08090098: push dword ptr [ebp - 0x2c]; push eax; push esi; push ecx; call edi; 
0x080ab66e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x0805639a: push dword ptr [ebp - 0x37]; add esp, 4; pop ebx; pop esi; ret; 
0x0806de3f: push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x080507d3: push dword ptr [ebp - 0x44]; push ebx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x0808b414: push dword ptr [ebp - 0x45c]; call dword ptr [eax + 0x1c]; 
0x0808ada4: push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x0808b8c6: push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x0808a8f3: push dword ptr [ebp - 0x45c]; mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x08080dd2: push dword ptr [ebp - 0x46c]; call dword ptr [eax + 0x1c]; 
0x08080801: push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x08080734: push dword ptr [ebp - 0x46c]; call dword ptr [edx + 0x1c]; 
0x080802d1: push dword ptr [ebp - 0x46c]; mov dword ptr [ebp - 0x470], edi; call dword ptr [edx + 0x1c]; 
0x0808b40e: push dword ptr [ebp - 0x494]; push dword ptr [ebp - 0x45c]; call dword ptr [eax + 0x1c]; 
0x08080dcc: push dword ptr [ebp - 0x4a4]; push dword ptr [ebp - 0x46c]; call dword ptr [eax + 0x1c]; 
0x0808bf77: push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x0808b8c0: push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x08080c16: push dword ptr [ebp - 0x4cc]; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x080507d0: push dword ptr [ebp - 0x58]; push dword ptr [ebp - 0x44]; push ebx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x0807e112: push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0807e090: push dword ptr [ebp - 0x890]; call eax; 
0x0807e3e8: push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080885f5: push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08088570: push dword ptr [ebp - 0x8a0]; call eax; 
0x08084906: push dword ptr [ebp - 0x8c]; call eax; 
0x08084900: push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x080496cc: push dword ptr [ebp - 0xf]; call 0x64228; add esp, 4; pop ebx; pop esi; ret; 
0x080923ba: push dword ptr [ebp]; call edi; 
0x08092476: push dword ptr [ebp]; call esi; 
0x0804e5a0: push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x08079cf0: push dword ptr [ebx + 0x197c]; call 0x26370; add esp, 0x18; pop ebx; ret; 
0x0809e8b5: push dword ptr [ebx + 4]; call 0x4fdd0; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x080a61ce: push dword ptr [ebx + 4]; call 0x4fdd0; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x080a8914: push dword ptr [ebx + 4]; push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x080aa063: push dword ptr [ebx + 4]; push ebp; call edi; 
0x080504a8: push dword ptr [ebx + 4]; push ebp; push ecx; push edi; call dword ptr [edi + 0xc]; 
0x0808faf8: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0808fa9e: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x080adf0f: push dword ptr [ebx + ecx*2]; sti; call esp; 
0x080718fc: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x28270; mov dword ptr [esp], esi; call edi; 
0x080a3112: push dword ptr [ebx + edx - 0x7d]; ret; 
0x080adc5f: push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080a4188: push dword ptr [ebx - 0x10]; call 0xf7fb8000; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08057bd2: push dword ptr [ebx - 0x73]; inc edi; or byte ptr [ecx], bh; ret; 
0x0809e5de: push dword ptr [ebx]; call 0x5a040; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0806dda3: push dword ptr [ebx]; mov ebp, ebx; push edi; call esi; 
0x080a8917: push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x080aa288: push dword ptr [ebx]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x080a9204: push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x080add2b: push dword ptr [ecx - 0x1e0004ec]; adc al, 0xfb; call dword ptr [ecx]; 
0x080adaab: push dword ptr [ecx - 0x1e0004ef]; adc ebx, edi; call dword ptr [ecx]; 
0x080adc67: push dword ptr [ecx]; adc edi, ebx; call dword ptr [ecx + 0x13]; 
0x08094925: push dword ptr [ecx]; dec dword ptr [ecx - 0x937b]; jmp dword ptr [esi - 0x70]; 
0x0805af05: push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0809530b: push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x0806ef50: push dword ptr [ecx]; leave; int 0x80; 
0x0809de9a: push dword ptr [ecx]; leave; mov dword ptr [ebp - 0x58], eax; mov dword ptr [ebp - 0x54], edx; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0804ed08: push dword ptr [ecx]; push dword ptr [esp + 0x3c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0808250f: push dword ptr [ecx]; rol dh, cl; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x0804edcd: push dword ptr [ecx]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0809b401: push dword ptr [ecx]; test byte ptr [ebx + 0x21b8c455], 0; add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0807fa9f: push dword ptr [ecx]; test dh, 0x85; aas; idiv edi; jmp dword ptr [eax]; 
0x080935fc: push dword ptr [edi + 0x11]; add esp, 4; pop ebx; pop esi; ret; 
0x0806ca77: push dword ptr [edi + 0x16]; add esp, 4; pop ebx; pop esi; ret; 
0x080934d6: push dword ptr [edi + 0x17]; add esp, 4; pop ebx; pop esi; ret; 
0x0806cdf5: push dword ptr [edi + 0x18]; add esp, 8; pop ebx; ret; 
0x0806cd55: push dword ptr [edi + 0x20]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806ce43: push dword ptr [edi + 0x42]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0806cacb: push dword ptr [edi + 0x52]; add esp, 0x14; pop ebx; pop esi; ret; 
0x08093548: push dword ptr [edi + 0x5d]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x08093421: push dword ptr [edi + 0x64]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0806c9c2: push dword ptr [edi + 0x6b]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080c3a4b: push dword ptr [edi + 0x72]; cld; inc dword ptr [eax]; jb 0x7ba4f; jmp dword ptr [eax]; 
0x080c3a5f: push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x080c3a5b: push dword ptr [edi + 0x72]; cld; push dword ptr [edi + 0x72]; cld; jmp dword ptr [eax + 0x72]; 
0x0806d888: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0806c939: push dword ptr [edi + 4]; pop ebx; ret; 
0x080a8e15: push dword ptr [edi + 4]; push dword ptr [edi]; push 1; push 1; call eax; 
0x080a885d: push dword ptr [edi + 4]; push dword ptr [edi]; push ecx; push 1; call eax; 
0x0806cb5d: push dword ptr [edi + 8]; pop ebx; ret; 
0x080adb37: push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080adc47: push dword ptr [edi]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x080a8e18: push dword ptr [edi]; push 1; push 1; call eax; 
0x0804e59e: push dword ptr [edi]; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080a8860: push dword ptr [edi]; push ecx; push 1; call eax; 
0x08093298: push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x080562e3: push dword ptr [edx + edi - 0x75]; mov bl, 0x94; add byte ptr [eax], al; add bh, al; mov eax, 0xc7080daf; ret 0xb314; 
0x080adb77: push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080ae8ef: push dword ptr [edx]; daa; stc; inc dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080a924c: push dword ptr [edx]; mov dword ptr [esp + 0x10], edx; push eax; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08051c72: push dword ptr [esi + 0xc]; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x08071723: push dword ptr [esi + 4]; call edi; 
0x08051c6f: push dword ptr [esi + 8]; push dword ptr [esi + 0xc]; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x08051663: push dword ptr [esi + 8]; push ecx; push eax; push edi; call dword ptr [edi + 0xc]; 
0x080adceb: push dword ptr [esi - 0x190004ec]; adc al, 0xfb; call dword ptr [esi]; 
0x080ada6b: push dword ptr [esi - 0x190004ef]; adc ebx, edi; call dword ptr [esi]; 
0x0806da84: push dword ptr [esi]; call edi; 
0x080adf33: push dword ptr [esi]; inc edi; sti; jmp esi; 
0x080aa061: push dword ptr [esi]; push dword ptr [ebx + 4]; push ebp; call edi; 
0x080536e2: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x08082c91: push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x080536e6: push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x40]; 
0x0805265f: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x14]; push edi; call dword ptr [ebx + 0x3c]; 
0x0808eacd: push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x08052663: push dword ptr [esp + 0x14]; push edi; call dword ptr [ebx + 0x3c]; 
0x08070253: push dword ptr [esp + 0x18]; call 0x54aa0; add esp, 0x18; pop ebx; ret; 
0x0807d9f1: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080aa28a: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0807024f: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; call 0x54aa0; add esp, 0x18; pop ebx; ret; 
0x08050cb9: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push ebp; call dword ptr [ebx + 0x40]; 
0x08085ab7: push dword ptr [esp + 0x18]; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x3b150; add esp, 0x1c; ret; 
0x08050cbd: push dword ptr [esp + 0x18]; push ebp; call dword ptr [ebx + 0x40]; 
0x080799fc: push dword ptr [esp + 0x1c]; call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0809226b: push dword ptr [esp + 0x1c]; call 0x22f50; add esp, 0x18; pop ebx; ret; 
0x0809229b: push dword ptr [esp + 0x1c]; call 0x22fd0; add esp, 0x18; pop ebx; ret; 
0x0806bb9b: push dword ptr [esp + 0x1c]; call 0x23040; add esp, 0x18; pop ebx; ret; 
0x08087b6b: push dword ptr [esp + 0x1c]; call 0x381b0; add esp, 0x18; pop ebx; ret; 
0x08085abe: push dword ptr [esp + 0x1c]; call 0x3b150; add esp, 0x1c; ret; 
0x080a1145: push dword ptr [esp + 0x1c]; call 0x5c1d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a1107: push dword ptr [esp + 0x1c]; call 0x5c1d0; add esp, 0x18; pop ebx; ret; 
0x080aabbe: push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x18; pop ebx; ret; 
0x080aab8b: push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x1c; ret; 
0x0807cf7e: push dword ptr [esp + 0x1c]; call 0x6b90; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0804f0bc: push dword ptr [esp + 0x1c]; call 0x6ff0; add esp, 0x1c; ret; 
0x080500d9: push dword ptr [esp + 0x1c]; call 0x7fe0; add esp, 0x1c; ret; 
0x0804f90b: push dword ptr [esp + 0x1c]; call 0x9f10; add esp, 0x18; pop ebx; ret; 
0x0804e59a: push dword ptr [esp + 0x1c]; push dword ptr [edi]; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x08092297: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x22fd0; add esp, 0x18; pop ebx; ret; 
0x0806bb97: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x23040; add esp, 0x18; pop ebx; ret; 
0x08087b67: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x381b0; add esp, 0x18; pop ebx; ret; 
0x080a1103: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x5c1d0; add esp, 0x18; pop ebx; ret; 
0x080aab87: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x1c; ret; 
0x0804f0b8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ff0; add esp, 0x1c; ret; 
0x080500d5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7fe0; add esp, 0x1c; ret; 
0x0804f907: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9f10; add esp, 0x18; pop ebx; ret; 
0x0804f0b4: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ff0; add esp, 0x1c; ret; 
0x0804e5e6: push dword ptr [esp + 0x1c]; push ebp; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e792: push dword ptr [esp + 0x1c]; push edi; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080ab466: push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0805c9a3: push dword ptr [esp + 0x24]; push ebx; call eax; 
0x0805c493: push dword ptr [esp + 0x24]; push esi; call eax; 
0x0804e5eb: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0809eca7: push dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x08053430: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x08053434: push dword ptr [esp + 0x28]; push esi; call dword ptr [edx + 0x40]; 
0x0806bbdf: push dword ptr [esp + 0x2c]; call 0x24020; add esp, 0x2c; ret; 
0x080498a1: push dword ptr [esp + 0x2c]; call 0x2640; add esp, 0x2c; ret; 
0x0807cfc4: push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x28; pop ebx; ret; 
0x0807d551: push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x2c; ret; 
0x0808ea15: push dword ptr [esp + 0x2c]; call 0x46860; add esp, 0x2c; ret; 
0x0804eb81: push dword ptr [esp + 0x2c]; call 0x6840; add esp, 0x2c; ret; 
0x0804f0f4: push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x28; pop ebx; ret; 
0x0804f611: push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x2c; ret; 
0x0806bbdb: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x24020; add esp, 0x2c; ret; 
0x0804989d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2640; add esp, 0x2c; ret; 
0x0807cfc0: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x28; pop ebx; ret; 
0x0807d54d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x2c; ret; 
0x0808ea11: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x46860; add esp, 0x2c; ret; 
0x0804eb7d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6840; add esp, 0x2c; ret; 
0x0804f0f0: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x28; pop ebx; ret; 
0x0804f60d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x2c; ret; 
0x0806bbd7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x24020; add esp, 0x2c; ret; 
0x0807d549: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35010; add esp, 0x2c; ret; 
0x0808ea0d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x46860; add esp, 0x2c; ret; 
0x0804eb79: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6840; add esp, 0x2c; ret; 
0x0804f609: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7140; add esp, 0x2c; ret; 
0x080524b9: push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08097bb2: push dword ptr [esp + 0x30]; call dword ptr [ebx + 0x34]; 
0x080716b7: push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x0805cbd3: push dword ptr [esp + 0x30]; push esi; push ebx; call eax; 
0x0806c149: push dword ptr [esp + 0x34]; call esi; 
0x0806c145: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x0806c2a7: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x0805d0a3: push dword ptr [esp + 0x34]; push ebp; call eax; 
0x080a5863: push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebx]; 
0x080a5827: push dword ptr [esp + 0x34]; push esi; push ebx; call eax; 
0x08055f4c: push dword ptr [esp + 0x38]; push 0; push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x0804edc9: push dword ptr [esp + 0x38]; push dword ptr [ecx]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0806c2ab: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x08053af5: push dword ptr [esp + 0x3c]; push edi; push ebp; call dword ptr [eax + 0x20]; 
0x08053beb: push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebx + 0x38]; 
0x0804ed0a: push dword ptr [esp + 0x3c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x080a59d5: push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x0807399b: push dword ptr [esp + 0x48]; call esi; 
0x080738c3: push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x08073997: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; call esi; 
0x080738bf: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0807900e: push dword ptr [esp + 0x4c]; call edi; 
0x0807423b: push dword ptr [esp + 0x4c]; call esi; 
0x08078f29: push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080738bb: push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0807900a: push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call edi; 
0x08074237: push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x08078f25: push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x08074b29: push dword ptr [esp + 0x50]; call edi; 
0x080749b3: push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074b25: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080749af: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x080750ff: push dword ptr [esp + 0x54]; call edi; 
0x08077f0b: push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d1a: push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755cd: push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08078f21: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080750fb: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08077f07: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d16: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755c9: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08073e8b: push dword ptr [esp + 0x58]; call edi; 
0x08073c2c: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fdb: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0807763c: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08073e87: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; call edi; 
0x08073c28: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08076fd7: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08077638: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08073c24: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0807474b: push dword ptr [esp + 0x5c]; call edi; 
0x080744cb: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08074747: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call edi; 
0x080744c7: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08078920: push dword ptr [esp + 0x60]; call edi; 
0x0807855c: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0807891c: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call edi; 
0x08078558: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x080766ce: push dword ptr [esp + 0x6c]; call edi; 
0x080766ca: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call edi; 
0x080a9206: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x080aa284: push dword ptr [esp + 0xc]; push dword ptr [ebx]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x08050cb2: push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push ebp; call dword ptr [ebx + 0x40]; 
0x0805320f: push dword ptr [esp + 0xcc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x08053216: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0805321a: push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x08057cb1: push dword ptr [esp + eax*4 - 0x73]; pop edi; or byte ptr [ecx], bh; ret; 
0x08085abb: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x3b150; add esp, 0x1c; ret; 
0x080aa062: push dword ptr ss:[ebx + 4]; push ebp; call edi; 
0x080bcb08: push eax; aaa; sti; jmp dword ptr [eax + 0x37]; 
0x0806ee5b: push eax; adc al, 0x7c; and dword ptr [esi + 0x1a], edi; pop ebx; ret; 
0x080abdb9: push eax; adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x08067c61: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; nop; lea esi, [esi]; xor eax, eax; ret; 
0x080caba7: push eax; add ah, byte ptr [edi + 0x41140e0a]; ret; 
0x08055664: push eax; add al, 0x5b; ret; 
0x08057da1: push eax; add al, 0x8b; inc eax; or al, 0x83; ret; 
0x0807c97c: push eax; add al, 0xe9; ret; 
0x0806fcbd: push eax; add al, 0xf6; ret 0x8902; 
0x080bdf28: push eax; add al, 0xfc; call dword ptr [eax + 4]; 
0x08096782: push eax; add al, byte ptr [eax]; add bh, al; ret 0x9da8; 
0x080d0719: push eax; add bh, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d6075: push eax; add bl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c956f: push eax; add bl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8a83: push eax; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x080c8bb5: push eax; add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x43; ret; 
0x08083711: push eax; add dword ptr [ecx + 0xc61457], ecx; sub eax, 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x080d576c: push eax; add eax, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x080c8b7b: push eax; add ebx, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c949f: push eax; add ecx, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080cbcd7: push eax; add esi, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c85bb: push eax; add esi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0808f097: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0806242c: push eax; arpl si, di; inc dword ptr [ecx + 0x4ba78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x080ab9c6: push eax; call 0x14900; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a1cfe: push eax; call 0x1850; lea esi, [esi]; lea edi, [edi]; ret 4; 
0x0806c376: push eax; call 0x1850; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x08098fb2: push eax; call 0x218; add esp, 0x14; pop ebx; pop esi; ret; 
0x080aba0c: push eax; call 0x25940; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0805853c: push eax; call 0x25940; add esp, 0x14; pop ebx; pop esi; ret; 
0x080ab988: push eax; call 0x263a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08071a79: push eax; call 0x28270; mov dword ptr [esp], esi; mov eax, dword ptr [ebp - 0x48]; call eax; 
0x0804875c: push eax; call 0xb90; hlt; mov ebx, dword ptr [esp]; ret; 
0x08057775: push eax; call 0xed40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080507d8: push eax; call dword ptr [eax + 0xc]; 
0x080517ee: push eax; call dword ptr [eax + 4]; 
0x08050a45: push eax; call dword ptr [ebx + 0xc]; 
0x0804a8b9: push eax; call dword ptr [edi - 1]; 
0x08078563: push eax; call eax; 
0x08074b2c: push eax; call edi; 
0x080abdc2: push eax; call edx; 
0x0808fec5: push eax; call esi; 
0x080bdb44: push eax; clc; sti; jmp dword ptr [eax]; 
0x080c8368: push eax; cmp al, byte ptr [eax]; add byte ptr [esi + esi*8 - 8], dl; call dword ptr [edi]; 
0x080bcc03: push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x08098498: push eax; cmp esi, edi; call dword ptr [eax - 0x73]; 
0x080d28e7: push eax; dec eax; push cs; inc eax; add dh, byte ptr [esi + 0x45140e0a]; ret; 
0x080a8c49: push eax; dec esp; ret; 
0x080c44ac: push eax; fdiv st(4), st(0); call dword ptr [eax - 0x24]; 
0x080c44df: push eax; fdiv st(4), st(0); jmp eax; 
0x080c44b0: push eax; fdiv st(4), st(0); lcall [eax - 0x67000324]; fdiv st(4), st(0); jmp dword ptr [eax - 0x21]; 
0x080c44f7: push eax; fdiv st(4), st(0); push eax; fdiv st(4), st(0); jmp eax; 
0x0807f1dc: push eax; idiv edi; call dword ptr [esi - 0x77]; 
0x080d64cb: push eax; imul ecx, dword ptr [edx], 0xe; adc al, 0x43; ret; 
0x080d57a9: push eax; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cc4b4: push eax; inc ebp; push cs; xor byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080d491c: push eax; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8100: push eax; inc esi; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x0808a6fc: push eax; int1; sti; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x080d037b: push eax; ja 0x88388; push cs; adc al, 0x41; ret; 
0x08090683: push eax; jbe 0x48681; dec dword ptr [ebp - 0x48fdf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080d1be3: push eax; jbe 0x89bf0; push cs; adc al, 0x41; ret; 
0x080c5cbb: push eax; jl 0x7dcc8; push cs; adc al, 0x41; ret; 
0x080cc808: push eax; jl 0x84815; push cs; adc al, 0x41; ret; 
0x080ce7db: push eax; jl 0x867e8; push cs; adc al, 0x41; ret; 
0x080d5fc3: push eax; jle 0x8dfd0; push cs; adc al, 0x43; ret; 
0x08094dca: push eax; jmp dword ptr [ecx]; 
0x080719c9: push eax; js 0x299c5; call dword ptr [eax - 0x77]; 
0x080721fc: push eax; js 0x2a1f8; call dword ptr [eax - 0x77]; 
0x080cab54: push eax; js 0x82b61; push cs; adc al, 0x41; ret; 
0x0808fdeb: push eax; lea eax, [edi + 0x28]; push eax; push ebp; call esi; 
0x0808ffab: push eax; lea eax, [edi + 0x50]; push eax; push ebp; call esi; 
0x0808dee0: push eax; lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x080925e8: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x080517e9: push eax; mov eax, dword ptr [esp + 0x28]; push eax; call dword ptr [eax + 4]; 
0x080749b6: push eax; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0809bf7c: push eax; mov ecx, dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x20]; call 0x53a20; add esp, 0x1c; ret; 
0x0809b36a: push eax; or al, 0x8b; inc ecx; adc al, 0x39; ret; 
0x08058ef0: push eax; or byte ptr [ebp + 0x66840fd2], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x840f; 
0x0806ee0f: push eax; or byte ptr [ebx + 0x5e], bl; ret; 
0x08056c81: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x08058f99: push eax; or byte ptr [ebx], al; dec eax; or al, 0x83; ret; 
0x080c6df1: push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce1d0: push eax; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cc33c: push eax; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080cdc42: push eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080aee47: push eax; pop eax; stc; call eax; 
0x080d5fe8: push eax; pop ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080a895f: push eax; push 0x1a; push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080d3717: push eax; push 0x41140e0a; ret; 
0x080487f7: push eax; push 0x80daf80; call edx; 
0x080487f7: push eax; push 0x80daf80; call edx; add esp, 0x10; leave; ret; 
0x080a88f2: push eax; push 0xa; push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0808dee4: push eax; push 1; push esi; call edx; 
0x080d1244: push eax; push cs; adc byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080cac47: push eax; push cs; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080cb2c6: push eax; push cs; add byte ptr [edx], 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d15bc: push eax; push cs; or al, 0x41; ret; 
0x080c8d4d: push eax; push cs; or al, 0x43; ret; 
0x080ce64b: push eax; push cs; or al, 0x46; ret; 
0x080d5f74: push eax; push cs; xor byte ptr [ebp + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080cde9d: push eax; push cs; xor byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080d5173: push eax; push cs; xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x08092583: push eax; push dword ptr [ebp + 8]; call esi; 
0x080802d0: push eax; push dword ptr [ebp - 0x46c]; mov dword ptr [ebp - 0x470], edi; call dword ptr [edx + 0x1c]; 
0x08092475: push eax; push dword ptr [ebp]; call esi; 
0x08079cef: push eax; push dword ptr [ebx + 0x197c]; call 0x26370; add esp, 0x18; pop ebx; ret; 
0x080a9203: push eax; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08071722: push eax; push dword ptr [esi + 4]; call edi; 
0x0807d9f0: push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080aabbd: push eax; push dword ptr [esp + 0x1c]; call 0x62ad0; add esp, 0x18; pop ebx; ret; 
0x08079009: push eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call edi; 
0x08074b28: push eax; push dword ptr [esp + 0x50]; call edi; 
0x080749b2: push eax; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x080749ae: push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08077f06: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d15: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755c8: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08076fd6: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08077637: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x080744c6: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x08078557: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x080a9252: push eax; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x080c7db1: push eax; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0808ffae: push eax; push eax; push ebp; call esi; 
0x08050f8a: push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x08050c7e: push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x08055c36: push eax; push ebp; call dword ptr [esi + 0xc]; 
0x0808fdef: push eax; push ebp; call esi; 
0x08050d90: push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x08050575: push eax; push ebx; call dword ptr [ebx + 0xc]; 
0x08056305: push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0808a8ef: push eax; push ecx; mov edi, eax; push dword ptr [ebp - 0x45c]; mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x080526cc: push eax; push edi; call dword ptr [ebx + 0x40]; 
0x08051667: push eax; push edi; call dword ptr [edi + 0xc]; 
0x0809246f: push eax; push edi; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x0808ada2: push eax; push edi; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x080807ff: push eax; push edi; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x080a41c1: push eax; push edx; call 0x25940; add esp, 0x18; pop ebx; ret; 
0x0807e110: push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080885f3: push eax; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08050fe0: push eax; push edx; push ebp; call ecx; 
0x08050758: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x08053491: push eax; push edx; push esi; call ecx; 
0x08070184: push eax; push edx; std; call dword ptr [eax - 0x18]; 
0x08070184: push eax; push edx; std; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x08052890: push eax; push esi; call dword ptr [ebx + 0x38]; 
0x0808e0e7: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0808d2c4: push eax; push esi; call dword ptr [ecx + 0x1c]; 
0x08054e4c: push eax; push esi; call dword ptr [edi + 0x40]; 
0x08052acd: push eax; push esi; call dword ptr [edi + 0x48]; 
0x080531dd: push eax; push esi; call dword ptr [edx + 0x48]; 
0x0805114f: push eax; push esi; call dword ptr [esi + 0x18]; 
0x080514ee: push eax; push esi; call dword ptr [esi + 4]; 
0x0809009b: push eax; push esi; push ecx; call edi; 
0x080c7564: push eax; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d0b68: push eax; ret 0; 
0x080832bc: push eax; ret; 
0x0806ee84: push eax; sbb al, 0xc6; inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x0808f56c: push eax; sbb byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x080ae553: push eax; stc; call eax; 
0x080d5030: push eax; stc; cld; jmp dword ptr [esi]; 
0x080ae54f: push eax; stc; push eax; stc; call eax; 
0x080bdc7c: push eax; stc; sti; jmp dword ptr [eax]; 
0x080747aa: push eax; std; dec dword ptr [ebx - 0x72d3dba4]; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x080bcb47: push eax; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x08048952: push ebp; adc al, 0x89; ret 0x4d89; 
0x0807e0bf: push ebp; adc byte ptr [ecx], bh; ret 0x820f; 
0x0809a7c5: push ebp; add al, 0; add byte ptr [ebx - 0x7bfc63bb], cl; mov eax, 0xfffe3ff4; jmp eax; 
0x0808d6b7: push ebp; add al, byte ptr [eax - 0x72fef3b2]; inc edx; add ecx, ebp; ret 0xfffe; 
0x0806d6d5: push ebp; add cl, ch; sar ebp, 0xff; jmp dword ptr [ebp - 0x39]; 
0x080d06bb: push ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080489b1: push ebp; and al, 0x8b; pop ebp; adc bh, dh; ret; 
0x08053afa: push ebp; call dword ptr [eax + 0x20]; 
0x08051c4b: push ebp; call dword ptr [ebp + 0x10]; 
0x08051c76: push ebp; call dword ptr [ebp + 0x18]; 
0x0808ead1: push ebp; call dword ptr [ebx + 0x1c]; 
0x08055f54: push ebp; call dword ptr [ebx + 0x24]; 
0x08050cc1: push ebp; call dword ptr [ebx + 0x40]; 
0x08050c7f: push ebp; call dword ptr [ebx + 0x48]; 
0x0808eb3d: push ebp; call dword ptr [edx + 0x1c]; 
0x08053e13: push ebp; call dword ptr [esi + 0x40]; 
0x08055c37: push ebp; call dword ptr [esi + 0xc]; 
0x0805d0a7: push ebp; call eax; 
0x08050fe2: push ebp; call ecx; 
0x080aa066: push ebp; call edi; 
0x0808fdf0: push ebp; call esi; 
0x080a9e77: push ebp; idiv edi; dec dword ptr [ebx - 0x76e3dbb4]; ret 0xec83; 
0x0807ffca: push ebp; in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x08052237: push ebp; les ecx, ptr [ebx + 0x748dc84d]; add byte ptr es:[eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x0809b405: push ebp; les edi, ptr [eax + 0x21]; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0809dea1: push ebp; lodsb al, byte ptr [esi]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x080840cd: push ebp; mov al, 0x83; ret; 
0x080a52ab: push ebp; mov al, 1; ret 0xd739; 
0x08085487: push ebp; mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0804e797: push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080487f1: push ebp; mov ebp, esp; sub esp, 0x10; push eax; push 0x80daf80; call edx; 
0x080487a5: push ebp; mov ebp, esp; sub esp, 0x14; push 0x80daf80; call eax; 
0x08049c61: push ebp; mov esp, 0x89c3470f; ret 0x73e9; 
0x0809a1a9: push ebp; or byte ptr [ebx + 0x2030846], cl; call eax; 
0x080d2192: push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf243: push ebp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d28c5: push ebp; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080c6404: push ebp; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080ab463: push ebp; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080cd8f4: push ebp; push cs; adc al, 0x41; ret; 
0x08082c90: push ebp; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x0804e5ea: push ebp; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080716b6: push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x5c]; push dword ptr [eax + 4]; call edi; 
0x0806c144: push ebp; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x080a59d4: push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x080738ba: push ebp; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0808d2c3: push ebp; push eax; push esi; call dword ptr [ecx + 0x1c]; 
0x080504ab: push ebp; push ecx; push edi; call dword ptr [edi + 0xc]; 
0x0809a402: push ebp; pushfd; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x08048b4b: push ebp; sbb al, 0xf7; ret 0; 
0x08071788: push ebp; std; call dword ptr [eax - 0x18]; 
0x080742e2: push ebp; std; dec dword ptr [ebp - 0x29f5f7d]; call dword ptr [eax + 0x68]; 
0x0806ddb2: push ebx; add al, 0x83; ret; 
0x080a49d8: push ebx; add al, 0x85; sal byte ptr [ebp + edx - 0x7d], cl; ret; 
0x0809e599: push ebx; add al, 0xe8; mov al, byte ptr [0x5a00005b]; pop ecx; pop eax; jmp dword ptr [eax]; 
0x0805853f: push ebx; add dword ptr [eax], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x080d622d: push ebx; add dword ptr [edx], ecx; push cs; adc al, 0x46; ret; 
0x0808f5ac: push ebx; call 0x470e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080578ad: push ebx; call 0xf7e0; or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x0808f58e: push ebx; call dword ptr [eax + 0x34]; 
0x0808f62f: push ebx; call dword ptr [eax + 0xc]; 
0x08098eeb: push ebx; call dword ptr [eax]; 
0x080543eb: push ebx; call dword ptr [ebp + 0x24]; 
0x080524bf: push ebx; call dword ptr [ebp + 0x40]; 
0x080a9166: push ebx; call dword ptr [ebp + 8]; 
0x08050d5e: push ebx; call dword ptr [ebx + 0x10]; 
0x08050d91: push ebx; call dword ptr [ebx + 0x18]; 
0x08050576: push ebx; call dword ptr [ebx + 0xc]; 
0x08055b82: push ebx; call dword ptr [esi + 0x10]; 
0x08056306: push ebx; call dword ptr [esi + 0x18]; 
0x080556ad: push ebx; call dword ptr [esi + 0xc]; 
0x0805c7f5: push ebx; call eax; 
0x080a0560: push ebx; call ebx; 
0x0806da2d: push ebx; call edx; 
0x0806d9e8: push ebx; call esi; 
0x080bf644: push ebx; jno 0x77643; out 0x95, eax; push es; cld; ret; 
0x08093800: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0806d6f0: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806c920: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08093360: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0806c950: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08092cb0: push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08092cb0: push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; pop ebx; ret; 
0x080a1720: push ebx; mov eax, 0xdc; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806cb40: push ebx; mov eax, 3; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806cc10: push ebx; mov eax, 4; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0806cea0: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x08050570: push ebx; mov ebx, dword ptr [ebp - 0x4c]; push edx; push eax; push ebx; call dword ptr [ebx + 0xc]; 
0x080a4980: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d970: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080c6fa7: push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e44: push ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d3d6f: push ebx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080ca65f: push ebx; push cs; add bh, al; inc ecx; adc eax, dword ptr [ecx]; ret; 
0x080d57fd: push ebx; push cs; rol byte ptr [edx], 1; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080c6fa4: push ebx; push cs; xor byte ptr [ebx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d1c65: push ebx; push cs; xor byte ptr [edx + ecx + 0xe], dl; adc al, 0x41; ret; 
0x080c78a9: push ebx; push cs; xor byte ptr [esi + 0xa], dl; push cs; adc al, 0x41; ret; 
0x0808e28d: push ebx; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x080a8913: push ebx; push dword ptr [ebx + 4]; push dword ptr [ebx]; push 0xa; push 1; call eax; 
0x08053e09: push ebx; push ecx; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x080507d6: push ebx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x0807e08e: push ebx; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x0808856e: push ebx; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x0808eb3b: push ebx; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x0808fa94: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0808d3aa: push ebx; ret; 
0x080bfaaf: push ebx; sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x08070102: push ebx; std; call dword ptr [eax - 0x73]; 
0x08070d78: push ebx; std; call dword ptr [ecx + 0x6a]; 
0x08070df3: push ebx; std; call dword ptr [edx + 0x6a]; 
0x080ab8ab: push ecx; adc bl, bh; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x08078d14: push ecx; add ebp, dword ptr [ecx]; ret 0xeac1; 
0x0807201d: push ecx; call 0x28270; mov dword ptr [esp], esi; mov ecx, dword ptr [ebp - 0x48]; call ecx; 
0x08050335: push ecx; call dword ptr [ebx + 0x1c]; 
0x0805280c: push ecx; call dword ptr [ebx + 0xc]; 
0x080c0b25: push ecx; call dword ptr [esi]; 
0x0809009d: push ecx; call edi; 
0x080a46de: push ecx; cli; call dword ptr [eax + 0x6a]; 
0x080cc69d: push ecx; cli; call dword ptr [ecx]; 
0x080ac4ab: push ecx; cmp al, 0xf7; jmp dword ptr [esi + 0x3d]; 
0x08075dfb: push ecx; cmp bh, ch; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x08070d1b: push ecx; idiv bh; call dword ptr [eax - 0x73]; 
0x080a0067: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x08053e0a: push ecx; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x18], ebx; push ebp; call dword ptr [esi + 0x40]; 
0x0808a8f0: push ecx; mov edi, eax; push dword ptr [ebp - 0x45c]; mov dword ptr [ebp - 0x460], eax; call dword ptr [edx + 0x1c]; 
0x080d045e: push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8623: push ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c6429: push ecx; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x080c7df4: push ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c9133: push ecx; or eax, dword ptr [ebx + 0xa]; push cs; adc al, 0x43; ret; 
0x080a8862: push ecx; push 1; call eax; 
0x0806da2a: push ecx; push 3; push ebx; call edx; 
0x080cf22a: push ecx; push cs; and byte ptr [eax + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080d1317: push ecx; push cs; xor byte ptr [edx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c92a7: push ecx; push cs; xor byte ptr [edx + ecx + 0xe], cl; adc al, 0x41; ret; 
0x0807e98c: push ecx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080507d7: push ecx; push eax; call dword ptr [eax + 0xc]; 
0x08051666: push ecx; push eax; push edi; call dword ptr [edi + 0xc]; 
0x080747fb: push ecx; push eax; std; dec dword ptr [ebx - 0x72d3dba4]; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08051c75: push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x080504ac: push ecx; push edi; call dword ptr [edi + 0xc]; 
0x08080732: push ecx; push edi; push dword ptr [ebp - 0x46c]; call dword ptr [edx + 0x1c]; 
0x0805c7f3: push ecx; push edx; push ebx; call eax; 
0x08089124: push ecx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x080d10d2: push ecx; ret; 
0x08097daf: push ecx; std; call dword ptr [eax + 0x6a]; 
0x08070112: push ecx; std; call dword ptr [eax - 0x18]; 
0x0807011e: push ecx; std; call dword ptr [ecx + 0x51]; 
0x0806fdc2: push ecx; std; inc dword ptr [ebx - 0x4c72f314]; fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x08083714: push edi; adc al, 0xc6; add byte ptr [0xfffe8ae9], ch; jmp dword ptr [esi - 0x70]; 
0x0809cd08: push edi; add al, 0x5b; pop esi; pop edi; ret; 
0x080874bc: push edi; add dword ptr [eax], eax; add byte ptr [ebx + 0xf042474], cl; mov esi, 0xc75f2444; ret 0xfff0; 
0x08071f0e: push edi; add dword ptr [ebp + 0x6bf475c0], eax; ret 0x833c; 
0x080517e5: push edi; add eax, 0x2c; push eax; mov eax, dword ptr [esp + 0x28]; push eax; call dword ptr [eax + 4]; 
0x08071902: push edi; call 0x28270; mov dword ptr [esp], esi; call edi; 
0x0805075a: push edi; call dword ptr [ebx + 0x38]; 
0x08052667: push edi; call dword ptr [ebx + 0x3c]; 
0x080526cd: push edi; call dword ptr [ebx + 0x40]; 
0x0805043a: push edi; call dword ptr [edi + 0x10]; 
0x080504ad: push edi; call dword ptr [edi + 0xc]; 
0x0806dda7: push edi; call esi; 
0x080bdc9c: push edi; clc; sti; jmp dword ptr [edi]; 
0x08059e60: push edi; fsub dword ptr [ecx]; ror byte ptr [ebx + 0x1242454], 1; ret 0xfa81; 
0x08092470: push edi; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x080514e6: push edi; lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 4]; 
0x08070318: push edi; mov ecx, dword ptr [ebx + eax*4 - 0x2aaf8]; add ecx, ebx; jmp ecx; 
0x08088801: push edi; or al, 0xf6; ret 0xf08; 
0x08050751: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x080d03ec: push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cdcee: push edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cdc59: push edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x08099d3d: push edi; or eax, 0xb48d0000; add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0806d9e5: push edi; push 0; push ebx; call esi; 
0x0806d9f9: push edi; push 1; push ebx; call esi; 
0x0806da0c: push edi; push 2; push ebx; call esi; 
0x080ccb08: push edi; push cs; adc al, 0x41; ret; 
0x080c9c09: push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080d2f17: push edi; push cs; xor byte ptr [edi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x08051144: push edi; push dword ptr [ebp + 0xc]; lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 0x18]; 
0x0808ada3: push edi; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x08080800: push edi; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x08080733: push edi; push dword ptr [ebp - 0x46c]; call dword ptr [edx + 0x1c]; 
0x0807e08f: push edi; push dword ptr [ebp - 0x890]; call eax; 
0x0808856f: push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x080848ff: push edi; push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x080a885c: push edi; push dword ptr [edi + 4]; push dword ptr [edi]; push ecx; push 1; call eax; 
0x08051c6e: push edi; push dword ptr [esi + 8]; push dword ptr [esi + 0xc]; push ecx; push ebp; call dword ptr [ebp + 0x18]; 
0x08053bea: push edi; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebx + 0x38]; 
0x08078f20: push edi; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080802cf: push edi; push eax; push dword ptr [ebp - 0x46c]; mov dword ptr [ebp - 0x470], edi; call dword ptr [edx + 0x1c]; 
0x0807d9ef: push edi; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x08053af9: push edi; push ebp; call dword ptr [eax + 0x20]; 
0x0808eb3c: push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x0804e796: push edi; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0806c143: push edi; push ebp; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x080a59d3: push edi; push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x08051cb2: push edi; push esi; call dword ptr [ebp + 0x40]; 
0x080a5867: push edi; push esi; call dword ptr [ebx]; 
0x08055f52: push edi; push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08050ef1: push edi; push esi; push ebp; call dword ptr [ebx + 0x40]; 
0x080524bd: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x08048b12: push edi; ret; 
0x08073124: push edi; std; call dword ptr [eax - 0x73]; 
0x0806bfbe: push edi; std; call dword ptr [edx + 0x56]; 
0x080623e6: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0804c758: push edx; add dword ptr [eax], eax; add byte ptr [ecx - 0x38ff743d], cl; xbegin 0x8a004766; ret 0xbd89; 
0x0806cacd: push edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x080623fb: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0809eb24: push edx; and edi, ebp; call dword ptr [edx + 0x68]; 
0x08053fc8: push edx; call 0x24aa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x08053fe8: push edx; call 0x24b40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080a41c2: push edx; call 0x25940; add esp, 0x18; pop ebx; ret; 
0x080a4a3e: push edx; call 0x4e610; mov dword ptr [ebx + 0x14], eax; add esp, 0x28; pop ebx; ret; 
0x080aafd3: push edx; call 0x60c60; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aafab: push edx; call 0x60cb0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080aafeb: push edx; call 0x60cc0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x080bf9ea: push edx; cdq; inc esp; push ds; mov ah, 0x13; ret; 
0x080d20e1: push edx; cld; jmp dword ptr [esi + 0xa]; 
0x080cc6b1: push edx; cli; call dword ptr [ecx]; 
0x080cc509: push edx; cli; jmp dword ptr [ecx]; 
0x080ae5cf: push edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080ae5cf: push edx; daa; stc; call dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae5d4: push edx; daa; stc; jmp dword ptr [eax + 0x28]; 
0x0806278b: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806254b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0806281b: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x080625eb: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x080628bb: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x080a00ba: push edx; in al, dx; cld; jmp dword ptr [esi - 0x70]; 
0x0808d8a4: push edx; lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x080627a9: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0808fec0: push edx; mov eax, dword ptr [esp + 0x38]; push eax; call esi; 
0x08085f5e: push edx; or al, 0xf6; ret 0xf01; 
0x080867b2: push edx; or byte ptr [ecx - 0x7cd3dbac], cl; ret 0x3917; 
0x080c7cae: push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c90f6: push edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d4f94: push edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080c8c9c: push edx; or eax, dword ptr [ebx]; out 2, al; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080a9121: push edx; push 1; call eax; 
0x080a9121: push edx; push 1; call eax; add esp, 0x10; add esp, 0xc; ret; 
0x0808d8a8: push edx; push 1; push esi; call eax; 
0x080ce349: push edx; push cs; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x08050d89: push edx; push dword ptr [ebp + 8]; push dword ptr [ebp + 0xc]; push eax; push ebx; call dword ptr [ebx + 0x18]; 
0x0808b40d: push edx; push dword ptr [ebp - 0x494]; push dword ptr [ebp - 0x45c]; call dword ptr [eax + 0x1c]; 
0x08080dcb: push edx; push dword ptr [ebp - 0x4a4]; push dword ptr [ebp - 0x46c]; call dword ptr [eax + 0x1c]; 
0x0808bf76: push edx; push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x08080c15: push edx; push dword ptr [ebp - 0x4cc]; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x0807e111: push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x080885f4: push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08051662: push edx; push dword ptr [esi + 8]; push ecx; push eax; push edi; call dword ptr [edi + 0xc]; 
0x080a895e: push edx; push eax; push 0x1a; push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080a88f1: push edx; push eax; push 0xa; push 1; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08050f89: push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x08050574: push edx; push eax; push ebx; call dword ptr [ebx + 0xc]; 
0x080526cb: push edx; push eax; push edi; call dword ptr [ebx + 0x40]; 
0x0805288f: push edx; push eax; push esi; call dword ptr [ebx + 0x38]; 
0x08054e4b: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x08050fe1: push edx; push ebp; call ecx; 
0x0805c7f4: push edx; push ebx; call eax; 
0x0807e98b: push edx; push ecx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08050956: push edx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x08050759: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x080514e5: push edx; push edi; lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 4]; 
0x08051cb1: push edx; push edi; push esi; call dword ptr [ebp + 0x40]; 
0x08053492: push edx; push esi; call ecx; 
0x0807eb84: push edx; push esi; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08062c28: push edx; ret 0xc2bb; 
0x08062b88: push edx; ret; 
0x080a11e4: push edx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x08062c4b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08062cfb: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08062bab: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08070166: push edx; std; call dword ptr [eax - 0x18]; 
0x08070185: push edx; std; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x0807013a: push edx; std; call dword ptr [eax - 0x73]; 
0x08062410: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x080710c9: push es; add bh, dh; fadd st(7); ret 0xffe0; 
0x080c4fcd: push es; add byte ptr [eax], al; inc eax; pop esi; clc; call edx; 
0x080c4f6d: push es; add byte ptr [eax], al; mov al, 0x4b; clc; call dword ptr [ebx]; 
0x0809a559: push es; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x64]; mov edx, dword ptr [ecx + edi*4 - 0x1c0b8]; add edx, ecx; jmp edx; 
0x0804d955: push es; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x2db80]; add ecx, edi; jmp ecx; 
0x080bbc79: push es; add byte ptr [eax], al; mov esi, 0xc0000006; push es; add byte ptr [eax], al; ret 6; 
0x080627e2: push es; add byte ptr [eax], al; pop ebx; ret; 
0x080b7585: push es; add byte ptr [eax], al; ret 6; 
0x08048838: push es; add byte ptr [ebx + 0x5c610c4], al; and byte ptr [ebx - 0x36fef7f3], dh; ret; 
0x080496d2: push es; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x080710aa: push es; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0806bb49: push es; add byte ptr [ebx - 0x38fbdbbc], cl; ret 0xb900; 
0x0806ecfa: push es; add byte ptr [ebx - 0x7c72eb14], al; xchg eax, esi; dec edx; std; call dword ptr [eax - 0x18]; 
0x0806ed18: push es; add byte ptr [ebx - 0x7f72eb14], al; scasd eax, dword ptr es:[edi]; dec edx; std; call dword ptr [eax + 0x6a]; 
0x08091e2b: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x080d4f5d: push es; add dword ptr [eax], eax; nop; clc; cld; jmp dword ptr [edi]; 
0x08099787: push es; add eax, dword ptr [edi]; call eax; 
0x080a3034: push es; add eax, dword ptr [edx + 4]; call eax; 
0x08058832: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x080a488b: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x08055a71: push es; add esp, 4; pop ebx; pop esi; ret; 
0x080be085: push es; cld; jmp edi; 
0x080bf649: push es; cld; ret; 
0x0809d6dd: push es; cmp eax, 0x31; jbe 0x55760; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x0807bf46: push es; frndint; dec dword ptr [ebp - 0x295bb7d]; call dword ptr [eax - 0x73]; 
0x08085098: push es; idiv edi; dec dword ptr [ebx - 0xdb7b]; dec dword ptr [ecx - 0xcb7b]; dec dword ptr [ebx - 0xb77b]; call dword ptr [ecx + 0x29]; 
0x080a7b05: push es; int 0x80; 
0x08067512: push es; jb 0x1f590; lea eax, [edi + 5]; pop edi; ret; 
0x08091d12: push es; jb 0x49d90; lea eax, [eax + 5]; pop edi; ret; 
0x080678e9: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x08065da1: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065f01: push es; lea eax, [edx + 0xd]; ret; 
0x08056bd9: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0806eaa9: push es; mov dword ptr [ebx + 0x9a8], eax; pop ebx; pop esi; pop edi; ret; 
0x080a1537: push es; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x08064531: push es; mov eax, edi; pop edi; ret; 
0x08064691: push es; mov eax, edx; ret; 
0x080a2016: push es; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0806a307: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x28ca0]; mov eax, dword ptr [ebx + eax*4 - 0x28ca0]; sub eax, ecx; pop ebx; ret; 
0x0806698c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x08066aec: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0806637c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x080664dc: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x08065d98: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x08065ef8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x08064528: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x08064688: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x080c23d0: push es; movsd dword ptr es:[edi], dword ptr [esi]; int1; dec ebx; ret 0x5803; 
0x080608a3: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x08089e2d: push es; or byte ptr [eax], al; add byte ptr [ebx + 0x525604ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0807f48e: push es; or dword ptr [eax], eax; add byte ptr [ebx - 0x6a76fb14], al; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x08065d0c: push es; pop edi; ret; 
0x08065e3c: push es; ret; 
0x080d50e1: push es; std; jmp dword ptr [edi]; 
0x080ae680: push es; sub cl, bh; call dword ptr [eax]; 
0x080608a7: push es; sub eax, ecx; ret; 
0x0809b0a9: push es; test edx, edx; jne 0x530b6; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x08056268: push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x08053159: push esi; adc al, 0xf; test byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x44c7; 
0x08079bce: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x08052888: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [ebx + 0x38]; 
0x0807b3c5: push esi; call 0x14900; add esp, 0x14; pop ebx; pop esi; ret; 
0x08079270: push esi; call 0x28270; mov ecx, dword ptr [ebp - 0x2c]; mov dword ptr [esp], ecx; call esi; 
0x0808f34c: push esi; call 0xd3d0; add esp, 0x14; pop ebx; pop esi; ret; 
0x080577c9: push esi; call 0xe210; add esp, 0x14; pop ebx; pop esi; ret; 
0x0808e291: push esi; call dword ptr [eax + 0x1c]; 
0x080567f5: push esi; call dword ptr [eax + 0x2c]; 
0x080564e6: push esi; call dword ptr [eax + 0xc]; 
0x08055e2d: push esi; call dword ptr [ebp + 0x30]; 
0x08051cb3: push esi; call dword ptr [ebp + 0x40]; 
0x08054065: push esi; call dword ptr [ebp + 0xc]; 
0x0804fecc: push esi; call dword ptr [ebx + 0x30]; 
0x08052891: push esi; call dword ptr [ebx + 0x38]; 
0x0805321e: push esi; call dword ptr [ebx + 0x40]; 
0x0808e0e8: push esi; call dword ptr [ebx + 0x48]; 
0x0804fc8f: push esi; call dword ptr [ebx + 8]; 
0x080a27d2: push esi; call dword ptr [ebx]; 
0x08082c95: push esi; call dword ptr [ecx + 0x1c]; 
0x080536ea: push esi; call dword ptr [ecx + 0x40]; 
0x0808fa95: push esi; call dword ptr [edi + 0x18]; 
0x08055aff: push esi; call dword ptr [edi + 0x34]; 
0x0805430e: push esi; call dword ptr [edi + 0x40]; 
0x080544cd: push esi; call dword ptr [edi + 0x44]; 
0x08052ace: push esi; call dword ptr [edi + 0x48]; 
0x08053438: push esi; call dword ptr [edx + 0x40]; 
0x080531de: push esi; call dword ptr [edx + 0x48]; 
0x0805110a: push esi; call dword ptr [esi + 0x10]; 
0x08051150: push esi; call dword ptr [esi + 0x18]; 
0x080514ef: push esi; call dword ptr [esi + 4]; 
0x0805c497: push esi; call eax; 
0x08053493: push esi; call ecx; 
0x0808dee7: push esi; call edx; 
0x080c243c: push esi; cli; push 0x6e; ja 0x7a3c5; ret 0x48f; 
0x08059ee6: push esi; cmp byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080adf3c: push esi; dec eax; sti; call esi; 
0x08061df6: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08061d87: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0805dc0d: push esi; inc ebx; adc dl, byte ptr [eax]; pop ebx; cmovne eax, ecx; ret; 
0x0809064d: push esi; inc ebx; pop ss; add al, 0x5b; cmovne eax, ecx; ret; 
0x080c2119: push esi; jnp 0x7a132; mov dl, 0x9f; sub edi, esi; int 0x6b; ret; 
0x080a11d1: push esi; or al, 0x89; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0808ddd2: push esi; or al, 0xf6; ret 0xf01; 
0x080ac0a6: push esi; or bl, bh; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080c78ac: push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080ce89e: push esi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c189c: push esi; pop edx; je 0x79864; ret 0xacfc; 
0x080c7b87: push esi; push cs; adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x08050331: push esi; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x0808b8bf: push esi; push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x0807eb85: push esi; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0807e3e7: push esi; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08089125: push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x080923b9: push esi; push dword ptr [ebp]; call edi; 
0x080504a7: push esi; push dword ptr [ebx + 4]; push ebp; push ecx; push edi; call dword ptr [edi + 0xc]; 
0x08073c23: push esi; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08087ecf: push esi; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x08055f53: push esi; push ebp; call dword ptr [ebx + 0x24]; 
0x08050ef2: push esi; push ebp; call dword ptr [ebx + 0x40]; 
0x080524be: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0805cbd7: push esi; push ebx; call eax; 
0x0809009c: push esi; push ecx; call edi; 
0x08088da2: push esi; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08091c25: push esi; ret 0xf02; 
0x0808a023: push esi; ret 0xf10; 
0x080bf7ee: push esi; ret; 
0x080aee25: push esi; stc; call dword ptr [eax + 0x59]; 
0x080aee6d: push esi; stc; call dword ptr [eax]; 
0x080aee69: push esi; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax]; 
0x080aee3d: push esi; stc; push dword ptr [eax]; pop ecx; stc; call dword ptr [eax]; 
0x0807194d: push esi; std; call dword ptr [eax - 0x18]; 
0x08071778: push esi; std; call dword ptr [eax - 0x73]; 
0x08061db6: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0809b02f: push esi; xor al, 0x8b; add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x458b; 
0x0809b0f0: push esi; xor al, 0x8b; inc ebp; mov al, byte ptr [0x4203008b]; add al, 0x89; ret 0x458b; 
0x080adc5c: push esp; adc edi, ebx; push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080c79cc: push esp; add byte ptr [eax], al; add byte ptr [eax + 0x3c000030], bh; in eax, 0xf8; call dword ptr [edi]; 
0x080d5650: push esp; add byte ptr [eax], al; add byte ptr [ecx + 0x15680001], bh; std; call dword ptr [eax + 1]; 
0x080d5e28: push esp; add byte ptr [eax], al; add byte ptr [edx + 0x34f00001], dl; std; call dword ptr [eax + 1]; 
0x080a6d62: push esp; add esp, 8; pop ebx; ret; 
0x0806cb4b: push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x080a4982: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0806d972: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0806d9a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x080a924f: push esp; and al, 0x10; push eax; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0806d907: push esp; and al, 0x14; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0806eacc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x080933a0: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; jne 0x4b3c8; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080ab84a: push esp; and al, 0x1c; add ebp, dword ptr [edx + 8]; mov dword ptr [esp], ebp; call edi; 
0x0805a556: push esp; and al, 0x1c; call eax; 
0x0806cc5a: push esp; and al, 0x24; mov ecx, dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; call dword ptr gs:[0x10]; 
0x080930ce: push esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x08093459: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0806c9f5: push esp; and al, 0xc; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806caec: push esp; and al, 0xc; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cbbc: push esp; and al, 0xc; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806ccc8: push esp; and al, 4; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0807c00b: push esp; and al, 4; mov eax, 0xffffffd4; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0806eb4f: push esp; and al, 4; setae al; ret; 
0x080abaf1: push esp; and al, 8; call eax; 
0x080a8c45: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0809373b: push esp; and al, 8; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x0806cd94: push esp; and al, 8; mov eax, 0xdd; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x08056c55: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0807b415: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0804ed97: push esp; and al, 8; mov eax, dword ptr [ecx - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x08075102: push esp; call edi; 
0x0805db9b: push esp; clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x08059f43: push esp; das; adc cl, byte ptr [ecx + 0x21d8f7f8]; ret 0xd539; 
0x080c836c: push esp; idiv al; call dword ptr [edi]; 
0x08088209: push esp; idiv edi; call dword ptr [ebx - 0x7d]; 
0x08088209: push esp; idiv edi; call dword ptr [ebx - 0x7d]; ret; 
0x080c8c6c: push esp; inc ebx; add byte ptr [eax], al; jo 0x80c8b; stc; jmp dword ptr [eax + 0xf]; 
0x080bf591: push esp; jmp dword ptr [ebx - 0x40]; 
0x08077f0e: push esp; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d1d: push esp; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755d0: push esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0805042d: push esp; mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18], eax; xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x080c7565: push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d568f: push esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c6eab: push esp; or cl, byte ptr [esi]; adc al, 0x45; ret; 
0x080c7857: push esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080d538b: push esp; push cs; adc al, 0x43; ret; 
0x08078f24: push esp; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x080750fe: push esp; push dword ptr [esp + 0x54]; call edi; 
0x08077f0a: push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x08074d19: push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x080755cc: push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x08070111: push esp; push ecx; std; call dword ptr [eax - 0x18]; 
0x080c4f6c: push esp; push es; add byte ptr [eax], al; mov al, 0x4b; clc; call dword ptr [ebx]; 
0x080a8cc6: push esp; ret; 
0x0807c4b8: push esp; sub bh, bh; jmp dword ptr [esi - 0x70]; 
0x080496d0: push esp; sub eax, dword ptr [esi]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x08051c47: push esp; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x08050d5a: push esp; sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x08051106: push esp; sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x080c2066: push esp; syscall; 
0x080a302e: push esp; test edx, edx; je 0x5b03a; mov eax, dword ptr [esi]; add eax, dword ptr [edx + 4]; call eax; 
0x08095745: push esp; xor al, 0xfe; call dword ptr [eax - 0x18]; 
0x0807c3f9: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0805daec: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x080c9c05: push ss; add byte ptr [eax], al; add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080d6005: push ss; add dword ptr [eax], eax; mov byte ptr [eax], bh; std; call dword ptr [esi]; 
0x0806ca79: push ss; add esp, 4; pop ebx; pop esi; ret; 
0x080a95b3: push ss; add esp, 8; mov eax, 4; pop ebx; ret; 
0x08080146: push ss; and bh, ch; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x08067c99: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x080caea5: push ss; cli; call eax; 
0x0807b35f: push ss; dec byte ptr [ebx - 0x9773]; jmp dword ptr [esi - 0x77]; 
0x08070316: push ss; ja 0x28370; mov ecx, dword ptr [ebx + eax*4 - 0x2aaf8]; add ecx, ebx; jmp ecx; 
0x080678d9: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080c211b: push ss; mov dl, 0x9f; sub edi, esi; int 0x6b; ret; 
0x080a3de6: push ss; ret 0xf7f5; 
0x080ae101: push ss; stc; call dword ptr [edi]; 
0x080ae0a1: push ss; stc; jmp dword ptr [eax + 0x16]; 
0x080ae0f9: push ss; stc; lcall [edi - 0x120006ea]; push ss; stc; call dword ptr [edi]; 
0x080d56f5: push ss; std; jmp dword ptr [edx + 8]; 
0x08053af1: push ss; sub esp, 4; push dword ptr [esp + 0x3c]; push edi; push ebp; call dword ptr [eax + 0x20]; 
0x080bcb5c: pushal; aaa; sti; jmp dword ptr [eax + 0x3b]; 
0x080bcb38: pushal; aaa; sti; jmp dword ptr [eax]; 
0x080c5b78: pushal; adc al, byte ptr [eax]; add byte ptr [ebx + edx*4 - 8], al; jmp dword ptr [edx]; 
0x080ccd0a: pushal; add ah, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x08090a26: pushal; add al, 0; add byte ptr [ecx], al; fsubr dword ptr [ecx]; fidivr word ptr [ecx]; ret 0x830f; 
0x08090956: pushal; add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x08090a78: pushal; add al, 0; add byte ptr [ecx], ch; fmul dword ptr [ecx + 0xfd839de]; inc edx; ret; 
0x0809093d: pushal; add al, 0; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080d6127: pushal; add al, byte ptr [eax + 0x43140e0a]; ret; 
0x080cdaef: pushal; add al, byte ptr [edi + 0x41140e0a]; ret; 
0x080d3d57: pushal; add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x46; ret; 
0x080c72a8: pushal; add byte ptr [eax], al; add byte ptr [ecx + ebp - 0x27a00000], dl; clc; jmp dword ptr [edi]; 
0x080c6378: pushal; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080ccb7f: pushal; add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080cce8f: pushal; add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x080d622b: pushal; add edx, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x0807c3ab: pushal; and bh, dl; dec dword ptr [ecx + 0xf08244c]; inc esp; ret 0x4489; 
0x080cb610: pushal; and edi, edx; jmp dword ptr [esi]; 
0x08078923: pushal; call edi; 
0x0808f34f: pushal; cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080c48b0: pushal; cld; ljmp [eax]; hlt; cld; jmp dword ptr [eax - 0xc]; 
0x08098fb4: pushal; cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080c9350: pushal; cmp bh, cl; call dword ptr [eax]; 
0x0805d39e: pushal; cmp ch, bh; call dword ptr [eax - 0x77]; 
0x0805d40e: pushal; cmp ch, bh; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x080c59bf: pushal; dec eax; push cs; adc al, 0x41; ret; 
0x080d3714: pushal; dec eax; push cs; push eax; push 0x41140e0a; ret; 
0x080d2b3a: pushal; dec esp; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x080c72b0: pushal; fdivr st(0); jmp dword ptr [edi]; 
0x080c48b8: pushal; hlt; cld; jmp dword ptr [eax - 0xd]; 
0x080c8380: pushal; idiv al; call dword ptr [edi]; 
0x080c48ac: pushal; in al, 0xfc; jmp dword ptr [eax - 0xd]; 
0x0806b9bc: pushal; inc eax; std; call dword ptr [eax - 0x73]; 
0x080d55f1: pushal; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5033: pushal; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d5421: pushal; jge 0x8d42e; push cs; adc al, 0x41; ret; 
0x0807855f: pushal; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0809bee5: pushal; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0805e624: pushal; or al, 0xf9; dec dword ptr [ebp - 0x793bf6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080c665d: pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2d32: pushal; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080ce6db: pushal; or cl, byte ptr [esi]; or al, 0x43; ret; 
0x080d6189: pushal; or cl, byte ptr fs:[esi]; adc al, 0x45; ret; 
0x080d0ece: pushal; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7d2d: pushal; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1782: pushal; pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08077cd8: pushal; pop edi; std; call dword ptr [eax + 0x68]; 
0x08077cb5: pushal; pop edi; std; call dword ptr [eax - 0x73]; 
0x08078af1: pushal; pop esi; std; call dword ptr [eax - 0x73]; 
0x080c98cd: pushal; pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08079ad5: pushal; popal; std; call dword ptr [eax - 0x18]; 
0x080c93be: pushal; push cs; adc al, 0x43; ret; 
0x0807891f: pushal; push dword ptr [esp + 0x60]; call edi; 
0x0807855b: pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x080c7cad: pushal; push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080caf00: pushal; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080747b3: pushal; pushal; std; call dword ptr [eax + 0x68]; 
0x08074790: pushal; pushal; std; call dword ptr [eax - 0x73]; 
0x080c8fcb: pushal; ret; 
0x0809381b: pushal; sbb al, byte ptr [eax]; add byte ptr [edi + 7], dh; xor eax, eax; pop ebx; ret; 
0x08056474: pushal; sbb byte ptr [eax], al; add bh, al; ret 0xa078; 
0x08056f93: pushal; sbb byte ptr [eax], al; add byte ptr [ebx + 0x185c82], al; add byte ptr [ecx], al; pop ebx; ret; 
0x080719d6: pushal; sbb dword ptr [eax], eax; add byte ptr [eax - 0x77], dl; inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x080a8c2a: pushal; shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x08073f09: pushal; std; call dword ptr [eax + 0x68]; 
0x08073ee6: pushal; std; call dword ptr [eax - 0x73]; 
0x080ae8dc: pushal; sub cl, bh; call eax; 
0x080ae818: pushal; sub cl, bh; jmp dword ptr [eax + 0x28]; 
0x080965ec: pushal; xor bh, bl; dec dword ptr [ebp - 0x1caef7d]; call dword ptr [eax + 0x6a]; 
0x08095308: pushal; xor dh, bh; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x080bc928: pushal; xor eax, 0x348ffffb; sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x080ab14c: pushal; xor edx, edi; call dword ptr [ebp + 0x57]; 
0x080c49c7: pushfd; add al, byte ptr [ebx]; mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08052b67: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x080c5340: pushfd; add byte ptr [eax], al; add byte ptr [edx + ecx], ch; add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x080ce5d9: pushfd; add byte ptr [eax], al; mov ah, 0xe3; cli; call dword ptr [ebx + 3]; 
0x0809b052: pushfd; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x080cfb45: pushfd; add dword ptr [ecx + 0xe], eax; mov al, byte ptr [0x900e4601]; add dword ptr [edx + ecx + 0xe], edx; adc al, 0x41; ret; 
0x080c4b8f: pushfd; add dword ptr [ecx + 0xe], eax; mov al, byte ptr [0x900e4801]; add dword ptr [edx + ecx + 0xe], ecx; adc al, 0x41; ret; 
0x0809a7cb: pushfd; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08099d5b: pushfd; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x0809a403: pushfd; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x080cb6c4: pushfd; and edi, edx; call dword ptr [edi]; 
0x0806d7e2: pushfd; dec ecx; std; call dword ptr [eax - 0x73]; 
0x080d3db4: pushfd; hlt; add byte ptr [eax], al; sbb dh, al; cld; jmp esp; 
0x080cfdd4: pushfd; idiv bl; jmp esi; 
0x0807fca2: pushfd; idiv edi; call dword ptr [ecx - 0x77]; 
0x080cbcb4: pushfd; jae 0x83cb7; add byte ptr [eax + 0x32], ch; cli; jmp dword ptr [esi]; 
0x08099ebb: pushfd; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x08099771: pushfd; mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x0809a55e: pushfd; mov edx, dword ptr [ecx + edi*4 - 0x1c0b8]; add edx, ecx; jmp edx; 
0x08099382: pushfd; mov edx, dword ptr [edi + esi*4 - 0x1c4c0]; add edx, edi; jmp edx; 
0x080c5805: pushfd; or al, byte ptr [ecx + 0xe]; mov al, byte ptr [0x900e4a0a]; or bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x080cfb91: pushfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c7fb4: pushfd; out dx, eax; clc; call dword ptr [eax]; 
0x080c7f64: pushfd; out dx, eax; clc; call dword ptr [ebx]; 
0x0807189c: pushfd; pop ds; add byte ptr [eax], al; ret; 
0x0808664f: pushfd; ret 0xbcd9; 
0x080cafb4: pushfd; sbb edx, edi; jmp dword ptr [esi]; 
0x080d46b4: pushfd; std; add byte ptr [eax], al; test al, 0xd2; cld; call dword ptr [ebx]; 
0x0808d05b: pushfd; sub dh, bh; call dword ptr [eax + 0x68]; 
0x080d43f0: rcl al, 1; cld; jmp dword ptr [edi]; 
0x080a41c0: rcl byte ptr [eax + 0x52], 1; call 0x25940; add esp, 0x18; pop ebx; ret; 
0x0807e10f: rcl byte ptr [eax + 0x52], 1; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08050757: rcl byte ptr [eax + 0x52], 1; push edi; call dword ptr [ebx + 0x38]; 
0x0807f2b3: rcl byte ptr [eax - 1], 0xb5; inc eax; idiv edi; call dword ptr [ebx - 1]; 
0x0809b8a7: rcl byte ptr [eax], 0x39; fidiv dword ptr [esp + ecx*2 - 0x77]; ret 0xde89; 
0x080a336e: rcl byte ptr [eax], 0x39; ret 0x2474; 
0x0805f59f: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x08067f95: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x080addf0: rcl byte ptr [ebx + edi*8], cl; inc dword ptr [edx]; adc eax, 0x1532fffb; sti; jmp dword ptr [edx + 0x15]; 
0x08071071: rcl byte ptr [edi + ebp*4], 0xd; or bh, al; ret 0xa9e4; 
0x08050955: rcl byte ptr [edx + 0x51], 0x50; call dword ptr [eax + 0xc]; 
0x080c899e: rcl byte ptr [edx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5be8: rcl byte ptr [edx], 1; add byte ptr [eax], al; add al, 0x94; clc; jmp dword ptr [ebx]; 
0x080c70b0: rcl dl, 1; clc; jmp dword ptr [edi]; 
0x08053add: rcl dword ptr [ebx + esi*4], 0xd; or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x0809e8fb: rcl dword ptr [edi + edi*8 + 0x84389ff], 1; add esp, 0x28; pop ebx; ret; 
0x0809a7ab: rcl dword ptr [edi], 0; add byte ptr [ebx - 0x4972df3c], al; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x74]; call eax; 
0x0809adfa: rcl dword ptr [edx - 0x73], 1; nop; dec eax; cmp bh, dh; call dword ptr [edx + 0x6a]; 
0x080adac4: rcl dword ptr [edx], 1; sti; call dword ptr [ecx]; 
0x080c189b: rcl dword ptr [esi + 0x5a], cl; je 0x79864; ret 0xacfc; 
0x080aee4c: rcr byte ptr [eax - 7], 1; ljmp [eax - 0x7f0006a8]; pop eax; stc; jmp dword ptr [eax + 0x58]; 
0x08048742: rcr byte ptr [eax], 9; add byte ptr [ebp - 0x9096f7d], cl; call dword ptr [eax - 0x73]; 
0x0804d4bf: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08052e09: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0804cd10: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0805c450: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x08085b89: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x08093713: rcr byte ptr [ebx - 0x3d], 0xe8; cmc; mov ch, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0805c7e4: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0805c484: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x08054131: rcr byte ptr [edi + 0x5d], 1; ret; 
0x08061d8a: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x080c1cb9: rcr byte ptr [edi + 0x6d], cl; test eax, 0x7d4c8c5d; ret 0xd8f; 
0x08051ce5: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x08058667: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0805c487: rcr byte ptr [esi + 0x5f], 1; ret; 
0x080c67e8: rcr byte ptr [esi], 1; add byte ptr [eax], al; adc al, 0xbd; clc; jmp dword ptr [eax]; 
0x0805e6ea: rcr dh, 0xf8; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e9a9: rcr dword ptr [ebp - 0x3c7e0002], cl; jnp 0x169a1; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0809ee7b: rcr dword ptr [ecx], 1; rol byte ptr [ebx - 0x177cfd20], 1; pop ebx; pop esi; ret; 
0x08092221: rcr esi, 0xfb; inc dword ptr [ecx + 0x47ddbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x0806af9a: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0806b01d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0806aff3: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0806b05c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg eax, edi; mov esi, edx; ret; 
0x0806b0ab: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0805b679: rep stosd dword ptr es:[edi], eax; add esp, 4; pop ebx; pop edi; ret; 
0x0806b0a7: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x080a0eaf: repe cmpsb byte ptr [esi], byte ptr es:[edi]; jne 0x58ec0; pop ebx; pop esi; pop edi; ret; 
0x080c2063: repne scasd eax, dword ptr es:[edi]; daa; push esp; syscall; 
0x0804837f: ret 0; 
0x0808dd9f: ret 0x107; 
0x0806fe0c: ret 0x1089; 
0x080b81e0: ret 0x10; 
0x08099d7e: ret 0x10c; 
0x08073eb3: ret 0x1189; 
0x08076903: ret 0x11eb; 
0x0807dbca: ret 0x126; 
0x0806ebeb: ret 0x1275; 
0x0807301b: ret 0x142b; 
0x0809d872: ret 0x14; 
0x08098ff3: ret 0x1574; 
0x080678d7: ret 0x1676; 
0x0806dfbd: ret 0x1689; 
0x08074265: ret 0x1789; 
0x0804886c: ret 0x1796; 
0x080c2ae6: ret 0x198; 
0x0804ca75: ret 0x19eb; 
0x080c2216: ret 0x1ad4; 
0x080c09ad: ret 0x1b49; 
0x0805c26b: ret 0x1bf; 
0x080b9eb0: ret 0x1d4; 
0x080ba648: ret 0x1d5; 
0x0805c594: ret 0x1d75; 
0x080954fa: ret 0x1f6; 
0x0805c84c: ret 0x1f75; 
0x0805807f: ret 0x1f82; 
0x0807bfbf: ret 0x200; 
0x08057fe6: ret 0x201b; 
0x08081af3: ret 0x23e9; 
0x0806b3fa: ret 0x2474; 
0x080b8eb8: ret 0x24; 
0x08055491: ret 0x2501; 
0x08057a0a: ret 0x25f7; 
0x080678c7: ret 0x2676; 
0x080578ea: ret 0x2717; 
0x0809c771: ret 0x273; 
0x08066ff9: ret 0x275; 
0x080935eb: ret 0x27b8; 
0x080631fa: ret 0x280f; 
0x08057bce: ret 0x2874; 
0x080cbad7: ret 0x28; 
0x08056c2d: ret 0x28b; 
0x08049bc3: ret 0x2901; 
0x0805e98b: ret 0x2910; 
0x08097c75: ret 0x291d; 
0x0805da5b: ret 0x2a75; 
0x0806241a: ret 0x2c73; 
0x0806b571: ret 0x2c77; 
0x0805ce41: ret 0x2c8d; 
0x0806f050: ret 0x2d75; 
0x0807f973: ret 0x2deb; 
0x0804bb98: ret 0x2fe9; 
0x08057dd7: ret 0x301; 
0x08056fa6: ret 0x305b; 
0x0809352d: ret 0x3075; 
0x08056f56: ret 0x30ab; 
0x0808b350: ret 0x311e; 
0x08062ddb: ret 0x3273; 
0x0804cfdb: ret 0x3325; 
0x080b93a8: ret 0x33; 
0x080c1af6: ret 0x3827; 
0x08074a80: ret 0x383; 
0x08066fc3: ret 0x3875; 
0x080c0186: ret 0x38ae; 
0x0804d46b: ret 0x3901; 
0x08073ba9: ret 0x3904; 
0x0804cbf8: ret 0x3908; 
0x080922e7: ret 0x3910; 
0x080867b9: ret 0x3917; 
0x080678b4: ret 0x3976; 
0x080980bb: ret 0x3980; 
0x0807c83a: ret 0x3b01; 
0x0805ba4a: ret 0x3b75; 
0x08056348: ret 0x3cb9; 
0x0805b81e: ret 0x3e73; 
0x0807adff: ret 0x3e75; 
0x08082257: ret 0x3e9; 
0x08067d17: ret 0x3f; 
0x0804a29f: ret 0x408d; 
0x0806e0c0: ret 0x4189; 
0x08098ab9: ret 0x428b; 
0x0805e0f4: ret 0x428d; 
0x0805d177: ret 0x430f; 
0x0806bfe8: ret 0x4389; 
0x08076ea8: ret 0x440f; 
0x0806d3db: ret 0x4439; 
0x08053361: ret 0x4489; 
0x080494c6: ret 0x448b; 
0x08052ba9: ret 0x44c7; 
0x08093f97: ret 0x4503; 
0x0804a37e: ret 0x4589; 
0x0804adbc: ret 0x458b; 
0x08050916: ret 0x460f; 
0x0808f123: ret 0x4689; 
0x0805bf70: ret 0x468d; 
0x0809bcf4: ret 0x470f; 
0x080c0c84: ret 0x474c; 
0x0804f70d: ret 0x4774; 
0x080c2a6e: ret 0x48; 
0x08059feb: ret 0x48b; 
0x0805a331: ret 0x48d; 
0x080c2442: ret 0x48f; 
0x080493d4: ret 0x4976; 
0x08055678: ret 0x4989; 
0x080671f3: ret 0x498d; 
0x0804a4e5: ret 0x4a8d; 
0x08074033: ret 0x4b9; 
0x0806d0f4: ret 0x4c39; 
0x08062dc1: ret 0x4c73; 
0x08059d3e: ret 0x4c89; 
0x08048955: ret 0x4d89; 
0x0804fa46: ret 0x4d8b; 
0x08081cad: ret 0x4de9; 
0x080c1ea3: ret 0x4e27; 
0x0807c87f: ret 0x4e8d; 
0x080550f6: ret 0x4f0b; 
0x0804f714: ret 0x4f0f; 
0x080a8eb5: ret 0x5050; 
0x0804d699: ret 0x5052; 
0x080623f0: ret 0x5073; 
0x0805c3e0: ret 0x50e9; 
0x08058e7b: ret 0x5189; 
0x0804ad2d: ret 0x5201; 
0x0809ccf1: ret 0x5210; 
0x0806317e: ret 0x528d; 
0x0805f5a2: ret 0x5310; 
0x08058333: ret 0x5356; 
0x08066fa8: ret 0x5375; 
0x08050776: ret 0x5389; 
0x080547de: ret 0x540a; 
0x0806d210: ret 0x5422; 
0x080564d2: ret 0x542b; 
0x0806d0fd: ret 0x5488; 
0x08059765: ret 0x5489; 
0x0805a7a0: ret 0x548b; 
0x080c010c: ret 0x5508; 
0x0804ccd4: ret 0x5577; 
0x0804b4f2: ret 0x5589; 
0x08084c19: ret 0x558b; 
0x08050919: ret 0x558d; 
0x0806a5f4: ret 0x5608; 
0x0808e060: ret 0x5689; 
0x08054d14: ret 0x568b; 
0x08060a15: ret 0x5708; 
0x08067f98: ret 0x5710; 
0x08050615: ret 0x572b; 
0x080a4158: ret 0x574; 
0x0809944a: ret 0x5789; 
0x080994b3: ret 0x578b; 
0x080889a6: ret 0x57e9; 
0x080c23d4: ret 0x5803; 
0x080bfde0: ret 0x591c; 
0x08058424: ret 0x5975; 
0x080958fd: ret 0x59e9; 
0x080c0b47: ret 0x5ae4; 
0x0805438a: ret 0x5c77; 
0x08092c80: ret 0x5c8b; 
0x0805cb0a: ret 0x5de9; 
0x08095c1f: ret 0x5e74; 
0x08075cc5: ret 0x5e9; 
0x080547c3: ret 0x5f3c; 
0x08055e45: ret 0x6074; 
0x080623db: ret 0x6273; 
0x080c286e: ret 0x62c1; 
0x080725f9: ret 0x6474; 
0x0809cc15: ret 0x6601; 
0x0806a975: ret 0x6610; 
0x08066103: ret 0x6640; 
0x08062da7: ret 0x6673; 
0x0806ea6b: ret 0x66c3; 
0x0808c836: ret 0x66e9; 
0x0809d5fc: ret 0x674; 
0x080678e7: ret 0x676; 
0x080bfdff: ret 0x67b2; 
0x0806b635: ret 0x67e9; 
0x08093810: ret 0x67f1; 
0x08055a6f: ret 0x689; 
0x0805739f: ret 0x6a52; 
0x08099334: ret 0x6a; 
0x080905de: ret 0x6c3b; 
0x0809dbd3: ret 0x6d75; 
0x08067600: ret 0x6deb; 
0x080c29fd: ret 0x6f9; 
0x0808e9c4: ret 0x708d; 
0x08059d12: ret 0x72e9; 
0x08049c67: ret 0x73e9; 
0x08048639: ret 0x7401; 
0x0806fcce: ret 0x7404; 
0x08052421: ret 0x7420; 
0x080840e6: ret 0x7450; 
0x08095c96: ret 0x7459; 
0x0805ad58: ret 0x7489; 
0x0804d647: ret 0x74bf; 
0x0809621b: ret 0x74ff; 
0x08061d5f: ret 0x7501; 
0x08061d64: ret 0x7502; 
0x08091f69: ret 0x7503; 
0x08061d69: ret 0x7504; 
0x08061d6e: ret 0x7508; 
0x08061d73: ret 0x7510; 
0x08050207: ret 0x7520; 
0x08061d7d: ret 0x7540; 
0x080995db: ret 0x7589; 
0x0804b08e: ret 0x758d; 
0x0804d630: ret 0x75bf; 
0x0808db35: ret 0x768d; 
0x0809518a: ret 0x76ff; 
0x08059751: ret 0x7c78; 
0x080534a3: ret 0x7c8b; 
0x08078a16: ret 0x7ce9; 
0x08092226: ret 0x7ddb; 
0x08060a55: ret 0x7e10; 
0x080a6db7: ret 0x7e73; 
0x080a336a: ret 0x7eb; 
0x0808cba7: ret 0x7f3c; 
0x080a0436: ret 0x7fff; 
0x08048c17: ret 0x8000; 
0x080a94b1: ret 0x8001; 
0x0805eab5: ret 0x80; 
0x080a99be: ret 0x8166; 
0x0807e0c2: ret 0x820f; 
0x0804a32c: ret 0x8301; 
0x0806af01: ret 0x8304; 
0x0805f547: ret 0x8308; 
0x08060956: ret 0x830f; 
0x0806095e: ret 0x8310; 
0x0807f786: ret 0x831e; 
0x0806aee5: ret 0x8320; 
0x08071f15: ret 0x833c; 
0x08066154: ret 0x8340; 
0x080726fa: ret 0x8365; 
0x08052bcc: ret 0x83ff; 
0x08093c6a: ret 0x8401; 
0x0804d924: ret 0x840f; 
0x08058e6c: ret 0x8501; 
0x08080e69: ret 0x8504; 
0x08092c79: ret 0x8506; 
0x080a2b95: ret 0x850c; 
0x0804a867: ret 0x850f; 
0x08067d6a: ret 0x8540; 
0x08081c3f: ret 0x8589; 
0x0807eb00: ret 0x858b; 
0x08098fe5: ret 0x8603; 
0x08049196: ret 0x860f; 
0x08059e7f: ret 0x870f; 
0x080bf726: ret 0x871e; 
0x0808cbae: ret 0x875; 
0x080482ee: ret 0x8789; 
0x0804a39d: ret 0x8801; 
0x0807b286: ret 0x8802; 
0x0805de34: ret 0x8901; 
0x0806fcc0: ret 0x8902; 
0x08075cf6: ret 0x8904; 
0x08098a2d: ret 0x8908; 
0x0804f044: ret 0x8909; 
0x0807bb89: ret 0x8910; 
0x08058664: ret 0x895b; 
0x0805ad6d: ret 0x8977; 
0x0809d46a: ret 0x8b01; 
0x080a26d8: ret 0x8b02; 
0x0806af13: ret 0x8b04; 
0x0806f65c: ret 0x8b08; 
0x08094f80: ret 0x8b0c; 
0x080c1f4a: ret 0x8b36; 
0x0805ac79: ret 0x8b38; 
0x080a14c6: ret 0x8b3b; 
0x08071fa3: ret 0x8b3c; 
0x0808ee7e: ret 0x8b90; 
0x08084b39: ret 0x8c0f; 
0x080745ca: ret 0x8d01; 
0x0809f658: ret 0x8d04; 
0x080842b6: ret 0x8d08; 
0x0804f8b1: ret 0x8d0f; 
0x08067cb1: ret 0x8d10; 
0x0804f99f: ret 0x8d1e; 
0x0809ad45: ret 0x8d50; 
0x08088381: ret 0x8d88; 
0x08095179: ret 0x8d89; 
0x08084803: ret 0x8d8b; 
0x080960e2: ret 0x8d90; 
0x080736c0: ret 0x8dc3; 
0x080aa8ed: ret 0x8de8; 
0x0807e135: ret 0x8f0f; 
0x080710c6: ret 0x8f3b; 
0x0807b3ed: ret 0x9066; 
0x0804a85f: ret 0x920f; 
0x0805c0a8: ret 0x9374; 
0x080a6109: ret 0x938d; 
0x080a566e: ret 0x93e9; 
0x0808e47e: ret 0x940f; 
0x0806d0f1: ret 0x950f; 
0x08079645: ret 0x953b; 
0x080c0d73: ret 0x9576; 
0x08089524: ret 0x9589; 
0x080a5124: ret 0x958b; 
0x0804cd33: ret 0x97e8; 
0x080a6e35: ret 0x9872; 
0x08059250: ret 0x98b; 
0x080c29d5: ret 0x990e; 
0x08090666: ret 0x999b; 
0x08090636: ret 0x99cb; 
0x080980c2: ret 0x9da4; 
0x08048bea: ret 0x9da8; 
0x0809ce9b: ret 0xa068; 
0x0804ff8a: ret 0xa077; 
0x08056479: ret 0xa078; 
0x0806c22f: ret 0xa272; 
0x080488ed: ret 0xa498; 
0x080c0a63: ret 0xa514; 
0x08059ff0: ret 0xa76; 
0x0809d7d4: ret 0xa9e0; 
0x08071077: ret 0xa9e4; 
0x08095031: ret 0xa9f0; 
0x080b79e0: ret 0xa; 
0x080a385b: ret 0xaa00; 
0x080ac0cf: ret 0xaa28; 
0x0806edfb: ret 0xaa40; 
0x0806f45d: ret 0xaba4; 
0x080c0ee7: ret 0xac65; 
0x080c18a0: ret 0xacfc; 
0x0804fc71: ret 0xafc0; 
0x0808c7ed: ret 0xafe9; 
0x0805258b: ret 0xb080; 
0x0806ef0b: ret 0xb0f6; 
0x08051c99: ret 0xb314; 
0x0809eb58: ret 0xb4a9; 
0x080967a5: ret 0xb4ff; 
0x0809c7dd: ret 0xb58b; 
0x080497ed: ret 0xb608; 
0x0804a2e1: ret 0xb60f; 
0x080ab539: ret 0xb6eb; 
0x080a5dc1: ret 0xb70f; 
0x0808951c: ret 0xb8; 
0x08048bd7: ret 0xb8c0; 
0x0805e706: ret 0xb8fb; 
0x08048cbe: ret 0xb900; 
0x0805e6c6: ret 0xb93b; 
0x0805e686: ret 0xb97b; 
0x0806b5da: ret 0xb9; 
0x080c0dae: ret 0xb9b9; 
0x0805e646: ret 0xb9bb; 
0x0805e606: ret 0xb9fb; 
0x0805e5c6: ret 0xba3b; 
0x0809d3d1: ret 0xba; 
0x080a2bdc: ret 0xbcc8; 
0x08086650: ret 0xbcd9; 
0x0809d176: ret 0xbce0; 
0x0809bd6b: ret 0xbd83; 
0x0804c767: ret 0xbd89; 
0x08077e8d: ret 0xbdeb; 
0x080c0b04: ret 0xbe57; 
0x0809cfce: ret 0xbee0; 
0x0809ce3b: ret 0xbee4; 
0x080a275c: ret 0xbee8; 
0x080a2b6a: ret 0xbeec; 
0x0806fe64: ret 0xbf20; 
0x0806ffe2: ret 0xbf24; 
0x0806fce9: ret 0xbf28; 
0x080a1a6b: ret 0xbf40; 
0x080a255a: ret 0xbf4c; 
0x080493bd: ret 0xbf78; 
0x080490a2: ret 0xbf88; 
0x08085d58: ret 0xc031; 
0x08079bed: ret 0xc083; 
0x080670ee: ret 0xc085; 
0x080630af: ret 0xc0be; 
0x08087dcc: ret 0xc0c7; 
0x0804ef58: ret 0xc101; 
0x0805b773: ret 0xc189; 
0x0806d5b7: ret 0xc221; 
0x0808c0af: ret 0xc289; 
0x08062c29: ret 0xc2bb; 
0x08051ddd: ret 0xc301; 
0x080536d5: ret 0xc329; 
0x0809d3de: ret 0xc35f; 
0x0806dd14: ret 0xc389; 
0x0805db5f: ret 0xc3f3; 
0x08091f4b: ret 0xc3f6; 
0x0805dbf6: ret 0xc40b; 
0x0805dbb6: ret 0xc44b; 
0x0804ceea: ret 0xc483; 
0x0805db76: ret 0xc48b; 
0x080bf342: ret 0xc4c3; 
0x0805db36: ret 0xc4cb; 
0x080c06b8: ret 0xc4ff; 
0x080594f4: ret 0xc501; 
0x08090d03: ret 0xc529; 
0x0805a211: ret 0xc539; 
0x0809f62b: ret 0xc601; 
0x0806f77c: ret 0xc608; 
0x0805a348: ret 0xc701; 
0x0804e08c: ret 0xc702; 
0x080786f5: ret 0xc704; 
0x08085a7c: ret 0xc783; 
0x08086140: ret 0xc809; 
0x080a375e: ret 0xc839; 
0x0806e0af: ret 0xc883; 
0x08082c7e: ret 0xc889; 
0x0806fa11: ret 0xc931; 
0x0805cb91: ret 0xc974; 
0x0806f1ae: ret 0xc984; 
0x080a8a18: ret 0xc985; 
0x0809d82b: ret 0xc; 
0x08048593: ret 0xca21; 
0x080a2b37: ret 0xca29; 
0x0809bda8: ret 0xca39; 
0x0809aa53: ret 0xca73; 
0x0805a3fb: ret 0xca83; 
0x0805b400: ret 0xcb83; 
0x080d5c66: ret 0xcc0; 
0x080c014a: ret 0xcca7; 
0x080c2229: ret 0xcd11; 
0x080aa803: ret 0xcdeb; 
0x08085e7e: ret 0xce39; 
0x08093965: ret 0xce80; 
0x0804e533: ret 0xd021; 
0x0806e887: ret 0xd029; 
0x080493c8: ret 0xd039; 
0x0804cfeb: ret 0xd089; 
0x0807b734: ret 0xd139; 
0x08048689: ret 0xd189; 
0x0809b2b6: ret 0xd231; 
0x08049008: ret 0xd284; 
0x0809cd28: ret 0xd2d9; 
0x080757f8: ret 0xd2e9; 
0x0806ec01: ret 0xd2eb; 
0x0807441d: ret 0xd339; 
0x0809e22f: ret 0xd389; 
0x08059f4b: ret 0xd539; 
0x0808249d: ret 0xd639; 
0x0809d5ef: ret 0xd72; 
0x080a52ae: ret 0xd739; 
0x080a8a1f: ret 0xd789; 
0x08092321: ret 0xd7eb; 
0x08091fac: ret 0xd829; 
0x080a3125: ret 0xd875; 
0x080aa82f: ret 0xd889; 
0x08070232: ret 0xd8eb; 
0x080c1cc1: ret 0xd8f; 
0x08051849: ret 0xd989; 
0x080b7de0: ret 0xd; 
0x0804f357: ret 0xdaf7; 
0x0806601a: ret 0xdb31; 
0x0805ca0c: ret 0xdb85; 
0x0807c3da: ret 0xdc27; 
0x080a3395: ret 0xdc75; 
0x080c1da2: ret 0xdcd9; 
0x0809f189: ret 0xddf7; 
0x080c0d22: ret 0xde5d; 
0x0809b8ae: ret 0xde89; 
0x080bfab5: ret 0xde9e; 
0x0805c106: ret 0xdefb; 
0x08085267: ret 0xdf29; 
0x08055a64: ret 0xe083; 
0x0805e8ad: ret 0xe0c1; 
0x0806bf18: ret 0xe0e9; 
0x080a55dc: ret 0xe175; 
0x08067c81: ret 0xe183; 
0x08091345: ret 0xe280; 
0x0804e246: ret 0xe281; 
0x080489c8: ret 0xe283; 
0x08099e54: ret 0xe2c1; 
0x080cbafb: ret 0xe41; 
0x0806bbbd: ret 0xe444; 
0x0806bb46: ret 0xe4bb; 
0x0806b9ea: ret 0xe617; 
0x0809fa97: ret 0xe675; 
0x0808349f: ret 0xe680; 
0x080c1ec2: ret 0xe71f; 
0x0807ca9f: ret 0xe74; 
0x0807272e: ret 0xe7e9; 
0x0809ef96: ret 0xe829; 
0x08052d59: ret 0xe852; 
0x08095de5: ret 0xe883; 
0x080a7993: ret 0xe889; 
0x0809666f: ret 0xe8c0; 
0x0809c040: ret 0xe8c1; 
0x0804a589: ret 0xe901; 
0x0804a5ca: ret 0xe902; 
0x080c0227: ret 0xe970; 
0x08075ada: ret 0xe983; 
0x0808624a: ret 0xe; 
0x0806b569: ret 0xea81; 
0x08067655: ret 0xea83; 
0x0807dead: ret 0xeac0; 
0x080487de: ret 0xeac1; 
0x080973da: ret 0xead3; 
0x0807a31e: ret 0xebe9; 
0x080c29d4: ret 0xec2; 
0x0808e36b: ret 0xec83; 
0x0805c86d: ret 0xed85; 
0x0808548f: ret 0xee7f; 
0x080c2676: ret 0xef32; 
0x0804ccab: ret 0xf01; 
0x08066cca: ret 0xf02; 
0x08060bdf: ret 0xf04; 
0x08096589: ret 0xf089; 
0x08086ce1: ret 0xf08; 
0x08066c73: ret 0xf10; 
0x08066c84: ret 0xf20; 
0x080976ca: ret 0xf231; 
0x08083e99: ret 0xf339; 
0x0809fbe2: ret 0xf375; 
0x08066c95: ret 0xf40; 
0x08095f89: ret 0xf475; 
0x08085fc3: ret 0xf50; 
0x08096068: ret 0xf575; 
0x08091f66: ret 0xf601; 
0x080608b4: ret 0xf608; 
0x080a4314: ret 0xf610; 
0x0809350f: ret 0xf631; 
0x0805eea8: ret 0xf66; 
0x080ac3b8: ret 0xf6f9; 
0x080ac564: ret 0xf73f; 
0x0809dd06: ret 0xf75b; 
0x0805de0e: ret 0xf775; 
0x08051473: ret 0xf799; 
0x080a3de7: ret 0xf7f5; 
0x0807564b: ret 0xf800; 
0x080bf994: ret 0xf869; 
0x0807b591: ret 0xf889; 
0x0806e4d7: ret 0xf8c1; 
0x0805216c: ret 0xf989; 
0x0805e97a: ret 0xf; 
0x080547cd: ret 0xfa09; 
0x08059e6a: ret 0xfa81; 
0x08095f0f: ret 0xfa83; 
0x0805d9b6: ret 0xfa89; 
0x0809ec23: ret 0xfaa9; 
0x0804cff9: ret 0xfac1; 
0x0809df03: ret 0xfad1; 
0x080adb84: ret 0xfb12; 
0x080ade04: ret 0xfb15; 
0x080adee0: ret 0xfb46; 
0x080922c9: ret 0xfb89; 
0x0806c2cd: ret 0xfba9; 
0x0804d674: ret 0xfbf; 
0x0809033a: ret 0xfcc5; 
0x0807018a: ret 0xfd96; 
0x08092f9a: ret 0xfdbb; 
0x0808feaa: ret 0xfe03; 
0x0808632a: ret 0xfe50; 
0x08062c24: ret 0xff3; 
0x080578a7: ret 0xff50; 
0x0807f1a3: ret 0xff52; 
0x0806bbd2: ret 0xff65; 
0x0809aa2a: ret 0xff83; 
0x0805c5b3: ret 0xff85; 
0x080736b8: ret 0xffba; 
0x0807c08c: ret 0xffd0; 
0x0804ea99: ret 0xffe0; 
0x0808a2e6: ret 0xffe2; 
0x08083c8a: ret 0xfff0; 
0x0804bca2: ret 0xfff7; 
0x0804e190: ret 0xfff8; 
0x08083be5: ret 0xfff9; 
0x0809979a: ret 0xfffa; 
0x08096ea5: ret 0xfffb; 
0x0804f4a9: ret 0xfffc; 
0x0806c4d6: ret 0xfffd; 
0x0806c2e0: ret 0xfffe; 
0x0805bd80: ret 0xffff; 
0x0805294a: ret 1; 
0x0806ea4a: ret 2; 
0x080711ee: ret 3; 
0x0805d693: ret 4; 
0x080bba84: ret 5; 
0x0806ddd8: ret 6; 
0x0805ddbe: ret 7; 
0x080625a0: ret 8; 
0x080bc284: ret 9; 
0x080481b2: ret; 
0x0809ba0a: retf 0; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x41], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x08093351: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x080d13f1: retf 0; or al, 0x1f; cld; jmp dword ptr [eax]; 
0x0805703b: retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x080562ff: retf 0x2e76; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x080675dd: retf 0x3076; add eax, ecx; ret; 
0x08099445: retf 0x4d8b; or byte ptr [ecx], ch; ret 0x5789; 
0x080c0182: retf 0x6ee8; sahf; ret 0x38ae; 
0x08060a50: retf 0x761a; sub al, 0x83; ret 0x7e10; 
0x08089570: retf 0x8d8b; push 0x29fffff7; rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x0805b7b8: retf 0x901; ret 0x5189; 
0x080c5cd3: retf 0xa01; push cs; adc al, 0x41; ret; 
0x0805804d: retf 0xa75; add esp, 8; pop ebx; ret; 
0x08055fdf: retf 0xc483; adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x08062428: retf 0xc801; call 0x780; add ebx, 0x4ba78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x08062319: retf 0xc801; call 0x780; add ebx, 0x4bb87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0806700f: retf 0xc839; ja 0x1f020; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0806aca1: retf 0xce01; jmp ebx; 
0x08055e21: retf 0xd039; jbe 0xdef0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0808fb79: retf 0xf475; add eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x080ae6fc: retf 0xf927; call dword ptr [edx + 0x27]; 
0x08092948: retf 0xfe2e; call dword ptr [eax - 0x18]; 
0x080752ba: retf 0xfffe; dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x0806276b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x0809d526: retf 3; sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x080ada64: retf; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080d1455: retf; add byte ptr [eax], al; or byte ptr [edi], bl; cld; jmp dword ptr [esi]; 
0x0805db5a: retf; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080ce16d: retf; cli; call dword ptr [edx]; 
0x0807c1d1: retf; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x08073141: retf; mov ebx, 0x838dffff; mov ah, 0x57; std; call dword ptr [eax - 0x73]; 
0x080d328f: retf; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x080adce4: retf; pop ss; sti; inc dword ptr [esi - 0x490004ec]; adc al, 0xfb; jmp esi; 
0x080c010b: retf; ret 0x5508; 
0x0809ce36: retf; rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x080536c7: rol al, 0xaf; or eax, 0x14c2c708; mov bl, 0xd; or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x0806fa08: rol bh, 0xc7; insb byte ptr es:[edi], dx; mov edi, 0x440f080d; ret 0xc931; 
0x08082c72: rol bh, 1; ret 0xb314; 
0x080bb880: rol byte ptr [eax + eax], 0; ret 4; 
0x080579ac: rol byte ptr [eax + eax], 0; ret; 
0x080d1d7e: rol byte ptr [eax + ecx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0806fe00: rol byte ptr [eax - 0x3f38ffc8], cl; dec esp; mov edi, 0x940f080d; ret 0x1089; 
0x0806fe23: rol byte ptr [eax - 0x3f38ffc8], cl; inc eax; mov edi, 0x950f080d; ret 0x1089; 
0x0806fe46: rol byte ptr [eax - 0x3f38ffc8], cl; push 0xf080dbf; xchg eax, esp; ret 0x1089; 
0x0806fe28: rol byte ptr [eax - 0x41], 0xd; or byte ptr [edi], cl; xchg eax, ebp; ret 0x1089; 
0x0806b9b6: rol byte ptr [eax], 0; add byte ptr [ebp - 0x2bf9f7d], cl; call dword ptr [eax - 0x73]; 
0x0805e977: rol byte ptr [eax], 0xf7; ret 0xf; 
0x0805dc55: rol byte ptr [eax], cl; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0806bff0: rol byte ptr [ebp + 0x5b0b74d2], 0x5e; pop edi; ret; 
0x08067dc0: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x08050fdc: rol byte ptr [ebx + 0x525004ec], 1; push ebp; call ecx; 
0x0805348d: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x08054c2f: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x08087a36: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x080a94a7: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x0806da2f: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x08087936: rol byte ptr [ebx + 0x5e5b14c4], 0x5f; pop ebp; ret; 
0x0804d838: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x08054f5a: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0804f18b: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x080aa591: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x080a4cba: rol byte ptr [ebx + 0x758d04ec], 1; les edx, ptr [eax - 0x73]; adc dword ptr [eax], -0x56; cld; call dword ptr [eax + 0x56]; 
0x080d1d28: rol byte ptr [ebx + ebx*2], 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x0809ee7d: rol byte ptr [ebx - 0x177cfd20], 1; pop ebx; pop esi; ret; 
0x08076595: rol byte ptr [ebx - 0x2a898008], 0x2d; ret 0; 
0x0805c9a9: rol byte ptr [ebx - 0x3b7cef3c], 1; adc al, 0x5b; pop esi; ret; 
0x080a47b1: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0809aa24: rol byte ptr [ebx - 0x6bf0d601], cl; ret 0xff83; 
0x08099e4e: rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xe2c1; 
0x080755d6: rol byte ptr [ebx - 0x77ccf3c], 1; add al, 0x89; ret 0x840f; 
0x08091b26: rol byte ptr [ebx], 0x5f; ret; 
0x080c4ce8: rol byte ptr [ebx], 1; add byte ptr [eax], al; hlt; dec ecx; clc; jmp dword ptr [ecx + 1]; 
0x080a7f0a: rol byte ptr [ebx], cl; test byte ptr [eax - 0x157bc], dl; jmp eax; 
0x0806b560: rol byte ptr [ecx + 0xbefe], cl; add byte ptr [edi], cl; lahf; ret 0xea81; 
0x0808548a: rol byte ptr [ecx], 0x29; fidivr dword ptr [ecx]; ret 0xee7f; 
0x080a0933: rol byte ptr [ecx], 0x29; ret 0xd089; 
0x0804f70a: rol byte ptr [ecx], 0x39; ret 0x4774; 
0x080a55d9: rol byte ptr [ecx], 0x39; ret 0xe175; 
0x08095f86: rol byte ptr [ecx], 0x39; ret 0xf475; 
0x08096065: rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08077338: rol byte ptr [ecx], 0x39; ret; 
0x080c69b7: rol byte ptr [ecx], 0x48; push cs; mov al, 1; add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0809246d: rol byte ptr [ecx], 0x50; push edi; lea eax, [esp + 0x40]; push eax; push dword ptr [ebp]; call esi; 
0x080cdf03: rol byte ptr [ecx], 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08091ee1: rol byte ptr [ecx], 0x5f; ret; 
0x08073da2: rol byte ptr [ecx], 0x83; ret 0x3901; 
0x0807c837: rol byte ptr [ecx], 0x83; ret 0x3b01; 
0x0807585a: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x080737c2: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x080a3958: rol byte ptr [ecx], 0x83; ret; 
0x08093c61: rol byte ptr [ecx], 0x88; or cl, byte ptr [edi]; mov dh, 0x4d; in al, 0x83; ret 0x8401; 
0x08073018: rol byte ptr [ecx], 0x89; ret 0x142b; 
0x08048686: rol byte ptr [ecx], 0x89; ret 0xd189; 
0x08050202: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0x7520; 
0x08067c9c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x08067e02: rol byte ptr [ecx], 0xd0; ret; 
0x08067882: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x08091815: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x08077186: rol byte ptr [ecx], 0xf; mov dh, 0x48; dec dword ptr [eax - 0x7cb5ebb4]; ret 0x8301; 
0x08066d3c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x08049c5d: rol byte ptr [ecx], 1; sar dword ptr [ecx], cl; push ebp; mov esp, 0x89c3470f; ret 0x73e9; 
0x080c6c05: rol byte ptr [ecx], 2; inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c612d: rol byte ptr [ecx], 2; pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d585c: rol byte ptr [ecx], 2; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08091b4c: rol byte ptr [edi], 0x5f; ret; 
0x08091ee6: rol byte ptr [edx], 0x5f; ret; 
0x080d57ff: rol byte ptr [edx], 1; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080ce497: rol byte ptr [edx], 3; pop es; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x080a45bd: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x5c580; jmp eax; 
0x08091efa: rol byte ptr [esi], 0x5f; ret; 
0x080bdf40: rol byte ptr [esp + edi*8], 1; ljmp [eax + 4]; cld; lcall [esi]; or al, 0xfc; call dword ptr [ecx]; 
0x080bf340: rol cl, 0xc2; ret; 
0x0808fb8b: rol cl, 1; clc; add al, byte ptr [ebx + 0x5e5b01e8]; ret; 
0x080885ef: rol cl, 1; clc; add dl, byte ptr [eax + 0x52]; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x08082511: rol dh, cl; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08092b7a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0806082c: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0806aaac: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0x22ab4; inc eax; pop edi; ret; 
0x080d0ab9: rol dword ptr [eax], 0; xchg eax, esp; or edi, esp; jmp esi; 
0x080d1a51: rol dword ptr [eax], 1; add byte ptr [ecx + eax*2 - 4], bl; call dword ptr [ebx + 1]; 
0x08067861: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0806732f: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08067827: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0808a013: rol dword ptr [ebp - 0x74fb742e], 0x89; ror dword ptr [ecx - 0x161e8afa], 1; mov esp, 0xf6fffff3; ret 0xf10; 
0x08050fe4: rol dword ptr [ebx - 0x7666ef3c], 1; ret; 
0x08089578: rol dword ptr [ebx - 0x8cb43], 1; call dword ptr [eax]; 
0x08057398: rol dword ptr [ebx - 0xcefb14], 0x29; ret 0x6a52; 
0x0809ce97: rol dword ptr [ebx], 1; add bh, al; ret 0xa068; 
0x0809ce37: rol dword ptr [ebx], 1; add bh, al; ret 0xbee4; 
0x080cbaff: rol dword ptr [ecx + 0xe], 4; ret; 
0x08073ba6: rol dword ptr [ecx], 0x83; ret 0x3904; 
0x080a2bd6: rol dword ptr [ecx], 0x89; dec edx; or bh, al; ret 0xbcc8; 
0x0809fe8d: rol dword ptr [ecx], 0x89; dec esp; add byte ptr [ebx + eax*4], 0xc0; add dword ptr [ebp + 0x390475c9], eax; ret; 
0x0809fa85: rol dword ptr [ecx], 0x89; dec esp; xchg eax, ebx; add al, 0x83; ret 0x8501; 
0x080a388e: rol dword ptr [ecx], cl; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x34]; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x080bff2a: rol dword ptr [edi + 0x42923bbd], 1; jmp dword ptr [edx - 0x71]; 
0x080a7d87: rol dword ptr [edi], 9; ret; 
0x080bf58d: rol dword ptr [edx + 0x3c], cl; push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x080ca760: rol dword ptr [edx], cl; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e5b02], al; ret; 
0x0804e299: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0809502f: rol edi, 1; ret 0xa9f0; 
0x080a134f: rol edi, cl; ret; 
0x080b7c88: ror byte ptr [eax + eax], 0; ret; 
0x0809b6c3: ror byte ptr [eax], 0x39; ret; 
0x08091f04: ror byte ptr [eax], 0x5f; ret; 
0x0806a5f1: ror byte ptr [eax], 0x83; ret 0x5608; 
0x08060a12: ror byte ptr [eax], 0x83; ret 0x5708; 
0x080608b1: ror byte ptr [eax], 0x83; ret 0xf608; 
0x08096058: ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x08093cf1: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x080980ac: ror byte ptr [ebp - 0x1c8e07a], cl; dec dword ptr [ebp - 0x1c8ea6a]; dec dword ptr [edi]; inc ebp; ret 0x3980; 
0x0809b82b: ror byte ptr [ebp - 0x38ffd98c], 0x44; ret; 
0x08095842: ror byte ptr [ebp*4 - 0x137cf7f3], 0xc; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x08059e64: ror byte ptr [ebx + 0x1242454], 1; ret 0xfa81; 
0x0804dc65: ror byte ptr [ebx + 0x24b89794], cl; std; inc dword ptr [ecx]; cli; jmp edx; 
0x08052235: ror byte ptr [ebx + 0x4d8bc455], 0xc8; lea esi, [esi]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0806d904: ror byte ptr [ebx + ecx*4], 1; push esp; and al, 0x14; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x080a7c41: ror byte ptr [ebx - 0x5b777874], 0xfe; inc dword ptr [ecx]; stc; jmp ecx; 
0x08093735: ror byte ptr [ebx - 0x72bbdb8c], 0x54; and al, 8; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x08049d72: ror byte ptr [ebx - 0x76fb07bc], cl; ret; 
0x08080005: ror byte ptr [ebx - 0x88763], cl; call dword ptr [edx + 0x51]; 
0x08091b73: ror byte ptr [ebx], 0x5f; ret; 
0x08048653: ror byte ptr [ecx + 0x21202454], 1; ret; 
0x0809b955: ror byte ptr [ecx + 0x2175cc45], 0x8b; pop ebp; les ecx, ptr [ebp - 0x1becc7d]; call dword ptr [eax + 0x6a]; 
0x080723b6: ror byte ptr [ecx + 0x27bc8df6], 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cacf314], al; ret; 
0x08093f90: ror byte ptr [ecx + 0x4ec83f2], 0x29; ret 0x4503; 
0x080a3019: ror byte ptr [ecx + 0x66c389de], 1; nop; call dword ptr [esi]; 
0x0809d731: ror byte ptr [ecx - 0x38c18af9], 0xc0; sub al, 0xbf; or eax, 0x1be08; add byte ptr [eax], al; call dword ptr [eax]; 
0x0809edf6: ror byte ptr [ecx - 0x3b7ce7ba], 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0806e1dc: ror byte ptr [ecx - 0x74fbe1bc], 1; inc edx; add al, 0x89; ret 0xe283; 
0x08091f09: ror byte ptr [ecx], 0x5f; ret; 
0x080abf2a: ror byte ptr [ecx], cl; sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0809aabd: ror byte ptr [edi], 0x44; ret 0x558b; 
0x0806ea68: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0809ad42: ror byte ptr [edi], 0x44; ret 0x8d50; 
0x080a6106: ror byte ptr [edi], 0x44; ret 0x938d; 
0x080a566b: ror byte ptr [edi], 0x44; ret 0x93e9; 
0x080a5a36: ror byte ptr [edi], 0x44; ret 0xec83; 
0x0806bbcf: ror byte ptr [edi], 0x44; ret 0xff65; 
0x080a226e: ror byte ptr [edi], 0x44; ret; 
0x0805787a: ror byte ptr [edi], 0x48; ret 0x4489; 
0x080578a4: ror byte ptr [edi], 0x48; ret 0xff50; 
0x08091b9c: ror byte ptr [edi], 0x5f; ret; 
0x0808903f: ror byte ptr [edi], 0x84; add byte ptr [eax], 0; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x08080e9c: ror byte ptr [edi], 0x84; call dword ptr [eax]; 
0x080817f1: ror byte ptr [edi], 0x84; nop; add byte ptr [eax], al; add byte ptr [ebx - 0x4cf43], al; call dword ptr [eax]; 
0x0809b113: ror byte ptr [edi], 0x84; pop ss; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0809b04f: ror byte ptr [edi], 0x84; pushfd; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x0807d79e: ror byte ptr [edi], 0x84; ret; 
0x080a2695: ror byte ptr [edi], 0x84; xchg eax, esp; add al, byte ptr [eax]; add byte ptr [ebp + 0x15c97], cl; add byte ptr [ecx], bh; ret 0x5589; 
0x08095604: ror byte ptr [edi], 0x85; hlt; idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x0805c63d: ror byte ptr [edi], 0x85; lodsb al, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0ef05], al; ret; 
0x08067829: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0806778b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0805234f: ror byte ptr [edi], 0x85; ret; 
0x08049096: ror byte ptr [edi], 0x88; add eax, 0x8b000001; je 0x10c4; or al, 0xc7; ret 0xbf88; 
0x0806e884: ror byte ptr [edi], 0x92; ret 0xd029; 
0x0808cba4: ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x080a0f99: ror byte ptr [edi], 0x94; ret 0x950f; 
0x0807272b: ror byte ptr [edi], 0x94; ret 0xe7e9; 
0x0806a98d: ror byte ptr [edi], 0x94; ret; 
0x0804fed6: ror byte ptr [edi], 0x95; ret 0xdaf7; 
0x080a47ae: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0809f320: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x08080fda: ror byte ptr [edi], 0xb6; inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x08080cda: ror byte ptr [edi], 0xb6; inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08081075: ror byte ptr [edi], 0xb6; inc esp; xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x08054451: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 8; pop ebx; ret; 
0x080b0358: ror byte ptr [edi], 0xfa; push dword ptr [eax + 0xf]; cli; jmp dword ptr [eax + 0xf]; 
0x0809b2db: ror byte ptr [edi], 1; inc ebp; ret; 
0x08091fa9: ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x08091740: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0806e4d4: ror byte ptr [edi], cl; dec ecx; ret 0xf8c1; 
0x0808ebf5: ror byte ptr [edi], cl; inc ebp; inc ebp; in al, 0xc7; ret 0xafc0; 
0x080a134c: ror byte ptr [edi], cl; inc esp; rol edi, cl; ret; 
0x08075643: ror byte ptr [edi], cl; mov bl, ch; add al, byte ptr [eax]; add bh, dh; ret 0xf800; 
0x080736b5: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x08061d57: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x080490aa: ror byte ptr [edi], cl; test esp, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x0804e530: ror byte ptr [edi], cl; xchg eax, ebp; ret 0xd021; 
0x08091f0e: ror byte ptr [edx], 0x5f; ret; 
0x08091f22: ror byte ptr [esi], 0x5f; ret; 
0x080a286a: ror byte ptr gs:[ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x080c4480: ror dh, 0xfc; jmp eax; 
0x080670e7: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x08091bfa: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x49c10; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0807c1fb: ror dword ptr [ebx + 0x1302494], 0; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0804c9ea: ror dword ptr [ebx + 0x200091], cl; add byte ptr [ecx], bh; ret; 
0x0806e1d9: ror dword ptr [ecx + 0x4489d045], 1; push ds; add al, 0x8b; inc edx; add al, 0x89; ret 0xe283; 
0x0808a01a: ror dword ptr [ecx - 0x161e8afa], 1; mov esp, 0xf6fffff3; ret 0xf10; 
0x0804e29a: ror dword ptr [ecx], 0x89; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x08050e07: ror dword ptr [ecx], cl; ret; 
0x08089139: ror dword ptr [edi], 0x85; ret; 
0x080ce45a: ror dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0804ed0e: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0809d534: sahf; adc al, byte ptr [ebp - 2]; jmp dword ptr [ebp - 1]; 
0x080cf931: sahf; adc byte ptr cs:[edx], al; ja 0x87941; ret; 
0x080bffd2: sahf; int 0xe0; fdivr st(4); test al, 0x97; xchg eax, esp; ret; 
0x080cadc7: sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c0185: sahf; ret 0x38ae; 
0x0804fc6b: sahf; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0805ce31: sal al, 0xa9; or eax, 0x244c8b08; sbb al, 0x8b; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x08054454: sal bh, 0xd8; add esp, 8; pop ebx; ret; 
0x080a1305: sal bh, 0xd8; mov ecx, dword ptr [esp + 0x1c]; xor ecx, dword ptr gs:[0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a0152: sal bh, 0xd8; pop esi; pop edi; ret; 
0x080a47b7: sal bh, 0xd8; ret; 
0x080c48d8: sal bl, 0xfc; jmp dword ptr [eax - 0xd]; 
0x080c48d4: sal bl, 1; cld; inc eax; cld; jmp dword ptr [eax - 0xd]; 
0x080972c8: sal byte ptr [eax + ecx*4 - 0x73], 0x83; inc esp; cmp esi, edi; call dword ptr [eax - 0x73]; 
0x08079be1: sal byte ptr [eax + edx - 0x7b], cl; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x080a95b1: sal byte ptr [ebp + 0x16], 0x83; les ecx, ptr [eax]; mov eax, 4; pop ebx; ret; 
0x0806cb88: sal byte ptr [ebp + 0x1d], 0xb8; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0806cab8: sal byte ptr [ebp + 0x1d], 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0809d7d0: sal byte ptr [ebp + 0x2d], 0xc7; ret 0xa9e0; 
0x0806c9a6: sal byte ptr [ebp + 0x37], 0xb8; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x08067de0: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0806cd3e: sal byte ptr [ebp + 0x3f], 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806da06: sal byte ptr [ebp + 0x47], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0806eb72: sal byte ptr [ebp + 0xc], 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x08091bff: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08098f4a: sal byte ptr [ebp + 6], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0809b0ab: sal byte ptr [ebp + 8], cl; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x08071934: sal byte ptr [ebp + ebp*8 - 0x73], 0x83; inc eax; push esi; std; call dword ptr [eax - 0x73]; 
0x080abdbc: sal byte ptr [ebp + ecx - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x080a49db: sal byte ptr [ebp + edx - 0x7d], cl; ret; 
0x0806eb86: sal byte ptr [ebp - 0x14], 0x5e; pop ebx; pop edx; ret; 
0x0804af06: sal byte ptr [ebp - 0x3a], 0x83; ret; 
0x0806da24: sal byte ptr [ebp - 0x45], 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x08096d9b: sal byte ptr [ebp - 0x7e], 0xeb; ret; 
0x08071f11: sal byte ptr [ebp - 0xc], 0x6b; ret 0x833c; 
0x08056c31: sal byte ptr [ebp - 0xc], 0xf3; ret; 
0x0805602b: sal byte ptr [ebp - 0xe], 0xf3; ret; 
0x0806bff2: sal byte ptr [ebx + ecx + 0x5b], cl; pop esi; pop edi; ret; 
0x0808870a: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x0807b398: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x08093bc7: sal byte ptr [ecx], 1; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x08093f8e: sal byte ptr [ecx], 1; ror byte ptr [ecx + 0x4ec83f2], 0x29; ret 0x4503; 
0x0806eb4b: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0809094c: sal byte ptr [ecx], 1; test byte ptr [ebx + 0x2b102454], 0x94; and al, 0x60; add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x080a3030: sal byte ptr [edi + eax - 0x75], cl; push es; add eax, dword ptr [edx + 4]; call eax; 
0x0807f02c: sal byte ptr [edi + edi*2 - 0x7d], 0xbd; inc eax; idiv edi; call dword ptr [eax]; 
0x08092b76: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0808f40e: sal byte ptr [edi + esi - 0x75], 0xae; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x08089ac3: sal byte ptr [edx + eax*2 - 0x7d], 0xec; add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x080abaed: sal byte ptr [edx + ecx - 0x77], 0x54; and al, 8; call eax; 
0x0807a244: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 8; call edx; 
0x08058cfb: sal byte ptr [edx + edx - 0x39], cl; sbb byte ptr [eax + 0x18], 0; add byte ptr [eax], al; ret; 
0x0806fcb9: sal byte ptr [edx - 0x75], 0x50; add al, 0xf6; ret 0x8902; 
0x0808f56f: sal byte ptr [esi + ecx - 0x7d], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x08067c97: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x080701e9: sal byte ptr [esp + ecx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x08096054: sal byte ptr [esp + edx + 0x31], cl; ror byte ptr [ebp + 0x26b4], 0; add byte ptr [ecx - 0x7ceb7ab4], cl; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0806ddae: sal byte ptr [esp + edx - 0x73], 0x53; add al, 0x83; ret; 
0x0807e334: sal byte ptr [esp + esi*2 - 0x7d], 0xbd; inc eax; idiv edi; call dword ptr [eax]; 
0x0809b5ea: sal dh, 1; shl dword ptr [eax], 0xf; xchg eax, ebp; ret 0x940f; 
0x080563d9: sal dword ptr [ebp - 0xc], 1; mov eax, dword ptr [esp + 8]; add eax, ebx; pop ebx; ret; 
0x0805e899: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x0806af99: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0806b0aa: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x080ada84: salc; adc bh, bl; call dword ptr [esi]; 
0x0806da11: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080adf40: salc; dec eax; sti; jmp dword ptr [esi + 0x49]; 
0x0805ed45: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0805edb5: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0806afa0: salc; mov eax, dword ptr [esp + 4]; ret; 
0x0806b020: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0806aff6: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x08099d55: salc; push cs; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x0804d954: salc; push es; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x2db80]; add ecx, edi; jmp ecx; 
0x0806b060: salc; ret; 
0x080c010a: salc; retf; ret 0x5508; 
0x080ca52d: salc; stc; call dword ptr [ebx]; 
0x080d4455: sar ah, 1; jmp dword ptr [ebx]; 
0x080d43f1: sar ah, 1; jmp dword ptr [edi]; 
0x080d46b9: sar ah, cl; call dword ptr [ebx]; 
0x080c4409: sar ah, cl; jmp eax; 
0x080c6f0d: sar al, 1; call dword ptr [esi]; 
0x0805e5ea: sar al, 1; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080c6f55: sar al, 1; jmp edx; 
0x080c70b1: sar al, cl; jmp dword ptr [edi]; 
0x0809638d: sar bh, 0xff; call dword ptr [eax - 0x39]; 
0x08062d9b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0808b9cb: sar bl, 0xff; call dword ptr [eax - 0x73]; 
0x0808b9c5: sar bl, 0xff; dec dword ptr [ebp - 0x43f7b]; call dword ptr [eax - 0x73]; 
0x080bcd94: sar byte ptr [0x3ec0fffb], 1; sti; inc eax; sti; call eax; 
0x080c09fd: sar byte ptr [0x733db8a1], 0xd7; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x0805ce2d: sar byte ptr [eax + 0x30], 0xc7; sal al, 0xa9; or eax, 0x244c8b08; sbb al, 0x8b; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x0807c300: sar byte ptr [eax + 0xae], 1; call dword ptr gs:[0x10]; 
0x0808e95b: sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x08099008: sar byte ptr [eax + 6], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080aa06d: sar byte ptr [eax - 0x30], 0x83; inc esp; and al, 0x18; add al, 0x83; ret; 
0x08048bd8: sar byte ptr [eax - 0x7374f7f3], 0x24; cwde; add byte ptr [eax], al; add byte ptr [ebp - 0x76fb4fbc], cl; add al, bh; ret 0x9da8; 
0x080754aa: sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x08094dcf: sar byte ptr [eax], 0xf; inc ebp; ret 0x8789; 
0x08078426: sar byte ptr [eax], 0xf; inc ebp; ret; 
0x080d06d8: sar byte ptr [ebp + 0x4a40000], 0xfc; jmp esi; 
0x0806eb4d: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x080993e6: sar byte ptr [ecx], 1; ret 0x830f; 
0x08073b80: sar byte ptr [ecx], 1; ret; 
0x08067f34: sar byte ptr [edi], 0xfd; jmp dword ptr [esi + 0xf]; 
0x08067f64: sar byte ptr [edi], 1; std; jmp dword ptr [esi + 0xf]; 
0x08079be5: sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x08087634: sar byte ptr [esi + 0x51], 0x89; ret; 
0x0807c223: sar byte ptr [esi + 8], cl; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x080c0b1f: sar byte ptr [esi + eax*2], 0xf8; mov ch, 0x36; push ecx; call dword ptr [esi]; 
0x080bcd1c: sar byte ptr [esi], 0xfb; call eax; 
0x080bcd18: sar byte ptr [esi], 0xfb; inc eax; sti; call eax; 
0x080bcd14: sar byte ptr [esi], 0xfb; inc eax; sti; inc eax; sti; call eax; 
0x080bcd6c: sar byte ptr [esi], 0xfb; inc eax; sti; inc eax; sti; jmp dword ptr [eax]; 
0x080bcd70: sar byte ptr [esi], 0xfb; inc eax; sti; jmp dword ptr [eax]; 
0x080bcd74: sar byte ptr [esi], 0xfb; jmp dword ptr [eax]; 
0x080bcd88: sar byte ptr [esi], 0xfb; lcall [eax + 0x3e]; sti; inc eax; sti; call eax; 
0x0809bce6: sar ch, 0xff; inc dword ptr [ebx - 0x7bf00006]; pop ds; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x080a05b0: sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0809d520: sar dl, 0xff; add esi, 0x3cadd; sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0806d957: sar dword ptr [0xfffff001], cl; jae 0x290c0; ret; 
0x080a8896: sar dword ptr [ecx], 1; dec edi; adc byte ptr [edi], cl; xchg eax, esp; ret; 
0x08049c5f: sar dword ptr [ecx], cl; push ebp; mov esp, 0x89c3470f; ret 0x73e9; 
0x0809598b: sar dword ptr [esi], 0xfb; dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x08093654: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x080a49f8: sar eax, 2; pop esi; pop edi; ret; 
0x0808ad9f: sar eax, 2; push eax; push edi; push dword ptr [ebp - 0x45c]; call dword ptr [ecx + 0x1c]; 
0x080885f0: sar eax, 2; push eax; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808fb8c: sar eax, 2; sub eax, 1; pop ebx; pop esi; ret; 
0x080abceb: sar ebp, 0xff; inc edi; ret 0; 
0x0806d6d8: sar ebp, 0xff; jmp dword ptr [ebp - 0x39]; 
0x080710b1: sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0808d2c0: sar ebp, 2; push ebp; push eax; push esi; call dword ptr [ecx + 0x1c]; 
0x080c0883: sar ecx, 1; jnp 0x78840; ret; 
0x080ca519: sar ecx, cl; call dword ptr [ebx]; 
0x08062cdb: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x0808fc2b: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x08087ecc: sar esi, 2; push esi; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080799da: sar esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x080c43f5: sar esp, 1; jmp dword ptr [eax - 0x2f]; 
0x080c4411: sar esp, cl; dec eax; sar esp, cl; lcall [eax]; aam 0xfc; call dword ptr [eax - 0x2b]; 
0x080a1951: sar esp, cl; jmp dword ptr [esi - 0x70]; 
0x080c4415: sar esp, cl; lcall [eax]; aam 0xfc; call dword ptr [eax - 0x2b]; 
0x080c4418: sbb ah, dl; cld; call dword ptr [eax - 0x2b]; 
0x080aadf5: sbb al, 0; add byte ptr [ebx - 0x17aff314], al; call dword ptr [ecx - 0xb]; 
0x080a47de: sbb al, 0; add byte ptr [ecx - 0x3b7cf3ba], cl; adc al, 0x5b; pop esi; ret; 
0x0809d52b: sbb al, 0x10; add byte ptr [eax], al; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x0806cf84: sbb al, 0x24; call dword ptr gs:[0x10]; 
0x08048764: sbb al, 0x24; ret; 
0x080c7634: sbb al, 0x2d; add byte ptr [eax], al; cmp al, ah; clc; call dword ptr [edi]; 
0x080c7834: sbb al, 0x2f; add byte ptr [eax], al; sbb bl, ah; clc; call dword ptr [edi]; 
0x0804d4bd: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x080a4479: sbb al, 0x3b; add cl, byte ptr [ebx + 0xf082444]; inc edi; ret 0x4489; 
0x080d4896: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [eax + 0xa], dl; ret; 
0x080c72e5: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d3474: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x080cff71: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], cl; ret; 
0x080c5f4c: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edx + 0xa], dl; ret; 
0x080cf8e1: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], al; ret; 
0x080cc9a9: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080ceb74: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xa], dl; ret; 
0x080c682b: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], bl; or al, 0x41; ret; 
0x080c8240: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c96d3: sbb al, 0x41; push cs; and byte ptr [eax + 0xe], cl; or al, 0x43; ret; 
0x080cb686: sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], al; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7688: sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], bl; or al, 0x41; ret; 
0x080cad3b: sbb al, 0x41; push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [edi + 0xa], al; ret; 
0x080ceb92: sbb al, 0x41; push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080cc602: sbb al, 0x41; push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [ebp + 0xa], al; ret; 
0x080d4429: sbb al, 0x41; push cs; and byte ptr [edx + 0xe], cl; adc byte ptr [esi + 0xa], cl; ret; 
0x080d009e: sbb al, 0x41; push cs; and byte ptr [esi + 0xe], al; adc byte ptr [ecx + 0xa], cl; ret; 
0x080c7850: sbb al, 0x41; push cs; and byte ptr [esi + 0xe], al; adc byte ptr [edx + ecx + 0xe], dl; or al, 0x41; ret; 
0x080ce0ca: sbb al, 0x41; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080cc6e7: sbb al, 0x41; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080c7b83: sbb al, 0x41; push cs; and byte ptr [esi + 0xe], dl; adc byte ptr [ecx + 0xe], cl; or al, 0x43; ret; 
0x080d3662: sbb al, 0x42; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [esi + 0xe], cl; or al, 0x43; ret; 
0x080cac43: sbb al, 0x42; push cs; and byte ptr [eax + 0xe], dl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d632e: sbb al, 0x42; push cs; and byte ptr [eax + 0xe], dl; or al, 0x43; ret; 
0x080d12cb: sbb al, 0x42; push cs; and byte ptr [ebp + 0xe], bh; or al, 0x41; ret; 
0x080cb6de: sbb al, 0x42; push cs; and byte ptr [ebp + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d4f47: sbb al, 0x42; push cs; and byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080c4f05: sbb al, 0x43; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], cl; ret; 
0x080c6962: sbb al, 0x43; push cs; and byte ptr [eax + 0xe], cl; or al, 0x41; ret; 
0x080c7450: sbb al, 0x43; push cs; and byte ptr [ebx + 0xe], cl; adc byte ptr [ebp + 0xe], cl; or al, 0x41; ret; 
0x080c6a5c: sbb al, 0x43; push cs; and byte ptr [esi + 0xe], cl; adc byte ptr [ecx + 0xa], ah; ret; 
0x080d2dc6: sbb al, 0x44; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xa], al; ret; 
0x080d40b0: sbb al, 0x46; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ebx + 0xe], al; or al, 0x41; ret; 
0x080d2488: sbb al, 0x46; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [ecx + 0xa], al; ret; 
0x080d29ad: sbb al, 0x47; push cs; and byte ptr [eax + 0xe], cl; adc byte ptr [edi + 0xa], cl; ret; 
0x080d3029: sbb al, 0x47; push cs; and byte ptr [esi + ecx + 0xc], bl; inc ecx; ret; 
0x080578ac: sbb al, 0x53; call 0xf7e0; or dword ptr [ebx], 8; add esp, 0x18; pop ebx; ret; 
0x0804e5e9: sbb al, 0x55; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0804e795: sbb al, 0x57; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080c6fed: sbb al, 0x59; push cs; and byte ptr [edi + 0xe], cl; or al, 0x41; ret; 
0x08096250: sbb al, 0x5b; mov eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0808d78b: sbb al, 0x5b; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x08087d1a: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x080530ea: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x08049686: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x08053cf7: sbb al, 0x5b; pop esi; sub eax, ebp; pop edi; pop ebp; ret; 
0x0809e871: sbb al, 0x65; xor eax, dword ptr [0x14]; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0809e63c: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d1: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e971: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea55: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a130b: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a1402: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a475a: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64b9: sbb al, 0x65; xor ecx, dword ptr [0x14]; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x080933a6: sbb al, 0x75; pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x080a78a5: sbb al, 0x83; in al, dx; or al, 0x89; ret 0x74ff; 
0x080a8c9c: sbb al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0808fe2b: sbb al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080a2141: sbb al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0805dd73: sbb al, 0x83; ret; 
0x080489ac: sbb al, 0x89; dec ebp; and byte ptr [ecx + 0x5d8b2455], cl; adc bh, dh; ret; 
0x0804cd0e: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0805335f: sbb al, 0x89; ret 0x4489; 
0x08055e43: sbb al, 0x89; ret 0x6074; 
0x08058662: sbb al, 0x89; ret 0x895b; 
0x0808f116: sbb al, 0x89; ret 0xca83; 
0x0805b782: sbb al, 0x89; ret 0xe283; 
0x080a9e7e: sbb al, 0x89; ret 0xec83; 
0x08094dbf: sbb al, 0x89; xchg dword ptr [eax], edi; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x0805ce39: sbb al, 0x8b; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x0806ac9e: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x0805e8cc: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x08059e7a: sbb al, 0x8b; inc eax; or al, 0x39; ret 0x870f; 
0x08062328: sbb al, 0x8b; jmp ebx; 
0x080a49d6: sbb al, 0x8b; push ebx; add al, 0x85; sal byte ptr [ebp + edx - 0x7d], cl; ret; 
0x080c0880: sbb al, 0x90; push ds; sar ecx, 1; jnp 0x78840; ret; 
0x080d3784: sbb al, 0xbb; cld; call dword ptr [edi]; 
0x080a76af: sbb al, 0xc1; call 0x14a83d5; call dword ptr [eax - 0x75]; 
0x0806ee85: sbb al, 0xc6; inc eax; and byte ptr [ecx], al; pop ebx; ret; 
0x0804ec91: sbb al, 0xc7; ret 0; 
0x080ca224: sbb al, 0xc9; stc; call esp; 
0x080cf1b4: sbb al, 0xcd; std; jmp dword ptr [ebp]; 
0x0809226e: sbb al, 0xe8; fmul qword ptr [ebp + edi*8 + 0x18c483ff]; pop ebx; ret; 
0x08051efb: sbb al, 0xe8; jg 0x9ecb; add eax, dword ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0807cf81: sbb al, 0xe8; or dword ptr [edi*8 + 0x10c483ff], ebx; add esp, 8; pop ebx; ret; 
0x080a9e75: sbb al, 0xe8; push ebp; idiv edi; dec dword ptr [ebx - 0x76e3dbb4]; ret 0xec83; 
0x080d3d34: sbb al, 0xf4; add byte ptr [eax], al; js 0x8bcff; cld; call dword ptr [edi]; 
0x08048b4c: sbb al, 0xf7; ret 0; 
0x080a47b4: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x080cb279: sbb al, 0xfa; jmp dword ptr [esi]; 
0x0808d056: sbb al, 0xfe; dec dword ptr [ebp - 0x1d7637d]; call dword ptr [eax + 0x68]; 
0x0804e59d: sbb al, 0xff; aaa; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0807cf2c: sbb al, 0xff; inc dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x0809226a: sbb al, 0xff; je 0x4a292; sbb al, 0xe8; fmul qword ptr [ebp + edi*8 + 0x18c483ff]; pop ebx; ret; 
0x08052512: sbb al, 0xff; jo 0xa54e; call 0x24ea0; add esp, 0x18; pop ebx; ret; 
0x08091c70: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x080c83ef: sbb al, 2; outsb dx, byte ptr [esi]; push cs; adc al, 0x41; ret; 
0x080ab84c: sbb al, 3; push 8; mov dword ptr [esp], ebp; call edi; 
0x08058d41: sbb al, bh; dec dword ptr [ecx + 0x50090]; add bl, dh; ret; 
0x08087afb: sbb al, byte ptr [eax]; add al, ch; lea esi, [eax - 2]; inc dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x0807b842: sbb al, byte ptr [eax]; add byte ptr [ebp - 0x2959b7d], cl; call dword ptr [eax - 0x18]; 
0x080a0fcd: sbb al, byte ptr [eax]; add byte ptr [ebp - 0x38728a0a], al; ret 0; 
0x080a0fc3: sbb al, byte ptr [eax]; add byte ptr [ebp - 0x74898b40], al; mov bl, 0xa8; sbb al, byte ptr [eax]; add byte ptr [ebp - 0x38728a0a], al; ret 0; 
0x0809c767: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x1a7883], cl; add byte ptr [ecx], bh; ret 0x273; 
0x0809c76d: sbb al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x273; 
0x0809381c: sbb al, byte ptr [eax]; add byte ptr [edi + 7], dh; xor eax, eax; pop ebx; ret; 
0x0807da3d: sbb al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080d63e1: sbb al, byte ptr [ecx]; add ah, ch; inc edi; std; jmp dword ptr [edx]; 
0x0804cbf3: sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x08070295: sbb al, ch; add eax, 0x830002c8; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x080aaada: sbb al, ch; mov al, byte ptr [0x81fff9dc]; ret; 
0x080c7ff8: sbb al, dh; clc; call dword ptr [edi]; 
0x080980e8: sbb bh, al; ret 0x9da4; 
0x080982ca: sbb bh, al; ret; 
0x08056f02: sbb bh, bh; inc dword ptr [0x830fb]; mov eax, 0x80da078; mov eax, dword ptr [eax]; ret; 
0x0808ec74: sbb bh, bh; std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x080c44c0: sbb bh, bl; cld; call dword ptr [eax - 0x20]; 
0x080aba92: sbb bh, ch; call dword ptr [eax - 1]; 
0x080cb065: sbb bh, dl; call dword ptr [ecx]; 
0x080c7838: sbb bl, ah; clc; call dword ptr [edi]; 
0x080bf60d: sbb bl, byte ptr [esi]; ret; 
0x08058cff: sbb byte ptr [eax + 0x18], 0; add byte ptr [eax], al; ret; 
0x08060c67: sbb byte ptr [eax + 1], bh; ja 0x18c71; neg eax; ret; 
0x08056ff5: sbb byte ptr [eax + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1860], 0; ret; 
0x080935c8: sbb byte ptr [eax - 0x76c48ac0], ch; ret 0xf631; 
0x0805c1e8: sbb byte ptr [eax], al; add al, ch; mov al, byte ptr [0x5b000129]; ret; 
0x08056475: sbb byte ptr [eax], al; add bh, al; ret 0xa078; 
0x0804ed14: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x080c8fb4: sbb byte ptr [eax], al; add byte ptr [eax], al; mov al, byte ptr [0xd4000046]; xor ecx, edi; jmp dword ptr [edx]; 
0x080ab7de: sbb byte ptr [eax], al; add byte ptr [ebp - 0x1b], dh; add esp, 4; pop ebx; pop esi; ret; 
0x08058cf7: sbb byte ptr [eax], al; add byte ptr [ebp - 0x38ed8b2e], al; sbb byte ptr [eax + 0x18], 0; add byte ptr [eax], al; ret; 
0x08056f94: sbb byte ptr [eax], al; add byte ptr [ebx + 0x185c82], al; add byte ptr [ecx], al; pop ebx; ret; 
0x0807e211: sbb byte ptr [eax], al; add byte ptr [ebx - 0x8b37b], cl; inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x08056f9a: sbb byte ptr [eax], al; add byte ptr [ecx], al; pop ebx; ret; 
0x08088833: sbb byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x080bcb04: sbb byte ptr [eax], bh; sti; call dword ptr [eax + 0x37]; 
0x080bcb04: sbb byte ptr [eax], bh; sti; call dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcb30: sbb byte ptr [eax], bh; sti; inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcad8: sbb byte ptr [eax], bh; sti; jmp dword ptr [eax + 0x37]; 
0x080bcad4: sbb byte ptr [eax], bh; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcafc: sbb byte ptr [eax], bh; sti; ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x0809e9a3: sbb byte ptr [ebp - 0x1b9bf7d], cl; call dword ptr [eax + 0x56]; 
0x08098495: sbb byte ptr [ebp - 0x1c6af7d], cl; call dword ptr [eax - 0x73]; 
0x08073a45: sbb byte ptr [ebp - 0x29eff7d], cl; call dword ptr [eax + 0x68]; 
0x08073a1d: sbb byte ptr [ebp - 0x29eff7d], cl; call dword ptr [eax - 0x73]; 
0x0805b8d3: sbb byte ptr [ebp - 0x2c6a77a], cl; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x080491a8: sbb byte ptr [ebp - 0x2dcfb7d], cl; call dword ptr [eax - 0x18]; 
0x08049064: sbb byte ptr [ebp - 0x2dd237d], cl; call dword ptr [eax - 0x18]; 
0x080490ce: sbb byte ptr [ebp - 0x2dd6d7d], cl; call dword ptr [eax - 0x18]; 
0x0808f56d: sbb byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0807531d: sbb byte ptr [ebp - 3], bl; call dword ptr [eax - 0x18]; 
0x0806cddb: sbb byte ptr [ebx + 0x1f7409f9], al; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x08074417: sbb byte ptr [ebx + 0x29f32900], cl; ret 0xd339; 
0x0805e063: sbb byte ptr [ebx + 0x390c2444], cl; ret; 
0x0805d879: sbb byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x080933a2: sbb byte ptr [ebx + 0x751c2474], cl; pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0809ee2f: sbb byte ptr [ebx + 0x788b0470], cl; or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x080591e0: sbb byte ptr [ebx + 0x97487], cl; add byte ptr [ecx - 0x72afaf05], cl; xchg eax, ebx; das; std; call dword ptr [eax - 1]; 
0x080aa073: sbb byte ptr [ebx + eax*4], al; ret; 
0x080bcc84: sbb byte ptr [ebx + edi*8], bh; call dword ptr [eax + 0x3d]; 
0x080bcc3c: sbb byte ptr [ebx + edi*8], bh; jmp dword ptr [eax + 0x3c]; 
0x080bcc98: sbb byte ptr [ebx + edi*8], bh; jmp dword ptr [ebx + 0x3d]; 
0x080bcc38: sbb byte ptr [ebx + edi*8], bh; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc94: sbb byte ptr [ebx + edi*8], bh; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcc34: sbb byte ptr [ebx + edi*8], bh; lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc90: sbb byte ptr [ebx + edi*8], bh; lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x0807e10a: sbb byte ptr [ebx - 0x2fd6fb14], al; push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0809edf9: sbb byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x08098445: sbb byte ptr [ebx - 0x68720108], al; fld dword ptr [edi - 2]; dec dword ptr [ebp - 0x1c90b79]; dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x0806eace: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0809cb6e: sbb byte ptr [ebx - 0x7ce7dbac], cl; ret 0x8d01; 
0x080745c4: sbb byte ptr [ebx - 0x7cefdb84], cl; ret 0x8d01; 
0x0808f584: sbb byte ptr [ebx - 0x7f74f314], al; mov al, 0; add byte ptr [eax], al; push ebx; call dword ptr [eax + 0x34]; 
0x08079ce2: sbb byte ptr [ecx + 0x197883], cl; add byte ptr [ebp - 0x605bf7d], cl; call dword ptr [eax - 1]; 
0x0806ee82: sbb byte ptr [ecx + 0x40c61c50], cl; and byte ptr [ecx], al; pop ebx; ret; 
0x080a11e5: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x080489a9: sbb byte ptr [ecx + 0x4d891c5d], cl; and byte ptr [ecx + 0x5d8b2455], cl; adc bh, dh; ret; 
0x080a8be2: sbb byte ptr [ecx + 0x8c48302], cl; pop ebx; ret; 
0x0809c9c4: sbb byte ptr [ecx - 0x2576b], cl; call dword ptr [eax - 0x18]; 
0x08078d0e: sbb byte ptr [ecx - 0x72a7dba4], cl; push ecx; add ebp, dword ptr [ecx]; ret 0xeac1; 
0x080d6209: sbb byte ptr [ecx], al; add byte ptr [edx + eax*2], al; std; call dword ptr [ebx + 5]; 
0x08051011: sbb byte ptr [ecx], al; ret 0x458b; 
0x08062317: sbb byte ptr [ecx], al; retf 0xc801; call 0x780; add ebx, 0x4bb87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0805e3a2: sbb byte ptr [ecx], bh; ret; 
0x0805146b: sbb byte ptr [ecx], ch; fcmovb st(0), st(1); cli; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x0805e370: sbb byte ptr [ecx], ch; ret 0x6a52; 
0x0809bda6: sbb byte ptr [ecx], ch; ret 0xca39; 
0x08048743: sbb byte ptr [ecx], cl; add byte ptr [ebp - 0x9096f7d], cl; call dword ptr [eax - 0x73]; 
0x080c9178: sbb byte ptr [edi], dh; stc; jmp dword ptr [ecx]; 
0x08056962: sbb byte ptr [edx + 1], ch; call 0xe3f0; add esp, 0x1c; ret; 
0x080d305f: sbb byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; adc al, 0x44; ret; 
0x080cbf30: sbb byte ptr [esi], dh; add byte ptr [ebx + eax*2], cl; cli; jmp dword ptr [ecx]; 
0x080a959b: sbb byte ptr [esp + eax], bh; jne 0x615ca; add esp, 8; mov eax, 8; pop ebx; ret; 
0x080a8961: sbb ch, byte ptr [edx + 1]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x080c0c74: sbb cl, byte ptr [0x381e4bdc]; shl dword ptr [edi - 0x3ad6d59f], cl; fcomp qword ptr [edi - 0x4a]; dec esi; ret 0x474c; 
0x0806e573: sbb cl, byte ptr [edx - 3]; call dword ptr [eax - 0x18]; 
0x0809847b: sbb dh, 0x23; std; call dword ptr [eax - 0x18]; 
0x080d3db8: sbb dh, al; cld; jmp esp; 
0x080bfaad: sbb dh, byte ptr [esi + 0x53]; sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x0805241f: sbb dh, dh; ret 0x7420; 
0x080934a8: sbb dh, dh; ret 0x7540; 
0x080876a8: sbb dword ptr [eax + 0x28], -2; call dword ptr [eax - 0x73]; 
0x0806c219: sbb dword ptr [eax], 0x44; std; call dword ptr [eax - 0x18]; 
0x0807531c: sbb dword ptr [eax], 0x5d; std; call dword ptr [eax - 0x18]; 
0x080719d7: sbb dword ptr [eax], eax; add byte ptr [eax - 0x77], dl; inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x0807bc16: sbb dword ptr [eax], eax; add byte ptr [ebp - 0x14343], cl; dec dword ptr [ecx + 0x19a0b3]; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x08079ce6: sbb dword ptr [eax], eax; add byte ptr [ebp - 0x605bf7d], cl; call dword ptr [eax - 1]; 
0x0807bc22: sbb dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cfc14fa]; ret; 
0x08093902: sbb dword ptr [ebp - 0x74f48b37], eax; pop edx; adc byte ptr [ecx], ah; ret; 
0x080a8ae6: sbb dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0806bb14: sbb dword ptr [ebx + 0x5e5b3cc4], eax; pop edi; pop ebp; ret; 
0x080980e4: sbb dword ptr [ebx - 0x38e7db84], ecx; ret 0x9da4; 
0x080c1eb9: sbb dword ptr [ebx], edx; mov ch, 0x99; in eax, 0xff; lahf; mov dh, 0xc7; ret 0xe71f; 
0x08050f82: sbb dword ptr [ecx + 0x6a000005], 0; push edx; push eax; push ebp; call dword ptr [ebx + 0x40]; 
0x080a2c5d: sbb dword ptr [ecx - 0x63], -2; call dword ptr [eax - 0x18]; 
0x080d62f1: sbb dword ptr [ecx], eax; add byte ptr [edi + eax*2 - 3], bl; jmp dword ptr [edi]; 
0x08059fee: sbb dword ptr [ecx], edi; ret 0xa76; 
0x0806e572: sbb dword ptr [edx], 0x4a; std; call dword ptr [eax - 0x18]; 
0x0809561f: sbb dword ptr [esp + esi], -2; call dword ptr [eax - 0x18]; 
0x0806ac7f: sbb eax, -1; pop ebx; ret; 
0x0806af2d: sbb eax, -1; pop esi; pop ebx; ret; 
0x080a0931: sbb eax, 0x2901c083; ret 0xd089; 
0x080bf58b: sbb eax, 0x3c42d35a; push cs; push esp; jmp dword ptr [ebx - 0x40]; 
0x080d6681: sbb eax, 0x4d5c0001; std; jmp dword ptr [ecx + 1]; 
0x08076506: sbb eax, 0x83000002; ret; 
0x0806d872: sbb eax, 0x890ce8c1; lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x0809a3fd: sbb eax, 0x8b000008; push ebp; pushfd; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x0804d455: sbb eax, 0x8d00768d; mov esp, 0x27; add byte ptr [ebx - 0x7cff7abc], cl; mov dword ptr [ecx], 0x83ff4788; ret 0x3901; 
0x0806ce52: sbb eax, 0xc6890000; mov eax, 6; call dword ptr gs:[0x10]; 
0x0807a450: sbb eax, 0xea0; mov edx, dword ptr [ebp + ebx - 0x180]; test edx, edx; je 0x32462; call edx; 
0x0804824a: sbb eax, 0xec830009; adc byte ptr [ebp - 0x1bcbb7d], cl; call dword ptr [eax + 0x6a]; 
0x0807a457: sbb eax, 0xfffffe80; test edx, edx; je 0x32462; call edx; 
0x080a48c1: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x3b7cefba], cl; adc al, 0x5b; pop esi; ret; 
0x080a1795: sbb eax, dword ptr [eax]; add byte ptr [esi - 0x7d], ah; add al, 0x42; add dword ptr [ebx + 0x5e], ebx; ret; 
0x080a8b69: sbb eax, dword ptr [eax]; add byte ptr [esi*2 - 0x7cff74e3], al; les ecx, ptr [eax]; pop ebx; ret; 
0x08061fe4: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x08067241: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x080a969f: sbb eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0809ee7c: sbb eax, eax; and eax, 2; sub eax, 1; pop ebx; pop esi; ret; 
0x080a0151: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0806ac7d: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x0806af2b: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x080bfab0: sbb eax, edx; cdq; iretd; dec ebx; ret 0xde9e; 
0x0807bf3f: sbb ecx, 0x69; std; call dword ptr [eax - 0x18]; 
0x080c8c71: sbb ecx, edi; jmp dword ptr [eax + 0xf]; 
0x08077ccf: sbb edi, ebp; dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x080a61d3: sbb edi, edi; dec dword ptr [ecx + 0x28c48303]; pop ebx; ret; 
0x080d10c5: sbb edi, esp; call dword ptr [ebx]; 
0x080caf91: sbb edx, edi; jmp dword ptr [esi]; 
0x0808d37b: sbb esi, edi; jmp dword ptr [esi - 0x70]; 
0x08049066: sbb esp, 0x22; std; call dword ptr [eax - 0x18]; 
0x080d102d: sbb esp, edi; inc dword ptr [edx]; inc ecx; push cs; or byte ptr [ebx + 0xa6e0202], al; ret; 
0x08091c5e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x080cf72d: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; mov al, 0xe2; sti; call dword ptr [esi]; 
0x08054041: scasb al, byte ptr es:[edi]; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0807c44b: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov ebx, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0807739d: scasd eax, dword ptr es:[edi]; and al, 0xfd; dec dword ptr [ebx - 0x72d7dba4]; or esp, 0x5d; std; call dword ptr [eax - 0x73]; 
0x080c2064: scasd eax, dword ptr es:[edi]; daa; push esp; syscall; 
0x0806ed1f: scasd eax, dword ptr es:[edi]; dec edx; std; call dword ptr [eax + 0x6a]; 
0x080c56d5: scasd eax, dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x08053ad9: scasd eax, dword ptr es:[edi]; or eax, 0x14c1c708; mov bl, 0xd; or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x080536c9: scasd eax, dword ptr es:[edi]; or eax, 0x14c2c708; mov bl, 0xd; or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x080487ad: scasd eax, dword ptr es:[edi]; or eax, 0x83d0ff08; les edx, ptr [eax]; leave; ret; 
0x080487fa: scasd eax, dword ptr es:[edi]; or eax, 0x83d2ff08; les edx, ptr [eax]; leave; ret; 
0x080a46dd: scasd eax, dword ptr es:[edi]; push ecx; cli; call dword ptr [eax + 0x6a]; 
0x08058e7a: scasd eax, dword ptr es:[edi]; ret 0x5189; 
0x08084802: scasd eax, dword ptr es:[edi]; ret 0x8d8b; 
0x08051472: scasd eax, dword ptr es:[edi]; ret 0xf799; 
0x080494c1: scasd eax, dword ptr es:[edi]; ret; 
0x080a0150: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0804e16a: scasd eax, dword ptr es:[edi]; sub ch, bh; call dword ptr [eax + 0x56]; 
0x0806eb52: setae al; ret; 
0x080a47af: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0805444f: setne al; movzx eax, al; neg eax; add esp, 8; pop ebx; ret; 
0x0805315d: sgdt [eax]; add byte ptr [ecx], bh; ret 0x44c7; 
0x080c76a0: shl al, 1; clc; jmp dword ptr [ebp]; 
0x080493d1: shl byte ptr [eax], 0x39; ret 0x4976; 
0x08099443: shl byte ptr [ecx], 1; retf 0x4d8b; or byte ptr [ecx], ch; ret 0x5789; 
0x080a196b: shl byte ptr [edi + edi*4 + 0xd], 8; mov eax, dword ptr [eax]; ret; 
0x0806ea60: shl byte ptr [edi + edi*4 + 0xd], 8; mov eax, dword ptr [eax]; test eax, eax; cmove eax, edx; ret; 
0x080cb0d8: shl byte ptr [edi], 0; xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x0805e6af: shl byte ptr [esi + 0x450ffff8], 1; ret 0xc3f3; 
0x0805e973: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x08060951: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08062c4c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x080ae558: shl byte ptr [esi], 1; stc; call eax; 
0x080ae5f4: shl byte ptr [esi], 1; stc; inc dword ptr [ebp - 0x7a0006da]; stc; call eax; 
0x080ae58c: shl byte ptr [esi], 1; stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [esi + 0x27]; 
0x080ae67c: shl byte ptr [esi], 1; stc; inc dword ptr [esi]; sub cl, bh; call dword ptr [eax]; 
0x080c4844: shl cl, 0xfc; dec ecx; loope 0x7c847; call edi; 
0x080c4844: shl cl, 0xfc; dec ecx; loope 0x7c847; call edi; loope 0x7c84b; jmp eax; 
0x080b8eb0: shl dword ptr [eax + eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret 0x24; 
0x0809b2b2: shl dword ptr [eax], 0xf; inc ebp; ret 0xd231; 
0x0809b2d7: shl dword ptr [eax], 0xf; inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x0809b5ec: shl dword ptr [eax], 0xf; xchg eax, ebp; ret 0x940f; 
0x08095dce: shl dword ptr [edi + edi*4], 0xd; or byte ptr [ebx + 0x5ba0cec], al; add byte ptr [eax], al; add byte ptr [ebx + 0x430f0539], al; adc dword ptr [ecx], edi; ret 0x430f; 
0x080c0c7a: shl dword ptr [edi - 0x3ad6d59f], cl; fcomp qword ptr [edi - 0x4a]; dec esi; ret 0x474c; 
0x080c0a08: shl dword ptr [edi - 5], 1; ret; 
0x08062415: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x08062dd6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x08062400: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x08062dbc: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x080623eb: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x080623d6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x08062da2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x080624a2: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08062cfc: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x08067695: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x08062bac: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0809360d: shl dword ptr [esi - 0x70], 1; call 0x290c0; add esp, 4; pop ebx; pop esi; ret; 
0x08070f8b: shl eax, cl; pop esi; pop edi; pop ebp; ret; 
0x0809f2ef: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0809d462: shr al, 0xbe; or eax, 0x83108b08; ret 0x8b01; 
0x080517e7: shr byte ptr [eax + edx*2], 0x8b; inc esp; and al, 0x28; push eax; call dword ptr [eax + 4]; 
0x08097365: shr byte ptr [eax - 0x41], 0xd; or byte ptr [ecx - 0x16cbdbbc], cl; ret 0; 
0x0806fe4b: shr byte ptr [eax - 0x41], 0xd; or byte ptr [edi], cl; xchg eax, esp; ret 0x1089; 
0x080678b2: shr byte ptr [ecx], 0xc2; jbe 0x1f8f0; add eax, edi; pop edi; ret; 
0x080678c5: shr byte ptr [ecx], 0xc2; jbe 0x1f8f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x080678d5: shr byte ptr [ecx], 0xc2; jbe 0x1f8f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080678e5: shr byte ptr [ecx], 0xc2; jbe 0x1f8f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0809d737: shr byte ptr [edi + edi*4], 0xd; or byte ptr [esi + 1], bh; call dword ptr [eax]; 
0x080536c8: shr byte ptr [edi - 0x3d38f7f3], 0x14; mov bl, 0xd; or byte ptr [ecx + 0x29c229cb], cl; ret; 
0x08053ad8: shr byte ptr [edi - 0x3e38f7f3], 0x14; mov bl, 0xd; or byte ptr [ebx - 0x76fbdb8c], cl; ret; 
0x080a8c2b: shr eax, 0x1f; mov dword ptr [ecx], eax; mov eax, dword ptr [edx + 0x4c]; ret; 
0x0806d873: shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x080a45b8: shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x5c580; jmp eax; 
0x0804ee65: shr eax, 2; lea esi, [ecx + eax*4 + 4]; lea esi, [esi]; call dword ptr [edi]; 
0x0809f34f: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0805b676: shr ecx, 2; rep stosd dword ptr es:[edi], eax; add esp, 4; pop ebx; pop edi; ret; 
0x0809024b: shr edx, 0xfd; dec dword ptr [ebp - 0x1d1937d]; call dword ptr [eax - 0x73]; 
0x080d1981: sidt [edx]; ret; 
0x0806d86e: sldt word ptr [eax]; jne 0x25890; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x08091544: sldt word ptr [eax]; jne 0x49340; xor eax, eax; pop edi; ret; 
0x0809e9da: sldt word ptr [eax]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x080a10d9: sldt word ptr [eax]; mov dword ptr [eax], edx; add esp, 8; pop ebx; ret; 
0x080b8081: sldt word ptr [eax]; mov ebp, 0xc000000f; sldt word ptr [eax]; ret; 
0x080b8089: sldt word ptr [eax]; ret; 
0x08058413: sldt word ptr [ecx - 0xfffff1a]; dec dword ptr [ecx + 0xae8df2]; add byte ptr [eax], dl; add byte ptr [ecx], ch; ret 0x5975; 
0x0805b76f: stc; adc byte ptr [edi], cl; inc edx; ret 0xc189; 
0x0806b4a1: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x08060a09: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0806e5c5: stc; add dword ptr [ebp - 9], esi; pop ebx; pop esi; pop edi; ret; 
0x080aee26: stc; call dword ptr [eax + 0x59]; 
0x08048d09: stc; call dword ptr [eax - 0x73]; 
0x080719cb: stc; call dword ptr [eax - 0x77]; 
0x08079ced: stc; call dword ptr [eax - 1]; 
0x080ae0ae: stc; call dword ptr [eax]; 
0x080ca51a: stc; call dword ptr [ebx]; 
0x080c8a66: stc; call dword ptr [ecx + 0xa]; 
0x080ae102: stc; call dword ptr [edi]; 
0x080ae5e6: stc; call dword ptr [edi]; stc; call eax; 
0x080ae5d2: stc; call dword ptr [edx + 0x27]; 
0x080ae5d2: stc; call dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080c8e92: stc; call dword ptr [edx]; 
0x080ae536: stc; call dword ptr [esi + 0x28]; 
0x080c8876: stc; call dword ptr [esi]; 
0x080ae556: stc; call eax; 
0x080ae58a: stc; call eax; stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [esi + 0x27]; 
0x080ae67a: stc; call eax; stc; inc dword ptr [esi]; sub cl, bh; call dword ptr [eax]; 
0x080ae0ea: stc; call ecx; 
0x080ca58e: stc; call edx; 
0x080ae65e: stc; call esp; 
0x080c84f1: stc; clc; call dword ptr [eax]; 
0x080c84a1: stc; clc; jmp dword ptr [ebp]; 
0x080a174b: stc; cld; jmp dword ptr [esi - 0x70]; 
0x080d5031: stc; cld; jmp dword ptr [esi]; 
0x0807a6b5: stc; cmp cl, byte ptr [ecx - 0x76fbdb84]; fisttp word ptr [edi]; xchg eax, esp; ret; 
0x08093c33: stc; cmp cl, byte ptr [edi]; test byte ptr [0x83000001], dl; ret 0x8320; 
0x0805e6ab: stc; dec dword ptr [ebp - 0x7592f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805dbdb: stc; dec dword ptr [ebp - 0x7717f6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805e626: stc; dec dword ptr [ebp - 0x793bf6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805db96: stc; dec dword ptr [ebp - 0x7ab6f6e]; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080af59e: stc; dec dword ptr [ebx]; stc; ljmp [edi + 0x65]; stc; jmp dword ptr [eax]; 
0x0806ee0c: stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080ae6de: stc; dec dword ptr [edx]; daa; stc; lcall [edi - 7]; jmp dword ptr [esi + 0x27]; 
0x080ae6fa: stc; dec edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080ac3b1: stc; idiv bh; iretd; stc; idiv bh; ret 0xf6f9; 
0x080ac3b5: stc; idiv bh; ret 0xf6f9; 
0x080ae59e: stc; inc dword ptr [ebp - 0x530006da]; daa; stc; call eax; 
0x080ae5f6: stc; inc dword ptr [ebp - 0x7a0006da]; stc; call eax; 
0x080ae62e: stc; inc dword ptr [ebp - 0x7a0006da]; stc; inc dword ptr [ebp - 0x7a0006da]; stc; call eax; 
0x080ae806: stc; inc dword ptr [ebp - 0x7a0006da]; stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae80e: stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae58e: stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [esi + 0x27]; 
0x080aba84: stc; inc dword ptr [ecx + 0x2e57ac3]; add byte ptr [ebx - 0x7c72ef14], al; inc eax; sbb bh, ch; call dword ptr [eax - 1]; 
0x080ae8f2: stc; inc dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae67e: stc; inc dword ptr [esi]; sub cl, bh; call dword ptr [eax]; 
0x080ae0a2: stc; jmp dword ptr [eax + 0x16]; 
0x080ae5d6: stc; jmp dword ptr [eax + 0x28]; 
0x080aee56: stc; jmp dword ptr [eax + 0x58]; 
0x080c8c72: stc; jmp dword ptr [eax + 0xf]; 
0x080af5a6: stc; jmp dword ptr [eax]; 
0x080c917a: stc; jmp dword ptr [ecx]; 
0x080c9762: stc; jmp dword ptr [edi]; 
0x080c8fbe: stc; jmp dword ptr [edx]; 
0x080ae596: stc; jmp dword ptr [esi + 0x27]; 
0x080abe86: stc; jmp dword ptr [esi - 0x70]; 
0x080af5b6: stc; jmp dword ptr [esi]; 
0x0804d960: stc; jmp ecx; 
0x080c9592: stc; jmp edi; 
0x080af52e: stc; jmp esp; 
0x080c0884: stc; jnp 0x78840; ret; 
0x080aee22: stc; lcall [ebx + 0x56]; stc; call dword ptr [eax + 0x59]; 
0x080aee6a: stc; lcall [ebx + 0x56]; stc; call dword ptr [eax]; 
0x080aee66: stc; lcall [ebx + 0x56]; stc; lcall [ebx + 0x56]; stc; call dword ptr [eax]; 
0x080ae0fa: stc; lcall [edi - 0x120006ea]; push ss; stc; call dword ptr [edi]; 
0x080ae6e2: stc; lcall [edi - 7]; jmp dword ptr [esi + 0x27]; 
0x080ae65a: stc; lcall [esi]; daa; stc; call esp; 
0x080aee4e: stc; ljmp [eax - 0x7f0006a8]; pop eax; stc; jmp dword ptr [eax + 0x58]; 
0x080c9c02: stc; ljmp [ebx + 0x16]; push edi; push cs; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080af5a2: stc; ljmp [edi + 0x65]; stc; jmp dword ptr [eax]; 
0x080af5b2: stc; ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x0805e954: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x08076502: stc; or byte ptr [edi], 0x85; sbb eax, 0x83000002; ret; 
0x0809a54b: stc; or cl, byte ptr [edi]; test ch, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x78f0d501], al; ret 6; 
0x080c5d62: stc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0806ebf2: stc; or dh, byte ptr [esi + ecx - 0x7d]; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0806cddd: stc; or dword ptr [edi + ebx - 0x48], esi; fld qword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x08091442: stc; pop edi; ret; 
0x080af5ae: stc; push dword ptr [eax + 0x63]; stc; ljmp [esi + 0x66]; stc; jmp dword ptr [esi]; 
0x080aee3e: stc; push dword ptr [eax]; pop ecx; stc; call dword ptr [eax]; 
0x080aee46: stc; push eax; pop eax; stc; call eax; 
0x080ae552: stc; push eax; stc; call eax; 
0x080ae54e: stc; push eax; stc; push eax; stc; call eax; 
0x080ae5ce: stc; push edx; daa; stc; call dword ptr [edx + 0x27]; 
0x080bdc79: stc; sti; call dword ptr [eax - 7]; 
0x080bdc79: stc; sti; call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x080bdc7d: stc; sti; jmp dword ptr [eax]; 
0x08061fe1: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x08091de9: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x080d46b5: std; add byte ptr [eax], al; test al, 0xd2; cld; call dword ptr [ebx]; 
0x0808d2c1: std; add dl, byte ptr [ebp + 0x50]; push esi; call dword ptr [ecx + 0x1c]; 
0x08066c7f: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08054718: std; call dword ptr [eax + 0x53]; 
0x0804c738: std; call dword ptr [eax + 0x56]; 
0x0806b9b2: std; call dword ptr [eax + 0x68]; 
0x0806d060: std; call dword ptr [eax + 0x6a]; 
0x080d565a: std; call dword ptr [eax + 1]; 
0x080488bb: std; call dword ptr [eax - 0x18]; 
0x0809027f: std; call dword ptr [eax - 0x18]; leave; xchg eax, ebp; sti; jmp dword ptr [esi - 0x70]; 
0x08070186: std; call dword ptr [eax - 0x18]; ret 0xfd96; 
0x0804a7fb: std; call dword ptr [eax - 0x73]; 
0x0805d3a0: std; call dword ptr [eax - 0x77]; 
0x080591c9: std; call dword ptr [eax - 1]; 
0x080d5e8a: std; call dword ptr [eax]; 
0x0808ee1e: std; call dword ptr [ebp + 0x57]; 
0x080d620e: std; call dword ptr [ebx + 5]; 
0x0807011f: std; call dword ptr [ecx + 0x51]; 
0x08070d79: std; call dword ptr [ecx + 0x6a]; 
0x080d5566: std; call dword ptr [ecx]; 
0x0807a556: std; call dword ptr [edi + 3]; 
0x08057e63: std; call dword ptr [edi - 1]; 
0x0807ab36: std; call dword ptr [edx + 0x50]; 
0x0806bfbf: std; call dword ptr [edx + 0x56]; 
0x0809eb26: std; call dword ptr [edx + 0x68]; 
0x08070df4: std; call dword ptr [edx + 0x6a]; 
0x080d514e: std; call dword ptr [edx + 1]; 
0x080d54e2: std; call dword ptr [esi]; 
0x08098a79: std; cli; inc dword ptr [ecx + 0x41584c3]; add byte ptr [ebx - 0x38ebdb8c], cl; ret 0; 
0x080701ab: std; dec dword ptr [ebp + 0x5be80076]; xchg ebp, edi; inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x0808ec76: std; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0807a8e2: std; dec dword ptr [ebp + 0x62000384]; std; call dword ptr [eax - 0x18]; 
0x08092934: std; dec dword ptr [ebp - 0x1d0f37d]; call dword ptr [eax - 0x73]; 
0x0809024d: std; dec dword ptr [ebp - 0x1d1937d]; call dword ptr [eax - 0x73]; 
0x080742e3: std; dec dword ptr [ebp - 0x29f5f7d]; call dword ptr [eax + 0x68]; 
0x08075e3b: std; dec dword ptr [ebp - 0x2a03f7d]; call dword ptr [eax + 0x68]; 
0x08075dfd: std; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x0807178f: std; dec dword ptr [ebp - 0x2a9ef7d]; call dword ptr [eax - 0x73]; 
0x08070151: std; dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x08070119: std; dec dword ptr [ebp - 0x2ae697d]; call dword ptr [ecx + 0x51]; 
0x0806c35b: std; dec dword ptr [ebp - 0x2bb477d]; call dword ptr [eax - 0x73]; 
0x0805d410: std; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x0805b8d8: std; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x08094953: std; dec dword ptr [ebx - 0x3b7c7bab]; adc byte ptr [ecx], bh; ret 0x840f; 
0x08076c7f: std; dec dword ptr [ebx - 0x72c7dba4]; sub eax, 0x5d; std; call dword ptr [eax - 0x73]; 
0x08078b0c: std; dec dword ptr [ebx - 0x72cfdba4]; and dword ptr [eax + 0x5e], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080747ab: std; dec dword ptr [ebx - 0x72d3dba4]; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08077cd0: std; dec dword ptr [ebx - 0x72d7dba4]; and dword ptr [eax + 0x5f], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x08073f00: std; dec dword ptr [ebx - 0x72d7dba4]; and eax, 0x60; std; call dword ptr [eax + 0x68]; 
0x0807739f: std; dec dword ptr [ebx - 0x72d7dba4]; or esp, 0x5d; std; call dword ptr [eax - 0x73]; 
0x080752df: std; dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5e; std; call dword ptr [eax - 0x73]; 
0x080782c2: std; dec dword ptr [ebx - 0x72dbdba4]; and dword ptr [eax], 0x5f; std; call dword ptr [eax + 0x68]; 
0x080782e5: std; dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5e; std; call dword ptr [eax - 0x73]; 
0x08075325: std; dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x0807537d: std; dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax - 0x73]; 
0x08073a63: std; dec dword ptr [ebx - 0x72e7dba4]; add dword ptr [eax], 0x61; std; call dword ptr [eax + 0x68]; 
0x08080148: std; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0807b248: std; dec dword ptr [ebx - 0x976b]; call dword ptr [edx - 1]; 
0x08048db2: std; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x0806fe59: std; dec dword ptr [ecx + 0x2de82404]; in eax, dx; std; inc edi; ret 0xbf20; 
0x080718b3: std; inc dword ptr [0x6874b]; mov eax, dword ptr [eax + 0x1fa4]; ret; 
0x08071893: std; inc dword ptr [0x6876b]; mov eax, dword ptr [eax + 0x1f9c]; ret; 
0x080701b3: std; inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x080934f3: std; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x08071885: std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080930a2: std; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x08092f39: std; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0806fdc3: std; inc dword ptr [ebx - 0x4c72f314]; fld dword ptr [edi - 2]; call dword ptr [eax - 0x18]; 
0x08093291: std; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x080710a4: std; inc dword ptr [ecx + 0x68f5ac3]; add byte ptr [ebx - 0x317f714], al; sar ebp, 1; jmp dword ptr [esi - 0x70]; 
0x0806b594: std; inc dword ptr [ecx]; clc; jmp eax; 
0x0804dc6b: std; inc dword ptr [ecx]; cli; jmp edx; 
0x0806f62d: std; inc dword ptr [ecx]; iretd; jmp edi; 
0x0804d95d: std; inc dword ptr [ecx]; stc; jmp ecx; 
0x0809331d: std; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0806fe61: std; inc edi; ret 0xbf20; 
0x08092dc5: std; jmp dword ptr [ebp - 0x77]; 
0x080cf1b6: std; jmp dword ptr [ebp]; 
0x080cc5ea: std; jmp dword ptr [ebx]; 
0x080d6686: std; jmp dword ptr [ecx + 1]; 
0x080d54ce: std; jmp dword ptr [ecx]; 
0x080d33c2: std; jmp dword ptr [edi]; 
0x080d56f6: std; jmp dword ptr [edx + 8]; 
0x080d63e6: std; jmp dword ptr [edx]; 
0x0804da7d: std; jmp dword ptr [esi + 0x39]; 
0x08067f36: std; jmp dword ptr [esi + 0xf]; 
0x0806d7fa: std; jmp dword ptr [esi - 0x70]; 
0x080d5c2e: std; jmp dword ptr [esi]; 
0x08050b2a: std; ljmp [eax + 0x23]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + ebp], -3; call dword ptr [eax - 0x18]; 
0x08073a29: std; ljmp [eax + 9]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [edx + 0x5c], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08073150: std; ljmp [eax - 0x11]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x56], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08079acb: std; ljmp [eax - 0x56]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [eax + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080747eb: std; ljmp [eax - 0x6c]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [ebp + 0x5c], -3; call dword ptr [eax - 0x18]; 
0x0807017a: std; ljmp [eax - 0x7c]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x52], -3; call dword ptr [eax - 0x18]; 
0x0807312c: std; ljmp [eax - 0xb]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x56], -3; call dword ptr [eax - 0x18]; 
0x0805e958: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0806220b: std; mov eax, 0; jne 0x1a2e0; pop ebx; ret; 
0x080625a5: std; mov eax, 0; jne 0x1ae66; pop ebx; ret; 
0x080d3dd9: std; or cl, byte ptr [esi]; adc al, 0x46; ret; 
0x08091472: std; pop edi; ret; 
0x0806ef4f: std; push dword ptr [ecx]; leave; int 0x80; 
0x0807014f: std; xchg eax, esi; std; dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x08096f5a: std; xor dh, bh; call dword ptr [eax - 0x18]; 
0x0805e9d5: sti; add byte ptr [eax], al; add al, ch; mov byte ptr [0x81fffe9d], al; ret; 
0x080d4451: sti; add byte ptr [eax], al; in al, dx; sar ah, 1; jmp dword ptr [ebx]; 
0x0806d9c1: sti; add byte ptr ss:[eax], al; ret; 
0x0807a6cc: sti; add cl, byte ptr [edi]; xchg eax, esi; ret; 
0x0804f06b: sti; add dword ptr [eax], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x080bc936: sti; call dword ptr [eax + 0x35]; 
0x080bcb06: sti; call dword ptr [eax + 0x37]; 
0x080bcb06: sti; call dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcb6a: sti; call dword ptr [eax + 0x3b]; 
0x080bcc86: sti; call dword ptr [eax + 0x3d]; 
0x080cfb06: sti; call dword ptr [eax + 1]; 
0x080bcd5a: sti; call dword ptr [eax - 0x3f0004c3]; sti; call eax; 
0x080bcd56: sti; call dword ptr [eax - 0x6f0004c3]; cmp eax, 0x3ec0fffb; sti; call eax; 
0x080bdc7a: sti; call dword ptr [eax - 7]; 
0x080bdc7a: sti; call dword ptr [eax - 7]; sti; jmp dword ptr [eax]; 
0x080bcb9e: sti; call dword ptr [eax]; 
0x080d00f6: sti; call dword ptr [ebp]; 
0x080adc62: sti; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080adc5a: sti; call dword ptr [ebx + edx - 5]; push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080ae032: sti; call dword ptr [ebx - 0x33]; 
0x080adc6a: sti; call dword ptr [ecx + 0x13]; 
0x080d04fa: sti; call dword ptr [ecx + 1]; 
0x080adab2: sti; call dword ptr [ecx]; 
0x080adc4a: sti; call dword ptr [edi + 0x13]; 
0x080cf7fe: sti; call dword ptr [edi + 1]; 
0x080cfc96: sti; call dword ptr [edx + 1]; 
0x080adf3a: sti; call dword ptr [esi + 0x48]; 
0x080adf3a: sti; call dword ptr [esi + 0x48]; sti; call esi; 
0x080ada72: sti; call dword ptr [esi]; 
0x080adece: sti; call eax; 
0x080adac2: sti; call ecx; 
0x080adac2: sti; call ecx; adc bh, bl; call dword ptr [ecx]; 
0x080adb2e: sti; call edi; 
0x080adb6e: sti; call edx; 
0x080ada82: sti; call esi; 
0x080ada82: sti; call esi; adc bh, bl; call dword ptr [esi]; 
0x080adf3e: sti; call esi; dec eax; sti; jmp dword ptr [esi + 0x49]; 
0x080adf12: sti; call esp; 
0x080bca36: sti; dec dword ptr [eax]; cmp bl, bh; jmp eax; 
0x080ae00e: sti; dec dword ptr [eax]; int 0xfb; ljmp [edi - 0x33]; sti; jmp ebx; 
0x08096f43: sti; dec dword ptr [ebp - 0x1c9bb7d]; call dword ptr [eax - 0x73]; 
0x080965ee: sti; dec dword ptr [ebp - 0x1caef7d]; call dword ptr [eax + 0x6a]; 
0x08092950: sti; dec dword ptr [ebp - 0x1d0f37d]; call dword ptr [eax - 0x73]; 
0x08090269: sti; dec dword ptr [ebp - 0x1d1937d]; call dword ptr [eax - 0x73]; 
0x0808d127: sti; dec dword ptr [ebp - 0x1d7637d]; call dword ptr [eax + 0x68]; 
0x0809598d: sti; dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x08090685: sti; dec dword ptr [ebp - 0x48fdf6e]; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080ada5e: sti; dec dword ptr [ebx - 0x340004ec]; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x0808a6fe: sti; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x080bc92e: sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x080bc91e: sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080bc952: sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; jmp dword ptr [eax]; 
0x0809068b: sti; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080bca32: sti; dec eax; sti; dec dword ptr [eax]; cmp bl, bh; jmp eax; 
0x080ada62: sti; dec ebx; adc al, 0xfb; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x0806ef4d: sti; dec edx; std; push dword ptr [ecx]; leave; int 0x80; 
0x080bdd3e: sti; inc dword ptr [eax + 0x2ffffbf7]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdd3e: sti; inc dword ptr [eax + 0x2ffffbf7]; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bcb32: sti; inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080adeca: sti; inc dword ptr [eax + 0x46]; sti; call eax; 
0x080a0ec7: sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080aba6e: sti; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x080ac0a8: sti; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080ab770: sti; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0809d6c3: sti; inc dword ptr [ebx - 0xf76ef3c]; pop ebx; pop esi; pop edi; ret; 
0x08092223: sti; inc dword ptr [ecx + 0x47ddbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x08090633: sti; inc dword ptr [ecx + 0x499cbc2]; add byte ptr [ebx - 0x39], dl; ret; 
0x080ad9e6: sti; inc dword ptr [ecx + 0xf]; sti; jmp dword ptr [ecx + 0xf]; 
0x080add26: sti; inc dword ptr [ecx - 0x4e0004ec]; adc al, 0xfb; jmp ecx; 
0x080adaa6: sti; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080ad9c6: sti; inc dword ptr [edi + 0xf]; sti; jmp dword ptr [edi + 0xf]; 
0x080adb32: sti; inc dword ptr [edi]; adc bh, bl; push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080addb2: sti; inc dword ptr [edi]; adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x080adb72: sti; inc dword ptr [edx]; adc bh, bl; push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080addf2: sti; inc dword ptr [edx]; adc eax, 0x1532fffb; sti; jmp dword ptr [edx + 0x15]; 
0x080ada9e: sti; inc dword ptr [esi - 0x390004ec]; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080adce6: sti; inc dword ptr [esi - 0x490004ec]; adc al, 0xfb; jmp esi; 
0x080ada66: sti; inc dword ptr [esi - 0x490004ef]; adc ebx, edi; jmp esi; 
0x080bcd1a: sti; inc eax; sti; call eax; 
0x080bcd16: sti; inc eax; sti; inc eax; sti; call eax; 
0x080bcd6e: sti; inc eax; sti; inc eax; sti; jmp dword ptr [eax]; 
0x080bcd72: sti; inc eax; sti; jmp dword ptr [eax]; 
0x080ab729: sti; inc edi; ret 0; 
0x080adede: sti; inc edx; inc esi; sti; jmp dword ptr [edx + 0x47]; 
0x080adaa2: sti; inc esi; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080bc926: sti; jmp dword ptr [eax + 0x35]; 
0x080bcada: sti; jmp dword ptr [eax + 0x37]; 
0x080bcb5e: sti; jmp dword ptr [eax + 0x3b]; 
0x080bcc3e: sti; jmp dword ptr [eax + 0x3c]; 
0x080bc95a: sti; jmp dword ptr [eax]; 
0x080cff02: sti; jmp dword ptr [ebp]; 
0x080bcc06: sti; jmp dword ptr [ebx + 0x3d]; 
0x080ced26: sti; jmp dword ptr [ebx]; 
0x080ad9ea: sti; jmp dword ptr [ecx + 0xf]; 
0x080ae022: sti; jmp dword ptr [ecx - 0x33]; 
0x080adb3a: sti; jmp dword ptr [edi + 0x12]; 
0x080addba: sti; jmp dword ptr [edi + 0x15]; 
0x080ad9ca: sti; jmp dword ptr [edi + 0xf]; 
0x080bdc9e: sti; jmp dword ptr [edi]; 
0x080adb7a: sti; jmp dword ptr [edx + 0x12]; 
0x080addfa: sti; jmp dword ptr [edx + 0x15]; 
0x080adee2: sti; jmp dword ptr [edx + 0x47]; 
0x080ae01a: sti; jmp dword ptr [edx - 0x32]; 
0x080cfa3e: sti; jmp dword ptr [edx]; 
0x080adf42: sti; jmp dword ptr [esi + 0x49]; 
0x080adf56: sti; jmp dword ptr [esi + 0x4c]; 
0x08090285: sti; jmp dword ptr [esi - 0x70]; 
0x080d01d2: sti; jmp dword ptr [esi]; 
0x080bca3a: sti; jmp eax; 
0x080ae016: sti; jmp ebx; 
0x080adaae: sti; jmp ecx; 
0x080ada6e: sti; jmp esi; 
0x080bcd8a: sti; lcall [eax + 0x3e]; sti; inc eax; sti; call eax; 
0x080bcc82: sti; lcall [eax]; cmp al, 0xfb; call dword ptr [eax + 0x3d]; 
0x080bcc3a: sti; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc96: sti; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcc36: sti; lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [eax + 0x3c]; 
0x080bcc92: sti; lcall [eax]; cmp al, 0xfb; lcall [eax]; cmp al, 0xfb; jmp dword ptr [ebx + 0x3d]; 
0x080bcb02: sti; lcall [eax]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb02: sti; lcall [eax]; cmp bl, bh; call dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcb2e: sti; lcall [eax]; cmp bl, bh; inc dword ptr [eax + 0x37]; sti; jmp dword ptr [eax + 0x37]; 
0x080bcad6: sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcad2: sti; lcall [eax]; cmp bl, bh; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcafa: sti; lcall [eax]; cmp bl, bh; ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080adc42: sti; lcall [edx + 0x37fffb13]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x080bdc86: sti; lcall [esi]; or al, 0xfc; lcall [esi]; or al, 0xfc; jmp eax; 
0x080bcafe: sti; ljmp [eax + 0x18fffb37]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb16: sti; ljmp [eax + 0x18fffb37]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080ae012: sti; ljmp [edi - 0x33]; sti; jmp ebx; 
0x080bdc96: sti; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdc96: sti; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x080bdbda: sti; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; call eax; 
0x080bdb4a: sti; ljmp [edi]; or al, 0xfc; ljmp [edi]; or al, 0xfc; jmp dword ptr [eax]; 
0x0805e914: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x080d5585: sti; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08091462: sti; pop edi; ret; 
0x080bcb66: sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb9a: sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcb8e: sti; push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x080bcb62: sti; push dword ptr [eax + 0x3b]; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax + 0x3b]; 
0x080bcb96: sti; push dword ptr [eax + 0x3b]; sti; push dword ptr [eax + 0x3b]; sti; call dword ptr [eax]; 
0x080bcbfe: sti; push dword ptr [eax + 0x3b]; sti; push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x080bcb8a: sti; push dword ptr [eax]; cmp edi, ebx; push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x080adf0e: sti; push dword ptr [ebx + ecx*2]; sti; call esp; 
0x080adc5e: sti; push dword ptr [ebx + edx - 5]; call dword ptr [ebx + edx + 0x1331fffb]; sti; call dword ptr [ecx + 0x13]; 
0x080add2a: sti; push dword ptr [ecx - 0x1e0004ec]; adc al, 0xfb; call dword ptr [ecx]; 
0x080adaaa: sti; push dword ptr [ecx - 0x1e0004ef]; adc ebx, edi; call dword ptr [ecx]; 
0x080adc66: sti; push dword ptr [ecx]; adc edi, ebx; call dword ptr [ecx + 0x13]; 
0x080adb36: sti; push dword ptr [edi]; adc bh, bl; jmp dword ptr [edi + 0x12]; 
0x080adc46: sti; push dword ptr [edi]; adc edi, ebx; call dword ptr [edi + 0x13]; 
0x080adb76: sti; push dword ptr [edx]; adc bh, bl; jmp dword ptr [edx + 0x12]; 
0x080adcea: sti; push dword ptr [esi - 0x190004ec]; adc al, 0xfb; call dword ptr [esi]; 
0x080ada6a: sti; push dword ptr [esi - 0x190004ef]; adc ebx, edi; call dword ptr [esi]; 
0x080adf32: sti; push dword ptr [esi]; inc edi; sti; jmp esi; 
0x080bcc02: sti; push eax; cmp bh, bl; jmp dword ptr [ebx + 0x3d]; 
0x080bcb46: sti; push eax; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080a27d1: sti; push esi; call dword ptr [ebx]; 
0x08073e71: sti; ret; 
0x080bdd29: sti; sti; call eax; 
0x080d01d1: sti; sti; jmp dword ptr [esi]; 
0x08060c39: sti; sub eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080d4a2d: stosb byte ptr es:[edi], al; add al, 0xa; ret; 
0x08079ace: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [eax + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x080cf371: stosb byte ptr es:[edi], al; add byte ptr [eax], al; or al, 0x88; sti; call dword ptr [esi]; 
0x080a4cc5: stosb byte ptr es:[edi], al; cld; call dword ptr [eax + 0x56]; 
0x080a4bf9: stosb byte ptr es:[edi], al; cld; call dword ptr [eax - 0x73]; 
0x080d2ee9: stosb byte ptr es:[edi], al; cld; call esp; 
0x080c0ee4: stosb byte ptr es:[edi], al; cli; inc edx; ret 0xac65; 
0x0806d7f2: stosb byte ptr es:[edi], al; dec ecx; std; call dword ptr [eax - 0x18]; 
0x08090e62: stosb byte ptr es:[edi], al; fdivp st(5); jmp dword ptr [esi - 0x70]; 
0x0806b0ac: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x080c9be9: stosb byte ptr es:[edi], al; ret; 
0x0809047f: stosb byte ptr es:[edi], al; std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x080abaeb: stosb byte ptr es:[edi], al; test eax, eax; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x080800a2: stosb byte ptr es:[edi], al; xchg eax, edi; cld; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x080c2652: stosb byte ptr es:[edi], al; xchg esp, edi; adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x0805b67a: stosd dword ptr es:[edi], eax; add esp, 4; pop ebx; pop edi; ret; 
0x080abae4: stosd dword ptr es:[edi], eax; cmp dh, 0xff; dec dword ptr [ecx - 0x3f7a55f4]; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x08067f3b: stosd dword ptr es:[edi], eax; mov al, 0x3f; std; jmp dword ptr [esi + 0xf]; 
0x0806b0a8: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0809eb23: stosd dword ptr es:[edi], eax; push edx; and edi, ebp; call dword ptr [edx + 0x68]; 
0x080c9c04: stosd dword ptr es:[edi], eax; push ss; add byte ptr [eax], al; add byte ptr [edi + 0xe], dl; or byte ptr [ebx + 0x40e4902], al; ret; 
0x080c1fe8: stosd dword ptr es:[edi], eax; ret; 
0x08067f63: stosd dword ptr es:[edi], eax; sar byte ptr [edi], 1; std; jmp dword ptr [esi + 0xf]; 
0x080530be: stosd dword ptr es:[edi], eax; xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x080c23cd: sub ah, ah; mov bh, 6; movsd dword ptr es:[edi], dword ptr [esi]; int1; dec ebx; ret 0x5803; 
0x080c48b4: sub ah, dh; cld; jmp dword ptr [eax - 0xc]; 
0x080d00ec: sub al, 0; add byte ptr [eax], al; fdiv dword ptr [edi - 0x5b40000]; sti; call dword ptr [ebp]; 
0x080d56ec: sub al, 0; add byte ptr [eax], al; fmul dword ptr [0x167c0001]; std; jmp dword ptr [edx + 8]; 
0x080c8fd0: sub al, 0; add byte ptr [eax], al; mov esp, 0x28000046; xor bh, cl; call dword ptr [edi]; 
0x080c7581: sub al, 0; add byte ptr [esi + ebx*8 - 8], cl; call dword ptr [edx]; 
0x080d3198: sub al, 0; add cl, cl; mov bl, 0xfc; jmp dword ptr [eax]; 
0x080caea4: sub al, 0x16; cli; call eax; 
0x080ab851: sub al, 0x24; call edi; 
0x08049293: sub al, 0x24; ret; 
0x080a1e5e: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x08093733: sub al, 0x31; ror byte ptr [ebx - 0x72bbdb8c], 0x54; and al, 8; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x080c9324: sub al, 0x3a; stc; call dword ptr [edi]; 
0x080d5384: sub al, 0x41; push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x080cc3a9: sub al, 0x41; push cs; xor byte ptr [ebp + 0xe], cl; adc al, 0x41; ret; 
0x080d431e: sub al, 0x41; push cs; xor byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080cc8b6: sub al, 0x41; push cs; xor byte ptr [edi + 0xe], ah; adc al, 0x43; ret; 
0x080c4ead: sub al, 0x41; push cs; xor byte ptr [esi + 0xe], cl; and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x080cb7e9: sub al, 0x43; push cs; xor byte ptr [ebp + 0xe], al; and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080d40fc: sub al, 0x44; push cs; xor byte ptr [edx + 0xe], bl; or al, 0x44; ret; 
0x080d602e: sub al, 0x47; push cs; xor byte ptr [edx + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080d5b87: sub al, 0x48; push cs; xor byte ptr [esi + ecx + 8], dl; inc ecx; ret; 
0x080d33f6: sub al, 0x49; push cs; xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080d2c20: sub al, 0x4a; push cs; xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080925e7: sub al, 0x50; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call esi; 
0x080517e8: sub al, 0x50; mov eax, dword ptr [esp + 0x28]; push eax; call dword ptr [eax + 4]; 
0x080d5f73: sub al, 0x50; push cs; xor byte ptr [ebp + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080524bc: sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x080a1c47: sub al, 0x5b; pop esi; pop edi; pop ebp; ret 8; 
0x0804d255: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x080abe6b: sub al, 0x6a; std; call dword ptr [eax - 0x73]; 
0x08061fe2: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x0806f085: sub al, 0x83; call dword ptr [esi]; 
0x0808eb37: sub al, 0x83; in al, dx; add al, 0x53; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x0805626b: sub al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080867b7: sub al, 0x83; ret 0x3917; 
0x08060a53: sub al, 0x83; ret 0x7e10; 
0x08078424: sub al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret; 
0x0804d190: sub al, 0x89; call 0x5d5faff2; ret; 
0x0806dd56: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0809aa1f: sub al, 0x8b; inc ebp; or byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0d601], cl; ret 0xff83; 
0x08076e5d: sub al, 0x8b; pop edi; or byte ptr [ecx - 0x72dfdbb4], cl; dec edi; and dh, dh; ret; 
0x08077d8d: sub al, 0x8b; pop edi; or byte ptr [ecx - 0x72e7dbb4], cl; dec eax; cmp al, 0xf6; ret; 
0x080747b0: sub al, 0x8d; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax + 0x68]; 
0x0807478d: sub al, 0x8d; and dword ptr [eax + 0x60], 0xfffffffd; call dword ptr [eax - 0x73]; 
0x080747df: sub al, 0x8d; cmp dword ptr [esi + ebx*2], -3; call dword ptr [eax - 0x73]; 
0x080d2a64: sub al, 0xa4; cld; jmp dword ptr [edi]; 
0x080c5344: sub al, 0xa; add byte ptr [eax], al; cmp byte ptr [ebx - 2], ah; call dword ptr [edx]; 
0x0809d738: sub al, 0xbf; or eax, 0x1be08; add byte ptr [eax], al; call dword ptr [eax]; 
0x08072451: sub al, 0xc7; ret 0; 
0x08048c15: sub al, 0xc7; ret 0x8000; 
0x080a05e3: sub al, 0xc; or byte ptr [ebx + eax*2 - 0x7d], dh; call dword ptr [eax]; 
0x080c71d4: sub al, 0xd4; clc; call dword ptr [eax]; 
0x0804f135: sub al, 0xe8; add eax, 0x83000000; les ebp, ptr [eax]; pop ebx; ret; 
0x0809355b: sub al, 0xeb; ret 0x9066; 
0x080c8344: sub al, 0xf6; clc; call dword ptr [edi]; 
0x080c8e91: sub al, 0xf9; call dword ptr [edx]; 
0x0804e5e5: sub al, 0xff; je 0x660d; sbb al, 0x55; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x080933aa: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x080d0744: sub al, 7; cld; jmp edx; 
0x0804e082: sub bh, al; inc esp; and al, 0x2c; or eax, 0x83000000; ret 0xc702; 
0x08097892: sub bh, al; ret 0; 
0x0807c0aa: sub bh, al; ret; 
0x0807c25b: sub bh, bh; jmp dword ptr [esi - 0x70]; 
0x0805b8dd: sub bh, ch; call dword ptr [eax - 0x73]; 
0x0808fdee: sub byte ptr [eax + 0x55], dl; call esi; 
0x080cfd40: sub byte ptr [eax + eax - 0x409c400], dh; jmp dword ptr [edi]; 
0x08093509: sub byte ptr [eax - 0x76b58ac0], ch; ret 0xf631; 
0x0809f326: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0804b538: sub byte ptr [eax], al; add byte ptr [eax], al; add bh, al; ret 0; 
0x0805575d: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x080c71d1: sub byte ptr [eax], al; add byte ptr [esp + edx*8], ch; clc; call dword ptr [eax]; 
0x08073f05: sub byte ptr [ebp - 0x29f1f7d], cl; call dword ptr [eax + 0x68]; 
0x08073ee2: sub byte ptr [ebp - 0x29f1f7d], cl; call dword ptr [eax - 0x73]; 
0x08077381: sub byte ptr [ebp - 0x2a07f7d], cl; call dword ptr [eax + 0x68]; 
0x080773c7: sub byte ptr [ebp - 0x2a07f7d], cl; call dword ptr [eax - 0x73]; 
0x08077cd5: sub byte ptr [ebp - 0x2a09f7d], cl; call dword ptr [eax + 0x68]; 
0x08077cb2: sub byte ptr [ebp - 0x2a09f7d], cl; call dword ptr [eax - 0x73]; 
0x080773a4: sub byte ptr [ebp - 0x2a2337d], cl; call dword ptr [eax - 0x73]; 
0x08077bfb: sub byte ptr [ebp - 0x2a24f7d], cl; call dword ptr [eax - 0x73]; 
0x08057bd0: sub byte ptr [ebp - 0x729c8b01], al; inc edi; or byte ptr [ecx], bh; ret; 
0x0809ea4e: sub byte ptr [ebx + 0x4c8b10c4], al; and al, 0x1c; xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x0809369b: sub byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0805d336: sub byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x080c5440: sub byte ptr [ebx], cl; add byte ptr [eax], al; in al, dx; ja 0x7d43f; jmp dword ptr [ebx + 1]; 
0x0807c6a8: sub byte ptr [ecx + 0x24748bf3], cl; or byte ptr [ecx], bh; ret; 
0x0809ecee: sub byte ptr [ecx + 0xd4c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x08091f9f: sub byte ptr [ecx - 0x72331436], cl; je 0x49fcd; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edi; ret 0xd829; 
0x080514b3: sub byte ptr [ecx - 0x76bfdbbc], cl; ret; 
0x08067264: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x080487f9: sub byte ptr [edi - 0x2d00f7f3], 0x83; les edx, ptr [eax]; leave; ret; 
0x080487ac: sub byte ptr [edi - 0x2f00f7f3], 0x83; les edx, ptr [eax]; leave; ret; 
0x0806745c: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x080ae5e4: sub byte ptr [edi], ah; stc; call dword ptr [edi]; stc; call eax; 
0x080ae6f8: sub byte ptr [edi], ah; stc; dec edx; daa; stc; call dword ptr [edx + 0x27]; 
0x08086964: sub byte ptr [edi], cl; dec esi; ret; 
0x0808d466: sub byte ptr [edi], cl; mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x080cb278: sub byte ptr [edx + edi*8], bl; jmp dword ptr [esi]; 
0x08089a76: sub byte ptr [edx - 0x77], dl; ret 0x858b; 
0x080c8483: sub byte ptr [edx], al; clc; push cs; adc al, 0x41; ret; 
0x080cf28f: sub byte ptr [edx], al; mov ecx, 0x41140e0a; ret; 
0x080c8340: sub byte ptr [edx], bh; add byte ptr [eax], al; sub al, 0xf6; clc; call dword ptr [edi]; 
0x0806c2a4: sub byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x0806c140: sub byte ptr [edx], ch; push edi; push ebp; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; call esi; 
0x080c8fd8: sub byte ptr [edx], dh; stc; call dword ptr [edi]; 
0x080d0740: sub byte ptr [esi + 0x72c0000], bh; cld; jmp edx; 
0x080be084: sub byte ptr [esi], al; cld; jmp edi; 
0x080cc740: sub byte ptr [esi], bh; add ah, bh; pop esp; cli; call dword ptr [edi]; 
0x0804e16b: sub ch, bh; call dword ptr [eax + 0x56]; 
0x0804efd9: sub ch, bh; call dword ptr [eax - 0x18]; 
0x0804efc9: sub ch, bh; call dword ptr [eax - 0x73]; 
0x080ae681: sub cl, bh; call dword ptr [eax]; 
0x080ae8dd: sub cl, bh; call eax; 
0x080ae819: sub cl, bh; jmp dword ptr [eax + 0x28]; 
0x0809a3fa: sub cl, byte ptr [edi]; xchg dword ptr [0x8b000008], ebx; push ebp; pushfd; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x0808d9ab: sub cl, ch; ret 0xfffd; 
0x0808d05c: sub dh, bh; call dword ptr [eax + 0x68]; 
0x080876bd: sub dh, bh; call dword ptr [eax - 0x18]; 
0x080876aa: sub dh, bh; call dword ptr [eax - 0x73]; 
0x080933e9: sub dh, dh; ret 0x7540; 
0x080935de: sub dword ptr [eax + 0x4c8b80cc], eax; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov edx, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0806eaab: sub dword ptr [eax + 0x5b000009], 0x5e; pop edi; ret; 
0x080c72ad: sub dword ptr [eax], eax; add byte ptr [eax - 0x28], ah; clc; jmp dword ptr [edi]; 
0x080ca574: sub dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x40e6302], al; ret; 
0x0806c33b: sub dword ptr [eax], eax; add byte ptr [ebp - 0x2bb477d], cl; call dword ptr [eax - 0x73]; 
0x080747f4: sub dword ptr [ebp + 0x5c], -3; call dword ptr [eax - 0x18]; 
0x08075323: sub dword ptr [ebp - 3], eax; dec dword ptr [ebx - 0x72dbdba4]; and eax, 0x5f; std; call dword ptr [eax + 0x68]; 
0x0806d990: sub dword ptr [ebx], 0x37; add byte ptr [eax], al; ret; 
0x08070df1: sub dword ptr [ebx], 0x53; std; call dword ptr [edx + 0x6a]; 
0x0808d464: sub dword ptr [edi + 0x28], esi; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x1d6e4]; add ecx, ebx; jmp ecx; 
0x08073135: sub dword ptr [edi + 0x56], -3; call dword ptr [eax - 0x18]; 
0x0809aa27: sub dword ptr [edi], ecx; xchg eax, esp; ret 0xff83; 
0x080abe6a: sub dword ptr [edx + ebp*2], -3; call dword ptr [eax - 0x73]; 
0x080917db: sub eax, 0x10; pop edi; ret; 
0x080a09b1: sub eax, 0x2901c083; ret 0xd089; 
0x08076af7: sub eax, 0x5d; std; call dword ptr [eax - 0x73]; 
0x08052e5f: sub eax, 0x83000001; in al, dx; or byte ptr [ebp + 0x50242444], cl; push esi; call dword ptr [edi + 0x48]; 
0x080578af: sub eax, 0x83ffffff; or ecx, dword ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x080c2656: sub eax, 0x8acc8c6; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x08093802: sub eax, 0x8b000000; pop esp; and al, 8; call 0x80e6; add edx, 0x467f1; int 0x80; 
0x0806fe5f: sub eax, 0xc7fffded; ret 0xbf20; 
0x080c29f0: sub eax, 0xddb680a7; in eax, 0xe2; dec esp; add ch, byte ptr [si + 0x6d]; pop ebx; ret 0x6f9; 
0x080c7635: sub eax, 0xe0380000; clc; call dword ptr [edi]; 
0x080c769d: sub eax, 0xe0d00000; clc; jmp dword ptr [ebp]; 
0x08083718: sub eax, 0xfffe8ae9; jmp dword ptr [esi - 0x70]; 
0x08079ab4: sub eax, 1; mov dword ptr [esi + 4], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0808fb8f: sub eax, 1; pop ebx; pop esi; ret; 
0x080563ea: sub eax, 1; pop ebx; ret; 
0x0806f620: sub eax, 3; cmp eax, 0x1e; ja 0x2765b; mov edi, dword ptr [ecx + eax*4 - 0x2b1e0]; add edi, ecx; jmp edi; 
0x0809e524: sub eax, dword ptr [0]; ret; 
0x08073624: sub eax, dword ptr [ebx - 0x17cfe3a]; or al, 0x75; fisttp dword ptr [ebp - 0x2a3f77d]; call dword ptr [eax - 0x73]; 
0x080578ce: sub eax, dword ptr [edx + 0xc]; ret; 
0x08056c5b: sub eax, dword ptr [edx + 8]; ret; 
0x0807b41a: sub eax, dword ptr [edx]; ret; 
0x08049aa6: sub eax, dword ptr [esi + 4]; pop ebx; pop esi; pop edi; ret; 
0x080496d1: sub eax, dword ptr [esi]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0806b4a6: sub eax, dword ptr [esp + 4]; ret; 
0x0809e523: sub eax, dword ptr gs:[0]; ret; 
0x08053cfa: sub eax, ebp; pop edi; pop ebp; ret; 
0x080a15f6: sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08091fad: sub eax, ebx; pop ebx; pop esi; ret; 
0x080a4155: sub eax, ecx; cmp edx, eax; je 0x5c160; add esp, 8; pop ebx; ret; 
0x0806a23c: sub eax, ecx; pop ebx; ret; 
0x0806a6db: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x08060a8d: sub eax, ecx; pop esi; pop edi; ret; 
0x08060838: sub eax, ecx; ret; 
0x080807fb: sub eax, edi; mov esi, edi; push eax; push edi; push dword ptr [ebp - 0x46c]; call dword ptr [ecx + 0x1c]; 
0x08060c3a: sub eax, edi; pop ebx; pop esi; pop edi; ret; 
0x080a49f5: sub eax, edi; pop ebx; sar eax, 2; pop esi; pop edi; ret; 
0x08052424: sub eax, edi; ret; 
0x0809dd96: sub eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08061d89: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0807e10e: sub eax, edx; push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08050756: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x08056c7c: sub eax, edx; ret; 
0x080885ee: sub eax, edx; sar eax, 2; push eax; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808fb8a: sub eax, edx; sar eax, 2; sub eax, 1; pop ebx; pop esi; ret; 
0x080563e8: sub eax, edx; sub eax, 1; pop ebx; ret; 
0x08050fdb: sub eax, edx; sub esp, 4; push eax; push edx; push ebp; call ecx; 
0x0805348c: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0806a99d: sub eax, esi; pop esi; pop edi; pop ebp; ret; 
0x080c0c7e: sub ebp, eax; fcomp qword ptr [edi - 0x4a]; dec esi; ret 0x474c; 
0x08054717: sub ebp, edi; call dword ptr [eax + 0x53]; 
0x08050b35: sub ebp, edi; call dword ptr [eax - 0x18]; 
0x0809027e: sub ebp, edi; call dword ptr [eax - 0x18]; leave; xchg eax, ebp; sti; jmp dword ptr [esi - 0x70]; 
0x08050b22: sub ebp, edi; call dword ptr [eax - 0x73]; 
0x08050b29: sub ebp, edi; ljmp [eax + 0x23]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + ebp], -3; call dword ptr [eax - 0x18]; 
0x080bf71d: sub ebx, dword ptr [ebx - 0xb]; pop ebx; and dword ptr [esi + ebp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x080c4498: sub ebx, ebp; cld; jmp eax; 
0x080c44dc: sub ebx, ebp; cld; push eax; fdiv st(4), st(0); jmp eax; 
0x08096f42: sub ebx, edi; dec dword ptr [ebp - 0x1c9bb7d]; call dword ptr [eax - 0x73]; 
0x0807ff4a: sub ecx, dword ptr [ebx - 0x88763]; call dword ptr [esi - 0x18]; 
0x0808f3a9: sub ecx, edx; cmp eax, ecx; jbe 0x473e0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0804fec3: sub ecx, edx; cmp eax, ecx; jbe 0x7f30; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x080544c0: sub ecx, edx; cmp eax, ecx; jbe 0xc5f0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08054b66: sub ecx, edx; cmp eax, ecx; jbe 0xcbb0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08055af6: sub ecx, edx; cmp eax, ecx; jbe 0xdb30; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x08055b79: sub ecx, edx; cmp eax, ecx; jbe 0xdba0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x08067014: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x08091ccb: sub edi, 0x10; jb 0x49d90; lea eax, [eax + 0xf]; pop edi; ret; 
0x08091d40: sub edi, 0xa; jb 0x49d90; lea eax, [eax + 9]; pop edi; ret; 
0x08091d50: sub edi, 0xb; jb 0x49d90; lea eax, [eax + 0xa]; pop edi; ret; 
0x08091d60: sub edi, 0xd; jb 0x49d90; lea eax, [eax + 0xc]; pop edi; ret; 
0x08091d70: sub edi, 0xe; jb 0x49d90; lea eax, [eax + 0xd]; pop edi; ret; 
0x08091d80: sub edi, 0xf; jb 0x49d90; lea eax, [eax + 0xe]; pop edi; ret; 
0x08091ce0: sub edi, 2; jb 0x49d90; lea eax, [eax + 1]; pop edi; ret; 
0x08091cf0: sub edi, 3; jb 0x49d90; lea eax, [eax + 2]; pop edi; ret; 
0x08091c38: sub edi, 4; jb 0x49d90; lea eax, [eax + 3]; pop edi; ret; 
0x08091d00: sub edi, 5; jb 0x49d90; lea eax, [eax + 4]; pop edi; ret; 
0x08091d10: sub edi, 6; jb 0x49d90; lea eax, [eax + 5]; pop edi; ret; 
0x08091d20: sub edi, 7; jb 0x49d90; lea eax, [eax + 6]; pop edi; ret; 
0x08091c6b: sub edi, 8; jb 0x49d90; lea eax, [eax + 7]; pop edi; ret; 
0x08091d30: sub edi, 9; jb 0x49d90; lea eax, [eax + 8]; pop edi; ret; 
0x080802cd: sub edi, eax; push edi; push eax; push dword ptr [ebp - 0x46c]; mov dword ptr [ebp - 0x470], edi; call dword ptr [edx + 0x1c]; 
0x08076c7e: sub edi, ebp; dec dword ptr [ebx - 0x72c7dba4]; sub eax, 0x5d; std; call dword ptr [eax - 0x73]; 
0x0807c164: sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x080cb83d: sub edi, edx; jmp dword ptr [edx]; 
0x080c211e: sub edi, esi; int 0x6b; ret; 
0x080674bb: sub edx, 0x10; jb 0x1f590; lea eax, [edi + 0xf]; pop edi; ret; 
0x08067540: sub edx, 0xa; jb 0x1f590; lea eax, [edi + 9]; pop edi; ret; 
0x08067550: sub edx, 0xb; jb 0x1f590; lea eax, [edi + 0xa]; pop edi; ret; 
0x08067492: sub edx, 0xc; jb 0x1f590; lea eax, [edi + 0xb]; pop edi; ret; 
0x08067560: sub edx, 0xd; jb 0x1f590; lea eax, [edi + 0xc]; pop edi; ret; 
0x08067570: sub edx, 0xe; jb 0x1f590; lea eax, [edi + 0xd]; pop edi; ret; 
0x08067580: sub edx, 0xf; jb 0x1f590; lea eax, [edi + 0xe]; pop edi; ret; 
0x08057ebd: sub edx, 1; mov dword ptr [eax + 0x450], edx; add esp, 8; pop ebx; ret; 
0x080674e0: sub edx, 2; jb 0x1f590; lea eax, [edi + 1]; pop edi; ret; 
0x080674f0: sub edx, 3; jb 0x1f590; lea eax, [edi + 2]; pop edi; ret; 
0x08067427: sub edx, 4; jb 0x1f590; lea eax, [edi + 3]; pop edi; ret; 
0x08067500: sub edx, 5; jb 0x1f590; lea eax, [edi + 4]; pop edi; ret; 
0x08067510: sub edx, 6; jb 0x1f590; lea eax, [edi + 5]; pop edi; ret; 
0x08067520: sub edx, 7; jb 0x1f590; lea eax, [edi + 6]; pop edi; ret; 
0x08067458: sub edx, 8; jb 0x1f590; lea eax, [edi + 7]; pop edi; ret; 
0x08067530: sub edx, 9; jb 0x1f590; lea eax, [edi + 8]; pop edi; ret; 
0x08056c76: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x08056c80: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0807179f: sub edx, dword ptr [eax - 0x73]; adc ebp, 0x55; std; call dword ptr [eax - 0x18]; 
0x0808fc28: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x08070df2: sub edx, dword ptr [ebx - 3]; call dword ptr [edx + 0x6a]; 
0x080678b3: sub edx, eax; jbe 0x1f8f0; add eax, edi; pop edi; ret; 
0x080678c6: sub edx, eax; jbe 0x1f8f0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x080678d6: sub edx, eax; jbe 0x1f8f0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x080678e6: sub edx, eax; jbe 0x1f8f0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0805288d: sub edx, eax; push edx; push eax; push esi; call dword ptr [ebx + 0x38]; 
0x080a45b6: sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x5c580; jmp eax; 
0x08055e20: sub edx, ecx; cmp eax, edx; jbe 0xdef0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x080675dc: sub edx, ecx; jbe 0x1f610; add eax, ecx; ret; 
0x0805412e: sub edx, edi; mov eax, edx; pop edi; pop ebp; ret; 
0x0806d991: sub esi, dword ptr [edi]; add byte ptr [eax], al; ret; 
0x080a45b4: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x5c580; jmp eax; 
0x0808a721: sub esi, ecx; sti; dec dword ptr [ebx - 0x89363]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax + 0x68]; 
0x0809d529: sub esp, 0x101c; lea ecx, [esp + 0x10]; lea ebx, [esi - 0x1baee]; call dword ptr gs:[0x10]; 
0x080487f4: sub esp, 0x10; push eax; push 0x80daf80; call edx; 
0x080487a8: sub esp, 0x14; push 0x80daf80; call eax; 
0x080487a8: sub esp, 0x14; push 0x80daf80; call eax; add esp, 0x10; leave; ret; 
0x08056960: sub esp, 0x18; push 1; call 0xe3f0; add esp, 0x1c; ret; 
0x0806c2f5: sub esp, 0x43; std; call dword ptr [eax - 0x18]; 
0x08071786: sub esp, 0x55; std; call dword ptr [eax - 0x18]; 
0x08098ee2: sub esp, 0xc; mov eax, 0x80daa24; push ebx; call dword ptr [eax]; 
0x0808f585: sub esp, 0xc; mov eax, dword ptr [eax + 0xb0]; push ebx; call dword ptr [eax + 0x34]; 
0x08095847: sub esp, 0xc; or dword ptr [ebx - 0x30], 7; push dword ptr [ebp + 0x18]; call dword ptr [eax]; 
0x0806da81: sub esp, 0xc; push dword ptr [esi]; call edi; 
0x0809eca4: sub esp, 0xc; push dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x080abdbf: sub esp, 0xc; push eax; call edx; 
0x08051c48: sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x08050d5b: sub esp, 0xc; push ebx; call dword ptr [ebx + 0x10]; 
0x08055b7f: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x080718ff: sub esp, 0xc; push edi; call 0x28270; mov dword ptr [esp], esi; call edi; 
0x0807926d: sub esp, 0xc; push esi; call 0x28270; mov ecx, dword ptr [ebp - 0x2c]; mov dword ptr [esp], ecx; call esi; 
0x08055e2a: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0804fec9: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x08055afc: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x080544ca: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x08051107: sub esp, 0xc; push esi; call dword ptr [esi + 0x10]; 
0x0807b39b: sub esp, 0xc; push esi; call eax; 
0x080567ee: sub esp, 4; push 0; push 0; push esi; call dword ptr [eax + 0x2c]; 
0x0808eac8: sub esp, 4; push 0x10; push dword ptr [esp + 0x14]; push ebp; call dword ptr [ebx + 0x1c]; 
0x0808ec39: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x080aa05e: sub esp, 4; push dword ptr [esi]; push dword ptr [ebx + 4]; push ebp; call edi; 
0x0805cbd0: sub esp, 4; push dword ptr [esp + 0x30]; push esi; push ebx; call eax; 
0x080a5860: sub esp, 4; push dword ptr [esp + 0x34]; push edi; push esi; call dword ptr [ebx]; 
0x08053af2: sub esp, 4; push dword ptr [esp + 0x3c]; push edi; push ebp; call dword ptr [eax + 0x20]; 
0x080a9200: sub esp, 4; push eax; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08050fdd: sub esp, 4; push eax; push edx; push ebp; call ecx; 
0x0805348e: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x080ab460: sub esp, 4; push ebp; push 0x28; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x28]; call eax; 
0x08082c8d: sub esp, 4; push ebp; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x0808e28a: sub esp, 4; push ebx; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0807e08b: sub esp, 4; push ebx; push edi; push dword ptr [ebp - 0x890]; call eax; 
0x0808856b: sub esp, 4; push ebx; push edi; push dword ptr [ebp - 0x8a0]; call eax; 
0x0808eb38: sub esp, 4; push ebx; push edi; push ebp; call dword ptr [edx + 0x1c]; 
0x0806da27: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0805c7f0: sub esp, 4; push ecx; push edx; push ebx; call eax; 
0x0806d9e2: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0806d9f6: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0806da09: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x080848fc: sub esp, 4; push edi; push dword ptr [ebp - 0xc8]; push dword ptr [ebp - 0x8c]; call eax; 
0x08053be7: sub esp, 4; push edi; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebx + 0x38]; 
0x0807d9ec: sub esp, 4; push edi; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x080a59d0: sub esp, 4; push edi; push ebp; push dword ptr [esp + 0x40]; call dword ptr [ebx]; 
0x0805032e: sub esp, 4; push esi; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x0808b8bc: sub esp, 4; push esi; push dword ptr [ebp - 0x4c0]; push dword ptr [ebp - 0x45c]; call dword ptr [edx + 0x1c]; 
0x0807e3e4: sub esp, 4; push esi; push dword ptr [ebp - 0x894]; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x08089e31: sub esp, 4; push esi; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0808d2bd: sub esp, 4; sar ebp, 2; push ebp; push eax; push esi; call dword ptr [ecx + 0x1c]; 
0x0807e10b: sub esp, 4; sub eax, edx; push eax; push edx; push dword ptr [ebp - 0x890]; call dword ptr [ebx + 0x1c]; 
0x0805288a: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [ebx + 0x38]; 
0x0808e0e0: sub esp, 8; lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x08052e63: sub esp, 8; lea eax, [esp + 0x24]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08052ac6: sub esp, 8; lea eax, [esp + 0x34]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x08050c77: sub esp, 8; lea eax, [esp + 0x3c]; push eax; push ebp; call dword ptr [ebx + 0x48]; 
0x080531d6: sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x08055c30: sub esp, 8; lea ebx, [ecx + 1]; push eax; push ebp; call dword ptr [esi + 0xc]; 
0x0804fc8a: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x080a9160: sub esp, 8; push dword ptr [ebp + 0xc]; push ebx; call dword ptr [ebp + 8]; 
0x0806dda0: sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push edi; call esi; 
0x0805c9a0: sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x0805c490: sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x0805d0a0: sub esp, 8; push dword ptr [esp + 0x34]; push ebp; call eax; 
0x08056302: sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0808fa91: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x080a911e: sub esp, 8; push edx; push 1; call eax; 
0x080ac1e8: sub esp, edi; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0806182d: syscall; 
0x08067b39: test ah, 0x20; jne 0x1fbf0; test ah, 0x40; jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x080913d2: test ah, 0x20; jne 0x49470; lea eax, [edi - 4]; pop edi; ret; 
0x08066e16: test ah, 0x40; jne 0x1ef00; lea eax, [edi + 0xf]; pop edi; ret; 
0x080672b2: test ah, 0x40; jne 0x1f3f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x08067b42: test ah, 0x40; jne 0x1fc00; lea eax, [edx + 0xf]; ret; 
0x08067b10: test ah, 2; jne 0x1fbc0; test ah, 4; jne 0x1fbd0; lea eax, [edx + 0xb]; ret; 
0x080913a9: test ah, 2; jne 0x49440; lea eax, [edi - 8]; pop edi; ret; 
0x08067289: test ah, 4; jne 0x1f3c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x08067b19: test ah, 4; jne 0x1fbd0; lea eax, [edx + 0xb]; ret; 
0x08067af4: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x080cae9c: test al, 0; add byte ptr [eax], al; mov byte ptr [ebp], ah; add byte ptr [esi + edx], ch; cli; call eax; 
0x080a0c4e: test al, 0x1a; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08067ae8: test al, 0x20; jne 0x1fb90; test al, 0x40; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x08091380: test al, 0x20; jne 0x49410; lea eax, [edi - 0xc]; pop edi; ret; 
0x080bcb00: test al, 0x37; sti; lcall [eax]; cmp bl, bh; call dword ptr [eax + 0x37]; 
0x080bcb18: test al, 0x37; sti; lcall [eax]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x080bcb14: test al, 0x37; sti; ljmp [eax + 0x18fffb37]; cmp bl, bh; jmp dword ptr [eax + 0x37]; 
0x08066dc4: test al, 0x40; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x08067260: test al, 0x40; jne 0x1f390; lea eax, [edi + 7]; pop edi; ret; 
0x08067af0: test al, 0x40; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x080cc508: test al, 0x52; cli; jmp dword ptr [ecx]; 
0x080cb6c0: test al, 0x6d; add byte ptr [eax], al; pushfd; and edi, edx; call dword ptr [edi]; 
0x0809de9f: test al, 0x89; push ebp; lodsb al, byte ptr [esi]; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x080bffd7: test al, 0x97; xchg eax, esp; ret; 
0x080d10c0: test al, 0xc7; add byte ptr [eax], al; in al, dx; sbb edi, esp; call dword ptr [ebx]; 
0x080d46b8: test al, 0xd2; cld; call dword ptr [ebx]; 
0x080a4937: test al, 0xfc; call dword ptr [eax - 0x18]; 
0x080507d2: test al, 0xff; jne 0x8792; push ebx; push ecx; push eax; call dword ptr [eax + 0xc]; 
0x08086180: test al, 1; add byte ptr [ecx - 0x7c9fdbbc], cl; les edx, ptr [ebx + ecx*4]; je 0x3e1b1; adc al, 0x89; ret; 
0x08067ac5: test al, 2; jne 0x1fb60; test al, 4; jne 0x1fb70; lea eax, [edx + 3]; ret; 
0x0809135b: test al, 2; jne 0x493e0; lea eax, [edi - 0x10]; pop edi; ret; 
0x080d4dc0: test al, 4; add dword ptr [eax], eax; pop esp; idiv esp; call dword ptr [esi]; 
0x08099d39: test al, 4; je 0x52a98; lea esi, [esi]; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x0806723d: test al, 4; jne 0x1f360; lea eax, [edi + 3]; pop edi; ret; 
0x08067acd: test al, 4; jne 0x1fb70; lea eax, [edx + 3]; ret; 
0x0806eaac: test al, 9; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0806b320: test al, al; jne 0x23318; xor eax, eax; ret; 
0x080a95b0: test al, al; jne 0x615ca; add esp, 8; mov eax, 4; pop ebx; ret; 
0x08074164: test bh, ah; add byte ptr [eax], al; add byte ptr [ebx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret 0x3901; 
0x080d420c: test bh, cl; cld; call dword ptr [ecx]; 
0x08055e38: test bl, al; add byte ptr [eax], al; add byte ptr [ebx - 0x74007afa], cl; dec esi; sbb al, 0x89; ret 0x6074; 
0x08093c36: test byte ptr [0x83000001], dl; ret 0x8320; 
0x080c769c: test byte ptr [0xe0d00000], ch; clc; jmp dword ptr [ebp]; 
0x08091e91: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x08098130: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add bh, bh; xor byte ptr [ebp - 0x1c88b79], cl; call dword ptr [eax - 0x18]; 
0x080a7f0c: test byte ptr [eax - 0x157bc], dl; jmp eax; 
0x0809a7cd: test byte ptr [eax - 0x1c00c], bh; jmp eax; 
0x08099d5d: test byte ptr [eax - 0x1c2bc], dh; jmp eax; 
0x08091e41: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x08093c5b: test byte ptr [eax - 0x7d000000], ah; rol byte ptr [ecx], 0x88; or cl, byte ptr [edi]; mov dh, 0x4d; in al, 0x83; ret 0x8401; 
0x0807565d: test byte ptr [eax - 0x8fffffd], al; ret 0; 
0x080487b8: test byte ptr [ebp + 0x27bc], 0; add bl, dh; ret; 
0x08055b38: test byte ptr [ebp + 0x27bc], 0; add byte ptr [eax - 1], bh; ret; 
0x08057d98: test byte ptr [ebp + 0x27bc], 0; add byte ptr [ebx + 0x408b0450], cl; or al, 0x83; ret; 
0x0808c038: test byte ptr [ebp + 0x27bc], 0; add byte ptr [ebx - 0x4737b], cl; jmp dword ptr [ebp - 0x39]; 
0x080723b8: test byte ptr [ebp + 0x27bc], 0; add byte ptr [ebx - 0x7cacf314], al; ret; 
0x080a5db8: test byte ptr [ebp + 0x27bc], 0; add byte ptr [ecx], al; ret 0xb70f; 
0x08051c40: test byte ptr [ebp - 0x75000000], cl; outsb dx, byte ptr [esi]; push esp; sub esp, 0xc; push ebp; call dword ptr [ebp + 0x10]; 
0x0805dc0e: test byte ptr [ebx + 0x12], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x0809064e: test byte ptr [ebx + 0x17], 4; pop ebx; cmovne eax, ecx; ret; 
0x0809b403: test byte ptr [ebx + 0x21b8c455], 0; add byte ptr [eax], al; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0809094e: test byte ptr [ebx + 0x2b102454], 0x94; and al, 0x60; add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x08090939: test byte ptr [ebx + 0x46024b4], 0; add byte ptr [edi], cl; xchg eax, ebp; ret; 
0x080916c0: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0808b177: test byte ptr [ebx - 0x1080], al; jmp eax; 
0x0808c8e2: test byte ptr [ebx - 0x1100], al; jmp eax; 
0x0808b00a: test byte ptr [ebx - 0x1200], al; jmp eax; 
0x0808ac3c: test byte ptr [ebx - 0x1280], al; jmp eax; 
0x0808af82: test byte ptr [ebx - 0x1300], al; jmp eax; 
0x08080f90: test byte ptr [ebx - 0x1400], al; jmp eax; 
0x080821a0: test byte ptr [ebx - 0x1480], al; jmp eax; 
0x08080ce1: test byte ptr [ebx - 0x1580], al; jmp eax; 
0x08080626: test byte ptr [ebx - 0x1600], al; jmp eax; 
0x0808107c: test byte ptr [ebx - 0x1680], al; jmp eax; 
0x080abae3: test byte ptr [ebx - 0x180], ch; mov dword ptr [edx + ebp*4], ecx; test eax, eax; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x0806a236: test byte ptr [ebx - 0x28ca0], al; sub eax, ecx; pop ebx; ret; 
0x0806c5cd: test byte ptr [ebx - 0x2bacc], dh; add eax, ebx; jmp eax; 
0x0804cbcc: test byte ptr [ebx - 0x76000002], cl; ret; 
0x080994a1: test byte ptr [ebx - 0x7972638b], 0xe5; cmp bh, dh; dec dword ptr [ebp - 0x1b8266a]; dec dword ptr [edi]; inc esp; ret 0x578b; 
0x08088c75: test byte ptr [ebx - 0x7cffffeb], dh; in al, dx; or byte ptr [ebx - 0x89363], cl; call dword ptr [eax + 0x52]; 
0x0808f580: test byte ptr [ebx], 2; jne 0x4759d; sub esp, 0xc; mov eax, dword ptr [eax + 0xb0]; push ebx; call dword ptr [eax + 0x34]; 
0x0807a8e5: test byte ptr [ebx], al; add byte ptr [edx - 3], ah; call dword ptr [eax - 0x18]; 
0x0808b5e6: test byte ptr [ebx], al; mov al, byte ptr [0x8bfffe28]; test byte ptr [ebx - 0x1080], al; jmp eax; 
0x0808c8db: test byte ptr [ebx], al; mov al, byte ptr [0x8bfffe28]; test byte ptr [ebx - 0x1100], al; jmp eax; 
0x080c849c: test byte ptr [ebx], bh; add byte ptr [eax], al; nop; stc; clc; jmp dword ptr [ebp]; 
0x0808affe: test byte ptr [ebx], dh; mov al, byte ptr [0xb9fffe28]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 
0x0808af76: test byte ptr [ebx], dh; mov al, byte ptr [0xbffffe28]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x08058e71: test byte ptr [ecx - 0x7628fe28], 0x59; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5189; 
0x0805e931: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x08062158: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x080566e5: test byte ptr [ecx], al; add byte ptr [ecx + 0x186093], cl; add bh, al; ret 0xa078; 
0x080cd086: test byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0809baba: test byte ptr [ecx], bl; add eax, dword ptr [eax]; add byte ptr [ebp + 0xff289c9], al; xchg eax, esp; ret; 
0x0809a390: test byte ptr [ecx], cl; add eax, dword ptr [eax]; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xe2c1; 
0x08099d3c: test byte ptr [edi + 0xd], dl; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ebp - 0x78]; call eax; 
0x08088df3: test byte ptr [edi + esi*8 - 0x137c0001], dh; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x18]; 
0x0806b590: test byte ptr [edi - 0x2bf60], dh; add eax, edi; jmp eax; 
0x080808e4: test byte ptr [edi - 0x7c000002], ah; in al, dx; add al, 0x89; lea ebp, [ebx + edi*8 - 1]; call dword ptr [ecx + 0x6a]; 
0x08060a0c: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x080a785c: test byte ptr [edi - 0x7ffffffe], dl; cmp byte ptr [eax + 0x78811a75], bh; add dword ptr [ebp + 0x75000000], ebp; adc dword ptr [esi - 0x7f], esp; js 0x5f878; int 0x80; 
0x0805d9b3: test byte ptr [edi], 0x44; ret 0xfa89; 
0x0806c2dd: test byte ptr [edi], 0x84; ret 0xfffe; 
0x0807b707: test byte ptr [edi], 0x84; ret 6; 
0x08058beb: test byte ptr [edi], 0x85; cmp ebp, -1; jmp dword ptr [ebp - 0x7d]; 
0x080904b7: test byte ptr [edi], 0x88; ret 0; 
0x0809f093: test byte ptr [edi], 0x88; ret; 
0x0806d5b4: test byte ptr [edi], 0x94; ret 0xc221; 
0x0805ca09: test byte ptr [edi], 0x94; ret 0xdb85; 
0x08089373: test byte ptr [edi], 0x95; ret 0xc221; 
0x080a8a15: test byte ptr [edi], 0x95; ret 0xc985; 
0x08061df3: test byte ptr [edi], 0xb6; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0809bcee: test byte ptr [edi], bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x470f; 
0x08075651: test byte ptr [edi], bl; add eax, dword ptr [eax]; add bh, dh; ret 0; 
0x0805315c: test byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x44c7; 
0x0809b115: test byte ptr [edi], dl; add dword ptr [eax], eax; add byte ptr [ecx - 0x9b73], cl; call dword ptr [ecx + 0x51]; 
0x080a2697: test byte ptr [edx + eax - 0x68730000], dl; pop esp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5589; 
0x0809f38e: test byte ptr [edx - 0x75000000], dh; add dword ptr [ebx - 0x78f0fe08], eax; ret 0; 
0x08061d59: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x080701a3: test byte ptr [edx - 3], dl; call dword ptr [eax - 0x18]; 
0x0807d901: test byte ptr [esi + eax*2], ah; add al, 0; add byte ptr [eax - 0x18], dl; ret; 
0x0807e20f: test byte ptr [esi - 0x74ffffe8], al; test dword ptr [edi + esi*8 - 1], ecx; inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x0804f999: test byte ptr [esi - 0x7d000000], dl; ret 0x8d1e; 
0x08056267: test byte ptr [esi], 0x80; jne 0xe298; add esp, 4; pop ebx; pop esi; ret; 
0x080591c7: test byte ptr [esi], ch; std; call dword ptr [eax - 1]; 
0x0804fc65: test byte ptr [esi], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x949e], cl; add bh, al; ret 0xafc0; 
0x08051149: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 0x18]; 
0x080514e8: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0x56], dl; call dword ptr [esi + 4]; 
0x080608d4: test ch, 0x40; jne 0x188a0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08091de8: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0809a54e: test ch, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x78f0d501], al; ret 6; 
0x0809f4b6: test ch, dh; add byte ptr [eax], al; add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x0806082b: test cl, 0x40; jne 0x188a0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x08099e48: test cl, ah; add eax, dword ptr [eax]; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xe2c1; 
0x08091742: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x08066d37: test dh, 0x40; jne 0x1ef10; lea eax, [edi + 0xf]; pop edi; ret; 
0x08091b92: test dh, 0x40; jne 0x49f21; add eax, 0xf; pop edi; ret; 
0x0807faa1: test dh, 0x85; aas; idiv edi; jmp dword ptr [eax]; 
0x08066d7d: test dh, 4; jne 0x1ef10; lea eax, [edi + 0xb]; pop edi; ret; 
0x08091b69: test dh, 4; jne 0x49f0d; add eax, 0xb; pop edi; ret; 
0x08091e2e: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x08055bd5: test dh, bl; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x08066c94: test dl, 0x40; jne 0x1ef10; lea eax, [edi + 7]; pop edi; ret; 
0x08091b42: test dl, 0x40; jne 0x49ef9; add eax, 7; pop edi; ret; 
0x08066cda: test dl, 4; jne 0x1ef10; lea eax, [edi + 3]; pop edi; ret; 
0x08091b1c: test dl, 4; jne 0x49ee5; add eax, 3; pop edi; ret; 
0x08092b75: test dl, dl; je 0x4ab90; mov cl, dl; and cl, 0xf; je 0x4aba0; ret; 
0x080736b4: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0806ad0d: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x08076505: test dword ptr [0x83000002], ebx; ret; 
0x080a44f8: test dword ptr [0x8bfffffd], edi; jl 0x5c524; adc bh, al; ret 0x9da4; 
0x08081a26: test dword ptr [eax + 0x39fffffb], edx; ret 0x860f; 
0x08080df2: test dword ptr [eax + 0x39fffffb], edx; ret 0x870f; 
0x08081907: test dword ptr [eax + 0x39fffffb], edx; ret 0x8f0f; 
0x0808b434: test dword ptr [eax + 0x39fffffb], esp; ret 0x870f; 
0x0808bf9f: test dword ptr [eax + 0x39fffffb], esp; ret 0x8f0f; 
0x08062c11: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x08062511: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x08066dbf: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1ee90; lea eax, [edi + 7]; pop edi; ret; 
0x08067aeb: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1fba0; lea eax, [edx + 7]; ret; 
0x0807ee57: test dword ptr [eax - 0x72000009], ebx; test dword ptr [eax - 0x7f000009], ebx; or eax, 0x789d8bef; idiv edi; call dword ptr [eax + 0x57]; 
0x08067af3: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x08091383: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0808b1f2: test dword ptr [eax - 0x7d000000], eax; in al, dx; or al, 0x89; lea edi, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x0808b0af: test dword ptr [eax - 0x7d000000], eax; in al, dx; or al, 0x89; lea esp, [ebx + edi*8 - 1]; call dword ptr [edx - 0x77]; 
0x08060a03: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x080a55d3: test dword ptr [eax - 0x7d000000], esi; rol byte ptr [ecx], 0x39; ret 0xe175; 
0x080894b9: test dword ptr [eax - 0x7f000009], eax; or eax, 0x6c9d8bef; idiv edi; call dword ptr [eax + 0x57]; 
0x0807ee5d: test dword ptr [eax - 0x7f000009], ebx; or eax, 0x789d8bef; idiv edi; call dword ptr [eax + 0x57]; 
0x080a277b: test dword ptr [eax], eax; add byte ptr [eax], al; add bh, al; ret; 
0x08085261: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xdf29; 
0x080919d0: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x08089851: test dword ptr [eax], ebp; idiv edi; dec dword ptr [ecx - 0x8bb6b]; dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x08089039: test dword ptr [eax], ebp; idiv edi; inc dword ptr [ebp - 0x7d7bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x8cb43], al; call dword ptr [eax]; 
0x0807e2d5: test dword ptr [eax], edx; idiv edi; inc dword ptr [ebx - 0x2e7cfe08]; inc dword ptr [eax - 0x8c043]; jmp dword ptr [eax]; 
0x08062cbc: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x08062adc: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x080625ac: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0806ad81: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x08062906: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x08066c76: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x080913d6: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x0809135e: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x08066c98: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x080626d8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x08096062: test dword ptr [ebx + eax*4], edx; rol byte ptr [ecx], 0x39; ret 0xf575; 
0x0808a7ce: test dword ptr [ebx + edi*8 + 0x458bffff], ebx; adc byte ptr [ecx - 0x45b4b], cl; dec dword ptr [ecx - 0x4677b]; jmp dword ptr [ebp - 0x5f]; 
0x080801ce: test dword ptr [ebx + edi*8 + 0x458bffff], ecx; adc byte ptr [ecx - 0x46b4b], cl; dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x0808052d: test dword ptr [ebx + edi*8 - 1], eax; inc dword ptr [eax]; add byte ptr [eax], al; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x080828ea: test dword ptr [ebx + edi*8 - 1], ebp; dec dword ptr [ecx - 0x49f6b]; call dword ptr [eax + 0x51]; 
0x0808293e: test dword ptr [ebx + edi*8 - 1], ebp; dec dword ptr [ecx - 0x4a36b]; call dword ptr [eax + 0x51]; 
0x080811ce: test dword ptr [ebx + edi*8 - 1], edi; jmp dword ptr [ebp - 0x39]; 
0x080801f4: test dword ptr [ebx + edi*8 - 1], edi; jmp dword ptr [ebp - 0x75]; 
0x08080537: test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x08048b45: test dword ptr [ebx - 0x74000002], ecx; push ebp; sbb al, 0xf7; ret 0; 
0x08091b6d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x080909a8: test dword ptr [ebx - 0x7d000000], esi; ret 0x3901; 
0x08091b0e: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x08088c53: test dword ptr [ebx], eax; adc byte ptr [eax], al; add byte ptr [ebx - 0x8a343], al; call dword ptr [ebx + 0xf]; 
0x08062add: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x08088eb7: test dword ptr [ebx], esi; idiv edi; jmp dword ptr [eax]; 
0x080627e0: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x08091c2a: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x08062755: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0806c3cb: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x08094929: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x70]; 
0x080719cf: test dword ptr [edi + edi*8 - 1], edi; dec dword ptr [ebp + 0x196083]; add byte ptr [eax - 0x77], dl; inc ebp; or byte ptr [ebp - 0x17af2bbb], 0x99; ret; 
0x08094ed0: test dword ptr [edi + edi*8 - 1], edi; dec dword ptr [ecx + 0x42890c4a]; add al, 0x8b; test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x0804a6a5: test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [ebp - 0x75]; 
0x08094eb2: test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [ecx]; 
0x08094edc: test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebx]; 
0x0806c3d4: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebp - 0x2bb287d]; call dword ptr [eax - 0x18]; 
0x08088202: test dword ptr [edi + esi*8 - 1], ebp; dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; 
0x08088202: test dword ptr [edi + esi*8 - 1], ebp; dec dword ptr [ebx - 0x8ab73]; call dword ptr [ebx - 0x7d]; ret; 
0x0807e215: test dword ptr [edi + esi*8 - 1], ecx; inc esi; test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x0807db4b: test dword ptr [edi + esi*8 - 1], edi; call dword ptr [ebx]; 
0x08091c54: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x08061d84: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x08085fbd: test dword ptr [edi], ebx; add al, 0; add dh, dh; ret 0xf50; 
0x0807e21b: test dword ptr [edi], edi; idiv edi; jmp dword ptr [eax]; 
0x0806ae8c: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x08091b3d: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x080d30cc: test dword ptr [edx], eax; dec esp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080c4f7c: test dword ptr [edx], eax; dec esp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080ccaa8: test dword ptr [edx], eax; dec esp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x080d26bc: test dword ptr [edx], eax; dec esp; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080cecdc: test dword ptr [edx], eax; dec esp; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x080c5420: test dword ptr [edx], eax; inc ebp; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080ce228: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d1974: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc418: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d272c: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d1904: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb940: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacb0: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cb4: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea78: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66c8: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5e8: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf588: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080d1934: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a50: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d2918: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080c4fac: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a20: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080d50bc: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc720: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf558: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea48: test dword ptr [edx], eax; inc edx; or eax, 0x3874305; xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x080d26ec: test dword ptr [edx], eax; inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x0805b8dc: test dword ptr [edx], ebp; std; call dword ptr [eax - 0x73]; 
0x0806dfb1: test dword ptr [edx], ebx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x1d7c3bab], cl; add dword ptr [ecx], ecx; ret 0x1689; 
0x0804c976: test dword ptr [esi + edi*8 - 1], eax; dec dword ptr [ebx + 0x15f898]; add byte ptr [ebx + 0x15f480], cl; add byte ptr [ecx], bh; ret; 
0x08066c65: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x080913ad: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x0804fc3d: test dword ptr [esi - 0x77000000], ebp; ret 0xe281; 
0x080581f1: test dword ptr [esi - 0x7c000002], ebp; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08091b96: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x08091b46: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x08091b34: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x08091c5d: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x08066ccd: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x080ae534: test dword ptr [esi], esp; stc; call dword ptr [esi + 0x28]; 
0x080ae5fc: test dword ptr [esi], esp; stc; call eax; 
0x080ae634: test dword ptr [esi], esp; stc; inc dword ptr [ebp - 0x7a0006da]; stc; call eax; 
0x080ae80c: test dword ptr [esi], esp; stc; inc dword ptr [ebp - 0x7a0006da]; stc; jmp dword ptr [eax + 0x28]; 
0x080ae814: test dword ptr [esi], esp; stc; jmp dword ptr [eax + 0x28]; 
0x080ae594: test dword ptr [esi], esp; stc; jmp dword ptr [esi + 0x27]; 
0x080c5b9d: test eax, 0x41140e0a; ret; 
0x080c1cbc: test eax, 0x7d4c8c5d; ret 0xd8f; 
0x080a48d3: test eax, 0x81fffa3e; ret; 
0x080a0ed3: test eax, 0x81fffa78; ret; 
0x080701d3: test eax, 0x81fffd85; ret; 
0x0809eb59: test eax, 0x830003b4; in al, dx; add al, 0xc7; ret 0xfffc; 
0x0806d7d2: test eax, 0x8b080d; test eax, eax; je 0x257e0; add esp, 8; pop ebx; ret; 
0x0806ea67: test eax, eax; cmove eax, edx; ret; 
0x080481bd: test eax, eax; je 0x1c6; call 0xf7fb8000; add esp, 8; pop ebx; ret; 
0x08067c96: test eax, eax; je 0x1fcb0; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0806d7d7: test eax, eax; je 0x257e0; add esp, 8; pop ebx; ret; 
0x080701e8: test eax, eax; je 0x281f8; add esp, 4; pop ebx; pop esi; ret; 
0x0807b397: test eax, eax; je 0x333a4; sub esp, 0xc; push esi; call eax; 
0x080a911a: test eax, eax; je 0x61129; sub esp, 8; push edx; push 1; call eax; 
0x080abaec: test eax, eax; je 0x63afa; mov dword ptr [esp + 8], edx; call eax; 
0x080523b5: test eax, eax; je 0xa3be; add esp, 8; pop ebx; ret; 
0x08067330: test eax, eax; jne 0x1f400; xor eax, eax; pop edi; ret; 
0x08067862: test eax, eax; jne 0x1f8c0; xor eax, eax; pop edi; ret; 
0x08067828: test eax, eax; jne 0x1f8e0; xor eax, eax; pop edi; ret; 
0x08067ddf: test eax, eax; jne 0x1fe20; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0806c9a5: test eax, eax; jne 0x249e0; mov eax, 0x127; mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806cab7: test eax, eax; jne 0x24ad8; mov eax, 3; call dword ptr gs:[0x10]; 
0x0806cb87: test eax, eax; jne 0x24ba8; mov eax, 4; call dword ptr gs:[0x10]; 
0x0806cd3d: test eax, eax; jne 0x24d80; mov eax, 0xdd; mov ebx, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0806ce2f: test eax, eax; jne 0x24e50; mov eax, 6; call dword ptr gs:[0x10]; 
0x0806da7d: test eax, eax; jne 0x25aa0; sub esp, 0xc; push dword ptr [esi]; call edi; 
0x0806eb85: test eax, eax; jne 0x26b75; pop esi; pop ebx; pop edx; ret; 
0x0808fd1a: test eax, eax; jne 0x47d30; mov ecx, dword ptr [edx + 0x24]; cmp ecx, dword ptr [edx + 0x28]; cmove eax, ecx; ret; 
0x080929f8: test eax, eax; jne 0x4a9c0; mov eax, edx; pop ebx; ret; 
0x08098f49: test eax, eax; jne 0x50f53; add esp, 4; pop ebx; pop esi; ret; 
0x0809eca0: test eax, eax; jne 0x56d00; sub esp, 0xc; push dword ptr [esp + 0x28]; mov ebx, dword ptr [esp + 0x28]; call ebx; 
0x080aaa96: test eax, eax; jne 0x62aa0; add esp, 4; pop ebx; pop esi; ret; 
0x08099007: test eax, eax; js 0x51011; add esp, 4; pop ebx; pop esi; ret; 
0x0809d730: test eax, eax; mov dword ptr [edi], eax; jne 0x55774; mov eax, 0x80dbf2c; mov esi, 1; call dword ptr [eax]; 
0x080a47ad: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0807eacb: test eax, edx; or eax, dword ptr [eax]; add byte ptr [eax - 0x89343], al; call dword ptr [ebx + 0xf]; 
0x0804f34d: test ebp, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76d7dbb4], cl; ret 0xdaf7; 
0x08066c7e: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x08092c88: test ebx, ebx; jne 0x4ac60; pop ebx; ret; 
0x0808b2d8: test ebx, esi; adc al, 0; add byte ptr [ebx - 0x48343], al; call dword ptr [ebx + 0xf]; 
0x0806aaab: test ecx, 0xff0000; je 0x22ab4; inc eax; pop edi; ret; 
0x08067c4d: test ecx, ecx; je 0x1fc60; bsf ecx, ecx; add eax, ecx; ret; 
0x0809ce84: test ecx, ecx; jne 0x54e60; pop ebx; ret; 
0x080a2b64: test edi, eax; add byte ptr [eax], al; add bh, al; ret 0xbeec; 
0x080ab66d: test edi, edi; jne 0x63640; pop ebx; pop esi; pop edi; ret; 
0x080ab8ff: test edi, edi; jne 0x638e6; pop ebx; pop esi; pop edi; ret; 
0x0806fcd9: test edx, ebp; add eax, dword ptr [eax]; add byte ptr [ebx + 0xb886], cl; add byte ptr [ebp - 0x38df8b40], al; ret 0xbf28; 
0x08067d11: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x08058cfa: test edx, edx; je 0x10d10; mov dword ptr [eax + 0x1898], 0; ret; 
0x0806bff1: test edx, edx; je 0x24000; pop ebx; pop esi; pop edi; ret; 
0x0807a243: test edx, edx; je 0x32251; mov dword ptr [esp + 8], eax; call edx; 
0x0807a45c: test edx, edx; je 0x32462; call edx; 
0x0808f56e: test edx, edx; je 0x47580; add esp, 8; pop ebx; ret; 
0x080a302f: test edx, edx; je 0x5b03a; mov eax, dword ptr [esi]; add eax, dword ptr [edx + 4]; call eax; 
0x080abdbb: test edx, edx; je 0x63dcc; sub esp, 0xc; push eax; call edx; 
0x08091bfe: test edx, edx; jne 0x49c10; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x08099bf4: test edx, edx; jne 0x51762; call eax; 
0x0809a20c: test edx, edx; jne 0x51eac; call eax; 
0x0809b0aa: test edx, edx; jne 0x530b6; mov dword ptr [ebp - 0x5c], ecx; call eax; 
0x0806778d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x08066c6d: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x08091b17: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0806a51f: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x08066c8f: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x08095606: test esp, esi; idiv edi; dec dword ptr [ebp - 0x1c9e77d]; call dword ptr [eax - 0x73]; 
0x080490ac: test esp, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x38f3dbb4], cl; ret 0xbf88; 
0x080579e6: ud0; inc dword ptr [0x82617]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4cc], edx; ret; 
0x080579c6: ud0; inc dword ptr [0x82637]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x4d0], edx; ret; 
0x08057976: ud0; inc dword ptr [0x82687]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x0806c624: wait; lea ecx, [esp + 0x14]; mov eax, 0x10a; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0806a445: wait; mov al, 0x3f; std; jmp dword ptr [esi + 0xf]; 
0x080c2ae5: wait; ret 0x198; 
0x080a2a21: wait; ret; 
0x0806a465: wait; sar byte ptr [edi], 1; std; jmp dword ptr [esi + 0xf]; 
0x08054ae3: wait; sub ebp, edi; call dword ptr [eax - 0x18]; 
0x080a1966: wait; xchg byte ptr [ebx], al; add bh, al; shl byte ptr [edi + edi*4 + 0xd], 8; mov eax, dword ptr [eax]; ret; 
0x0804c761: xbegin 0x8a004766; ret 0xbd89; 
0x0807563d: xchg bl, dh; add al, byte ptr [eax]; add byte ptr [ebp - 0x1477f02e], al; add al, byte ptr [eax]; add bh, dh; ret 0xf800; 
0x08052e5e: xchg byte ptr [0x83000001], ch; in al, dx; or byte ptr [ebp + 0x50242444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0805b8d5: xchg byte ptr [eax + 0x39], bl; std; dec dword ptr [ebp - 0x2d57a6a]; call dword ptr [eax - 0x73]; 
0x0806fcb3: xchg byte ptr [eax - 0x7b000000], bl; sal byte ptr [edx - 0x75], 0x50; add al, 0xf6; ret 0x8902; 
0x080cfae0: xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf92c: xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c600c: xchg byte ptr [ebx + eax*4], al; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce230: xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d197c: xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc420: xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d2734: xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d30d4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080d190c: xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb948: xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacb8: xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cbc: xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea80: xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66d0: xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5f0: xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf590: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080c4f84: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080c5428: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080d193c: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a58: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d2920: xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080ccab0: xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x080d26f4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x080d26c4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080c4fb4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a28: xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080cece4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x080d50c4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc728: xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf560: xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea50: xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x080adaa0: xchg byte ptr [ebx + edi*8], dl; inc esi; adc al, 0xfb; inc dword ptr [ecx - 0x4e0004ef]; adc ebx, edi; jmp ecx; 
0x080adce8: xchg byte ptr [ebx + edi*8], dl; push dword ptr [esi - 0x190004ec]; adc al, 0xfb; call dword ptr [esi]; 
0x08085485: xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x08082c88: xchg byte ptr [ebx - 0x7d000000], ch; in al, dx; add al, 0x55; push dword ptr [esp + 0x10]; push esi; call dword ptr [ecx + 0x1c]; 
0x08057ba8: xchg byte ptr [ebx - 0xa000000], cl; ret; 
0x080a1967: xchg byte ptr [ebx], al; add bh, al; shl byte ptr [edi + edi*4 + 0xd], 8; mov eax, dword ptr [eax]; ret; 
0x08091b97: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x080c8fe9: xchg byte ptr [ebx], al; dec esp; push cs; adc byte ptr [ebx + 0xa7e0204], al; ret; 
0x080c8885: xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080caa71: xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0xa5e0204], al; ret; 
0x080d17b5: xchg byte ptr [ebx], al; inc ebx; push cs; adc byte ptr [ebx + 0xa780204], al; ret; 
0x080d4dd5: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c76b1: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa450204], al; ret; 
0x080d019d: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa4c0204], al; ret; 
0x080cbd15: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa4d0204], al; ret; 
0x080d3e21: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa550204], al; ret; 
0x080c76ed: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa7f0204], al; ret; 
0x080c5e05: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa970204], al; ret; 
0x080cff49: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xaa40204], al; ret; 
0x080c5e35: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xaa50204], al; ret; 
0x080c8e15: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xab20204], al; ret; 
0x080c852d: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xac00204], al; ret; 
0x080cba71: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xc0e6104], al; ret; 
0x080d505d: xchg byte ptr [ebx], al; inc esp; push cs; adc byte ptr [ebx + 0xa400204], al; ret; 
0x080c5b92: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2200e4e; test eax, 0x41140e0a; ret; 
0x080cf2da: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2240e4d; test eax, 0x41140e0a; ret; 
0x080cf286: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2280e4d; mov ecx, 0x41140e0a; ret; 
0x080d4a5a: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2300e49; or cl, byte ptr [0x4314]; ret; 
0x080c63be: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2300e4e; mov esp, 0x41140e0a; ret; 
0x080c4c0e: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2500e4e; ret; 
0x080d57f6: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2d00e53; add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x080d5bda: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2e00e4b; add dh, byte ptr [edi + 0x43140e0a]; ret; 
0x0809fa22: xchg byte ptr [ecx - 0x3f7c7eec], cl; add dword ptr [ecx], edi; ret; 
0x0809feb2: xchg byte ptr [ecx - 0x7cff7aac], cl; rol byte ptr [ecx], 0x39; ret; 
0x0805646f: xchg byte ptr [ecx], al; add byte ptr [ecx + 0x186093], cl; add bh, al; ret 0xa078; 
0x080ada68: xchg byte ptr [ecx], dl; sti; push dword ptr [esi - 0x190004ef]; adc ebx, edi; call dword ptr [esi]; 
0x08050329: xchg byte ptr [edx - 0x7d000000], al; in al, dx; add al, 0x56; push dword ptr [ebp + 8]; push ecx; call dword ptr [ebx + 0x1c]; 
0x080adf4c: xchg byte ptr [edx - 5], cl; call dword ptr [esi]; 
0x080c96e7: xchg byte ptr [edx], al; inc ebx; or cl, byte ptr [esi]; or al, 0x46; ret; 
0x080d1488: xchg byte ptr [edx], al; inc ecx; push cs; or al, 0x83; add ebp, dword ptr [ebx + 0xa]; ret; 
0x080cecac: xchg byte ptr [edx], al; inc ecx; push cs; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x080d0100: xchg byte ptr [edx], al; inc ecx; push cs; or al, 0x83; add edi, dword ptr [edi + 0xa]; ret; 
0x080c8004: xchg byte ptr [edx], al; inc ecx; push cs; or al, 0x83; add esi, dword ptr [eax + 0xa]; ret; 
0x080d36b4: xchg byte ptr [edx], al; inc ecx; push cs; or al, 0x83; add esi, dword ptr [ebx + 0xa]; ret; 
0x080ca6ad: xchg byte ptr [edx], cl; push cs; adc al, 0x43; ret; 
0x0804fc85: xchg byte ptr [esi + 1], bh; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x080c60c0: xchg byte ptr [esi + ebp], al; adc byte ptr [edx], al; ret; 
0x08089e2c: xchg byte ptr [esi], al; or byte ptr [eax], al; add byte ptr [ebx + 0x525604ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0807f48d: xchg byte ptr [esi], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x6a76fb14], al; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x080994a6: xchg ch, ah; cmp bh, dh; dec dword ptr [ebp - 0x1b8266a]; dec dword ptr [edi]; inc esp; ret 0x578b; 
0x08053b61: xchg dl, ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x38fbdbac], cl; ret; 
0x0809a3fc: xchg dword ptr [0x8b000008], ebx; push ebp; pushfd; add edx, dword ptr [edx + edi*4 - 0x1c164]; jmp edx; 
0x0804d95a: xchg dword ptr [eax + 0x1fffd24], eax; stc; jmp ecx; 
0x080a7c44: xchg dword ptr [eax + 0x1fffea4], ecx; stc; jmp ecx; 
0x0805d40d: xchg dword ptr [eax + 0x38], esp; std; dec dword ptr [ebp - 0x2d57a69]; call dword ptr [eax - 0x73]; 
0x08095409: xchg dword ptr [eax - 0x7b000000], ebx; sal byte ptr [edx - 0x75], 0x50; add al, 0xf6; ret 0x8902; 
0x08091d05: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x08067505: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x08094dc1: xchg dword ptr [eax], edi; add al, byte ptr [eax]; add byte ptr [ebx + 0x508d084e], cl; jmp dword ptr [ecx]; 
0x0806d65a: xchg dword ptr [eax], edi; dec ecx; std; call dword ptr [eax - 0x18]; 
0x08099eb4: xchg dword ptr [ebp + 0xd], esp; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; mov ecx, dword ptr [eax + edx*4 - 0x1c210]; add ecx, eax; jmp ecx; 
0x0809a7c4: xchg dword ptr [ebp + 4], edx; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + edi*4 - 0x1c00c]; jmp eax; 
0x08096669: xchg dword ptr [ebp - 0x76ffffff], edx; ret 0xe8c0; 
0x0806b737: xchg dword ptr [ebx + 0x40], edi; std; call dword ptr [eax - 0x18]; 
0x080a6a69: xchg dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x080cfade: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9902; add bl, byte ptr [ebp + 0xa]; ret; 
0x080cf92a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0x102e9e02; add dh, byte ptr [edi + 0xa]; ret; 
0x080c600a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0x102eb002; add ah, byte ptr [esi + 0xa]; ret; 
0x080ce22e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010803; ret; 
0x080d197a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa010f03; ret; 
0x080cc41e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011003; ret; 
0x080d2732: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x080d30d2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016603; ret; 
0x080d190a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016803; ret; 
0x080cb946: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa016d03; ret; 
0x080cacb6: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa017303; ret; 
0x080d1cba: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018103; ret; 
0x080cea7e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018203; ret; 
0x080c66ce: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018503; ret; 
0x080ce5ee: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa018803; ret; 
0x080cf58e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01a403; ret; 
0x080c4f82: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01eb03; ret; 
0x080c5426: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ec03; ret; 
0x080d193a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ef03; ret; 
0x080c5a56: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01f303; ret; 
0x080d291e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa028f03; ret; 
0x080ccaae: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02b103; ret; 
0x080d26f2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030e03; ret; 
0x080d26c2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa031703; ret; 
0x080c4fb2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a503; ret; 
0x080d4a26: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04aa03; ret; 
0x080cece2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa04fe03; ret; 
0x080d50c2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa065403; ret; 
0x080cc726: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa07ab03; ret; 
0x080cf55e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa080503; ret; 
0x080cea4e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa0a1503; ret; 
0x080bf990: xchg dword ptr [ecx + 0x79], ecx; xchg eax, edx; ret 0xf869; 
0x080591e2: xchg dword ptr [ecx + ecx], esi; add byte ptr [ecx - 0x72afaf05], cl; xchg eax, ebx; das; std; call dword ptr [eax - 1]; 
0x0806d05d: xchg dword ptr [ecx], edx; dec ecx; std; call dword ptr [eax + 0x6a]; 
0x08098139: xchg dword ptr [edi + esi - 2], esi; call dword ptr [eax - 0x18]; 
0x0809976a: xchg dword ptr [edi - 0x74ffffec], ebp; inc ebp; pushfd; mov ecx, dword ptr [eax + edx*4 - 0x1c414]; add ecx, eax; jmp ecx; 
0x080a6ded: xchg dword ptr [edi - 0x74fffff9], edi; jge 0x5edbd; mov ecx, dword ptr [edi + eax*4 - 0x15c38]; add ecx, edi; jmp ecx; 
0x0804c735: xchg dword ptr [edi], ebp; and al, 0xfd; call dword ptr [eax + 0x56]; 
0x080d0b4c: xchg dword ptr [edx], eax; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e4d04], al; ret; 
0x080d0b2a: xchg dword ptr [edx], eax; push cs; or al, 0x83; add ecx, dword ptr [esi]; adc byte ptr [esi + 0xc0e7204], al; ret; 
0x080d0cbe: xchg dword ptr [edx], eax; xor byte ptr [eax], al; add byte ptr [eax], al; lodsb al, byte ptr [esi]; ret; 
0x080cdaf1: xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0805797a: xchg dword ptr [esi], esp; or byte ptr [eax], al; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x080bfb2f: xchg dword ptr [esp + eax + 0x6fa9ce9d], esp; ret; 
0x08066c77: xchg eax, ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x080a27cd: xchg eax, ebp; add dword ptr [eax], eax; add bl, bh; push esi; call dword ptr [ebx]; 
0x0807eb7f: xchg eax, ebp; dec esp; idiv edi; call dword ptr [edx + 0x56]; 
0x0807fc9b: xchg eax, ebp; inc esp; idiv edi; dec dword ptr [ecx - 0x8634b]; call dword ptr [ecx - 0x77]; 
0x08089857: xchg eax, ebp; inc esp; idiv edi; dec dword ptr [edi]; dec ecx; ret 0xdb85; 
0x0807f9b9: xchg eax, ebp; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ecx + 0x56]; 
0x0808cb79: xchg eax, ebp; mov al, byte ptr [0xe9fffffb]; lodsd eax, dword ptr [esi]; loope 0x44b81; dec dword ptr [ebx - 0x4db7b]; jmp dword ptr [ebp - 0x75]; 
0x08080043: xchg eax, ebp; pop eax; idiv edi; call dword ptr [eax + 0x50]; 
0x0807fe02: xchg eax, ebp; pop eax; idiv edi; call dword ptr [eax + 0x51]; 
0x0807e6c2: xchg eax, ebp; pop eax; idiv edi; call dword ptr [ecx + 0x57]; 
0x0804ad21: xchg eax, ebp; push 0x83ffffff; les ecx, ptr [ecx + ecx*4]; inc ebp; mov ah, 0x83; ret 0x5201; 
0x080bf648: xchg eax, ebp; push es; cld; ret; 
0x0806fe2e: xchg eax, ebp; ret 0x1089; 
0x0804bb97: xchg eax, ebp; ret 0x2fe9; 
0x0806d3da: xchg eax, ebp; ret 0x4439; 
0x08059788: xchg eax, ebp; ret 0x448b; 
0x0806d0f3: xchg eax, ebp; ret 0x4c39; 
0x0808e05f: xchg eax, ebp; ret 0x5689; 
0x08059d11: xchg eax, ebp; ret 0x72e9; 
0x0809b5ef: xchg eax, ebp; ret 0x940f; 
0x08089375: xchg eax, ebp; ret 0xc221; 
0x080a8a17: xchg eax, ebp; ret 0xc985; 
0x0805b3ff: xchg eax, ebp; ret 0xcb83; 
0x0804e532: xchg eax, ebp; ret 0xd021; 
0x0804bacb: xchg eax, ebp; ret 0xd284; 
0x080a8a1e: xchg eax, ebp; ret 0xd789; 
0x08070231: xchg eax, ebp; ret 0xd8eb; 
0x0804fed8: xchg eax, ebp; ret 0xdaf7; 
0x08059ee9: xchg eax, ebp; ret; 
0x080a47b0: xchg eax, ebp; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x08054450: xchg eax, ebp; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 8; pop ebx; ret; 
0x08090268: xchg eax, ebp; sti; dec dword ptr [ebp - 0x1d1937d]; call dword ptr [eax - 0x73]; 
0x08090284: xchg eax, ebp; sti; jmp dword ptr [esi - 0x70]; 
0x08054716: xchg eax, ebp; sub ebp, edi; call dword ptr [eax + 0x53]; 
0x0807f496: xchg eax, ebp; xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x0807f3cb: xchg eax, ebp; xor bh, 0xff; call dword ptr [edx + 0x6a]; 
0x08095a26: xchg eax, ebp; xor dh, bh; call dword ptr [eax - 0x18]; 
0x0809fa89: xchg eax, ebx; add al, 0x83; ret 0x8501; 
0x080c5b5d: xchg eax, ebx; clc; jmp dword ptr [ecx]; 
0x080c5b7d: xchg eax, ebx; clc; jmp dword ptr [edx]; 
0x080d2721: xchg eax, ebx; cld; call dword ptr [ebx + 4]; 
0x0807a23e: xchg eax, ebx; cmp dh, 0xff; inc dword ptr [ebp - 0x76f58b2e]; inc esp; and al, 8; call edx; 
0x080591ec: xchg eax, ebx; das; std; call dword ptr [eax - 1]; 
0x0805ba59: xchg eax, ebx; fdivr st(7); jmp dword ptr [ebp - 0x7d]; 
0x0807ab33: xchg eax, ebx; lodsd eax, dword ptr [esi]; inc ebx; std; call dword ptr [edx + 0x50]; 
0x0807592b: xchg eax, ebx; pop esp; std; call dword ptr [eax - 0x18]; 
0x08056473: xchg eax, ebx; pushal; sbb byte ptr [eax], al; add bh, al; ret 0xa078; 
0x080929f7: xchg eax, ebx; test eax, eax; jne 0x4a9c0; mov eax, edx; pop ebx; ret; 
0x080a6bed: xchg eax, ebx; xchg eax, esp; mov dword ptr [0xdf01fffe], eax; jmp edi; 
0x0809aab5: xchg eax, ecx; in eax, dx; cmp bh, dh; dec dword ptr [ebx + 0xfc08500]; inc esp; ret 0x558b; 
0x08048daf: xchg eax, ecx; lea esp, [edx]; std; dec dword ptr [ecx + 0x24448b10]; or al, 0xc7; ret; 
0x0806ee09: xchg eax, ecx; mov al, 0x4d; stc; dec dword ptr [ecx + 0x5e5b0850]; ret; 
0x080a6df7: xchg eax, ecx; mov dword ptr [0xf901fffe], eax; jmp ecx; 
0x08082e14: xchg eax, ecx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x08092c83: xchg eax, ecx; or al, 0x8d; inc edx; add eax, dword ptr [ebp + 0x5bd475db]; ret; 
0x080d585f: xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a1793: xchg eax, ecx; push 0x6600001b; add dword ptr [edx + eax*2], 1; pop ebx; pop esi; ret; 
0x080c6909: xchg eax, edi; adc byte ptr cs:[edx], al; les ecx, ptr [edx]; ret; 
0x08057a6a: xchg eax, edi; and eax, 0x128b0008; mov dword ptr [eax + 0x4fc], edx; ret; 
0x080c0ddf: xchg eax, edi; call dword ptr [ebx + 0x7c]; 
0x080d28a5: xchg eax, edi; cld; call edx; 
0x080800a3: xchg eax, edi; cld; dec dword ptr [ebx - 0x88763]; dec dword ptr [ebp - 0x1d91b7d]; call dword ptr [eax - 0x73]; 
0x0809844a: xchg eax, edi; fld dword ptr [edi - 2]; dec dword ptr [ebp - 0x1c90b79]; dec dword ptr [edi]; inc ebp; ret 0x7c8b; 
0x080c0107: xchg eax, edi; jo 0x78170; salc; retf; ret 0x5508; 
0x0804dc68: xchg eax, edi; mov eax, 0x1fffd24; cli; jmp edx; 
0x0806b05e: xchg eax, edi; mov esi, edx; ret; 
0x080a4775: xchg eax, edi; movsd dword ptr es:[edi], dword ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x080ce5a5: xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080a269d: xchg eax, edi; pop esp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5589; 
0x0805c3df: xchg eax, edi; ret 0x50e9; 
0x0805cb09: xchg eax, edi; ret 0x5de9; 
0x0804a85e: xchg eax, edi; ret 0x920f; 
0x080771a1: xchg eax, edi; ret; 
0x0806e883: xchg eax, edi; ror byte ptr [edi], 0x92; ret 0xd029; 
0x08070118: xchg eax, edi; std; dec dword ptr [ebp - 0x2ae697d]; call dword ptr [ecx + 0x51]; 
0x0805d413: xchg eax, edi; test dword ptr [edx], ebp; std; call dword ptr [eax - 0x73]; 
0x08057975: xchg eax, edi; ud0; inc dword ptr [0x82687]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x18b0], edx; ret; 
0x080bffd8: xchg eax, edi; xchg eax, esp; ret; 
0x0805e668: xchg eax, edx; adc byte ptr [edi - 8], cl; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0805e728: xchg eax, edx; add cl, bl; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080490d1: xchg eax, edx; and bh, ch; call dword ptr [eax - 0x18]; 
0x08090688: xchg eax, edx; and byte ptr [eax - 5], dh; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x0809810f: xchg eax, edx; cmp dh, bh; call dword ptr [eax - 0x18]; 
0x0805e629: xchg eax, edx; inc eax; insb byte ptr es:[edi], dx; clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x080bff2e: xchg eax, edx; inc edx; jmp dword ptr [edx - 0x71]; 
0x080c1899: xchg eax, edx; jae 0x7986f; push esi; pop edx; je 0x79864; ret 0xacfc; 
0x0806bbc9: xchg eax, edx; mov eax, 0x85000018; ror byte ptr [edi], 0x44; ret 0xff65; 
0x0805db99: xchg eax, edx; nop; push esp; clc; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0805e6e9: xchg eax, edx; rcr dh, 0xf8; inc dword ptr [eax + 0x450f02e5]; ret 0xc3f3; 
0x0806e886: xchg eax, edx; ret 0xd029; 
0x0809ef95: xchg eax, edx; ret 0xe829; 
0x080bf993: xchg eax, edx; ret 0xf869; 
0x0806a98c: xchg eax, edx; ror byte ptr [edi], 0x94; ret; 
0x0808d37a: xchg eax, edx; sbb esi, edi; jmp dword ptr [esi - 0x70]; 
0x0805e6ae: xchg eax, edx; shl byte ptr [esi + 0x450ffff8], 1; ret 0xc3f3; 
0x0805e5e8: xchg eax, edx; xor al, dl; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080980b4: xchg eax, esi; adc eax, 0xffffe37; inc ebp; ret 0x3980; 
0x08048836: xchg eax, esi; and eax, dword ptr [esi]; add byte ptr [ebx + 0x5c610c4], al; and byte ptr [ebx - 0x36fef7f3], dh; ret; 
0x0806ed01: xchg eax, esi; dec edx; std; call dword ptr [eax - 0x18]; 
0x080994ac: xchg eax, esi; fld dword ptr [edi - 2]; dec dword ptr [edi]; inc esp; ret 0x578b; 
0x08081a46: xchg eax, esi; idiv edi; dec dword ptr [ebp + 0xb6]; add dh, al; test dword ptr [ebx + edi*8 - 1], edx; jmp dword ptr [eax]; 
0x080d3f49: xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x08097dae: xchg eax, esi; push ecx; std; call dword ptr [eax + 0x6a]; 
0x0807011d: xchg eax, esi; push ecx; std; call dword ptr [ecx + 0x51]; 
0x080547dd: xchg eax, esi; ret 0x540a; 
0x0806c1b0: xchg eax, esi; ret 0xc085; 
0x080c2228: xchg eax, esi; ret 0xcd11; 
0x0806c1ff: xchg eax, esi; ret 0xd284; 
0x080763ee: xchg eax, esi; ret; 
0x08070150: xchg eax, esi; std; dec dword ptr [ebp - 0x2ad0b7d]; call dword ptr [eax - 0x73]; 
0x0805b8db: xchg eax, esi; test dword ptr [edx], ebp; std; call dword ptr [eax - 0x73]; 
0x080adc64: xchg eax, esp; adc edi, ebx; push dword ptr [ecx]; adc edi, ebx; call dword ptr [ecx + 0x13]; 
0x080747ee: xchg eax, esp; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [ebp + 0x5c], -3; call dword ptr [eax - 0x18]; 
0x080a2698: xchg eax, esp; add al, byte ptr [eax]; add byte ptr [ebp + 0x15c97], cl; add byte ptr [ecx], bh; ret 0x5589; 
0x080562e8: xchg eax, esp; add byte ptr [eax], al; add bh, al; mov eax, 0xc7080daf; ret 0xb314; 
0x0804fc6c: xchg eax, esp; add byte ptr [eax], al; add bh, al; ret 0xafc0; 
0x0808ebf0: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebp + 0x45450fd2], al; in al, 0xc7; ret 0xafc0; 
0x080c54a0: xchg eax, esp; add dword ptr [eax], eax; add byte ptr [ebx + ecx + 0x79380000], cl; clc; jmp edi; 
0x0807c1fd: xchg eax, esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x08096780: xchg eax, esp; and al, 0x50; add al, byte ptr [eax]; add bh, al; ret 0x9da8; 
0x08090954: xchg eax, esp; and al, 0x60; add al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x0807c815: xchg eax, esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [ecx + 0x110245c], cl; ret 0x5489; 
0x0809b085: xchg eax, esp; call eax; 
0x080c5bed: xchg eax, esp; clc; jmp dword ptr [ebx]; 
0x0809acd9: xchg eax, esp; cmp bh, dh; call dword ptr [eax + 0x6a]; 
0x080c70ac: xchg eax, esp; daa; add byte ptr [eax], al; rcl dl, 1; clc; jmp dword ptr [edi]; 
0x080d656c: xchg eax, esp; dec edx; std; call dword ptr [eax + 1]; 
0x080cc6ac: xchg eax, esp; jge 0x846af; add byte ptr [eax], al; push edx; cli; call dword ptr [ecx]; 
0x080c09fa: xchg eax, esp; mov ah, 0x5e; sar byte ptr [0x733db8a1], 0xd7; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x08099384: xchg eax, esp; mov bh, 0x40; cmp edi, esi; inc dword ptr [ecx]; cli; jmp edx; 
0x080a6bee: xchg eax, esp; mov dword ptr [0xdf01fffe], eax; jmp edi; 
0x0809a560: xchg eax, esp; mov ecx, 0xfffe3f48; add edx, ecx; jmp edx; 
0x0809a46a: xchg eax, esp; mov ecx, dword ptr [ebp + 8]; add esi, 8; mov eax, dword ptr [edi]; add eax, dword ptr [ecx]; call eax; 
0x08099782: xchg eax, esp; mov edi, dword ptr [ebp + 8]; mov eax, dword ptr [esi]; add eax, dword ptr [edi]; call eax; 
0x0809a405: xchg eax, esp; mov edx, 0xfffe3e9c; jmp edx; 
0x080ccdc5: xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c5561: xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080482e5: xchg eax, esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf28], cl; ret 0x8789; 
0x080d0abc: xchg eax, esp; or edi, esp; jmp esi; 
0x080c243b: xchg eax, esp; push esi; cli; push 0x6e; ja 0x7a3c5; ret 0x48f; 
0x0807f2b2: xchg eax, esp; rcl byte ptr [eax - 1], 0xb5; inc eax; idiv edi; call dword ptr [ebx - 1]; 
0x0806fe0b: xchg eax, esp; ret 0x1089; 
0x08059d3d: xchg eax, esp; ret 0x4c89; 
0x0806d20f: xchg eax, esp; ret 0x5422; 
0x080547c2: xchg eax, esp; ret 0x5f3c; 
0x0808cba6: xchg eax, esp; ret 0x7f3c; 
0x080a0f9b: xchg eax, esp; ret 0x950f; 
0x0804a2e0: xchg eax, esp; ret 0xb60f; 
0x0806d5b6: xchg eax, esp; ret 0xc221; 
0x08048592: xchg eax, esp; ret 0xca21; 
0x08049007: xchg eax, esp; ret 0xd284; 
0x0805ca0b: xchg eax, esp; ret 0xdb85; 
0x08099e53: xchg eax, esp; ret 0xe2c1; 
0x0807272d: xchg eax, esp; ret 0xe7e9; 
0x080547cc: xchg eax, esp; ret 0xfa09; 
0x0807f1a2: xchg eax, esp; ret 0xff52; 
0x0809aa29: xchg eax, esp; ret 0xff83; 
0x08048f56: xchg eax, esp; ret; 
0x080c6f0c: xchg eax, esp; sar al, 1; call dword ptr [esi]; 
0x080cb0dc: xchg eax, esp; sbb bh, dl; call dword ptr [ecx]; 
0x0807a44f: xchg eax, esp; sbb eax, 0xea0; mov edx, dword ptr [ebp + ebx - 0x180]; test edx, edx; je 0x32462; call edx; 
0x0807a456: xchg eax, esp; sbb eax, 0xfffffe80; test edx, edx; je 0x32462; call edx; 
0x080c72ac: xchg eax, esp; sub dword ptr [eax], eax; add byte ptr [eax - 0x28], ah; clc; jmp dword ptr [edi]; 
0x0804dc67: xchg eax, esp; xchg eax, edi; mov eax, 0x1fffd24; cli; jmp edx; 
0x080d5c2c: xchg eax, esp; xor ebp, edi; jmp dword ptr [esi]; 
0x080701b2: xchg ebp, edi; inc dword ptr [0x69e4b]; lea eax, [eax + 0xaa0]; ret; 
0x08059e72: xchg ecx, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x74e3dbbc], cl; inc eax; or al, 0x39; ret 0x870f; 
0x08099d54: xchg esi, edx; push cs; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x64]; add eax, dword ptr [eax + esi*4 - 0x1c2bc]; jmp eax; 
0x0804d953: xchg esi, edx; push es; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x2db80]; add ecx, edi; jmp ecx; 
0x080c2653: xchg esp, edi; adc ch, byte ptr [0x8acc8c6]; inc edi; and dword ptr cs:[eax], edx; jmp dword ptr [edi]; 
0x080addb0: xlatb; adc al, 0xfb; inc dword ptr [edi]; adc eax, 0x1537fffb; sti; jmp dword ptr [edi + 0x15]; 
0x080d20dd: xlatb; add byte ptr [eax], al; inc eax; push edx; cld; jmp dword ptr [esi + 0xa]; 
0x080baed9: xlatb; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; call edi; 
0x080d2709: xlatb; add ecx, dword ptr [edx]; ret; 
0x0806c3db: xlatb; inc esp; std; call dword ptr [eax - 0x18]; 
0x080c0a03: xlatb; jo 0x78a77; mov ebp, 0xfb67d10d; ret; 
0x08067d0c: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x080c484c: xlatb; loope 0x7c84b; jmp eax; 
0x080c842d: xlatb; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080671f2: xlatb; ret 0x498d; 
0x080c1ea2: xlatb; ret 0x4e27; 
0x080670ed: xlatb; ret 0xc085; 
0x080630e2: xlatb; ret; 
0x08067dbf: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x08067860: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0806732e: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08067826: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x08091bf9: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x49c10; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x080965e6: xlatb; xor dh, bh; call dword ptr [eax - 0x18]; 
0x080ae8f0: xor ah, byte ptr [edi]; stc; inc dword ptr [edx + 0x27]; stc; jmp dword ptr [eax + 0x28]; 
0x080c7dcd: xor al, 0; add al, ah; in eax, dx; clc; jmp dword ptr [eax]; 
0x080cfef8: xor al, 0; add byte ptr [eax], al; in al, 0xb5; add byte ptr [eax], al; xor bh, 0xfb; jmp dword ptr [ebp]; 
0x080bf98e: xor al, 0x19; xchg dword ptr [ecx + 0x79], ecx; xchg eax, edx; ret 0xf869; 
0x08071909: xor al, 0x24; call edi; 
0x0806cf7c: xor al, 0x24; mov eax, 0xb7; mov ebx, dword ptr [esp]; call dword ptr gs:[0x10]; 
0x08071a80: xor al, 0x24; mov eax, dword ptr [ebp - 0x48]; call eax; 
0x08072024: xor al, 0x24; mov ecx, dword ptr [ebp - 0x48]; call ecx; 
0x080495ea: xor al, 0x24; ret; 
0x080cb83c: xor al, 0x2b; cli; jmp dword ptr [edx]; 
0x080ceb2c: xor al, 0x42; sti; call dword ptr [eax]; 
0x080c934c: xor al, 0x4a; add byte ptr [eax], al; pushal; cmp bh, cl; call dword ptr [eax]; 
0x080adf10: xor al, 0x4b; sti; call esp; 
0x08092582: xor al, 0x50; push dword ptr [ebp + 8]; call esi; 
0x08052acc: xor al, 0x50; push esi; call dword ptr [edi + 0x48]; 
0x0805d0a6: xor al, 0x55; call eax; 
0x080a582a: xor al, 0x56; push ebx; call eax; 
0x080a5866: xor al, 0x57; push esi; call dword ptr [ebx]; 
0x080937e1: xor al, 0x5b; pop esi; ret; 
0x08074b1e: xor al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call edi; 
0x080750f4: xor al, 0x6a; add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; call edi; 
0x08055afb: xor al, 0x83; in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x080519ea: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x080780ba: xor al, 0x83; ret 0xf01; 
0x08056029: xor al, 0x85; sal byte ptr [ebp - 0xe], 0xf3; ret; 
0x0808e9c2: xor al, 0x89; ret 0x708d; 
0x0809b030: xor al, 0x8b; add byte ptr [ebx], al; inc edx; add al, 0x89; ret 0x458b; 
0x0809b0f1: xor al, 0x8b; inc ebp; mov al, byte ptr [0x4203008b]; add al, 0x89; ret 0x458b; 
0x0806f07b: xor al, 0x8d; je 0x270a5; add byte ptr [ebx - 0x397cfe39], al; sub al, 0x83; call dword ptr [esi]; 
0x0809810d: xor al, 0x8d; xchg eax, edx; cmp dh, bh; call dword ptr [eax - 0x18]; 
0x080c5b5c: xor al, 0x93; clc; jmp dword ptr [ecx]; 
0x080c0b6a: xor al, 0xd8; ret; 
0x080ca58c: xor al, 0xd9; stc; call edx; 
0x0809736d: xor al, 0xe9; ret 0; 
0x080d344c: xor al, 0xeb; add byte ptr [eax], al; inc eax; mov ch, 0xfc; call dword ptr [ebp]; 
0x080bc935: xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x080bc92d: xor al, 0xfb; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x080bc925: xor al, 0xfb; jmp dword ptr [eax + 0x35]; 
0x080bc959: xor al, 0xfb; jmp dword ptr [eax]; 
0x080d5e31: xor al, 0xfd; call dword ptr [eax + 1]; 
0x08095621: xor al, 0xfe; call dword ptr [eax - 0x18]; 
0x080d042c: xor al, 0xff; sti; call ecx; 
0x08080f8d: xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1400]; jmp eax; 
0x0808219d: xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1480]; jmp eax; 
0x08080cde: xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1580]; jmp eax; 
0x08080623: xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1600]; jmp eax; 
0x08081079: xor al, ah; mov eax, dword ptr [ebx + eax*4 - 0x1680]; jmp eax; 
0x0807ae2d: xor al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x080adedc: xor al, byte ptr [esi - 5]; inc edx; inc esi; sti; jmp dword ptr [edx + 0x47]; 
0x08048c57: xor al, ch; ret; 
0x0805e5e9: xor al, dl; clc; dec dword ptr [edi]; inc ebp; ret 0xc3f3; 
0x080cff00: xor bh, 0xfb; jmp dword ptr [ebp]; 
0x080bdd40: xor bh, 0xfb; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; 
0x080bdd40: xor bh, 0xfb; ljmp [edi]; or al, 0xfc; call dword ptr [edi - 8]; sti; jmp dword ptr [edi]; 
0x0807f729: xor bh, 0xff; call dword ptr [eax + 0x56]; 
0x0807f93c: xor bh, 0xff; call dword ptr [ebx + 0x50]; 
0x0807e62c: xor bh, 0xff; call dword ptr [ebx - 1]; 
0x08080026: xor bh, 0xff; call dword ptr [ecx + 0x51]; 
0x0807f41f: xor bh, 0xff; call dword ptr [ecx + 0x6a]; 
0x0807f497: xor bh, 0xff; call dword ptr [edx + 0x56]; 
0x0807f3cc: xor bh, 0xff; call dword ptr [edx + 0x6a]; 
0x0807e9e2: xor bh, 0xff; call dword ptr [esi + 0x6a]; 
0x0807eaf5: xor bh, 0xff; call dword ptr [esi - 0x18]; 
0x0807fce9: xor bh, 0xff; call dword ptr [esi - 0x77]; 
0x080894ba: xor bh, 0xff; inc dword ptr [eax - 0x7410f299]; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax + 0x57]; 
0x0807e647: xor bh, 0xff; ljmp [ecx]; ret; 
0x080a48ef: xor bh, al; ret 0; 
0x0805ce2f: xor bh, al; sal al, 0xa9; or eax, 0x244c8b08; sbb al, 0x8b; add byte ptr [ebp - 0x7600c7a4], cl; ret 0x2c8d; 
0x0806de3e: xor bh, bh; jne 0x25e0a; mov dword ptr [ebp - 0x30], edx; mov eax, dword ptr [ebp - 0x3c]; call eax; 
0x080965ed: xor bh, bl; dec dword ptr [ebp - 0x1caef7d]; call dword ptr [eax + 0x6a]; 
0x08075e1a: xor bh, byte ptr [edx]; std; dec dword ptr [ebp - 0x2a1fb7d]; call dword ptr [eax - 0x73]; 
0x080c8fd9: xor bh, cl; call dword ptr [edi]; 
0x080c43d0: xor bh, cl; cld; call dword ptr [eax - 0x31]; 
0x08096f18: xor bh, dh; call dword ptr [eax + 0x6a]; 
0x080cbca5: xor bh, dl; jmp dword ptr [eax]; 
0x080cbc41: xor bh, dl; jmp dword ptr [ecx]; 
0x080aaffb: xor bh, dl; jmp dword ptr [esi - 0x70]; 
0x080cbcb9: xor bh, dl; jmp dword ptr [esi]; 
0x0804d453: xor bl, ch; sbb eax, 0x8d00768d; mov esp, 0x27; add byte ptr [ebx - 0x7cff7abc], cl; mov dword ptr [ecx], 0x83ff4788; ret 0x3901; 
0x0807c0c2: xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0809352f: xor byte ptr [eax + 0x127], bh; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x080d2f9e: xor byte ptr [eax + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080cf6d9: xor byte ptr [eax + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c6df0: xor byte ptr [eax + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d33f9: xor byte ptr [eax + 0xe], cl; adc al, 0x41; ret; 
0x080c7074: xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c9111: xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d6432: xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080d1106: xor byte ptr [eax + 0xe], cl; and byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080c7357: xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d6413: xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c828f: xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d2c23: xor byte ptr [eax + 0xe], cl; and byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080d1364: xor byte ptr [eax + 0xe], cl; and byte ptr [ecx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080d0479: xor byte ptr [eax + 0xe], cl; and byte ptr [ecx + 0xa], bl; push cs; adc al, 0x43; ret; 
0x080d045a: xor byte ptr [eax + 0xe], cl; and byte ptr [ecx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c5bbb: xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080d43a4: xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080cb4e0: xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080cb08d: xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; or al, 0x41; ret; 
0x080c6d1a: xor byte ptr [eax + 0xe], cl; and byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d128c: xor byte ptr [eax + 0xe], cl; and byte ptr [edx + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080c880e: xor byte ptr [eax + 0xe], cl; and byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x080cb4c1: xor byte ptr [eax + 0xe], cl; and byte ptr [esi + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080d5387: xor byte ptr [eax + 0xe], cl; and byte ptr [esi + ecx + 0x14], dl; inc ebx; ret; 
0x0806aef4: xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0805e6a8: xor byte ptr [eax - 0x720006ec], 0x92; shl byte ptr [esi + 0x450ffff8], 1; ret 0xc3f3; 
0x0808d870: xor byte ptr [eax - 0x7bf0dbc6], al; ret; 
0x080d0422: xor byte ptr [eax], al; add byte ptr [eax], 0; add byte ptr [eax], dl; mov ebx, 0xff340000; sti; call ecx; 
0x080d0cc0: xor byte ptr [eax], al; add byte ptr [eax], al; lodsb al, byte ptr [esi]; ret; 
0x080d5148: xor byte ptr [eax], cl; add dword ptr [eax], eax; mov ah, 7; std; call dword ptr [edx + 1]; 
0x08056269: xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x080a6d35: xor byte ptr [ebp + 0x30], dh; mov eax, dword ptr [edx + 0x58]; add esp, 8; pop ebx; ret; 
0x080a95e9: xor byte ptr [ebp + 0x34], dh; mov eax, dword ptr [edx + 8]; add esp, 8; pop ebx; ret; 
0x080c9434: xor byte ptr [ebp + 0xa], al; push cs; adc al, 0x41; ret; 
0x080d3ed0: xor byte ptr [ebp + 0xa], bh; push cs; or al, 0x41; ret; 
0x080c7eab: xor byte ptr [ebp + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c6f80: xor byte ptr [ebp + 0xa], dh; push cs; adc al, 0x43; ret; 
0x080c9156: xor byte ptr [ebp + 0xe], al; and byte ptr [ebp + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c91d3: xor byte ptr [ebp + 0xe], al; and byte ptr [ebx + 0xa], al; push cs; or al, 0x41; ret; 
0x080cb7ec: xor byte ptr [ebp + 0xe], al; and byte ptr [ebx + 0xe], bl; adc al, 0x43; ret; 
0x080cc3ac: xor byte ptr [ebp + 0xe], cl; adc al, 0x41; ret; 
0x080d5f76: xor byte ptr [ebp + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x08098137: xor byte ptr [ebp - 0x1c88b79], cl; call dword ptr [eax - 0x18]; 
0x08078bc8: xor byte ptr [ebp - 0x2a15f7d], cl; call dword ptr [eax + 0x68]; 
0x08078ba5: xor byte ptr [ebp - 0x2a15f7d], cl; call dword ptr [eax - 0x73]; 
0x08078aee: xor byte ptr [ebp - 0x2a19f7d], cl; call dword ptr [eax - 0x73]; 
0x08097dab: xor byte ptr [ebp - 0x2ae697d], cl; call dword ptr [eax + 0x6a]; 
0x080591c4: xor byte ptr [ebp - 0x2d17b7d], cl; call dword ptr [eax - 1]; 
0x0804977b: xor byte ptr [ebp - 0x6577f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x165e97d], cl; call dword ptr [esi - 1]; 
0x0808856a: xor byte ptr [ebx + 0x575304ec], al; push dword ptr [ebp - 0x8a0]; call eax; 
0x08056bdc: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x080736a3: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x080c62f3: xor byte ptr [ebx + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080c63ed: xor byte ptr [ebx + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c6567: xor byte ptr [ebx + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d2a0b: xor byte ptr [ebx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080d2f4a: xor byte ptr [ebx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080cde14: xor byte ptr [ebx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c6fa6: xor byte ptr [ebx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080cc96f: xor byte ptr [ebx + 0xe], al; adc al, 0x41; ret; 
0x080c4f4c: xor byte ptr [ebx + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080d0766: xor byte ptr [ebx + 0xe], cl; and byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080d4321: xor byte ptr [ebx + 0xe], cl; or al, 0x41; ret; 
0x080ccb04: xor byte ptr [ebx + ecx + 2], cl; push edi; push cs; adc al, 0x41; ret; 
0x080716ba: xor byte ptr [ebx - 0xa3dbbc], cl; jo 0x296c6; call edi; 
0x080caabf: xor byte ptr [ebx], al; add eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cf79b: xor byte ptr [ebx], al; add ecx, dword ptr ss:[edx]; push cs; adc al, 0x41; ret; 
0x080c8847: xor byte ptr [ebx], al; and al, 1; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080bcb8c: xor byte ptr [ebx], bh; sti; push dword ptr [eax + 0x3b]; sti; jmp dword ptr [eax]; 
0x08056bd7: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0809cd04: xor byte ptr [ecx + 0x45789f8], cl; pop ebx; pop esi; pop edi; ret; 
0x08087bcf: xor byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x080c9503: xor byte ptr [ecx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x080c803f: xor byte ptr [ecx + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cfa10: xor byte ptr [ecx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c6059: xor byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x080c8622: xor byte ptr [ecx + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c6428: xor byte ptr [ecx + 0xa], dl; push cs; adc al, 0x46; ret; 
0x080c9132: xor byte ptr [ecx + 0xb], dl; inc ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8a2b: xor byte ptr [ecx + 0xe], cl; and byte ptr [edi + 0xa], bl; push cs; adc al, 0x46; ret; 
0x080cf229: xor byte ptr [ecx + 0xe], dl; and byte ptr [eax + 0xa], ch; push cs; adc al, 0x43; ret; 
0x080792bb: xor byte ptr [ecx + ebx], 0; ret; 
0x080c8e90: xor byte ptr [ecx + edi*8], ch; call dword ptr [edx]; 
0x080aee40: xor byte ptr [ecx - 7], bl; call dword ptr [eax]; 
0x080cbbb0: xor byte ptr [ecx], 0xfa; jmp dword ptr [esi]; 
0x0807c1ff: xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x08050b21: xor byte ptr [ecx], ch; std; call dword ptr [eax - 0x73]; 
0x080c92ce: xor byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080c5689: xor byte ptr [edi + 0xa], al; push cs; adc al, 0x43; ret; 
0x080c73f5: xor byte ptr [edi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080c5798: xor byte ptr [edi + 0xa], ch; push cs; adc al, 0x41; ret; 
0x080d03eb: xor byte ptr [edi + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080cf3df: xor byte ptr [edi + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c90f3: xor byte ptr [edi + 0xb], cl; push edx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080cc8b9: xor byte ptr [edi + 0xe], ah; adc al, 0x43; ret; 
0x080cde9f: xor byte ptr [edi + 0xe], al; adc al, 0x41; ret; 
0x080d1a35: xor byte ptr [edi + 0xe], al; adc al, 0x43; ret; 
0x080c6e46: xor byte ptr [edi + 0xe], ch; adc al, 0x41; ret; 
0x080d38a4: xor byte ptr [edi + 0xe], cl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080678e2: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x080514e4: xor byte ptr [edx + 0x57], dl; lea eax, [esp + 0xac]; push eax; push esi; call dword ptr [esi + 4]; 
0x080c57b7: xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080ce1ef: xor byte ptr [edx + 0xa], cl; push cs; adc al, 0x43; ret; 
0x080d1319: xor byte ptr [edx + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080d4f93: xor byte ptr [edx + 0xa], dl; push cs; or al, 0x41; ret; 
0x080c7191: xor byte ptr [edx + 0xe], bh; and byte ptr [ebx + 0xa], ah; push cs; adc al, 0x43; ret; 
0x080d40ff: xor byte ptr [edx + 0xe], bl; or al, 0x44; ret; 
0x080d060c: xor byte ptr [edx + 0xe], cl; and byte ptr [eax + 0xa], dl; push cs; adc al, 0x43; ret; 
0x080c64f0: xor byte ptr [edx + 0xe], cl; and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x080d6031: xor byte ptr [edx + 0xe], cl; and byte ptr [esi + ecx + 0x10], dl; inc ecx; ret; 
0x080ce348: xor byte ptr [edx + 0xe], dl; and byte ptr [edi + 0xa], al; push cs; adc al, 0x41; ret; 
0x080a8606: xor byte ptr [edx + ecx + 0x66], 0x3d; syscall; 
0x080ce6a4: xor byte ptr [edx + ecx + 0xe], bh; adc al, 0x41; ret; 
0x080cf50a: xor byte ptr [edx + ecx + 0xe], bl; adc al, 0x41; ret; 
0x080c92a9: xor byte ptr [edx + ecx + 0xe], cl; adc al, 0x41; ret; 
0x080cc4b7: xor byte ptr [edx + ecx + 0xe], dh; adc al, 0x41; ret; 
0x080cdaaf: xor byte ptr [edx + ecx + 0xe], dl; adc al, 0x41; ret; 
0x080aa82c: xor byte ptr [edx - 0x77], dl; ret 0xd889; 
0x080c6b87: xor byte ptr [edx], al; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d1aa9: xor byte ptr [edx], al; dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c4e2b: xor byte ptr [edx], al; dec esp; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1c2f: xor byte ptr [edx], al; inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080cbfb7: xor byte ptr [edx], al; inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d19c7: xor byte ptr [edx], al; jle 0x899d5; push cs; adc al, 0x41; ret; 
0x080c93fb: xor byte ptr [edx], al; mov al, 0xa; push cs; adc al, 0x43; ret; 
0x080c63c7: xor byte ptr [edx], al; mov esp, 0x41140e0a; ret; 
0x080d4a63: xor byte ptr [edx], al; or cl, byte ptr [0x4314]; ret; 
0x080c5669: xor byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x080c6d5b: xor byte ptr [edx], al; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2a9d: xor byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080d2080: xor byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c8717: xor byte ptr [edx], al; push ecx; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d1a7a: xor byte ptr [edx], al; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c8089: xor byte ptr [edx], al; push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x080c56d3: xor byte ptr [edx], al; scasd eax, dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080c29f2: xor byte ptr [esi + 0x4ce2e5dd], 0x67; add ch, byte ptr [ebp + ebp*2 + 0x5b]; ret 0x6f9; 
0x0805cbd6: xor byte ptr [esi + 0x53], dl; call eax; 
0x080c5ad1: xor byte ptr [esi + 0xa], bh; push cs; adc al, 0x43; ret; 
0x080cc92f: xor byte ptr [esi + 0xa], bl; push cs; adc al, 0x41; ret; 
0x080cfe0f: xor byte ptr [esi + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c78ab: xor byte ptr [esi + 0xa], dl; push cs; adc al, 0x41; ret; 
0x080c67c7: xor byte ptr [esi + 0xe], al; and byte ptr [ebp + 0xa], cl; push cs; adc al, 0x41; ret; 
0x080c4eb0: xor byte ptr [esi + 0xe], cl; and byte ptr [ecx + 0xe], cl; adc al, 0x41; ret; 
0x08062411: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x080671ef: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x080677ab: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x080c4ca1: xor byte ptr [esi + ecx + 0x14], cl; inc ecx; ret; 
0x080d078f: xor byte ptr [esi + ecx + 0x20], cl; dec edi; or cl, byte ptr [esi]; adc al, 0x43; ret; 
0x080d5b8a: xor byte ptr [esi + ecx + 8], dl; inc ecx; ret; 
0x08067496: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x08070dec: xor ch, 0xff; dec dword ptr [ebp - 0x2acd47d]; call dword ptr [edx + 0x6a]; 
0x080d5a9d: xor ch, bh; call dword ptr [ecx]; 
0x0807f0b6: xor ch, byte ptr [ecx]; ret; 
0x080a924d: xor cl, byte ptr [ecx + 0x50102454]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x08059d3b: xor cl, byte ptr [edi]; xchg eax, esp; ret 0x4c89; 
0x0808a2e4: xor cl, ch; ret 0xffe2; 
0x08095a27: xor dh, bh; call dword ptr [eax - 0x18]; 
0x08095309: xor dh, bh; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x080cba8d: xor dl, bh; jmp dword ptr [eax]; 
0x080cbb0d: xor dl, bh; jmp dword ptr [ebx]; 
0x080bf643: xor dl, byte ptr [ebx + 0x71]; cld; out 0x95, eax; push es; cld; ret; 
0x080adb78: xor dl, byte ptr [edx]; sti; jmp dword ptr [edx + 0x12]; 
0x080965d2: xor dword ptr [eax + 0x36], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x08050b20: xor dword ptr [eax], 0x29; std; call dword ptr [eax - 0x73]; 
0x080c7af5: xor dword ptr [eax], eax; add byte ptr [eax - 0x1a], bl; clc; jmp dword ptr [edx]; 
0x0806f04e: xor dword ptr [eax], edi; ret 0x2d75; 
0x080a397d: xor dword ptr [ebp - 0x63], 0xfffffffe; call dword ptr [eax - 0x18]; 
0x080a2aa4: xor dword ptr [ebp - 0x65], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x080aafc7: xor dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x080adc68: xor dword ptr [ebx], edx; sti; call dword ptr [ecx + 0x13]; 
0x08079cbe: xor dword ptr [ecx + 0x61], 0xfffffffd; call dword ptr [eax - 0x18]; 
0x08098a47: xor dword ptr [ecx + edi], 0xfffffffe; call dword ptr [eax - 0x73]; 
0x0805ba79: xor dword ptr [ecx], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0809d6e0: xor dword ptr [esi + 0x7d], esi; mov eax, 0x80dbf2c; call dword ptr [eax]; 
0x08073a5a: xor dword ptr [esi], 0x5c; std; call dword ptr [eax - 0x18]; 
0x080c8edc: xor eax, 0x140e0a01; inc ebx; ret; 
0x080bc929: xor eax, 0x348ffffb; sti; dec dword ptr [edi - 0x700004cc]; xor al, 0xfb; call dword ptr [eax + 0x35]; 
0x0806e655: xor eax, 0x49; std; call dword ptr [eax - 0x18]; 
0x0805c3cd: xor eax, 0x5be8fffd; mov edx, 0x768dffff; add byte ptr [ebx - 0x77c0f20], al; fisttp word ptr [edi]; xchg eax, edi; ret 0x50e9; 
0x08075374: xor eax, 0x5c; std; call dword ptr [eax - 0x18]; 
0x080c1f3b: xor eax, 0x652d7770; pop es; inc esi; pcmpeqw mm5, qword ptr [ebp - 0x5f]; mov cs, edi; ret 0x8b36; 
0x08058847: xor eax, 0x81fffeff; ret; 
0x0804e847: xor eax, 0x81ffff9f; ret; 
0x0804a647: xor eax, 0x81ffffe1; ret; 
0x0807b3c7: xor eax, 0x83fffe15; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0807c155: xor eax, dword ptr [0x14]; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0809e873: xor eax, dword ptr [0x14]; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0804ed12: xor eax, dword ptr [0x18]; call eax; 
0x0806ac9a: xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x0804cfde: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0809b960: xor eax, dword ptr [ecx - 2]; call dword ptr [eax + 0x6a]; 
0x0805d8f9: xor eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [ebx + eax*4 - 0x2c680]; add ecx, ebx; jmp ecx; 
0x0807c154: xor eax, dword ptr gs:[0x14]; jne 0x34162; add esp, 0x18; pop ebx; ret; 
0x0809e872: xor eax, dword ptr gs:[0x14]; jne 0x56880; add esp, 0x28; pop ebx; ret; 
0x0804ed11: xor eax, dword ptr gs:[0x18]; call eax; 
0x080a94a6: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x080556df: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0804f06e: xor eax, eax; add esp, 8; pop ebx; ret; 
0x0806eb4c: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0806ccc5: xor eax, eax; lea edx, [esp + 4]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x08093734: xor eax, eax; mov esi, dword ptr [esp + 0x44]; lea edx, [esp + 8]; mov eax, 0x36; mov ebx, dword ptr [esp + 0x40]; call dword ptr gs:[0x10]; 
0x0804d4be: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08052e08: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x08056cd8: xor eax, eax; pop ebx; pop esi; ret; 
0x0806ac79: xor eax, eax; pop ebx; ret; 
0x0806a6f0: xor eax, eax; pop edi; pop ebx; ret; 
0x08066f10: xor eax, eax; pop edi; ret; 
0x08051ce4: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0805b9d6: xor eax, eax; pop esi; pop edi; ret; 
0x08050438: xor eax, eax; push edi; call dword ptr [edi + 0x10]; 
0x08056200: xor eax, eax; ret; 
0x080c2061: xor eax, ebx; repne scasd eax, dword ptr es:[edi]; daa; push esp; syscall; 
0x080a8918: xor ebp, dword ptr [edx + 0xa]; push 1; call eax; 
0x080d5c2d: xor ebp, edi; jmp dword ptr [esi]; 
0x0804903a: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x08093bc8: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0804efd7: xor ecx, 0x28; std; call dword ptr [eax - 0x18]; 
0x0806bc98: xor ecx, dword ptr [0x14]; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806ccee: xor ecx, dword ptr [0x14]; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0809e63e: xor ecx, dword ptr [0x14]; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d3: xor ecx, dword ptr [0x14]; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e973: xor ecx, dword ptr [0x14]; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea57: xor ecx, dword ptr [0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a130d: xor ecx, dword ptr [0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a1404: xor ecx, dword ptr [0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a475c: xor ecx, dword ptr [0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64bb: xor ecx, dword ptr [0x14]; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x0809d896: xor ecx, dword ptr [ebx + 0x389047b]; mov edx, dword ptr [ebx + 0xc]; mov ecx, dword ptr [ebx + 0x10]; mov eax, dword ptr [ebx + 0x14]; call dword ptr [ebx]; 
0x0806f627: xor ecx, dword ptr [ebx + 0x4e2081bc]; std; inc dword ptr [ecx]; iretd; jmp edi; 
0x080542eb: xor ecx, dword ptr [ebx + 0x94be]; add bh, al; ret 0xafc0; 
0x0806bc97: xor ecx, dword ptr gs:[0x14]; jne 0x23cc4; add esp, 0x18; pop ebx; ret; 
0x0806cced: xor ecx, dword ptr gs:[0x14]; jne 0x24d0f; add esp, 0x18; pop ebx; ret; 
0x0809e63d: xor ecx, dword ptr gs:[0x14]; jne 0x56678; add esp, 0x28; pop ebx; ret; 
0x0809e6d2: xor ecx, dword ptr gs:[0x14]; jne 0x566e4; add esp, 0x2c; ret; 
0x0809e972: xor ecx, dword ptr gs:[0x14]; jne 0x56984; add esp, 0x2c; ret; 
0x0809ea56: xor ecx, dword ptr gs:[0x14]; jne 0x56a6c; add esp, 0x2c; ret; 
0x080a130c: xor ecx, dword ptr gs:[0x14]; jne 0x59319; add esp, 0x2c; ret; 
0x080a1403: xor ecx, dword ptr gs:[0x14]; jne 0x59414; add esp, 0x2c; ret; 
0x080a475b: xor ecx, dword ptr gs:[0x14]; jne 0x5c774; add esp, 0x2c; ret; 
0x080a64ba: xor ecx, dword ptr gs:[0x14]; jne 0x5e4c8; add esp, 0x28; pop ebx; ret; 
0x0806ef51: xor ecx, ecx; int 0x80; 
0x0809b40c: xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x0809de9b: xor ecx, ecx; mov dword ptr [ebp - 0x58], eax; mov dword ptr [ebp - 0x54], edx; mov eax, 0x21; call dword ptr gs:[0x10]; 
0x0808afc6: xor ecx, ecx; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x080c8fbd: xor ecx, edi; jmp dword ptr [edx]; 
0x080a9205: xor edi, edi; je 0x6122d; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0808ac74: xor edi, edi; mov dword ptr [ebp - 0x494], 0; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0806c8f7: xor edx, dword ptr [0x14]; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806d83b: xor edx, dword ptr [0x14]; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x0806c8f6: xor edx, dword ptr gs:[0x14]; jne 0x2490f; add esp, 0x18; pop ebx; ret; 
0x0806d83a: xor edx, dword ptr gs:[0x14]; jne 0x25848; add esp, 0x18; pop ebx; ret; 
0x080ab14d: xor edx, edi; call dword ptr [ebp + 0x57]; 
0x080cbbb1: xor edx, edi; jmp dword ptr [esi]; 
0x0807c222: xor edx, edx; mov esi, 8; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0805c483: xor edx, edx; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x080c0ddd: xor esi, dword ptr [ecx]; xchg eax, edi; call dword ptr [ebx + 0x7c]; 
0x08096aac: xor esi, edi; call dword ptr [eax + 0x6a]; 
0x08097055: xor esi, edi; call dword ptr [eax - 0x77]; 
0x080526c8: xor esi, esi; cdq; push edx; push eax; push edi; call dword ptr [ebx + 0x40]; 
0x0806ec8b: xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x080a2001: xor esi, esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0806eb6a: xor esi, esi; mov ecx, 0x80; cmp eax, edx; jne 0x26b81; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0809b402: xor esi, esi; mov edx, dword ptr [ebp - 0x3c]; mov eax, 0x21; xor ecx, ecx; lea ebx, [edx - 0x1bee0]; call dword ptr gs:[0x10]; 
0x08091c1c: xor esi, esi; ret 0xf01; 
0x08070138: xor esp, 0x52; std; call dword ptr [eax - 0x73]; 
0x0808ac27: xor esp, dword ptr [eax - 0x400001d8]; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ebp - 0x494], 1; mov eax, dword ptr [ebx + eax*4 - 0x1280]; jmp eax; 
0x0808af77: xor esp, dword ptr [eax - 0x400001d8]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1300]; jmp eax; 
0x0808afff: xor esp, dword ptr [eax - 0x460001d8]; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebx + eax*4 - 0x1200]; jmp eax; 

19795 gadgets found
